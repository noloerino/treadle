<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="3286" onload="init(evt)" viewBox="0 0 1200 3286" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="3269"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="3269"> </text>
<g id="frames">
<g>
<title>all (1,843 samples, 100.00%)</title><rect x="10.0" y="3235.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="3246.0">all</text>
</g>
<g>
<title>[unknown_Java] (77 samples, 4.18%)</title><rect x="10.0" y="3219.0" width="49.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="3230.0">[unkn..</text>
</g>
<g>
<title>java/lang/Thread.run (334 samples, 18.12%)</title><rect x="59.3" y="3219.0" width="213.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.3" y="3230.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (334 samples, 18.12%)</title><rect x="59.3" y="3203.0" width="213.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.3" y="3214.0">java/util/concurrent/ThreadP..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (334 samples, 18.12%)</title><rect x="59.3" y="3187.0" width="213.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.3" y="3198.0">java/util/concurrent/ThreadP..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (333 samples, 18.07%)</title><rect x="59.3" y="3171.0" width="213.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.3" y="3182.0">java/util/concurrent/FutureT..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (333 samples, 18.07%)</title><rect x="59.3" y="3155.0" width="213.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.3" y="3166.0">java/util/concurrent/Executo..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (333 samples, 18.07%)</title><rect x="59.3" y="3139.0" width="213.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.3" y="3150.0">java/util/concurrent/FutureT..</text>
</g>
<g>
<title>sbt/CompletionService$$anon$2.call (333 samples, 18.07%)</title><rect x="59.3" y="3123.0" width="213.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.3" y="3134.0">sbt/CompletionService$$anon$..</text>
</g>
<g>
<title>sbt/ConcurrentRestrictions$$anon$4$$Lambda$2288/373703332.apply (333 samples, 18.07%)</title><rect x="59.3" y="3107.0" width="213.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.3" y="3118.0">sbt/ConcurrentRestrictions$$..</text>
</g>
<g>
<title>sbt/ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1 (333 samples, 18.07%)</title><rect x="59.3" y="3091.0" width="213.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.3" y="3102.0">sbt/ConcurrentRestrictions$$..</text>
</g>
<g>
<title>sbt/Execute$$Lambda$2281/539682927.apply (333 samples, 18.07%)</title><rect x="59.3" y="3075.0" width="213.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.3" y="3086.0">sbt/Execute$$Lambda$2281/539..</text>
</g>
<g>
<title>sbt/Execute.$anonfun$submit$1 (333 samples, 18.07%)</title><rect x="59.3" y="3059.0" width="213.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.3" y="3070.0">sbt/Execute.$anonfun$submit$1</text>
</g>
<g>
<title>sbt/Execute.work (333 samples, 18.07%)</title><rect x="59.3" y="3043.0" width="213.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.3" y="3054.0">sbt/Execute.work</text>
</g>
<g>
<title>sbt/internal/util/ErrorHandling$.wideConvert (333 samples, 18.07%)</title><rect x="59.3" y="3027.0" width="213.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.3" y="3038.0">sbt/internal/util/ErrorHandl..</text>
</g>
<g>
<title>sbt/Execute$$Lambda$2290/373055225.apply (333 samples, 18.07%)</title><rect x="59.3" y="3011.0" width="213.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.3" y="3022.0">sbt/Execute$$Lambda$2290/373..</text>
</g>
<g>
<title>sbt/Execute.$anonfun$submit$2 (333 samples, 18.07%)</title><rect x="59.3" y="2995.0" width="213.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.3" y="3006.0">sbt/Execute.$anonfun$submit$2</text>
</g>
<g>
<title>sbt/std/Transform$$anon$4.work (333 samples, 18.07%)</title><rect x="59.3" y="2979.0" width="213.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.3" y="2990.0">sbt/std/Transform$$anon$4.work</text>
</g>
<g>
<title>sbt/internal/util/$tilde$greater$$Lambda$2271/1875718595.apply (1 samples, 0.05%)</title><rect x="59.3" y="2963.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.3" y="2974.0"></text>
</g>
<g>
<title>sbt/internal/util/$tilde$greater.$anonfun$$u2219$1 (1 samples, 0.05%)</title><rect x="59.3" y="2947.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.3" y="2958.0"></text>
</g>
<g>
<title>scala/Function1$$Lambda$1188/1145882513.apply (1 samples, 0.05%)</title><rect x="59.3" y="2931.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.3" y="2942.0"></text>
</g>
<g>
<title>scala/Function1.$anonfun$compose$1 (1 samples, 0.05%)</title><rect x="59.3" y="2915.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.3" y="2926.0"></text>
</g>
<g>
<title>sbt/Defaults$$$Lambda$5396/54443244.apply (1 samples, 0.05%)</title><rect x="59.3" y="2899.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.3" y="2910.0"></text>
</g>
<g>
<title>sbt/Defaults$.$anonfun$allTestGroupsTask$5 (1 samples, 0.05%)</title><rect x="59.3" y="2883.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.3" y="2894.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.05%)</title><rect x="59.3" y="2867.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.3" y="2878.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="59.3" y="2851.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.3" y="2862.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="59.3" y="2835.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.3" y="2846.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map2.foreach (1 samples, 0.05%)</title><rect x="59.3" y="2819.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.3" y="2830.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$8/1772160903.apply (1 samples, 0.05%)</title><rect x="59.3" y="2803.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.3" y="2814.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="59.3" y="2787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.3" y="2798.0"></text>
</g>
<g>
<title>sbt/Defaults$$$Lambda$6498/1438921112.apply (1 samples, 0.05%)</title><rect x="59.3" y="2771.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.3" y="2782.0"></text>
</g>
<g>
<title>sbt/Defaults$.$anonfun$allTestGroupsTask$11 (1 samples, 0.05%)</title><rect x="59.3" y="2755.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.3" y="2766.0"></text>
</g>
<g>
<title>org/scalatest/tools/Framework$ScalaTestRunner.done (1 samples, 0.05%)</title><rect x="59.3" y="2739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.3" y="2750.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.05%)</title><rect x="59.3" y="2723.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="62.3" y="2734.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.05%)</title><rect x="59.3" y="2707.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="62.3" y="2718.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.05%)</title><rect x="59.3" y="2691.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="62.3" y="2702.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.05%)</title><rect x="59.3" y="2675.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="62.3" y="2686.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.05%)</title><rect x="59.3" y="2659.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="62.3" y="2670.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.05%)</title><rect x="59.3" y="2643.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="62.3" y="2654.0"></text>
</g>
<g>
<title>VM::ClassPrepare(_jvmtiEnv*, JNIEnv_*, _jobject*, _jclass*) (1 samples, 0.05%)</title><rect x="59.3" y="2627.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="62.3" y="2638.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods (1 samples, 0.05%)</title><rect x="59.3" y="2611.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="62.3" y="2622.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (1 samples, 0.05%)</title><rect x="59.3" y="2595.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="62.3" y="2606.0"></text>
</g>
<g>
<title>Method::jmethod_id() (1 samples, 0.05%)</title><rect x="59.3" y="2579.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="62.3" y="2590.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(instanceKlassHandle, methodHandle) (1 samples, 0.05%)</title><rect x="59.3" y="2563.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="62.3" y="2574.0"></text>
</g>
<g>
<title>Method::make_jmethod_id(ClassLoaderData*, Method*) (1 samples, 0.05%)</title><rect x="59.3" y="2547.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="62.3" y="2558.0"></text>
</g>
<g>
<title>JNIMethodBlock::add_method(Method*) (1 samples, 0.05%)</title><rect x="59.3" y="2531.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="62.3" y="2542.0"></text>
</g>
<g>
<title>sbt/std/Transform$$anon$3$$Lambda$2278/1106189986.apply (332 samples, 18.01%)</title><rect x="59.9" y="2963.0" width="212.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.9" y="2974.0">sbt/std/Transform$$anon$3$$L..</text>
</g>
<g>
<title>sbt/std/Transform$$anon$3.$anonfun$apply$2 (332 samples, 18.01%)</title><rect x="59.9" y="2947.0" width="212.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.9" y="2958.0">sbt/std/Transform$$anon$3.$a..</text>
</g>
<g>
<title>sbt/Tests$$$Lambda$5386/1283203606.apply (332 samples, 18.01%)</title><rect x="59.9" y="2931.0" width="212.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.9" y="2942.0">sbt/Tests$$$Lambda$5386/1283..</text>
</g>
<g>
<title>sbt/Tests$.$anonfun$toTask$1 (332 samples, 18.01%)</title><rect x="59.9" y="2915.0" width="212.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.9" y="2926.0">sbt/Tests$.$anonfun$toTask$1</text>
</g>
<g>
<title>sbt/TestFunction.apply (332 samples, 18.01%)</title><rect x="59.9" y="2899.0" width="212.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.9" y="2910.0">sbt/TestFunction.apply</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply (332 samples, 18.01%)</title><rect x="59.9" y="2883.0" width="212.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.9" y="2894.0">sbt/TestFramework$$anon$3$$a..</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply (332 samples, 18.01%)</title><rect x="59.9" y="2867.0" width="212.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.9" y="2878.0">sbt/TestFramework$$anon$3$$a..</text>
</g>
<g>
<title>sbt/TestFramework$.sbt$TestFramework$$withContextLoader (332 samples, 18.01%)</title><rect x="59.9" y="2851.0" width="212.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.9" y="2862.0">sbt/TestFramework$.sbt$TestF..</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1$$Lambda$5407/887859057.apply (332 samples, 18.01%)</title><rect x="59.9" y="2835.0" width="212.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.9" y="2846.0">sbt/TestFramework$$anon$3$$a..</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1 (332 samples, 18.01%)</title><rect x="59.9" y="2819.0" width="212.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.9" y="2830.0">sbt/TestFramework$$anon$3$$a..</text>
</g>
<g>
<title>sbt/TestRunner.run (332 samples, 18.01%)</title><rect x="59.9" y="2803.0" width="212.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.9" y="2814.0">sbt/TestRunner.run</text>
</g>
<g>
<title>sbt/TestRunner.runTest$1 (332 samples, 18.01%)</title><rect x="59.9" y="2787.0" width="212.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.9" y="2798.0">sbt/TestRunner.runTest$1</text>
</g>
<g>
<title>org/scalatest/tools/Framework$ScalaTestTask.execute (332 samples, 18.01%)</title><rect x="59.9" y="2771.0" width="212.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.9" y="2782.0">org/scalatest/tools/Framewor..</text>
</g>
<g>
<title>org/scalatest/tools/Framework.org$scalatest$tools$Framework$$runSuite (332 samples, 18.01%)</title><rect x="59.9" y="2755.0" width="212.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.9" y="2766.0">org/scalatest/tools/Framewor..</text>
</g>
<g>
<title>org/scalatest/FlatSpec.run (332 samples, 18.01%)</title><rect x="59.9" y="2739.0" width="212.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.9" y="2750.0">org/scalatest/FlatSpec.run</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.run$ (332 samples, 18.01%)</title><rect x="59.9" y="2723.0" width="212.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.9" y="2734.0">org/scalatest/FlatSpecLike.r..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.run (332 samples, 18.01%)</title><rect x="59.9" y="2707.0" width="212.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.9" y="2718.0">org/scalatest/FlatSpecLike.run</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runImpl (332 samples, 18.01%)</title><rect x="59.9" y="2691.0" width="212.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.9" y="2702.0">org/scalatest/SuperEngine.ru..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike$$Lambda$8045/1665133053.apply (332 samples, 18.01%)</title><rect x="59.9" y="2675.0" width="212.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.9" y="2686.0">org/scalatest/FlatSpecLike$$..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.$anonfun$run$1 (332 samples, 18.01%)</title><rect x="59.9" y="2659.0" width="212.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.9" y="2670.0">org/scalatest/FlatSpecLike.$..</text>
</g>
<g>
<title>org/scalatest/FlatSpec.org$scalatest$FlatSpecLike$$super$run (332 samples, 18.01%)</title><rect x="59.9" y="2643.0" width="212.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.9" y="2654.0">org/scalatest/FlatSpec.org$s..</text>
</g>
<g>
<title>org/scalatest/Suite.run$ (332 samples, 18.01%)</title><rect x="59.9" y="2627.0" width="212.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.9" y="2638.0">org/scalatest/Suite.run$</text>
</g>
<g>
<title>org/scalatest/Suite.run (332 samples, 18.01%)</title><rect x="59.9" y="2611.0" width="212.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.9" y="2622.0">org/scalatest/Suite.run</text>
</g>
<g>
<title>org/scalatest/FlatSpec.runTests (332 samples, 18.01%)</title><rect x="59.9" y="2595.0" width="212.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.9" y="2606.0">org/scalatest/FlatSpec.runTe..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.runTests$ (332 samples, 18.01%)</title><rect x="59.9" y="2579.0" width="212.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.9" y="2590.0">org/scalatest/FlatSpecLike.r..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.runTests (332 samples, 18.01%)</title><rect x="59.9" y="2563.0" width="212.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.9" y="2574.0">org/scalatest/FlatSpecLike.r..</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestsImpl (332 samples, 18.01%)</title><rect x="59.9" y="2547.0" width="212.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.9" y="2558.0">org/scalatest/SuperEngine.ru..</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestsInBranch (332 samples, 18.01%)</title><rect x="59.9" y="2531.0" width="212.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.9" y="2542.0">org/scalatest/SuperEngine.ru..</text>
</g>
<g>
<title>org/scalatest/SuperEngine.traverseSubNodes$1 (332 samples, 18.01%)</title><rect x="59.9" y="2515.0" width="212.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.9" y="2526.0">org/scalatest/SuperEngine.tr..</text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (332 samples, 18.01%)</title><rect x="59.9" y="2499.0" width="212.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.9" y="2510.0">scala/collection/immutable/L..</text>
</g>
<g>
<title>org/scalatest/SuperEngine$$Lambda$8053/174356176.apply (332 samples, 18.01%)</title><rect x="59.9" y="2483.0" width="212.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.9" y="2494.0">org/scalatest/SuperEngine$$L..</text>
</g>
<g>
<title>org/scalatest/SuperEngine.$anonfun$runTestsInBranch$1 (332 samples, 18.01%)</title><rect x="59.9" y="2467.0" width="212.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.9" y="2478.0">org/scalatest/SuperEngine.$a..</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestsInBranch (332 samples, 18.01%)</title><rect x="59.9" y="2451.0" width="212.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.9" y="2462.0">org/scalatest/SuperEngine.ru..</text>
</g>
<g>
<title>org/scalatest/Suite$.reportScopeClosed (1 samples, 0.05%)</title><rect x="59.9" y="2435.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.9" y="2446.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="59.9" y="2419.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="62.9" y="2430.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle, int, Bytecodes::Code, Thread*) (1 samples, 0.05%)</title><rect x="59.9" y="2403.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="62.9" y="2414.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, Bytecodes::Code, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="59.9" y="2387.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="62.9" y="2398.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.05%)</title><rect x="59.9" y="2371.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="62.9" y="2382.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.05%)</title><rect x="59.9" y="2355.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="62.9" y="2366.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.05%)</title><rect x="59.9" y="2339.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="62.9" y="2350.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.05%)</title><rect x="59.9" y="2323.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="62.9" y="2334.0"></text>
</g>
<g>
<title>InstanceKlass::link_methods(Thread*) (1 samples, 0.05%)</title><rect x="59.9" y="2307.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="62.9" y="2318.0"></text>
</g>
<g>
<title>Method::link_method(methodHandle, Thread*) (1 samples, 0.05%)</title><rect x="59.9" y="2291.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="62.9" y="2302.0"></text>
</g>
<g>
<title>Method::make_adapters(methodHandle, Thread*) (1 samples, 0.05%)</title><rect x="59.9" y="2275.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="62.9" y="2286.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter(methodHandle) (1 samples, 0.05%)</title><rect x="59.9" y="2259.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="62.9" y="2270.0"></text>
</g>
<g>
<title>AdapterHandlerTable::lookup(int, BasicType*) (1 samples, 0.05%)</title><rect x="59.9" y="2243.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="62.9" y="2254.0"></text>
</g>
<g>
<title>AdapterFingerPrint::AdapterFingerPrint(int, BasicType*) (1 samples, 0.05%)</title><rect x="59.9" y="2227.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="62.9" y="2238.0"></text>
</g>
<g>
<title>org/scalatest/SuperEngine.traverseSubNodes$1 (331 samples, 17.96%)</title><rect x="60.6" y="2435.0" width="211.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.6" y="2446.0">org/scalatest/SuperEngine.tr..</text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (331 samples, 17.96%)</title><rect x="60.6" y="2419.0" width="211.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.6" y="2430.0">scala/collection/immutable/L..</text>
</g>
<g>
<title>org/scalatest/SuperEngine$$Lambda$8053/174356176.apply (331 samples, 17.96%)</title><rect x="60.6" y="2403.0" width="211.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.6" y="2414.0">org/scalatest/SuperEngine$$L..</text>
</g>
<g>
<title>org/scalatest/SuperEngine.$anonfun$runTestsInBranch$1 (331 samples, 17.96%)</title><rect x="60.6" y="2387.0" width="211.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.6" y="2398.0">org/scalatest/SuperEngine.$a..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike$$Lambda$8052/551979173.apply (331 samples, 17.96%)</title><rect x="60.6" y="2371.0" width="211.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.6" y="2382.0">org/scalatest/FlatSpecLike$$..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.$anonfun$runTests$1 (331 samples, 17.96%)</title><rect x="60.6" y="2355.0" width="211.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.6" y="2366.0">org/scalatest/FlatSpecLike.$..</text>
</g>
<g>
<title>org/scalatest/FlatSpec.runTest (331 samples, 17.96%)</title><rect x="60.6" y="2339.0" width="211.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.6" y="2350.0">org/scalatest/FlatSpec.runTest</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.runTest$ (331 samples, 17.96%)</title><rect x="60.6" y="2323.0" width="211.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.6" y="2334.0">org/scalatest/FlatSpecLike.r..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.runTest (331 samples, 17.96%)</title><rect x="60.6" y="2307.0" width="211.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.6" y="2318.0">org/scalatest/FlatSpecLike.r..</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestImpl (331 samples, 17.96%)</title><rect x="60.6" y="2291.0" width="211.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.6" y="2302.0">org/scalatest/SuperEngine.ru..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike$$Lambda$8068/125086064.apply (331 samples, 17.96%)</title><rect x="60.6" y="2275.0" width="211.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.6" y="2286.0">org/scalatest/FlatSpecLike$$..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.$anonfun$runTest$1 (331 samples, 17.96%)</title><rect x="60.6" y="2259.0" width="211.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.6" y="2270.0">org/scalatest/FlatSpecLike.$..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.invokeWithFixture$1 (331 samples, 17.96%)</title><rect x="60.6" y="2243.0" width="211.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.6" y="2254.0">org/scalatest/FlatSpecLike.i..</text>
</g>
<g>
<title>org/scalatest/FlatSpec.withFixture (331 samples, 17.96%)</title><rect x="60.6" y="2227.0" width="211.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.6" y="2238.0">org/scalatest/FlatSpec.withF..</text>
</g>
<g>
<title>org/scalatest/TestSuite.withFixture$ (331 samples, 17.96%)</title><rect x="60.6" y="2211.0" width="211.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.6" y="2222.0">org/scalatest/TestSuite.with..</text>
</g>
<g>
<title>org/scalatest/TestSuite.withFixture (331 samples, 17.96%)</title><rect x="60.6" y="2195.0" width="211.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.6" y="2206.0">org/scalatest/TestSuite.with..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike$$anon$5.apply (331 samples, 17.96%)</title><rect x="60.6" y="2179.0" width="211.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.6" y="2190.0">org/scalatest/FlatSpecLike$$..</text>
</g>
<g>
<title>org/scalatest/Transformer.apply (331 samples, 17.96%)</title><rect x="60.6" y="2163.0" width="211.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="63.6" y="2174.0">org/scalatest/Transformer.ap..</text>
</g>
<g>
<title>org/scalatest/Transformer.apply (331 samples, 17.96%)</title><rect x="60.6" y="2147.0" width="211.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.6" y="2158.0">org/scalatest/Transformer.ap..</text>
</g>
<g>
<title>org/scalatest/OutcomeOf$.outcomeOf (331 samples, 17.96%)</title><rect x="60.6" y="2131.0" width="211.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.6" y="2142.0">org/scalatest/OutcomeOf$.out..</text>
</g>
<g>
<title>org/scalatest/OutcomeOf.outcomeOf$ (331 samples, 17.96%)</title><rect x="60.6" y="2115.0" width="211.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.6" y="2126.0">org/scalatest/OutcomeOf.outc..</text>
</g>
<g>
<title>org/scalatest/OutcomeOf.outcomeOf (331 samples, 17.96%)</title><rect x="60.6" y="2099.0" width="211.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.6" y="2110.0">org/scalatest/OutcomeOf.outc..</text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (331 samples, 17.96%)</title><rect x="60.6" y="2083.0" width="211.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.6" y="2094.0">scala/runtime/java8/JFunctio..</text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$8032/1966037606.apply$mcV$sp (75 samples, 4.07%)</title><rect x="60.6" y="2067.0" width="48.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.6" y="2078.0">trea..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$new$2 (75 samples, 4.07%)</title><rect x="60.6" y="2051.0" width="48.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.6" y="2062.0">trea..</text>
</g>
<g>
<title>treadle/GCDTester.sizableTest (75 samples, 4.07%)</title><rect x="60.6" y="2035.0" width="48.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.6" y="2046.0">trea..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.foreach (75 samples, 4.07%)</title><rect x="60.6" y="2019.0" width="48.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.6" y="2030.0">scal..</text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (75 samples, 4.07%)</title><rect x="60.6" y="2003.0" width="48.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.6" y="2014.0">scal..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (75 samples, 4.07%)</title><rect x="60.6" y="1987.0" width="48.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.6" y="1998.0">scal..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (75 samples, 4.07%)</title><rect x="60.6" y="1971.0" width="48.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.6" y="1982.0">scal..</text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (75 samples, 4.07%)</title><rect x="60.6" y="1955.0" width="48.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.6" y="1966.0">scal..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (75 samples, 4.07%)</title><rect x="60.6" y="1939.0" width="48.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.6" y="1950.0">scal..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach (75 samples, 4.07%)</title><rect x="60.6" y="1923.0" width="48.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.6" y="1934.0">scal..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter$$Lambda$3749/630565490.apply (74 samples, 4.02%)</title><rect x="61.2" y="1907.0" width="47.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.2" y="1918.0">scal..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.$anonfun$foreach$1 (74 samples, 4.02%)</title><rect x="61.2" y="1891.0" width="47.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.2" y="1902.0">scal..</text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$8972/2028805969.apply (74 samples, 4.02%)</title><rect x="61.2" y="1875.0" width="47.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="64.2" y="1886.0">trea..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$sizableTest$4$adapted (74 samples, 4.02%)</title><rect x="61.2" y="1859.0" width="47.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.2" y="1870.0">trea..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$sizableTest$4 (74 samples, 4.02%)</title><rect x="61.2" y="1843.0" width="47.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.2" y="1854.0">trea..</text>
</g>
<g>
<title>treadle/TreadleTester.peek (29 samples, 1.57%)</title><rect x="61.2" y="1827.0" width="18.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.2" y="1838.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (26 samples, 1.41%)</title><rect x="61.2" y="1811.0" width="16.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.2" y="1822.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (26 samples, 1.41%)</title><rect x="61.2" y="1795.0" width="16.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.2" y="1806.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (24 samples, 1.30%)</title><rect x="62.5" y="1779.0" width="15.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.5" y="1790.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (24 samples, 1.30%)</title><rect x="62.5" y="1763.0" width="15.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.5" y="1774.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.run (1 samples, 0.05%)</title><rect x="62.5" y="1747.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.5" y="1758.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$8966/992540979.apply$mcV$sp (6 samples, 0.33%)</title><rect x="63.1" y="1747.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.1" y="1758.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (6 samples, 0.33%)</title><rect x="63.1" y="1731.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.1" y="1742.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (6 samples, 0.33%)</title><rect x="63.1" y="1715.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="66.1" y="1726.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (6 samples, 0.33%)</title><rect x="63.1" y="1699.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.1" y="1710.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (6 samples, 0.33%)</title><rect x="63.1" y="1683.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.1" y="1694.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (6 samples, 0.33%)</title><rect x="63.1" y="1667.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="66.1" y="1678.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (6 samples, 0.33%)</title><rect x="63.1" y="1651.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.1" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8974/263614067.apply (5 samples, 0.27%)</title><rect x="63.8" y="1635.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.8" y="1646.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (5 samples, 0.27%)</title><rect x="63.8" y="1619.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.8" y="1630.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (5 samples, 0.27%)</title><rect x="63.8" y="1603.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.8" y="1614.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (5 samples, 0.27%)</title><rect x="63.8" y="1587.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="66.8" y="1598.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (2 samples, 0.11%)</title><rect x="63.8" y="1571.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.8" y="1582.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (1 samples, 0.05%)</title><rect x="63.8" y="1555.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.8" y="1566.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.05%)</title><rect x="63.8" y="1539.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.8" y="1550.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.05%)</title><rect x="63.8" y="1523.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.8" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="63.8" y="1507.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.8" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="63.8" y="1491.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.8" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.initWithContents (1 samples, 0.05%)</title><rect x="63.8" y="1475.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.8" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initWithContents$ (1 samples, 0.05%)</title><rect x="63.8" y="1459.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="66.8" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initWithContents (1 samples, 0.05%)</title><rect x="63.8" y="1443.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.8" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.alwaysInitSizeMap (1 samples, 0.05%)</title><rect x="63.8" y="1427.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.8" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (1 samples, 0.05%)</title><rect x="64.4" y="1555.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.4" y="1566.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (1 samples, 0.05%)</title><rect x="64.4" y="1539.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.4" y="1550.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (1 samples, 0.05%)</title><rect x="64.4" y="1523.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.4" y="1534.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.loop$1 (1 samples, 0.05%)</title><rect x="64.4" y="1507.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.4" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (1 samples, 0.05%)</title><rect x="64.4" y="1491.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="67.4" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (1 samples, 0.05%)</title><rect x="64.4" y="1475.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.4" y="1486.0"></text>
</g>
<g>
<title>scala/Tuple2._2 (1 samples, 0.05%)</title><rect x="64.4" y="1459.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.4" y="1470.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToInteger (1 samples, 0.05%)</title><rect x="65.1" y="1571.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.1" y="1582.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.05%)</title><rect x="65.1" y="1555.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.1" y="1566.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (1 samples, 0.05%)</title><rect x="65.7" y="1571.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.7" y="1582.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.05%)</title><rect x="65.7" y="1555.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.7" y="1566.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$8975/1695633323.apply (1 samples, 0.05%)</title><rect x="65.7" y="1539.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.7" y="1550.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (1 samples, 0.05%)</title><rect x="65.7" y="1523.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.7" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.05%)</title><rect x="65.7" y="1507.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.7" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.05%)</title><rect x="65.7" y="1491.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.7" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.05%)</title><rect x="65.7" y="1475.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.7" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="65.7" y="1459.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.7" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.05%)</title><rect x="65.7" y="1443.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.7" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.05%)</title><rect x="65.7" y="1427.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.7" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.&lt;init&gt; (1 samples, 0.05%)</title><rect x="65.7" y="1411.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.7" y="1422.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="65.7" y="1395.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.7" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.apply (1 samples, 0.05%)</title><rect x="66.3" y="1571.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.3" y="1582.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (1 samples, 0.05%)</title><rect x="66.3" y="1555.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.3" y="1566.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="66.3" y="1539.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.3" y="1550.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="66.3" y="1523.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.3" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="66.3" y="1507.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.3" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.05%)</title><rect x="66.3" y="1491.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.3" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.05%)</title><rect x="66.3" y="1475.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.3" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.05%)</title><rect x="66.3" y="1459.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.3" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.run (1 samples, 0.05%)</title><rect x="67.0" y="1747.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.0" y="1758.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$9004/282268693.apply$mcV$sp (16 samples, 0.87%)</title><rect x="67.6" y="1747.0" width="10.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.6" y="1758.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (16 samples, 0.87%)</title><rect x="67.6" y="1731.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="70.6" y="1742.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (16 samples, 0.87%)</title><rect x="67.6" y="1715.0" width="10.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.6" y="1726.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.treadle$executable$DataStore$AssignLong$$$outer (2 samples, 0.11%)</title><rect x="67.6" y="1699.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.6" y="1710.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="67.6" y="1683.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="70.6" y="1694.0"></text>
</g>
<g>
<title>treadle/executable/MuxLongs.apply (1 samples, 0.05%)</title><rect x="68.3" y="1683.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.3" y="1694.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (14 samples, 0.76%)</title><rect x="68.9" y="1699.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.9" y="1710.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (14 samples, 0.76%)</title><rect x="68.9" y="1683.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.9" y="1694.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (14 samples, 0.76%)</title><rect x="68.9" y="1667.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.9" y="1678.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (14 samples, 0.76%)</title><rect x="68.9" y="1651.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.9" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8974/263614067.apply (14 samples, 0.76%)</title><rect x="68.9" y="1635.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.9" y="1646.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (14 samples, 0.76%)</title><rect x="68.9" y="1619.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.9" y="1630.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (14 samples, 0.76%)</title><rect x="68.9" y="1603.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.9" y="1614.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (14 samples, 0.76%)</title><rect x="68.9" y="1587.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.9" y="1598.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (6 samples, 0.33%)</title><rect x="68.9" y="1571.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.9" y="1582.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (6 samples, 0.33%)</title><rect x="68.9" y="1555.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.9" y="1566.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (6 samples, 0.33%)</title><rect x="68.9" y="1539.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="71.9" y="1550.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (6 samples, 0.33%)</title><rect x="68.9" y="1523.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="71.9" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (6 samples, 0.33%)</title><rect x="68.9" y="1507.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.9" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (6 samples, 0.33%)</title><rect x="68.9" y="1491.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.9" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.&lt;init&gt; (3 samples, 0.16%)</title><rect x="68.9" y="1475.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.9" y="1486.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (3 samples, 0.16%)</title><rect x="68.9" y="1459.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="71.9" y="1470.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (2 samples, 0.11%)</title><rect x="68.9" y="1443.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.9" y="1454.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (2 samples, 0.11%)</title><rect x="68.9" y="1427.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.9" y="1438.0"></text>
</g>
<g>
<title>scala/collection/GenMapLike.$init$ (1 samples, 0.05%)</title><rect x="70.2" y="1443.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.2" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.$init$ (3 samples, 0.16%)</title><rect x="70.8" y="1475.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.8" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.tableSizeSeed (1 samples, 0.05%)</title><rect x="70.8" y="1459.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.8" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.tableSizeSeed$ (1 samples, 0.05%)</title><rect x="70.8" y="1443.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.8" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.tableSizeSeed (1 samples, 0.05%)</title><rect x="70.8" y="1427.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.8" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialThreshold (2 samples, 0.11%)</title><rect x="71.5" y="1459.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.5" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialCapacity (2 samples, 0.11%)</title><rect x="71.5" y="1443.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.5" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.initialSize (1 samples, 0.05%)</title><rect x="71.5" y="1427.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.5" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialSize$ (1 samples, 0.05%)</title><rect x="71.5" y="1411.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.5" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$.capacity (1 samples, 0.05%)</title><rect x="72.1" y="1427.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.1" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (2 samples, 0.11%)</title><rect x="72.7" y="1571.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.7" y="1582.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (2 samples, 0.11%)</title><rect x="72.7" y="1555.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.7" y="1566.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (2 samples, 0.11%)</title><rect x="72.7" y="1539.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.7" y="1550.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (2 samples, 0.11%)</title><rect x="72.7" y="1523.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.7" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="72.7" y="1507.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.7" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="72.7" y="1491.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.7" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="72.7" y="1475.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.7" y="1486.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="72.7" y="1459.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.7" y="1470.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="72.7" y="1443.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.7" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.05%)</title><rect x="73.4" y="1507.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.4" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.05%)</title><rect x="73.4" y="1491.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.4" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.05%)</title><rect x="73.4" y="1475.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.4" y="1486.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToInteger (1 samples, 0.05%)</title><rect x="74.0" y="1571.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.0" y="1582.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.05%)</title><rect x="74.0" y="1555.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.0" y="1566.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (3 samples, 0.16%)</title><rect x="74.7" y="1571.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="77.7" y="1582.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (3 samples, 0.16%)</title><rect x="74.7" y="1555.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.7" y="1566.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.05%)</title><rect x="75.3" y="1539.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.3" y="1550.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.05%)</title><rect x="75.3" y="1523.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.3" y="1534.0"></text>
</g>
<g>
<title>scala/math/BigInt.&lt;init&gt; (1 samples, 0.05%)</title><rect x="75.3" y="1507.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.3" y="1518.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (1 samples, 0.05%)</title><rect x="75.3" y="1491.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.3" y="1502.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (1 samples, 0.05%)</title><rect x="75.9" y="1539.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.9" y="1550.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.05%)</title><rect x="75.9" y="1523.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.9" y="1534.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.05%)</title><rect x="75.9" y="1507.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.9" y="1518.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.apply (1 samples, 0.05%)</title><rect x="76.6" y="1571.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.6" y="1582.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (1 samples, 0.05%)</title><rect x="76.6" y="1555.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.6" y="1566.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="76.6" y="1539.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.6" y="1550.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="76.6" y="1523.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.6" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="76.6" y="1507.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.6" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.05%)</title><rect x="76.6" y="1491.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.6" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (1 samples, 0.05%)</title><rect x="77.2" y="1571.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.2" y="1582.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (1 samples, 0.05%)</title><rect x="77.2" y="1555.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.2" y="1566.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="77.2" y="1539.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.2" y="1550.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="77.2" y="1523.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.2" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="77.2" y="1507.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.2" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="77.2" y="1491.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.2" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="77.2" y="1475.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.2" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="77.2" y="1459.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.2" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="77.2" y="1443.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.2" y="1454.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="77.2" y="1427.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.2" y="1438.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="77.2" y="1411.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.2" y="1422.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="77.2" y="1395.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.2" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="77.2" y="1379.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.2" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.getValue (1 samples, 0.05%)</title><rect x="77.9" y="1811.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.9" y="1822.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.normalize (1 samples, 0.05%)</title><rect x="77.9" y="1795.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.9" y="1806.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.makeUInt (1 samples, 0.05%)</title><rect x="77.9" y="1779.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.9" y="1790.0"></text>
</g>
<g>
<title>scala/math/BigInt.$amp (1 samples, 0.05%)</title><rect x="77.9" y="1763.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.9" y="1774.0"></text>
</g>
<g>
<title>java/math/BigInteger.and (1 samples, 0.05%)</title><rect x="77.9" y="1747.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.9" y="1758.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.05%)</title><rect x="77.9" y="1731.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.9" y="1742.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.combinationalBump (2 samples, 0.11%)</title><rect x="78.5" y="1811.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="81.5" y="1822.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.incrementTime (2 samples, 0.11%)</title><rect x="78.5" y="1795.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="81.5" y="1806.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.runUntil (2 samples, 0.11%)</title><rect x="78.5" y="1779.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.5" y="1790.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.setTime (2 samples, 0.11%)</title><rect x="78.5" y="1763.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.5" y="1774.0"></text>
</g>
<g>
<title>treadle/TreadleTester$$Lambda$8952/1101334900.apply$mcV$sp (2 samples, 0.11%)</title><rect x="78.5" y="1747.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.5" y="1758.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$2 (2 samples, 0.11%)</title><rect x="78.5" y="1731.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.5" y="1742.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.11%)</title><rect x="78.5" y="1715.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="81.5" y="1726.0"></text>
</g>
<g>
<title>treadle/TreadleTester.poke (1 samples, 0.05%)</title><rect x="79.8" y="1827.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.8" y="1838.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setValue (1 samples, 0.05%)</title><rect x="79.8" y="1811.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.8" y="1822.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.valueFrom (1 samples, 0.05%)</title><rect x="79.8" y="1795.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.8" y="1806.0"></text>
</g>
<g>
<title>scala/math/BigInt.$less (1 samples, 0.05%)</title><rect x="79.8" y="1779.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.8" y="1790.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$ (1 samples, 0.05%)</title><rect x="79.8" y="1763.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.8" y="1774.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less (1 samples, 0.05%)</title><rect x="79.8" y="1747.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.8" y="1758.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (1 samples, 0.05%)</title><rect x="79.8" y="1731.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.8" y="1742.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (1 samples, 0.05%)</title><rect x="79.8" y="1715.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.8" y="1726.0"></text>
</g>
<g>
<title>scala/math/BigInt.bigInteger (1 samples, 0.05%)</title><rect x="79.8" y="1699.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.8" y="1710.0"></text>
</g>
<g>
<title>treadle/TreadleTester.step (44 samples, 2.39%)</title><rect x="80.4" y="1827.0" width="28.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.4" y="1838.0">tr..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.run (44 samples, 2.39%)</title><rect x="80.4" y="1811.0" width="28.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.4" y="1822.0">tr..</text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach$mVc$sp (44 samples, 2.39%)</title><rect x="80.4" y="1795.0" width="28.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.4" y="1806.0">sc..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper$$Lambda$8973/1412921243.apply$mcVI$sp (44 samples, 2.39%)</title><rect x="80.4" y="1779.0" width="28.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.4" y="1790.0">tr..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.$anonfun$run$2 (44 samples, 2.39%)</title><rect x="80.4" y="1763.0" width="28.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.4" y="1774.0">tr..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (2 samples, 0.11%)</title><rect x="80.4" y="1747.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.4" y="1758.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (2 samples, 0.11%)</title><rect x="80.4" y="1731.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="83.4" y="1742.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (2 samples, 0.11%)</title><rect x="80.4" y="1715.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.4" y="1726.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (2 samples, 0.11%)</title><rect x="80.4" y="1699.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.4" y="1710.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$9004/282268693.apply$mcV$sp (2 samples, 0.11%)</title><rect x="80.4" y="1683.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.4" y="1694.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (2 samples, 0.11%)</title><rect x="80.4" y="1667.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.4" y="1678.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (2 samples, 0.11%)</title><rect x="80.4" y="1651.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.4" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (2 samples, 0.11%)</title><rect x="80.4" y="1635.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.4" y="1646.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (2 samples, 0.11%)</title><rect x="80.4" y="1619.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="83.4" y="1630.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (2 samples, 0.11%)</title><rect x="80.4" y="1603.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.4" y="1614.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (2 samples, 0.11%)</title><rect x="80.4" y="1587.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.4" y="1598.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8974/263614067.apply (2 samples, 0.11%)</title><rect x="80.4" y="1571.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.4" y="1582.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (2 samples, 0.11%)</title><rect x="80.4" y="1555.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.4" y="1566.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (2 samples, 0.11%)</title><rect x="80.4" y="1539.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.4" y="1550.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (2 samples, 0.11%)</title><rect x="80.4" y="1523.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.4" y="1534.0"></text>
</g>
<g>
<title>scala/LowPriorityImplicits.wrapRefArray (1 samples, 0.05%)</title><rect x="80.4" y="1507.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.4" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.&lt;init&gt; (1 samples, 0.05%)</title><rect x="80.4" y="1491.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.4" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.&lt;init&gt; (1 samples, 0.05%)</title><rect x="80.4" y="1475.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.4" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSeq.&lt;init&gt; (1 samples, 0.05%)</title><rect x="80.4" y="1459.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.4" y="1470.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.&lt;init&gt; (1 samples, 0.05%)</title><rect x="80.4" y="1443.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.4" y="1454.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="80.4" y="1427.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.4" y="1438.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="80.4" y="1411.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="83.4" y="1422.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$init$ (1 samples, 0.05%)</title><rect x="80.4" y="1395.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.4" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.05%)</title><rect x="81.1" y="1507.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.1" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.05%)</title><rect x="81.1" y="1491.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.1" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.05%)</title><rect x="81.1" y="1475.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.1" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="81.1" y="1459.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.1" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="81.1" y="1443.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.1" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (1 samples, 0.05%)</title><rect x="81.1" y="1427.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.1" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.lowerClock$1 (1 samples, 0.05%)</title><rect x="81.7" y="1747.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.7" y="1758.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setIntValue (1 samples, 0.05%)</title><rect x="81.7" y="1731.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.7" y="1742.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.valueFrom (1 samples, 0.05%)</title><rect x="81.7" y="1715.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.7" y="1726.0"></text>
</g>
<g>
<title>scala/math/BigInt.$amp (1 samples, 0.05%)</title><rect x="81.7" y="1699.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.7" y="1710.0"></text>
</g>
<g>
<title>java/math/BigInteger.and (1 samples, 0.05%)</title><rect x="81.7" y="1683.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.7" y="1694.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.05%)</title><rect x="81.7" y="1667.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.7" y="1678.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.raiseClock$1 (41 samples, 2.22%)</title><rect x="82.3" y="1747.0" width="26.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.3" y="1758.0">t..</text>
</g>
<g>
<title>treadle/chronometry/UTC.incrementTime (3 samples, 0.16%)</title><rect x="82.3" y="1731.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.3" y="1742.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.runUntil (3 samples, 0.16%)</title><rect x="82.3" y="1715.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.3" y="1726.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.setTime (3 samples, 0.16%)</title><rect x="82.3" y="1699.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.3" y="1710.0"></text>
</g>
<g>
<title>treadle/TreadleTester$$Lambda$8952/1101334900.apply$mcV$sp (3 samples, 0.16%)</title><rect x="82.3" y="1683.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.3" y="1694.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$2 (3 samples, 0.16%)</title><rect x="82.3" y="1667.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.3" y="1678.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.11%)</title><rect x="82.3" y="1651.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="85.3" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner$$Lambda$8967/1308654645.apply$mcV$sp (1 samples, 0.05%)</title><rect x="83.6" y="1651.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.6" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (36 samples, 1.95%)</title><rect x="84.3" y="1731.0" width="23.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.3" y="1742.0">t..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (36 samples, 1.95%)</title><rect x="84.3" y="1715.0" width="23.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.3" y="1726.0">t..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (36 samples, 1.95%)</title><rect x="84.3" y="1699.0" width="23.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.3" y="1710.0">t..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (36 samples, 1.95%)</title><rect x="84.3" y="1683.0" width="23.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="87.3" y="1694.0">t..</text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner$$Lambda$8967/1308654645.apply$mcV$sp (7 samples, 0.38%)</title><rect x="84.3" y="1667.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.3" y="1678.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.$anonfun$setLeanMode$2 (7 samples, 0.38%)</title><rect x="84.3" y="1651.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.3" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.runFull (7 samples, 0.38%)</title><rect x="84.3" y="1635.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.3" y="1646.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$9004/282268693.apply$mcV$sp (7 samples, 0.38%)</title><rect x="84.3" y="1619.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.3" y="1630.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (7 samples, 0.38%)</title><rect x="84.3" y="1603.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.3" y="1614.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (7 samples, 0.38%)</title><rect x="84.3" y="1587.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.3" y="1598.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (7 samples, 0.38%)</title><rect x="84.3" y="1571.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.3" y="1582.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (7 samples, 0.38%)</title><rect x="84.3" y="1555.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.3" y="1566.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (7 samples, 0.38%)</title><rect x="84.3" y="1539.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.3" y="1550.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (7 samples, 0.38%)</title><rect x="84.3" y="1523.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.3" y="1534.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8974/263614067.apply (7 samples, 0.38%)</title><rect x="84.3" y="1507.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.3" y="1518.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (7 samples, 0.38%)</title><rect x="84.3" y="1491.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.3" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (7 samples, 0.38%)</title><rect x="84.3" y="1475.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.3" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (7 samples, 0.38%)</title><rect x="84.3" y="1459.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.3" y="1470.0"></text>
</g>
<g>
<title>scala/LowPriorityImplicits.wrapRefArray (1 samples, 0.05%)</title><rect x="84.3" y="1443.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.3" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.&lt;init&gt; (1 samples, 0.05%)</title><rect x="84.3" y="1427.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.3" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.&lt;init&gt; (1 samples, 0.05%)</title><rect x="84.3" y="1411.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.3" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSeq.&lt;init&gt; (1 samples, 0.05%)</title><rect x="84.3" y="1395.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.3" y="1406.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.&lt;init&gt; (1 samples, 0.05%)</title><rect x="84.3" y="1379.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.3" y="1390.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (4 samples, 0.22%)</title><rect x="84.9" y="1443.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.9" y="1454.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (3 samples, 0.16%)</title><rect x="84.9" y="1427.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.9" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (3 samples, 0.16%)</title><rect x="84.9" y="1411.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.9" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (3 samples, 0.16%)</title><rect x="84.9" y="1395.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.9" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (3 samples, 0.16%)</title><rect x="84.9" y="1379.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.9" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (3 samples, 0.16%)</title><rect x="84.9" y="1363.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.9" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.&lt;init&gt; (3 samples, 0.16%)</title><rect x="84.9" y="1347.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.9" y="1358.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (3 samples, 0.16%)</title><rect x="84.9" y="1331.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.9" y="1342.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (3 samples, 0.16%)</title><rect x="84.9" y="1315.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.9" y="1326.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (3 samples, 0.16%)</title><rect x="84.9" y="1299.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.9" y="1310.0"></text>
</g>
<g>
<title>scala/collection/GenTraversable.$init$ (1 samples, 0.05%)</title><rect x="84.9" y="1283.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$init$ (1 samples, 0.05%)</title><rect x="85.6" y="1283.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.6" y="1294.0"></text>
</g>
<g>
<title>scala/collection/generic/GenericTraversableTemplate.$init$ (1 samples, 0.05%)</title><rect x="86.2" y="1283.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="89.2" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (1 samples, 0.05%)</title><rect x="86.8" y="1427.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.8" y="1438.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (1 samples, 0.05%)</title><rect x="86.8" y="1411.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="89.8" y="1422.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (1 samples, 0.05%)</title><rect x="86.8" y="1395.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.8" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.foreach (1 samples, 0.05%)</title><rect x="86.8" y="1379.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.8" y="1390.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach$ (1 samples, 0.05%)</title><rect x="86.8" y="1363.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.8" y="1374.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach (1 samples, 0.05%)</title><rect x="86.8" y="1347.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.8" y="1358.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable$$Lambda$3544/1563367365.apply (1 samples, 0.05%)</title><rect x="86.8" y="1331.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.8" y="1342.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$anonfun$$plus$plus$eq$1 (1 samples, 0.05%)</title><rect x="86.8" y="1315.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="89.8" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (1 samples, 0.05%)</title><rect x="86.8" y="1299.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.8" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (1 samples, 0.05%)</title><rect x="86.8" y="1283.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.8" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.05%)</title><rect x="86.8" y="1267.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="89.8" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.05%)</title><rect x="86.8" y="1251.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.8" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="86.8" y="1235.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="89.8" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.05%)</title><rect x="86.8" y="1219.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.8" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.05%)</title><rect x="87.5" y="1443.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.5" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="87.5" y="1427.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.5" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="87.5" y="1411.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.5" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="87.5" y="1395.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.5" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="87.5" y="1379.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.5" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="87.5" y="1363.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.5" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="87.5" y="1347.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.5" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="87.5" y="1331.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="90.5" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.05%)</title><rect x="88.1" y="1443.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.1" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.05%)</title><rect x="88.1" y="1427.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.1" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.05%)</title><rect x="88.1" y="1411.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.1" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="88.1" y="1395.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.1" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.05%)</title><rect x="88.1" y="1379.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.1" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (1 samples, 0.05%)</title><rect x="88.1" y="1363.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="91.1" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$8966/992540979.apply$mcV$sp (4 samples, 0.22%)</title><rect x="88.8" y="1667.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.8" y="1678.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (4 samples, 0.22%)</title><rect x="88.8" y="1651.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.8" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (4 samples, 0.22%)</title><rect x="88.8" y="1635.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.8" y="1646.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (4 samples, 0.22%)</title><rect x="88.8" y="1619.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.8" y="1630.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (4 samples, 0.22%)</title><rect x="88.8" y="1603.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.8" y="1614.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (4 samples, 0.22%)</title><rect x="88.8" y="1587.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="91.8" y="1598.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (4 samples, 0.22%)</title><rect x="88.8" y="1571.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="91.8" y="1582.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8974/263614067.apply (4 samples, 0.22%)</title><rect x="88.8" y="1555.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="91.8" y="1566.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (4 samples, 0.22%)</title><rect x="88.8" y="1539.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.8" y="1550.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (4 samples, 0.22%)</title><rect x="88.8" y="1523.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.8" y="1534.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (4 samples, 0.22%)</title><rect x="88.8" y="1507.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.8" y="1518.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (2 samples, 0.11%)</title><rect x="88.8" y="1491.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.8" y="1502.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (2 samples, 0.11%)</title><rect x="88.8" y="1475.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.8" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (2 samples, 0.11%)</title><rect x="88.8" y="1459.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.8" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (2 samples, 0.11%)</title><rect x="88.8" y="1443.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.8" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (2 samples, 0.11%)</title><rect x="88.8" y="1427.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.8" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (2 samples, 0.11%)</title><rect x="88.8" y="1411.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.8" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.&lt;init&gt; (2 samples, 0.11%)</title><rect x="88.8" y="1395.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.8" y="1406.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (2 samples, 0.11%)</title><rect x="88.8" y="1379.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.8" y="1390.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="89.4" y="1363.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="92.4" y="1374.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="89.4" y="1347.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.4" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.05%)</title><rect x="90.0" y="1491.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.0" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.05%)</title><rect x="90.0" y="1475.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="93.0" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.05%)</title><rect x="90.0" y="1459.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="93.0" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="90.0" y="1443.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.0" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="90.0" y="1427.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.0" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="90.0" y="1411.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.0" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="90.0" y="1395.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.0" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="90.0" y="1379.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.0" y="1390.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="90.0" y="1363.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.0" y="1374.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="90.0" y="1347.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.0" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="90.0" y="1331.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.0" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (1 samples, 0.05%)</title><rect x="90.0" y="1315.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.0" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.apply (1 samples, 0.05%)</title><rect x="90.7" y="1491.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.7" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (1 samples, 0.05%)</title><rect x="90.7" y="1475.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="93.7" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="90.7" y="1459.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.7" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="90.7" y="1443.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="93.7" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="90.7" y="1427.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.7" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="90.7" y="1411.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.7" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$9004/282268693.apply$mcV$sp (25 samples, 1.36%)</title><rect x="91.3" y="1667.0" width="16.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.3" y="1678.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (25 samples, 1.36%)</title><rect x="91.3" y="1651.0" width="16.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.3" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (25 samples, 1.36%)</title><rect x="91.3" y="1635.0" width="16.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.3" y="1646.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.treadle$executable$DataStore$AssignLong$$$outer (1 samples, 0.05%)</title><rect x="91.3" y="1619.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.3" y="1630.0"></text>
</g>
<g>
<title>treadle/executable/TailLongs.apply (1 samples, 0.05%)</title><rect x="91.3" y="1603.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.3" y="1614.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (24 samples, 1.30%)</title><rect x="92.0" y="1619.0" width="15.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="95.0" y="1630.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (24 samples, 1.30%)</title><rect x="92.0" y="1603.0" width="15.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.0" y="1614.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (24 samples, 1.30%)</title><rect x="92.0" y="1587.0" width="15.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="95.0" y="1598.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (24 samples, 1.30%)</title><rect x="92.0" y="1571.0" width="15.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="95.0" y="1582.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8974/263614067.apply (24 samples, 1.30%)</title><rect x="92.0" y="1555.0" width="15.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.0" y="1566.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (24 samples, 1.30%)</title><rect x="92.0" y="1539.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="95.0" y="1550.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (24 samples, 1.30%)</title><rect x="92.0" y="1523.0" width="15.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="95.0" y="1534.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (24 samples, 1.30%)</title><rect x="92.0" y="1507.0" width="15.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.0" y="1518.0"></text>
</g>
<g>
<title>scala/LowPriorityImplicits.wrapRefArray (1 samples, 0.05%)</title><rect x="92.0" y="1491.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.0" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.05%)</title><rect x="92.0" y="1475.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="95.0" y="1486.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (9 samples, 0.49%)</title><rect x="92.6" y="1491.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.6" y="1502.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (8 samples, 0.43%)</title><rect x="93.2" y="1475.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.2" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (7 samples, 0.38%)</title><rect x="93.9" y="1459.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.9" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (7 samples, 0.38%)</title><rect x="93.9" y="1443.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.9" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (7 samples, 0.38%)</title><rect x="93.9" y="1427.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.9" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (7 samples, 0.38%)</title><rect x="93.9" y="1411.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.9" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.&lt;init&gt; (5 samples, 0.27%)</title><rect x="94.5" y="1395.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.5" y="1406.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (5 samples, 0.27%)</title><rect x="94.5" y="1379.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="97.5" y="1390.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (5 samples, 0.27%)</title><rect x="94.5" y="1363.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.5" y="1374.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (5 samples, 0.27%)</title><rect x="94.5" y="1347.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.5" y="1358.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="95.8" y="1331.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.8" y="1342.0"></text>
</g>
<g>
<title>scala/collection/GenTraversableOnce.$init$ (1 samples, 0.05%)</title><rect x="96.4" y="1331.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.4" y="1342.0"></text>
</g>
<g>
<title>scala/collection/Parallelizable.$init$ (1 samples, 0.05%)</title><rect x="97.1" y="1331.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.1" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.$init$ (1 samples, 0.05%)</title><rect x="97.7" y="1395.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.7" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialThreshold (1 samples, 0.05%)</title><rect x="97.7" y="1379.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="100.7" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialCapacity (1 samples, 0.05%)</title><rect x="97.7" y="1363.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.7" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (7 samples, 0.38%)</title><rect x="98.4" y="1491.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="101.4" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (7 samples, 0.38%)</title><rect x="98.4" y="1475.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.4" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (7 samples, 0.38%)</title><rect x="98.4" y="1459.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="101.4" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (7 samples, 0.38%)</title><rect x="98.4" y="1443.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.4" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.05%)</title><rect x="98.4" y="1427.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.4" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (5 samples, 0.27%)</title><rect x="99.0" y="1427.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.0" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (1 samples, 0.05%)</title><rect x="101.6" y="1411.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.6" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="101.6" y="1395.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.6" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="101.6" y="1379.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.6" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="101.6" y="1363.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.6" y="1374.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="101.6" y="1347.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.6" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="101.6" y="1331.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.6" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="102.2" y="1427.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.2" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (2 samples, 0.11%)</title><rect x="102.8" y="1491.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.8" y="1502.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (2 samples, 0.11%)</title><rect x="102.8" y="1475.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.8" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$8975/1695633323.apply (2 samples, 0.11%)</title><rect x="102.8" y="1459.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.8" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (1 samples, 0.05%)</title><rect x="103.5" y="1443.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.5" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.05%)</title><rect x="103.5" y="1427.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="106.5" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.05%)</title><rect x="103.5" y="1411.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.5" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.05%)</title><rect x="103.5" y="1395.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.5" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="103.5" y="1379.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.5" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="103.5" y="1363.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="106.5" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.table (1 samples, 0.05%)</title><rect x="103.5" y="1347.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.5" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.apply (4 samples, 0.22%)</title><rect x="104.1" y="1491.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.1" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (1 samples, 0.05%)</title><rect x="106.0" y="1475.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="109.0" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="106.0" y="1459.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="109.0" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="106.0" y="1443.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="109.0" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="106.0" y="1427.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="109.0" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.05%)</title><rect x="106.0" y="1411.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="109.0" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.05%)</title><rect x="106.0" y="1395.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="109.0" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.05%)</title><rect x="106.0" y="1379.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.0" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (1 samples, 0.05%)</title><rect x="106.7" y="1491.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.7" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (1 samples, 0.05%)</title><rect x="106.7" y="1475.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.7" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="106.7" y="1459.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.7" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="106.7" y="1443.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="109.7" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="106.7" y="1427.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.7" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="106.7" y="1411.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.7" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setIntValue (2 samples, 0.11%)</title><rect x="107.3" y="1731.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.3" y="1742.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (1 samples, 0.05%)</title><rect x="107.3" y="1715.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.3" y="1726.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (1 samples, 0.05%)</title><rect x="107.3" y="1699.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.3" y="1710.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (1 samples, 0.05%)</title><rect x="107.3" y="1683.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.3" y="1694.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (1 samples, 0.05%)</title><rect x="107.3" y="1667.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="110.3" y="1678.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (1 samples, 0.05%)</title><rect x="107.3" y="1651.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="110.3" y="1662.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="107.3" y="1635.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.3" y="1646.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="107.3" y="1619.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.3" y="1630.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.valueFrom (1 samples, 0.05%)</title><rect x="108.0" y="1715.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.0" y="1726.0"></text>
</g>
<g>
<title>scala/math/BigInt.$amp (1 samples, 0.05%)</title><rect x="108.0" y="1699.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.0" y="1710.0"></text>
</g>
<g>
<title>java/math/BigInteger.and (1 samples, 0.05%)</title><rect x="108.0" y="1683.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="111.0" y="1694.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.05%)</title><rect x="108.0" y="1667.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.0" y="1678.0"></text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$8033/2074025402.apply$mcV$sp (128 samples, 6.95%)</title><rect x="108.6" y="2067.0" width="82.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.6" y="2078.0">treadle/G..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$new$3 (128 samples, 6.95%)</title><rect x="108.6" y="2051.0" width="82.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.6" y="2062.0">treadle/G..</text>
</g>
<g>
<title>treadle/GCDTester.sizableTest (128 samples, 6.95%)</title><rect x="108.6" y="2035.0" width="82.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="111.6" y="2046.0">treadle/G..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.foreach (121 samples, 6.57%)</title><rect x="108.6" y="2019.0" width="77.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.6" y="2030.0">scala/col..</text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (121 samples, 6.57%)</title><rect x="108.6" y="2003.0" width="77.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.6" y="2014.0">scala/col..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (121 samples, 6.57%)</title><rect x="108.6" y="1987.0" width="77.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="111.6" y="1998.0">scala/col..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (121 samples, 6.57%)</title><rect x="108.6" y="1971.0" width="77.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="111.6" y="1982.0">scala/col..</text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (121 samples, 6.57%)</title><rect x="108.6" y="1955.0" width="77.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.6" y="1966.0">scala/col..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (121 samples, 6.57%)</title><rect x="108.6" y="1939.0" width="77.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.6" y="1950.0">scala/col..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach (121 samples, 6.57%)</title><rect x="108.6" y="1923.0" width="77.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.6" y="1934.0">scala/col..</text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="108.6" y="1907.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="111.6" y="1918.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter$$Lambda$3749/630565490.apply (120 samples, 6.51%)</title><rect x="109.2" y="1907.0" width="76.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.2" y="1918.0">scala/co..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.$anonfun$foreach$1 (120 samples, 6.51%)</title><rect x="109.2" y="1891.0" width="76.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="112.2" y="1902.0">scala/co..</text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$8972/2028805969.apply (120 samples, 6.51%)</title><rect x="109.2" y="1875.0" width="76.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.2" y="1886.0">treadle/..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$sizableTest$4$adapted (120 samples, 6.51%)</title><rect x="109.2" y="1859.0" width="76.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="112.2" y="1870.0">treadle/..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$sizableTest$4 (120 samples, 6.51%)</title><rect x="109.2" y="1843.0" width="76.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.2" y="1854.0">treadle/..</text>
</g>
<g>
<title>treadle/TreadleTester.peek (38 samples, 2.06%)</title><rect x="109.2" y="1827.0" width="24.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.2" y="1838.0">t..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (37 samples, 2.01%)</title><rect x="109.2" y="1811.0" width="23.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.2" y="1822.0">t..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (37 samples, 2.01%)</title><rect x="109.2" y="1795.0" width="23.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.2" y="1806.0">t..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (36 samples, 1.95%)</title><rect x="109.9" y="1779.0" width="23.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.9" y="1790.0">t..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (36 samples, 1.95%)</title><rect x="109.9" y="1763.0" width="23.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.9" y="1774.0">t..</text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="111.2" y="1747.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="114.2" y="1758.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$9019/137122465.apply$mcV$sp (20 samples, 1.09%)</title><rect x="111.8" y="1747.0" width="12.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.8" y="1758.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (20 samples, 1.09%)</title><rect x="111.8" y="1731.0" width="12.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.8" y="1742.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (20 samples, 1.09%)</title><rect x="111.8" y="1715.0" width="12.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="114.8" y="1726.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.symbol (1 samples, 0.05%)</title><rect x="111.8" y="1699.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.8" y="1710.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.treadle$executable$DataStore$AssignBig$$$outer (1 samples, 0.05%)</title><rect x="112.4" y="1699.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.4" y="1710.0"></text>
</g>
<g>
<title>treadle/executable/TailBigs.apply (1 samples, 0.05%)</title><rect x="112.4" y="1683.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.4" y="1694.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (17 samples, 0.92%)</title><rect x="113.1" y="1699.0" width="10.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.1" y="1710.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (17 samples, 0.92%)</title><rect x="113.1" y="1683.0" width="10.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.1" y="1694.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (17 samples, 0.92%)</title><rect x="113.1" y="1667.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.1" y="1678.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (17 samples, 0.92%)</title><rect x="113.1" y="1651.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.1" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8974/263614067.apply (17 samples, 0.92%)</title><rect x="113.1" y="1635.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.1" y="1646.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (17 samples, 0.92%)</title><rect x="113.1" y="1619.0" width="10.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.1" y="1630.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (17 samples, 0.92%)</title><rect x="113.1" y="1603.0" width="10.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.1" y="1614.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (17 samples, 0.92%)</title><rect x="113.1" y="1587.0" width="10.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="116.1" y="1598.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="118.2" y="1571.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.2" y="1582.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="118.2" y="1555.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.2" y="1566.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.05%)</title><rect x="118.2" y="1539.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.2" y="1550.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="118.2" y="1523.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.2" y="1534.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (5 samples, 0.27%)</title><rect x="118.8" y="1571.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.8" y="1582.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (3 samples, 0.16%)</title><rect x="118.8" y="1555.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="121.8" y="1566.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (3 samples, 0.16%)</title><rect x="118.8" y="1539.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.8" y="1550.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (3 samples, 0.16%)</title><rect x="118.8" y="1523.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.8" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (2 samples, 0.11%)</title><rect x="119.5" y="1507.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="122.5" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (2 samples, 0.11%)</title><rect x="119.5" y="1491.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.5" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="119.5" y="1475.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.5" y="1486.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="119.5" y="1459.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="122.5" y="1470.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="119.5" y="1443.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.5" y="1454.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="119.5" y="1427.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.5" y="1438.0"></text>
</g>
<g>
<title>scala/collection/Parallelizable.$init$ (1 samples, 0.05%)</title><rect x="119.5" y="1411.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="122.5" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.$init$ (1 samples, 0.05%)</title><rect x="120.1" y="1475.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.1" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialThreshold (1 samples, 0.05%)</title><rect x="120.1" y="1459.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="123.1" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialCapacity (1 samples, 0.05%)</title><rect x="120.1" y="1443.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.1" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.initialSize (1 samples, 0.05%)</title><rect x="120.1" y="1427.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.1" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialSize$ (1 samples, 0.05%)</title><rect x="120.1" y="1411.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.1" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (2 samples, 0.11%)</title><rect x="120.8" y="1555.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="123.8" y="1566.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (2 samples, 0.11%)</title><rect x="120.8" y="1539.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.8" y="1550.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (2 samples, 0.11%)</title><rect x="120.8" y="1523.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.8" y="1534.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.loop$1 (1 samples, 0.05%)</title><rect x="120.8" y="1507.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.8" y="1518.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="120.8" y="1491.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="123.8" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.foreach (1 samples, 0.05%)</title><rect x="121.4" y="1507.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="124.4" y="1518.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach$ (1 samples, 0.05%)</title><rect x="121.4" y="1491.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.4" y="1502.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach (1 samples, 0.05%)</title><rect x="121.4" y="1475.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.4" y="1486.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable$$Lambda$3544/1563367365.apply (1 samples, 0.05%)</title><rect x="121.4" y="1459.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.4" y="1470.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$anonfun$$plus$plus$eq$1 (1 samples, 0.05%)</title><rect x="121.4" y="1443.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.4" y="1454.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.$plus$eq (1 samples, 0.05%)</title><rect x="121.4" y="1427.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.4" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (2 samples, 0.11%)</title><rect x="122.0" y="1571.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.0" y="1582.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (2 samples, 0.11%)</title><rect x="122.0" y="1555.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.0" y="1566.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (2 samples, 0.11%)</title><rect x="122.0" y="1539.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="125.0" y="1550.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (2 samples, 0.11%)</title><rect x="122.0" y="1523.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.0" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="122.7" y="1507.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="125.7" y="1518.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (1 samples, 0.05%)</title><rect x="123.3" y="1571.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.3" y="1582.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (1 samples, 0.05%)</title><rect x="123.3" y="1555.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.3" y="1566.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="123.3" y="1539.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="126.3" y="1550.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="123.3" y="1523.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.3" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="123.3" y="1507.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="126.3" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="123.3" y="1491.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="126.3" y="1502.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="123.3" y="1475.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="126.3" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$9008/628812512.apply (1 samples, 0.05%)</title><rect x="124.0" y="1699.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.0" y="1710.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$15 (1 samples, 0.05%)</title><rect x="124.0" y="1683.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.0" y="1694.0"></text>
</g>
<g>
<title>treadle/executable/SubBigs.apply (1 samples, 0.05%)</title><rect x="124.0" y="1667.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.0" y="1678.0"></text>
</g>
<g>
<title>scala/math/BigInt.$minus (1 samples, 0.05%)</title><rect x="124.0" y="1651.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.0" y="1662.0"></text>
</g>
<g>
<title>java/math/BigInteger.subtract (1 samples, 0.05%)</title><rect x="124.0" y="1635.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.0" y="1646.0"></text>
</g>
<g>
<title>java/math/BigInteger.subtract (1 samples, 0.05%)</title><rect x="124.0" y="1619.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.0" y="1630.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$8966/992540979.apply$mcV$sp (13 samples, 0.71%)</title><rect x="124.6" y="1747.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.6" y="1758.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (13 samples, 0.71%)</title><rect x="124.6" y="1731.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="127.6" y="1742.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (13 samples, 0.71%)</title><rect x="124.6" y="1715.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.6" y="1726.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.treadle$executable$DataStore$AssignInt$$$outer (1 samples, 0.05%)</title><rect x="124.6" y="1699.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.6" y="1710.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="124.6" y="1683.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="127.6" y="1694.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (12 samples, 0.65%)</title><rect x="125.2" y="1699.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.2" y="1710.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (12 samples, 0.65%)</title><rect x="125.2" y="1683.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.2" y="1694.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (12 samples, 0.65%)</title><rect x="125.2" y="1667.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.2" y="1678.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (12 samples, 0.65%)</title><rect x="125.2" y="1651.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.2" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8974/263614067.apply (12 samples, 0.65%)</title><rect x="125.2" y="1635.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.2" y="1646.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (12 samples, 0.65%)</title><rect x="125.2" y="1619.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.2" y="1630.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (12 samples, 0.65%)</title><rect x="125.2" y="1603.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.2" y="1614.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (12 samples, 0.65%)</title><rect x="125.2" y="1587.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.2" y="1598.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="126.5" y="1571.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.5" y="1582.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="126.5" y="1555.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.5" y="1566.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.05%)</title><rect x="126.5" y="1539.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.5" y="1550.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="126.5" y="1523.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.5" y="1534.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (2 samples, 0.11%)</title><rect x="127.2" y="1571.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.2" y="1582.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (2 samples, 0.11%)</title><rect x="127.2" y="1555.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.2" y="1566.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (2 samples, 0.11%)</title><rect x="127.2" y="1539.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="130.2" y="1550.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (2 samples, 0.11%)</title><rect x="127.2" y="1523.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.2" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="127.8" y="1507.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="130.8" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="127.8" y="1491.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.8" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="127.8" y="1475.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.8" y="1486.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="127.8" y="1459.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.8" y="1470.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="127.8" y="1443.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.8" y="1454.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="127.8" y="1427.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.8" y="1438.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$init$ (1 samples, 0.05%)</title><rect x="127.8" y="1411.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.8" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (3 samples, 0.16%)</title><rect x="128.4" y="1571.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.4" y="1582.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (3 samples, 0.16%)</title><rect x="128.4" y="1555.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.4" y="1566.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (3 samples, 0.16%)</title><rect x="128.4" y="1539.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.4" y="1550.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (3 samples, 0.16%)</title><rect x="128.4" y="1523.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.4" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (3 samples, 0.16%)</title><rect x="128.4" y="1507.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.4" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (2 samples, 0.11%)</title><rect x="129.1" y="1491.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.1" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (2 samples, 0.11%)</title><rect x="129.1" y="1475.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.1" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (2 samples, 0.11%)</title><rect x="129.1" y="1459.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.1" y="1470.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.11%)</title><rect x="129.1" y="1443.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.1" y="1454.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.11%)</title><rect x="129.1" y="1427.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.1" y="1438.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.11%)</title><rect x="129.1" y="1411.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.1" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (1 samples, 0.05%)</title><rect x="129.7" y="1395.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.7" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (4 samples, 0.22%)</title><rect x="130.4" y="1571.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.4" y="1582.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (4 samples, 0.22%)</title><rect x="130.4" y="1555.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.4" y="1566.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="130.4" y="1539.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="133.4" y="1550.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$8975/1695633323.apply (3 samples, 0.16%)</title><rect x="131.0" y="1539.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.0" y="1550.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (3 samples, 0.16%)</title><rect x="131.0" y="1523.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.0" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (2 samples, 0.11%)</title><rect x="131.0" y="1507.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.0" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (2 samples, 0.11%)</title><rect x="131.0" y="1491.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.0" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (2 samples, 0.11%)</title><rect x="131.0" y="1475.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.0" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (2 samples, 0.11%)</title><rect x="131.0" y="1459.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.0" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.05%)</title><rect x="131.0" y="1443.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.0" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.05%)</title><rect x="131.0" y="1427.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.0" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.05%)</title><rect x="131.6" y="1443.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.6" y="1454.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToInteger (1 samples, 0.05%)</title><rect x="132.3" y="1507.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.3" y="1518.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.05%)</title><rect x="132.3" y="1491.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="135.3" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.getValue (1 samples, 0.05%)</title><rect x="132.9" y="1811.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.9" y="1822.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.normalize (1 samples, 0.05%)</title><rect x="132.9" y="1795.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="135.9" y="1806.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.makeUInt (1 samples, 0.05%)</title><rect x="132.9" y="1779.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.9" y="1790.0"></text>
</g>
<g>
<title>scala/math/BigInt.$amp (1 samples, 0.05%)</title><rect x="132.9" y="1763.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.9" y="1774.0"></text>
</g>
<g>
<title>java/math/BigInteger.and (1 samples, 0.05%)</title><rect x="132.9" y="1747.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.9" y="1758.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.05%)</title><rect x="132.9" y="1731.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.9" y="1742.0"></text>
</g>
<g>
<title>treadle/TreadleTester.poke (2 samples, 0.11%)</title><rect x="133.6" y="1827.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.6" y="1838.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.isRegister (2 samples, 0.11%)</title><rect x="133.6" y="1811.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.6" y="1822.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (2 samples, 0.11%)</title><rect x="133.6" y="1795.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.6" y="1806.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (2 samples, 0.11%)</title><rect x="133.6" y="1779.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.6" y="1790.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (2 samples, 0.11%)</title><rect x="133.6" y="1763.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.6" y="1774.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (2 samples, 0.11%)</title><rect x="133.6" y="1747.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.6" y="1758.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (2 samples, 0.11%)</title><rect x="133.6" y="1731.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.6" y="1742.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.index (1 samples, 0.05%)</title><rect x="133.6" y="1715.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.6" y="1726.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index$ (1 samples, 0.05%)</title><rect x="133.6" y="1699.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.6" y="1710.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index (1 samples, 0.05%)</title><rect x="133.6" y="1683.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.6" y="1694.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="134.2" y="1715.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="137.2" y="1726.0"></text>
</g>
<g>
<title>treadle/TreadleTester.step (80 samples, 4.34%)</title><rect x="134.9" y="1827.0" width="51.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.9" y="1838.0">tread..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.updateCycleMap (1 samples, 0.05%)</title><rect x="134.9" y="1811.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.9" y="1822.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (1 samples, 0.05%)</title><rect x="134.9" y="1795.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="137.9" y="1806.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (1 samples, 0.05%)</title><rect x="134.9" y="1779.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.9" y="1790.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.05%)</title><rect x="134.9" y="1763.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.9" y="1774.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.05%)</title><rect x="134.9" y="1747.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="137.9" y="1758.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="134.9" y="1731.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.9" y="1742.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="134.9" y="1715.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.9" y="1726.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.initWithContents (1 samples, 0.05%)</title><rect x="134.9" y="1699.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.9" y="1710.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initWithContents$ (1 samples, 0.05%)</title><rect x="134.9" y="1683.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.9" y="1694.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initWithContents (1 samples, 0.05%)</title><rect x="134.9" y="1667.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="137.9" y="1678.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.alwaysInitSizeMap$ (1 samples, 0.05%)</title><rect x="134.9" y="1651.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.9" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.run (79 samples, 4.29%)</title><rect x="135.5" y="1811.0" width="50.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.5" y="1822.0">tread..</text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach$mVc$sp (79 samples, 4.29%)</title><rect x="135.5" y="1795.0" width="50.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.5" y="1806.0">scala..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper$$Lambda$8973/1412921243.apply$mcVI$sp (79 samples, 4.29%)</title><rect x="135.5" y="1779.0" width="50.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.5" y="1790.0">tread..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.$anonfun$run$2 (79 samples, 4.29%)</title><rect x="135.5" y="1763.0" width="50.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.5" y="1774.0">tread..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (6 samples, 0.33%)</title><rect x="135.5" y="1747.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.5" y="1758.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (6 samples, 0.33%)</title><rect x="135.5" y="1731.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.5" y="1742.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (6 samples, 0.33%)</title><rect x="135.5" y="1715.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.5" y="1726.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (6 samples, 0.33%)</title><rect x="135.5" y="1699.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.5" y="1710.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$9019/137122465.apply$mcV$sp (5 samples, 0.27%)</title><rect x="135.5" y="1683.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.5" y="1694.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (5 samples, 0.27%)</title><rect x="135.5" y="1667.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.5" y="1678.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (5 samples, 0.27%)</title><rect x="135.5" y="1651.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.5" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (5 samples, 0.27%)</title><rect x="135.5" y="1635.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.5" y="1646.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (5 samples, 0.27%)</title><rect x="135.5" y="1619.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.5" y="1630.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (5 samples, 0.27%)</title><rect x="135.5" y="1603.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.5" y="1614.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (5 samples, 0.27%)</title><rect x="135.5" y="1587.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.5" y="1598.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8974/263614067.apply (5 samples, 0.27%)</title><rect x="135.5" y="1571.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.5" y="1582.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (5 samples, 0.27%)</title><rect x="135.5" y="1555.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.5" y="1566.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (5 samples, 0.27%)</title><rect x="135.5" y="1539.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.5" y="1550.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (5 samples, 0.27%)</title><rect x="135.5" y="1523.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.5" y="1534.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateRight (1 samples, 0.05%)</title><rect x="136.1" y="1507.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="139.1" y="1518.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (1 samples, 0.05%)</title><rect x="136.8" y="1507.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.8" y="1518.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (1 samples, 0.05%)</title><rect x="136.8" y="1491.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="139.8" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.05%)</title><rect x="136.8" y="1475.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.8" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.05%)</title><rect x="136.8" y="1459.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.8" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="136.8" y="1443.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.8" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="136.8" y="1427.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.8" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.$init$ (1 samples, 0.05%)</title><rect x="136.8" y="1411.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.8" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialThreshold (1 samples, 0.05%)</title><rect x="136.8" y="1395.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.8" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialCapacity (1 samples, 0.05%)</title><rect x="136.8" y="1379.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.8" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.initialSize (1 samples, 0.05%)</title><rect x="136.8" y="1363.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="139.8" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialSize$ (1 samples, 0.05%)</title><rect x="136.8" y="1347.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.8" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (1 samples, 0.05%)</title><rect x="137.4" y="1507.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.4" y="1518.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.05%)</title><rect x="137.4" y="1491.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.4" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$8975/1695633323.apply (1 samples, 0.05%)</title><rect x="137.4" y="1475.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.4" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (1 samples, 0.05%)</title><rect x="137.4" y="1459.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="140.4" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.05%)</title><rect x="137.4" y="1443.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="140.4" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.05%)</title><rect x="137.4" y="1427.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="140.4" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.05%)</title><rect x="137.4" y="1411.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.4" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="137.4" y="1395.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.4" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.05%)</title><rect x="137.4" y="1379.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.4" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (1 samples, 0.05%)</title><rect x="138.1" y="1507.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.1" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (1 samples, 0.05%)</title><rect x="138.1" y="1491.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="141.1" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="138.1" y="1475.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.1" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="138.1" y="1459.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.1" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="138.1" y="1443.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="141.1" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="138.1" y="1427.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.1" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="138.1" y="1411.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.1" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="138.1" y="1395.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="141.1" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="138.1" y="1379.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.1" y="1390.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="138.1" y="1363.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="141.1" y="1374.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="138.1" y="1347.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="141.1" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$8966/992540979.apply$mcV$sp (1 samples, 0.05%)</title><rect x="138.7" y="1683.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="141.7" y="1694.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (1 samples, 0.05%)</title><rect x="138.7" y="1667.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="141.7" y="1678.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (1 samples, 0.05%)</title><rect x="138.7" y="1651.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="141.7" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (1 samples, 0.05%)</title><rect x="138.7" y="1635.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.7" y="1646.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="138.7" y="1619.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.7" y="1630.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="138.7" y="1603.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="141.7" y="1614.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="138.7" y="1587.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.7" y="1598.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8974/263614067.apply (1 samples, 0.05%)</title><rect x="138.7" y="1571.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.7" y="1582.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (1 samples, 0.05%)</title><rect x="138.7" y="1555.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="141.7" y="1566.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (1 samples, 0.05%)</title><rect x="138.7" y="1539.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="141.7" y="1550.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (1 samples, 0.05%)</title><rect x="138.7" y="1523.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="141.7" y="1534.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (1 samples, 0.05%)</title><rect x="138.7" y="1507.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="141.7" y="1518.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.05%)</title><rect x="138.7" y="1491.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="141.7" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$8975/1695633323.apply (1 samples, 0.05%)</title><rect x="138.7" y="1475.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.7" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (1 samples, 0.05%)</title><rect x="138.7" y="1459.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.7" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.05%)</title><rect x="138.7" y="1443.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="141.7" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.05%)</title><rect x="138.7" y="1427.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.7" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.05%)</title><rect x="138.7" y="1411.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="141.7" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="138.7" y="1395.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.7" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.05%)</title><rect x="138.7" y="1379.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="141.7" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.05%)</title><rect x="138.7" y="1363.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="141.7" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.05%)</title><rect x="138.7" y="1347.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.7" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.raiseClock$1 (73 samples, 3.96%)</title><rect x="139.3" y="1747.0" width="46.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.3" y="1758.0">trea..</text>
</g>
<g>
<title>treadle/chronometry/UTC.incrementTime (8 samples, 0.43%)</title><rect x="139.3" y="1731.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.3" y="1742.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.runUntil (8 samples, 0.43%)</title><rect x="139.3" y="1715.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.3" y="1726.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.setTime (8 samples, 0.43%)</title><rect x="139.3" y="1699.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.3" y="1710.0"></text>
</g>
<g>
<title>treadle/TreadleTester$$Lambda$8952/1101334900.apply$mcV$sp (8 samples, 0.43%)</title><rect x="139.3" y="1683.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.3" y="1694.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$2 (8 samples, 0.43%)</title><rect x="139.3" y="1667.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.3" y="1678.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="141.9" y="1651.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="144.9" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.run (1 samples, 0.05%)</title><rect x="142.5" y="1651.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.5" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.run (1 samples, 0.05%)</title><rect x="143.2" y="1651.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="146.2" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$8940/1630179144.apply$mcV$sp (1 samples, 0.05%)</title><rect x="143.8" y="1651.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.8" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (63 samples, 3.42%)</title><rect x="144.5" y="1731.0" width="40.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.5" y="1742.0">tre..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (63 samples, 3.42%)</title><rect x="144.5" y="1715.0" width="40.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.5" y="1726.0">tre..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (63 samples, 3.42%)</title><rect x="144.5" y="1699.0" width="40.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.5" y="1710.0">tre..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (63 samples, 3.42%)</title><rect x="144.5" y="1683.0" width="40.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.5" y="1694.0">tre..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.apply (1 samples, 0.05%)</title><rect x="144.5" y="1667.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.5" y="1678.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.length (1 samples, 0.05%)</title><rect x="145.1" y="1667.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.1" y="1678.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.length$ (1 samples, 0.05%)</title><rect x="145.1" y="1651.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.1" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner$$Lambda$8967/1308654645.apply$mcV$sp (11 samples, 0.60%)</title><rect x="145.7" y="1667.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="148.7" y="1678.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.$anonfun$setLeanMode$2 (11 samples, 0.60%)</title><rect x="145.7" y="1651.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.7" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.runFull (11 samples, 0.60%)</title><rect x="145.7" y="1635.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.7" y="1646.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$9019/137122465.apply$mcV$sp (11 samples, 0.60%)</title><rect x="145.7" y="1619.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.7" y="1630.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (11 samples, 0.60%)</title><rect x="145.7" y="1603.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="148.7" y="1614.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (11 samples, 0.60%)</title><rect x="145.7" y="1587.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.7" y="1598.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (11 samples, 0.60%)</title><rect x="145.7" y="1571.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.7" y="1582.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (11 samples, 0.60%)</title><rect x="145.7" y="1555.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.7" y="1566.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (11 samples, 0.60%)</title><rect x="145.7" y="1539.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.7" y="1550.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (11 samples, 0.60%)</title><rect x="145.7" y="1523.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.7" y="1534.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8974/263614067.apply (11 samples, 0.60%)</title><rect x="145.7" y="1507.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.7" y="1518.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (11 samples, 0.60%)</title><rect x="145.7" y="1491.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.7" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (11 samples, 0.60%)</title><rect x="145.7" y="1475.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="148.7" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (11 samples, 0.60%)</title><rect x="145.7" y="1459.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="148.7" y="1470.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="147.0" y="1443.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="150.0" y="1454.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="147.7" y="1443.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="150.7" y="1454.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (2 samples, 0.11%)</title><rect x="148.3" y="1443.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.3" y="1454.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (1 samples, 0.05%)</title><rect x="148.3" y="1427.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.3" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.05%)</title><rect x="148.3" y="1411.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.3" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.05%)</title><rect x="148.3" y="1395.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.3" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="148.3" y="1379.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.3" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="148.3" y="1363.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.3" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="148.3" y="1347.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.3" y="1358.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="148.3" y="1331.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="151.3" y="1342.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="148.3" y="1315.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.3" y="1326.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="148.3" y="1299.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.3" y="1310.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.$init$ (1 samples, 0.05%)</title><rect x="148.3" y="1283.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.3" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (1 samples, 0.05%)</title><rect x="148.9" y="1427.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.9" y="1438.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (1 samples, 0.05%)</title><rect x="148.9" y="1411.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="151.9" y="1422.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (1 samples, 0.05%)</title><rect x="148.9" y="1395.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.9" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.foreach (1 samples, 0.05%)</title><rect x="148.9" y="1379.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="151.9" y="1390.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach$ (1 samples, 0.05%)</title><rect x="148.9" y="1363.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="151.9" y="1374.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach (1 samples, 0.05%)</title><rect x="148.9" y="1347.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.9" y="1358.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable$$Lambda$3544/1563367365.apply (1 samples, 0.05%)</title><rect x="148.9" y="1331.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.9" y="1342.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$anonfun$$plus$plus$eq$1 (1 samples, 0.05%)</title><rect x="148.9" y="1315.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.9" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (1 samples, 0.05%)</title><rect x="148.9" y="1299.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.9" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (1 samples, 0.05%)</title><rect x="148.9" y="1283.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="151.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.05%)</title><rect x="148.9" y="1267.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.9" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.05%)</title><rect x="148.9" y="1251.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="148.9" y="1235.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.05%)</title><rect x="148.9" y="1219.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.05%)</title><rect x="148.9" y="1203.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.05%)</title><rect x="148.9" y="1187.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.improve (1 samples, 0.05%)</title><rect x="148.9" y="1171.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve$ (1 samples, 0.05%)</title><rect x="148.9" y="1155.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve (1 samples, 0.05%)</title><rect x="148.9" y="1139.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.next (1 samples, 0.05%)</title><rect x="149.6" y="1443.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.6" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.05%)</title><rect x="150.2" y="1443.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.2" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.05%)</title><rect x="150.2" y="1427.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.2" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.05%)</title><rect x="150.2" y="1411.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.2" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="150.2" y="1395.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="153.2" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.05%)</title><rect x="150.2" y="1379.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.2" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (1 samples, 0.05%)</title><rect x="150.2" y="1363.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.2" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (3 samples, 0.16%)</title><rect x="150.9" y="1443.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.9" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (3 samples, 0.16%)</title><rect x="150.9" y="1427.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.9" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (3 samples, 0.16%)</title><rect x="150.9" y="1411.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.9" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (3 samples, 0.16%)</title><rect x="150.9" y="1395.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.9" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (3 samples, 0.16%)</title><rect x="150.9" y="1379.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.9" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (3 samples, 0.16%)</title><rect x="150.9" y="1363.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.9" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (2 samples, 0.11%)</title><rect x="151.5" y="1347.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.5" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (2 samples, 0.11%)</title><rect x="151.5" y="1331.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.5" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (2 samples, 0.11%)</title><rect x="151.5" y="1315.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.5" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.11%)</title><rect x="151.5" y="1299.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.5" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.11%)</title><rect x="151.5" y="1283.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="152.1" y="1267.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.1" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$9019/137122465.apply$mcV$sp (34 samples, 1.84%)</title><rect x="152.8" y="1667.0" width="21.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.8" y="1678.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (34 samples, 1.84%)</title><rect x="152.8" y="1651.0" width="21.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.8" y="1662.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (34 samples, 1.84%)</title><rect x="152.8" y="1635.0" width="21.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.8" y="1646.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.treadle$executable$DataStore$AssignBig$$$outer (1 samples, 0.05%)</title><rect x="152.8" y="1619.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.8" y="1630.0"></text>
</g>
<g>
<title>treadle/executable/SubBigs.apply (1 samples, 0.05%)</title><rect x="152.8" y="1603.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.8" y="1614.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (33 samples, 1.79%)</title><rect x="153.4" y="1619.0" width="21.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.4" y="1630.0">t..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (33 samples, 1.79%)</title><rect x="153.4" y="1603.0" width="21.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.4" y="1614.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (33 samples, 1.79%)</title><rect x="153.4" y="1587.0" width="21.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.4" y="1598.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (33 samples, 1.79%)</title><rect x="153.4" y="1571.0" width="21.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.4" y="1582.0">s..</text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (1 samples, 0.05%)</title><rect x="153.4" y="1555.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.4" y="1566.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.size$ (1 samples, 0.05%)</title><rect x="153.4" y="1539.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.4" y="1550.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.size (1 samples, 0.05%)</title><rect x="153.4" y="1523.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.4" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.length (1 samples, 0.05%)</title><rect x="153.4" y="1507.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="156.4" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.length$ (1 samples, 0.05%)</title><rect x="153.4" y="1491.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.4" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8974/263614067.apply (32 samples, 1.74%)</title><rect x="154.1" y="1555.0" width="20.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="157.1" y="1566.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (32 samples, 1.74%)</title><rect x="154.1" y="1539.0" width="20.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.1" y="1550.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (32 samples, 1.74%)</title><rect x="154.1" y="1523.0" width="20.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.1" y="1534.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (32 samples, 1.74%)</title><rect x="154.1" y="1507.0" width="20.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.1" y="1518.0"></text>
</g>
<g>
<title>scala/Predef$.assert (1 samples, 0.05%)</title><rect x="161.1" y="1491.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.1" y="1502.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (5 samples, 0.27%)</title><rect x="161.7" y="1491.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="164.7" y="1502.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (3 samples, 0.16%)</title><rect x="163.0" y="1475.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.0" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (3 samples, 0.16%)</title><rect x="163.0" y="1459.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.0" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (3 samples, 0.16%)</title><rect x="163.0" y="1443.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.0" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (3 samples, 0.16%)</title><rect x="163.0" y="1427.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.0" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (3 samples, 0.16%)</title><rect x="163.0" y="1411.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.0" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.&lt;init&gt; (2 samples, 0.11%)</title><rect x="163.0" y="1395.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="166.0" y="1406.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (2 samples, 0.11%)</title><rect x="163.0" y="1379.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.0" y="1390.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (2 samples, 0.11%)</title><rect x="163.0" y="1363.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.0" y="1374.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (2 samples, 0.11%)</title><rect x="163.0" y="1347.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.0" y="1358.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="163.7" y="1331.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.7" y="1342.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.05%)</title><rect x="163.7" y="1315.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="166.7" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.$init$ (1 samples, 0.05%)</title><rect x="164.3" y="1395.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.3" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (2 samples, 0.11%)</title><rect x="164.9" y="1491.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.9" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.11%)</title><rect x="164.9" y="1475.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.9" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.11%)</title><rect x="164.9" y="1459.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="167.9" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.11%)</title><rect x="164.9" y="1443.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.9" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (2 samples, 0.11%)</title><rect x="164.9" y="1427.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.9" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (2 samples, 0.11%)</title><rect x="164.9" y="1411.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.9" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (2 samples, 0.11%)</title><rect x="164.9" y="1395.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.9" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.11%)</title><rect x="164.9" y="1379.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="167.9" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (11 samples, 0.60%)</title><rect x="166.2" y="1491.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.2" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (11 samples, 0.60%)</title><rect x="166.2" y="1475.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="169.2" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (11 samples, 0.60%)</title><rect x="166.2" y="1459.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="169.2" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (11 samples, 0.60%)</title><rect x="166.2" y="1443.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.2" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (3 samples, 0.16%)</title><rect x="168.1" y="1427.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.1" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (3 samples, 0.16%)</title><rect x="168.1" y="1411.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.1" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (3 samples, 0.16%)</title><rect x="168.1" y="1395.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.1" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.11%)</title><rect x="168.8" y="1379.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="171.8" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.05%)</title><rect x="168.8" y="1363.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="171.8" y="1374.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="169.4" y="1363.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.4" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.05%)</title><rect x="170.1" y="1427.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="173.1" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.05%)</title><rect x="170.1" y="1411.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="173.1" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.05%)</title><rect x="170.1" y="1395.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="173.1" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (2 samples, 0.11%)</title><rect x="170.7" y="1427.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="173.7" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (1 samples, 0.05%)</title><rect x="171.3" y="1411.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.3" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.11%)</title><rect x="172.0" y="1427.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="175.0" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="172.6" y="1411.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="175.6" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="172.6" y="1395.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.6" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="172.6" y="1379.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="175.6" y="1390.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="172.6" y="1363.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.6" y="1374.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="172.6" y="1347.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="175.6" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="172.6" y="1331.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.6" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (1 samples, 0.05%)</title><rect x="172.6" y="1315.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.6" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToInteger (1 samples, 0.05%)</title><rect x="173.3" y="1491.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.3" y="1502.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.05%)</title><rect x="173.3" y="1475.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.3" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (1 samples, 0.05%)</title><rect x="173.9" y="1491.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="176.9" y="1502.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.05%)</title><rect x="173.9" y="1475.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="176.9" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$8975/1695633323.apply (1 samples, 0.05%)</title><rect x="173.9" y="1459.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.9" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (1 samples, 0.05%)</title><rect x="173.9" y="1443.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.9" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.05%)</title><rect x="173.9" y="1427.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="176.9" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.05%)</title><rect x="173.9" y="1411.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.9" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.05%)</title><rect x="173.9" y="1395.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="176.9" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="173.9" y="1379.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="176.9" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.05%)</title><rect x="173.9" y="1363.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.9" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.05%)</title><rect x="173.9" y="1347.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="176.9" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.05%)</title><rect x="173.9" y="1331.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.9" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$8966/992540979.apply$mcV$sp (16 samples, 0.87%)</title><rect x="174.5" y="1667.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="177.5" y="1678.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (16 samples, 0.87%)</title><rect x="174.5" y="1651.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="177.5" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (16 samples, 0.87%)</title><rect x="174.5" y="1635.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.5" y="1646.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.treadle$executable$DataStore$AssignInt$$$outer (1 samples, 0.05%)</title><rect x="174.5" y="1619.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.5" y="1630.0"></text>
</g>
<g>
<title>treadle/executable/GtBigs.apply (1 samples, 0.05%)</title><rect x="174.5" y="1603.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.5" y="1614.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (14 samples, 0.76%)</title><rect x="175.2" y="1619.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="178.2" y="1630.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (13 samples, 0.71%)</title><rect x="175.8" y="1603.0" width="8.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="178.8" y="1614.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (13 samples, 0.71%)</title><rect x="175.8" y="1587.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.8" y="1598.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (13 samples, 0.71%)</title><rect x="175.8" y="1571.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.8" y="1582.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8974/263614067.apply (13 samples, 0.71%)</title><rect x="175.8" y="1555.0" width="8.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.8" y="1566.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (13 samples, 0.71%)</title><rect x="175.8" y="1539.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.8" y="1550.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (13 samples, 0.71%)</title><rect x="175.8" y="1523.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.8" y="1534.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (13 samples, 0.71%)</title><rect x="175.8" y="1507.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="178.8" y="1518.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.05%)</title><rect x="178.4" y="1491.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.4" y="1502.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (3 samples, 0.16%)</title><rect x="179.0" y="1491.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.0" y="1502.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (1 samples, 0.05%)</title><rect x="179.7" y="1475.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.7" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.05%)</title><rect x="179.7" y="1459.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.7" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.05%)</title><rect x="179.7" y="1443.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.7" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="179.7" y="1427.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="182.7" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="179.7" y="1411.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="182.7" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.$init$ (1 samples, 0.05%)</title><rect x="179.7" y="1395.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="182.7" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialThreshold (1 samples, 0.05%)</title><rect x="179.7" y="1379.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.7" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialCapacity (1 samples, 0.05%)</title><rect x="179.7" y="1363.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="182.7" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.initialSize (1 samples, 0.05%)</title><rect x="179.7" y="1347.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.7" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialSize$ (1 samples, 0.05%)</title><rect x="179.7" y="1331.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="182.7" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (1 samples, 0.05%)</title><rect x="180.3" y="1475.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.3" y="1486.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (1 samples, 0.05%)</title><rect x="180.3" y="1459.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="183.3" y="1470.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (1 samples, 0.05%)</title><rect x="180.3" y="1443.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="183.3" y="1454.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.loop$1 (1 samples, 0.05%)</title><rect x="180.3" y="1427.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.3" y="1438.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="180.3" y="1411.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="183.3" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (1 samples, 0.05%)</title><rect x="180.9" y="1491.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="183.9" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (2 samples, 0.11%)</title><rect x="181.6" y="1491.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="184.6" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (2 samples, 0.11%)</title><rect x="181.6" y="1475.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="184.6" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (2 samples, 0.11%)</title><rect x="181.6" y="1459.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="184.6" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (2 samples, 0.11%)</title><rect x="181.6" y="1443.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="184.6" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="181.6" y="1427.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.6" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="181.6" y="1411.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="184.6" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="181.6" y="1395.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="184.6" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="181.6" y="1379.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="184.6" y="1390.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="181.6" y="1363.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="184.6" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="181.6" y="1347.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.6" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.05%)</title><rect x="182.2" y="1427.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.2" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (1 samples, 0.05%)</title><rect x="182.9" y="1491.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="185.9" y="1502.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.05%)</title><rect x="182.9" y="1475.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.9" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$8975/1695633323.apply (1 samples, 0.05%)</title><rect x="182.9" y="1459.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="185.9" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (1 samples, 0.05%)</title><rect x="182.9" y="1443.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="185.9" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.05%)</title><rect x="182.9" y="1427.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.9" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.05%)</title><rect x="182.9" y="1411.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.9" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.05%)</title><rect x="182.9" y="1395.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.9" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="182.9" y="1379.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.9" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.05%)</title><rect x="182.9" y="1363.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="185.9" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.05%)</title><rect x="182.9" y="1347.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.9" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashEntry.$init$ (1 samples, 0.05%)</title><rect x="182.9" y="1331.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="185.9" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (1 samples, 0.05%)</title><rect x="183.5" y="1491.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.5" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (1 samples, 0.05%)</title><rect x="183.5" y="1475.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.5" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="183.5" y="1459.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.5" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="183.5" y="1443.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.5" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="183.5" y="1427.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="186.5" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="183.5" y="1411.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.5" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$8920/1896132859.apply$mcI$sp (1 samples, 0.05%)</title><rect x="184.2" y="1619.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.2" y="1630.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$1 (1 samples, 0.05%)</title><rect x="184.2" y="1603.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.2" y="1614.0"></text>
</g>
<g>
<title>treadle/executable/EqInts.apply (1 samples, 0.05%)</title><rect x="184.2" y="1587.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.2" y="1598.0"></text>
</g>
<g>
<title>treadle/executable/EqInts.f2 (1 samples, 0.05%)</title><rect x="184.2" y="1571.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="187.2" y="1582.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setIntValue (2 samples, 0.11%)</title><rect x="184.8" y="1731.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.8" y="1742.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.valueFrom (2 samples, 0.11%)</title><rect x="184.8" y="1715.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="187.8" y="1726.0"></text>
</g>
<g>
<title>scala/math/BigInt.$amp (2 samples, 0.11%)</title><rect x="184.8" y="1699.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="187.8" y="1710.0"></text>
</g>
<g>
<title>java/math/BigInteger.and (2 samples, 0.11%)</title><rect x="184.8" y="1683.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.8" y="1694.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (2 samples, 0.11%)</title><rect x="184.8" y="1667.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.8" y="1678.0"></text>
</g>
<g>
<title>treadle/TreadleTester$.apply (7 samples, 0.38%)</title><rect x="186.1" y="2019.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.1" y="2030.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$.transform (7 samples, 0.38%)</title><rect x="186.1" y="2003.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.1" y="2014.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (7 samples, 0.38%)</title><rect x="186.1" y="1987.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.1" y="1998.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (7 samples, 0.38%)</title><rect x="186.1" y="1971.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="189.1" y="1982.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (7 samples, 0.38%)</title><rect x="186.1" y="1955.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="189.1" y="1966.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$$$Lambda$8096/988424465.apply (7 samples, 0.38%)</title><rect x="186.1" y="1939.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="189.1" y="1950.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$.$anonfun$transform$2 (7 samples, 0.38%)</title><rect x="186.1" y="1923.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="189.1" y="1934.0"></text>
</g>
<g>
<title>treadle/stage/phases/CreateTester$.transform (2 samples, 0.11%)</title><rect x="186.1" y="1907.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="189.1" y="1918.0"></text>
</g>
<g>
<title>treadle/stage/phases/CreateTester$.transform (2 samples, 0.11%)</title><rect x="186.1" y="1891.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="189.1" y="1902.0"></text>
</g>
<g>
<title>treadle/TreadleTester.&lt;init&gt; (2 samples, 0.11%)</title><rect x="186.1" y="1875.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="189.1" y="1886.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$.apply (2 samples, 0.11%)</title><rect x="186.1" y="1859.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="189.1" y="1870.0"></text>
</g>
<g>
<title>treadle/chronometry/Timer.apply (2 samples, 0.11%)</title><rect x="186.1" y="1843.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="189.1" y="1854.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (2 samples, 0.11%)</title><rect x="186.1" y="1827.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="189.1" y="1838.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$$$Lambda$8903/1112549492.apply$mcV$sp (2 samples, 0.11%)</title><rect x="186.1" y="1811.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.1" y="1822.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$.$anonfun$apply$8 (2 samples, 0.11%)</title><rect x="186.1" y="1795.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.1" y="1806.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.compile (2 samples, 0.11%)</title><rect x="186.1" y="1779.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="189.1" y="1790.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processModule (2 samples, 0.11%)</title><rect x="186.1" y="1763.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="189.1" y="1774.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processStatements (2 samples, 0.11%)</title><rect x="186.1" y="1747.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.1" y="1758.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processStatements (2 samples, 0.11%)</title><rect x="186.1" y="1731.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="189.1" y="1742.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.makeAssigner (1 samples, 0.05%)</title><rect x="186.1" y="1715.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="189.1" y="1726.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="186.1" y="1699.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="189.1" y="1710.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle, int, Bytecodes::Code, Thread*) (1 samples, 0.05%)</title><rect x="186.1" y="1683.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="189.1" y="1694.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokespecial(CallInfo&amp;, Handle, constantPoolHandle, int, Thread*) (1 samples, 0.05%)</title><rect x="186.1" y="1667.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="189.1" y="1678.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call(CallInfo&amp;, Handle, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, Thread*) (1 samples, 0.05%)</title><rect x="186.1" y="1651.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="189.1" y="1662.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_special_method(CallInfo&amp;, methodHandle, KlassHandle, KlassHandle, Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="186.1" y="1635.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="189.1" y="1646.0"></text>
</g>
<g>
<title>CallInfo::set_static(KlassHandle, methodHandle, Thread*) (1 samples, 0.05%)</title><rect x="186.1" y="1619.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="189.1" y="1630.0"></text>
</g>
<g>
<title>CallInfo::set_common(KlassHandle, KlassHandle, methodHandle, methodHandle, CallInfo::CallKind, int, Thread*) (1 samples, 0.05%)</title><rect x="186.1" y="1603.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="189.1" y="1614.0"></text>
</g>
<g>
<title>CompilationPolicy::must_be_compiled(methodHandle, int) (1 samples, 0.05%)</title><rect x="186.1" y="1587.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="189.1" y="1598.0"></text>
</g>
<g>
<title>CompilationPolicy::can_be_compiled(methodHandle, int) (1 samples, 0.05%)</title><rect x="186.1" y="1571.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="189.1" y="1582.0"></text>
</g>
<g>
<title>AbstractInterpreter::method_kind(methodHandle) (1 samples, 0.05%)</title><rect x="186.1" y="1555.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="189.1" y="1566.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processExpression$1 (1 samples, 0.05%)</title><rect x="186.7" y="1715.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.7" y="1726.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.binaryOps$1 (1 samples, 0.05%)</title><rect x="186.7" y="1699.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="189.7" y="1710.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.handleBigResult$1 (1 samples, 0.05%)</title><rect x="186.7" y="1683.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="189.7" y="1694.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="186.7" y="1667.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.7" y="1678.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="186.7" y="1651.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="189.7" y="1662.0"></text>
</g>
<g>
<title>sbt/internal/ManagedClassLoader.findClass (1 samples, 0.05%)</title><rect x="186.7" y="1635.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.7" y="1646.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="186.7" y="1619.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.7" y="1630.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="186.7" y="1603.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="189.7" y="1614.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="186.7" y="1587.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="189.7" y="1598.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="186.7" y="1571.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="189.7" y="1582.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.access$100 (1 samples, 0.05%)</title><rect x="186.7" y="1555.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.7" y="1566.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="186.7" y="1539.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.7" y="1550.0"></text>
</g>
<g>
<title>sun/misc/Resource.getBytes (1 samples, 0.05%)</title><rect x="186.7" y="1523.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.7" y="1534.0"></text>
</g>
<g>
<title>java/io/FileInputStream.read (1 samples, 0.05%)</title><rect x="186.7" y="1507.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.7" y="1518.0"></text>
</g>
<g>
<title>java/io/FileInputStream.readBytes (1 samples, 0.05%)</title><rect x="186.7" y="1491.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="189.7" y="1502.0"></text>
</g>
<g>
<title>readBytes (1 samples, 0.05%)</title><rect x="186.7" y="1475.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="189.7" y="1486.0"></text>
</g>
<g>
<title>read (1 samples, 0.05%)</title><rect x="186.7" y="1459.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="189.7" y="1470.0"></text>
</g>
<g>
<title>treadle/stage/phases/GetFirrtlAst$.transform (1 samples, 0.05%)</title><rect x="187.4" y="1907.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.4" y="1918.0"></text>
</g>
<g>
<title>treadle/stage/phases/GetFirrtlAst$.transform (1 samples, 0.05%)</title><rect x="187.4" y="1891.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="190.4" y="1902.0"></text>
</g>
<g>
<title>scala/Option.getOrElse (1 samples, 0.05%)</title><rect x="187.4" y="1875.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.4" y="1886.0"></text>
</g>
<g>
<title>treadle/stage/phases/GetFirrtlAst$$$Lambda$8098/312713289.apply (1 samples, 0.05%)</title><rect x="187.4" y="1859.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.4" y="1870.0"></text>
</g>
<g>
<title>treadle/stage/phases/GetFirrtlAst$.$anonfun$transform$2 (1 samples, 0.05%)</title><rect x="187.4" y="1843.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.4" y="1854.0"></text>
</g>
<g>
<title>treadle/stage/phases/GetFirrtlAst$.handleFirrtlSource$1 (1 samples, 0.05%)</title><rect x="187.4" y="1827.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="190.4" y="1838.0"></text>
</g>
<g>
<title>firrtl/Parser$.parse (1 samples, 0.05%)</title><rect x="187.4" y="1811.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.4" y="1822.0"></text>
</g>
<g>
<title>firrtl/Parser$.parseString (1 samples, 0.05%)</title><rect x="187.4" y="1795.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.4" y="1806.0"></text>
</g>
<g>
<title>firrtl/Parser$.parseCharStream (1 samples, 0.05%)</title><rect x="187.4" y="1779.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.4" y="1790.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (1 samples, 0.05%)</title><rect x="187.4" y="1763.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.4" y="1774.0"></text>
</g>
<g>
<title>firrtl/Parser$$$Lambda$8099/698812525.apply (1 samples, 0.05%)</title><rect x="187.4" y="1747.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="190.4" y="1758.0"></text>
</g>
<g>
<title>firrtl/Parser$.$anonfun$parseCharStream$1 (1 samples, 0.05%)</title><rect x="187.4" y="1731.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.4" y="1742.0"></text>
</g>
<g>
<title>firrtl/antlr/FIRRTLParser.circuit (1 samples, 0.05%)</title><rect x="187.4" y="1715.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.4" y="1726.0"></text>
</g>
<g>
<title>firrtl/antlr/FIRRTLParser.module (1 samples, 0.05%)</title><rect x="187.4" y="1699.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.4" y="1710.0"></text>
</g>
<g>
<title>firrtl/antlr/FIRRTLParser.port (1 samples, 0.05%)</title><rect x="187.4" y="1683.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.4" y="1694.0"></text>
</g>
<g>
<title>treadle/stage/phases/PrepareAst$.transform (4 samples, 0.22%)</title><rect x="188.0" y="1907.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.0" y="1918.0"></text>
</g>
<g>
<title>treadle/stage/phases/PrepareAst$.transform (4 samples, 0.22%)</title><rect x="188.0" y="1891.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.0" y="1902.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.transform$ (4 samples, 0.22%)</title><rect x="188.0" y="1875.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.0" y="1886.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.transform (4 samples, 0.22%)</title><rect x="188.0" y="1859.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.0" y="1870.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.flatMap (4 samples, 0.22%)</title><rect x="188.0" y="1843.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.0" y="1854.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap$ (4 samples, 0.22%)</title><rect x="188.0" y="1827.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.0" y="1838.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap (4 samples, 0.22%)</title><rect x="188.0" y="1811.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.0" y="1822.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (4 samples, 0.22%)</title><rect x="188.0" y="1795.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.0" y="1806.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$4260/1994229284.apply (4 samples, 0.22%)</title><rect x="188.0" y="1779.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.0" y="1790.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$flatMap$1 (4 samples, 0.22%)</title><rect x="188.0" y="1763.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.0" y="1774.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase$$Lambda$8115/2011030738.apply (4 samples, 0.22%)</title><rect x="188.0" y="1747.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.0" y="1758.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.$anonfun$transform$2 (4 samples, 0.22%)</title><rect x="188.0" y="1731.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.0" y="1742.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (4 samples, 0.22%)</title><rect x="188.0" y="1715.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.0" y="1726.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (4 samples, 0.22%)</title><rect x="188.0" y="1699.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="191.0" y="1710.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (4 samples, 0.22%)</title><rect x="188.0" y="1683.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.0" y="1694.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase$$Lambda$8116/2105556646.apply (4 samples, 0.22%)</title><rect x="188.0" y="1667.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.0" y="1678.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.$anonfun$transform$3 (4 samples, 0.22%)</title><rect x="188.0" y="1651.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.0" y="1662.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (4 samples, 0.22%)</title><rect x="188.0" y="1635.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="191.0" y="1646.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (4 samples, 0.22%)</title><rect x="188.0" y="1619.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.0" y="1630.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8118/2070014693.apply (4 samples, 0.22%)</title><rect x="188.0" y="1603.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="191.0" y="1614.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (4 samples, 0.22%)</title><rect x="188.0" y="1587.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="191.0" y="1598.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (1 samples, 0.05%)</title><rect x="188.0" y="1571.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.0" y="1582.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (1 samples, 0.05%)</title><rect x="188.0" y="1555.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.0" y="1566.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (1 samples, 0.05%)</title><rect x="188.0" y="1539.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.0" y="1550.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (1 samples, 0.05%)</title><rect x="188.0" y="1523.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.0" y="1534.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (1 samples, 0.05%)</title><rect x="188.0" y="1507.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.0" y="1518.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (1 samples, 0.05%)</title><rect x="188.0" y="1491.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.0" y="1502.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (1 samples, 0.05%)</title><rect x="188.0" y="1475.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.0" y="1486.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$8119/1092734470.apply (1 samples, 0.05%)</title><rect x="188.0" y="1459.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.0" y="1470.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (1 samples, 0.05%)</title><rect x="188.0" y="1443.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.0" y="1454.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (1 samples, 0.05%)</title><rect x="188.0" y="1427.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.0" y="1438.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (1 samples, 0.05%)</title><rect x="188.0" y="1411.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.0" y="1422.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8118/2070014693.apply (1 samples, 0.05%)</title><rect x="188.0" y="1395.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.0" y="1406.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (1 samples, 0.05%)</title><rect x="188.0" y="1379.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.0" y="1390.0"></text>
</g>
<g>
<title>firrtl/transforms/DeadCodeElimination.execute (1 samples, 0.05%)</title><rect x="188.0" y="1363.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.0" y="1374.0"></text>
</g>
<g>
<title>firrtl/transforms/DeadCodeElimination.run (1 samples, 0.05%)</title><rect x="188.0" y="1347.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.0" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="188.0" y="1331.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.0" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="188.0" y="1315.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.0" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="188.0" y="1299.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.0" y="1310.0"></text>
</g>
<g>
<title>firrtl/transforms/DeadCodeElimination$$Lambda$8835/957525801.apply (1 samples, 0.05%)</title><rect x="188.0" y="1283.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.0" y="1294.0"></text>
</g>
<g>
<title>firrtl/transforms/DeadCodeElimination.$anonfun$run$7 (1 samples, 0.05%)</title><rect x="188.0" y="1267.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.0" y="1278.0"></text>
</g>
<g>
<title>firrtl/transforms/DeadCodeElimination.deleteDeadCode (1 samples, 0.05%)</title><rect x="188.0" y="1251.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="191.0" y="1262.0"></text>
</g>
<g>
<title>firrtl/transforms/DeadCodeElimination.onStmt$2 (1 samples, 0.05%)</title><rect x="188.0" y="1235.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.0" y="1246.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMap$.map$extension (1 samples, 0.05%)</title><rect x="188.0" y="1219.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.0" y="1230.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMagnet$$anon$2.map (1 samples, 0.05%)</title><rect x="188.0" y="1203.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.0" y="1214.0"></text>
</g>
<g>
<title>firrtl/ir/Block.mapStmt (1 samples, 0.05%)</title><rect x="188.0" y="1187.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.05%)</title><rect x="188.0" y="1171.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="188.0" y="1155.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="188.0" y="1139.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="191.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="188.0" y="1123.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="188.0" y="1107.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="191.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="188.0" y="1091.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3624/554593271.apply (1 samples, 0.05%)</title><rect x="188.0" y="1075.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.0" y="1086.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="188.0" y="1059.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.0" y="1070.0"></text>
</g>
<g>
<title>firrtl/transforms/DeadCodeElimination$$Lambda$8838/276889354.apply (1 samples, 0.05%)</title><rect x="188.0" y="1043.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.0" y="1054.0"></text>
</g>
<g>
<title>firrtl/transforms/DeadCodeElimination.$anonfun$deleteDeadCode$5 (1 samples, 0.05%)</title><rect x="188.0" y="1027.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.0" y="1038.0"></text>
</g>
<g>
<title>firrtl/transforms/DeadCodeElimination.onStmt$2 (1 samples, 0.05%)</title><rect x="188.0" y="1011.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.lengthCompare (1 samples, 0.05%)</title><rect x="188.0" y="995.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.0" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.lengthCompare$ (1 samples, 0.05%)</title><rect x="188.0" y="979.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.0" y="990.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.lengthCompare (1 samples, 0.05%)</title><rect x="188.0" y="963.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.0" y="974.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.05%)</title><rect x="188.0" y="947.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="191.0" y="958.0"></text>
</g>
<g>
<title>treadle/stage/phases/ChirrtlToLow.execute (3 samples, 0.16%)</title><rect x="188.6" y="1571.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.6" y="1582.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (3 samples, 0.16%)</title><rect x="188.6" y="1555.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.6" y="1566.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (3 samples, 0.16%)</title><rect x="188.6" y="1539.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.6" y="1550.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (3 samples, 0.16%)</title><rect x="188.6" y="1523.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.6" y="1534.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (3 samples, 0.16%)</title><rect x="188.6" y="1507.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.6" y="1518.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (3 samples, 0.16%)</title><rect x="188.6" y="1491.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="191.6" y="1502.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (3 samples, 0.16%)</title><rect x="188.6" y="1475.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.6" y="1486.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (3 samples, 0.16%)</title><rect x="188.6" y="1459.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.6" y="1470.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$8119/1092734470.apply (3 samples, 0.16%)</title><rect x="188.6" y="1443.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.6" y="1454.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (3 samples, 0.16%)</title><rect x="188.6" y="1427.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.6" y="1438.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (3 samples, 0.16%)</title><rect x="188.6" y="1411.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.6" y="1422.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (3 samples, 0.16%)</title><rect x="188.6" y="1395.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.6" y="1406.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8118/2070014693.apply (3 samples, 0.16%)</title><rect x="188.6" y="1379.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.6" y="1390.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (3 samples, 0.16%)</title><rect x="188.6" y="1363.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.6" y="1374.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (3 samples, 0.16%)</title><rect x="188.6" y="1347.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.6" y="1358.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (3 samples, 0.16%)</title><rect x="188.6" y="1331.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.6" y="1342.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (3 samples, 0.16%)</title><rect x="188.6" y="1315.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.6" y="1326.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (3 samples, 0.16%)</title><rect x="188.6" y="1299.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.6" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (3 samples, 0.16%)</title><rect x="188.6" y="1283.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.6" y="1294.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (3 samples, 0.16%)</title><rect x="188.6" y="1267.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.6" y="1278.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (3 samples, 0.16%)</title><rect x="188.6" y="1251.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.6" y="1262.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$8119/1092734470.apply (3 samples, 0.16%)</title><rect x="188.6" y="1235.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.6" y="1246.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (3 samples, 0.16%)</title><rect x="188.6" y="1219.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.6" y="1230.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (3 samples, 0.16%)</title><rect x="188.6" y="1203.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="191.6" y="1214.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (3 samples, 0.16%)</title><rect x="188.6" y="1187.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.6" y="1198.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8118/2070014693.apply (3 samples, 0.16%)</title><rect x="188.6" y="1171.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.6" y="1182.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (3 samples, 0.16%)</title><rect x="188.6" y="1155.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.6" y="1166.0"></text>
</g>
<g>
<title>firrtl/passes/ExpandWhens$.execute (1 samples, 0.05%)</title><rect x="188.6" y="1139.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.6" y="1150.0"></text>
</g>
<g>
<title>firrtl/passes/Pass.execute$ (1 samples, 0.05%)</title><rect x="188.6" y="1123.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.6" y="1134.0"></text>
</g>
<g>
<title>firrtl/passes/Pass.execute (1 samples, 0.05%)</title><rect x="188.6" y="1107.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.6" y="1118.0"></text>
</g>
<g>
<title>firrtl/passes/ExpandWhens$.run (1 samples, 0.05%)</title><rect x="188.6" y="1091.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.05%)</title><rect x="188.6" y="1075.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="188.6" y="1059.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.6" y="1070.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="188.6" y="1043.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.6" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="188.6" y="1027.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.6" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="188.6" y="1011.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.6" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="188.6" y="995.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.6" y="1006.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3624/554593271.apply (1 samples, 0.05%)</title><rect x="188.6" y="979.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.6" y="990.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="188.6" y="963.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.6" y="974.0"></text>
</g>
<g>
<title>firrtl/passes/ExpandWhens$$$Lambda$8564/1535903302.apply (1 samples, 0.05%)</title><rect x="188.6" y="947.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.6" y="958.0"></text>
</g>
<g>
<title>firrtl/passes/ExpandWhens$.$anonfun$run$1 (1 samples, 0.05%)</title><rect x="188.6" y="931.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.6" y="942.0"></text>
</g>
<g>
<title>firrtl/Utils$.squashEmpty (1 samples, 0.05%)</title><rect x="188.6" y="915.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.6" y="926.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMap$.map$extension (1 samples, 0.05%)</title><rect x="188.6" y="899.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.6" y="910.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMagnet$$anon$2.map (1 samples, 0.05%)</title><rect x="188.6" y="883.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.6" y="894.0"></text>
</g>
<g>
<title>firrtl/ir/Block.mapStmt (1 samples, 0.05%)</title><rect x="188.6" y="867.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.6" y="878.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.05%)</title><rect x="188.6" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.6" y="862.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="188.6" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.6" y="846.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="188.6" y="819.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.6" y="830.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="188.6" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.6" y="814.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="188.6" y="787.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.6" y="798.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="188.6" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.6" y="782.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3624/554593271.apply (1 samples, 0.05%)</title><rect x="188.6" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.6" y="766.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="188.6" y="739.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="191.6" y="750.0"></text>
</g>
<g>
<title>firrtl/Utils$$$Lambda$8561/1516358345.apply (1 samples, 0.05%)</title><rect x="188.6" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.6" y="734.0"></text>
</g>
<g>
<title>firrtl/Utils$.$anonfun$squashEmpty$1 (1 samples, 0.05%)</title><rect x="188.6" y="707.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.6" y="718.0"></text>
</g>
<g>
<title>firrtl/Utils$.squashEmpty (1 samples, 0.05%)</title><rect x="188.6" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.6" y="702.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.execute (1 samples, 0.05%)</title><rect x="189.3" y="1139.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.3" y="1150.0"></text>
</g>
<g>
<title>firrtl/passes/Pass.execute$ (1 samples, 0.05%)</title><rect x="189.3" y="1123.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.3" y="1134.0"></text>
</g>
<g>
<title>firrtl/passes/Pass.execute (1 samples, 0.05%)</title><rect x="189.3" y="1107.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.3" y="1118.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.run (1 samples, 0.05%)</title><rect x="189.3" y="1091.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="192.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.05%)</title><rect x="189.3" y="1075.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="192.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="189.3" y="1059.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="189.3" y="1043.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.3" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="189.3" y="1027.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.3" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="189.3" y="1011.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.3" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="189.3" y="995.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.3" y="1006.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3624/554593271.apply (1 samples, 0.05%)</title><rect x="189.3" y="979.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="192.3" y="990.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="189.3" y="963.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.3" y="974.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$$$Lambda$8240/266811909.apply (1 samples, 0.05%)</title><rect x="189.3" y="947.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.3" y="958.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.$anonfun$run$22 (1 samples, 0.05%)</title><rect x="189.3" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="192.3" y="942.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.infer_types$1 (1 samples, 0.05%)</title><rect x="189.3" y="915.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="192.3" y="926.0"></text>
</g>
<g>
<title>firrtl/Mappers$ModuleMap$.map$extension (1 samples, 0.05%)</title><rect x="189.3" y="899.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.3" y="910.0"></text>
</g>
<g>
<title>firrtl/Mappers$ModuleMagnet$$anon$13.map (1 samples, 0.05%)</title><rect x="189.3" y="883.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.3" y="894.0"></text>
</g>
<g>
<title>firrtl/ir/Module.mapStmt (1 samples, 0.05%)</title><rect x="189.3" y="867.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.3" y="878.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$$$Lambda$8247/323431730.apply (1 samples, 0.05%)</title><rect x="189.3" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.3" y="862.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.$anonfun$run$20 (1 samples, 0.05%)</title><rect x="189.3" y="835.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.3" y="846.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.infer_types_s$1 (1 samples, 0.05%)</title><rect x="189.3" y="819.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.3" y="830.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMap$.map$extension (1 samples, 0.05%)</title><rect x="189.3" y="803.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="192.3" y="814.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMagnet$$anon$2.map (1 samples, 0.05%)</title><rect x="189.3" y="787.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.3" y="798.0"></text>
</g>
<g>
<title>firrtl/ir/Block.mapStmt (1 samples, 0.05%)</title><rect x="189.3" y="771.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.3" y="782.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.05%)</title><rect x="189.3" y="755.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.3" y="766.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="189.3" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.3" y="750.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="189.3" y="723.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.3" y="734.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="189.3" y="707.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="192.3" y="718.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="189.3" y="691.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.3" y="702.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="189.3" y="675.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.3" y="686.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3624/554593271.apply (1 samples, 0.05%)</title><rect x="189.3" y="659.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="192.3" y="670.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="189.3" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.3" y="654.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$$$Lambda$8249/1478609459.apply (1 samples, 0.05%)</title><rect x="189.3" y="627.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.3" y="638.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.$anonfun$run$14 (1 samples, 0.05%)</title><rect x="189.3" y="611.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.3" y="622.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.infer_types_s$1 (1 samples, 0.05%)</title><rect x="189.3" y="595.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.3" y="606.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMap$.map$extension (1 samples, 0.05%)</title><rect x="189.3" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.3" y="590.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMagnet$$anon$3.map (1 samples, 0.05%)</title><rect x="189.3" y="563.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.3" y="574.0"></text>
</g>
<g>
<title>firrtl/ir/DefNode.mapExpr (1 samples, 0.05%)</title><rect x="189.3" y="547.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.3" y="558.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$$$Lambda$8257/1945447123.apply (1 samples, 0.05%)</title><rect x="189.3" y="531.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.3" y="542.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.$anonfun$run$10 (1 samples, 0.05%)</title><rect x="189.3" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.3" y="526.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.infer_types_e$1 (1 samples, 0.05%)</title><rect x="189.3" y="499.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="192.3" y="510.0"></text>
</g>
<g>
<title>firrtl/PrimOps$.set_primop_type (1 samples, 0.05%)</title><rect x="189.3" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.3" y="494.0"></text>
</g>
<g>
<title>firrtl/PrimOps$Sub$.propagateType (1 samples, 0.05%)</title><rect x="189.3" y="467.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.3" y="478.0"></text>
</g>
<g>
<title>firrtl/Implicits$.constraint2width (1 samples, 0.05%)</title><rect x="189.3" y="451.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.3" y="462.0"></text>
</g>
<g>
<title>firrtl/transforms/CheckCombLoops.execute (1 samples, 0.05%)</title><rect x="189.9" y="1139.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.9" y="1150.0"></text>
</g>
<g>
<title>firrtl/transforms/CheckCombLoops.run (1 samples, 0.05%)</title><rect x="189.9" y="1123.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="192.9" y="1134.0"></text>
</g>
<g>
<title>firrtl/graph/DiGraph.linearize (1 samples, 0.05%)</title><rect x="189.9" y="1107.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.9" y="1118.0"></text>
</g>
<g>
<title>firrtl/graph/DiGraph.seededLinearize (1 samples, 0.05%)</title><rect x="189.9" y="1091.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.9" y="1102.0"></text>
</g>
<g>
<title>scala/Option.getOrElse (1 samples, 0.05%)</title><rect x="189.9" y="1075.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.9" y="1086.0"></text>
</g>
<g>
<title>firrtl/graph/DiGraph$$Lambda$8452/1097527528.apply (1 samples, 0.05%)</title><rect x="189.9" y="1059.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.9" y="1070.0"></text>
</g>
<g>
<title>firrtl/graph/DiGraph.$anonfun$seededLinearize$1 (1 samples, 0.05%)</title><rect x="189.9" y="1043.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="192.9" y="1054.0"></text>
</g>
<g>
<title>firrtl/graph/DiGraph.getVertices (1 samples, 0.05%)</title><rect x="189.9" y="1027.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.9" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSet.$plus$plus (1 samples, 0.05%)</title><rect x="189.9" y="1011.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.9" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/SetLike.$plus$plus$ (1 samples, 0.05%)</title><rect x="189.9" y="995.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="192.9" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/SetLike.$plus$plus (1 samples, 0.05%)</title><rect x="189.9" y="979.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.9" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSet.$plus$plus$eq (1 samples, 0.05%)</title><rect x="189.9" y="963.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.9" y="974.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (1 samples, 0.05%)</title><rect x="189.9" y="947.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.9" y="958.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (1 samples, 0.05%)</title><rect x="189.9" y="931.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="192.9" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.05%)</title><rect x="189.9" y="915.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="192.9" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.05%)</title><rect x="189.9" y="899.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="192.9" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.05%)</title><rect x="189.9" y="883.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="192.9" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.05%)</title><rect x="189.9" y="867.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="192.9" y="878.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="189.9" y="851.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="192.9" y="862.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.05%)</title><rect x="189.9" y="835.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="192.9" y="846.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.05%)</title><rect x="189.9" y="819.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="192.9" y="830.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (1 samples, 0.05%)</title><rect x="189.9" y="803.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="192.9" y="814.0"></text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$8034/769906719.apply$mcV$sp (128 samples, 6.95%)</title><rect x="190.6" y="2067.0" width="81.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.6" y="2078.0">treadle/G..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$new$4 (128 samples, 6.95%)</title><rect x="190.6" y="2051.0" width="81.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.6" y="2062.0">treadle/G..</text>
</g>
<g>
<title>treadle/GCDTester.manyValuesTest (128 samples, 6.95%)</title><rect x="190.6" y="2035.0" width="81.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="193.6" y="2046.0">treadle/G..</text>
</g>
<g>
<title>scala/collection/AbstractTraversable.flatMap (1 samples, 0.05%)</title><rect x="190.6" y="2019.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.6" y="2030.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap$ (1 samples, 0.05%)</title><rect x="190.6" y="2003.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="193.6" y="2014.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap (1 samples, 0.05%)</title><rect x="190.6" y="1987.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.6" y="1998.0"></text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach (1 samples, 0.05%)</title><rect x="190.6" y="1971.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.6" y="1982.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$4260/1994229284.apply (1 samples, 0.05%)</title><rect x="190.6" y="1955.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.6" y="1966.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$flatMap$1 (1 samples, 0.05%)</title><rect x="190.6" y="1939.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="193.6" y="1950.0"></text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$9020/666140483.apply (1 samples, 0.05%)</title><rect x="190.6" y="1923.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.6" y="1934.0"></text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$manyValuesTest$1$adapted (1 samples, 0.05%)</title><rect x="190.6" y="1907.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="193.6" y="1918.0"></text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$manyValuesTest$1 (1 samples, 0.05%)</title><rect x="190.6" y="1891.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.6" y="1902.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.05%)</title><rect x="190.6" y="1875.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="193.6" y="1886.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="190.6" y="1859.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.6" y="1870.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="190.6" y="1843.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="193.6" y="1854.0"></text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach (1 samples, 0.05%)</title><rect x="190.6" y="1827.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.6" y="1838.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3624/554593271.apply (1 samples, 0.05%)</title><rect x="190.6" y="1811.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="193.6" y="1822.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="190.6" y="1795.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="193.6" y="1806.0"></text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$9021/661864969.apply (1 samples, 0.05%)</title><rect x="190.6" y="1779.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="193.6" y="1790.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="190.6" y="1763.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="193.6" y="1774.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="190.6" y="1747.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="193.6" y="1758.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="190.6" y="1731.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="193.6" y="1742.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="190.6" y="1715.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="193.6" y="1726.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.foreach (124 samples, 6.73%)</title><rect x="191.2" y="2019.0" width="79.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.2" y="2030.0">scala/col..</text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (124 samples, 6.73%)</title><rect x="191.2" y="2003.0" width="79.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.2" y="2014.0">scala/col..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (124 samples, 6.73%)</title><rect x="191.2" y="1987.0" width="79.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="194.2" y="1998.0">scala/col..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (124 samples, 6.73%)</title><rect x="191.2" y="1971.0" width="79.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.2" y="1982.0">scala/col..</text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (124 samples, 6.73%)</title><rect x="191.2" y="1955.0" width="79.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.2" y="1966.0">scala/col..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (124 samples, 6.73%)</title><rect x="191.2" y="1939.0" width="79.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.2" y="1950.0">scala/col..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach (124 samples, 6.73%)</title><rect x="191.2" y="1923.0" width="79.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.2" y="1934.0">scala/col..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter$$Lambda$3749/630565490.apply (124 samples, 6.73%)</title><rect x="191.2" y="1907.0" width="79.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.2" y="1918.0">scala/col..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.$anonfun$foreach$1 (124 samples, 6.73%)</title><rect x="191.2" y="1891.0" width="79.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="194.2" y="1902.0">scala/col..</text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$9023/1181611246.apply (124 samples, 6.73%)</title><rect x="191.2" y="1875.0" width="79.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.2" y="1886.0">treadle/G..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$manyValuesTest$4$adapted (124 samples, 6.73%)</title><rect x="191.2" y="1859.0" width="79.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="194.2" y="1870.0">treadle/G..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$manyValuesTest$4 (124 samples, 6.73%)</title><rect x="191.2" y="1843.0" width="79.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="194.2" y="1854.0">treadle/G..</text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.05%)</title><rect x="191.2" y="1827.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.2" y="1838.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.05%)</title><rect x="191.2" y="1811.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.2" y="1822.0"></text>
</g>
<g>
<title>treadle/TreadleTester.peek (47 samples, 2.55%)</title><rect x="191.8" y="1827.0" width="30.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="194.8" y="1838.0">tr..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (43 samples, 2.33%)</title><rect x="191.8" y="1811.0" width="27.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="194.8" y="1822.0">t..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (43 samples, 2.33%)</title><rect x="191.8" y="1795.0" width="27.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.8" y="1806.0">t..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (43 samples, 2.33%)</title><rect x="191.8" y="1779.0" width="27.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.8" y="1790.0">t..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (43 samples, 2.33%)</title><rect x="191.8" y="1763.0" width="27.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="194.8" y="1774.0">t..</text>
</g>
<g>
<title>itable stub (2 samples, 0.11%)</title><rect x="191.8" y="1747.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="194.8" y="1758.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.run (2 samples, 0.11%)</title><rect x="193.1" y="1747.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.1" y="1758.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$8966/992540979.apply$mcV$sp (39 samples, 2.12%)</title><rect x="194.4" y="1747.0" width="25.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.4" y="1758.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (39 samples, 2.12%)</title><rect x="194.4" y="1731.0" width="25.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.4" y="1742.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (39 samples, 2.12%)</title><rect x="194.4" y="1715.0" width="25.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="197.4" y="1726.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.treadle$executable$DataStore$AssignInt$$$outer (3 samples, 0.16%)</title><rect x="194.4" y="1699.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.4" y="1710.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.11%)</title><rect x="194.4" y="1683.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="197.4" y="1694.0"></text>
</g>
<g>
<title>treadle/executable/TailInts.apply (1 samples, 0.05%)</title><rect x="195.7" y="1683.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.7" y="1694.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (35 samples, 1.90%)</title><rect x="196.3" y="1699.0" width="22.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="199.3" y="1710.0">t..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (35 samples, 1.90%)</title><rect x="196.3" y="1683.0" width="22.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="199.3" y="1694.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (35 samples, 1.90%)</title><rect x="196.3" y="1667.0" width="22.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.3" y="1678.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (35 samples, 1.90%)</title><rect x="196.3" y="1651.0" width="22.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.3" y="1662.0">s..</text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8974/263614067.apply (35 samples, 1.90%)</title><rect x="196.3" y="1635.0" width="22.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="199.3" y="1646.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (35 samples, 1.90%)</title><rect x="196.3" y="1619.0" width="22.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="199.3" y="1630.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (35 samples, 1.90%)</title><rect x="196.3" y="1603.0" width="22.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.3" y="1614.0">t..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (34 samples, 1.84%)</title><rect x="197.0" y="1587.0" width="21.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="200.0" y="1598.0">t..</text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="204.6" y="1571.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="207.6" y="1582.0"></text>
</g>
<g>
<title>scala/LowPriorityImplicits.wrapRefArray (1 samples, 0.05%)</title><rect x="205.3" y="1571.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.3" y="1582.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.&lt;init&gt; (1 samples, 0.05%)</title><rect x="205.3" y="1555.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.3" y="1566.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (1 samples, 0.05%)</title><rect x="205.3" y="1539.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.3" y="1550.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (7 samples, 0.38%)</title><rect x="205.9" y="1571.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.9" y="1582.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (6 samples, 0.33%)</title><rect x="205.9" y="1555.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.9" y="1566.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (6 samples, 0.33%)</title><rect x="205.9" y="1539.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.9" y="1550.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (6 samples, 0.33%)</title><rect x="205.9" y="1523.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.9" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (6 samples, 0.33%)</title><rect x="205.9" y="1507.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.9" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (6 samples, 0.33%)</title><rect x="205.9" y="1491.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.9" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.&lt;init&gt; (5 samples, 0.27%)</title><rect x="205.9" y="1475.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.9" y="1486.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (5 samples, 0.27%)</title><rect x="205.9" y="1459.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.9" y="1470.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (4 samples, 0.22%)</title><rect x="206.6" y="1443.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="209.6" y="1454.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (4 samples, 0.22%)</title><rect x="206.6" y="1427.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="209.6" y="1438.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="206.6" y="1411.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="209.6" y="1422.0"></text>
</g>
<g>
<title>scala/collection/GenTraversableOnce.$init$ (2 samples, 0.11%)</title><rect x="207.2" y="1411.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.2" y="1422.0"></text>
</g>
<g>
<title>scala/collection/Parallelizable.$init$ (1 samples, 0.05%)</title><rect x="208.5" y="1411.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.5" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.initWithContents (1 samples, 0.05%)</title><rect x="209.1" y="1475.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.1" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initWithContents$ (1 samples, 0.05%)</title><rect x="209.1" y="1459.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="212.1" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initWithContents (1 samples, 0.05%)</title><rect x="209.1" y="1443.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="212.1" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.alwaysInitSizeMap (1 samples, 0.05%)</title><rect x="209.1" y="1427.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="212.1" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.alwaysInitSizeMap$ (1 samples, 0.05%)</title><rect x="209.1" y="1411.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.1" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (1 samples, 0.05%)</title><rect x="209.8" y="1555.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="212.8" y="1566.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (1 samples, 0.05%)</title><rect x="209.8" y="1539.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="212.8" y="1550.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (1 samples, 0.05%)</title><rect x="209.8" y="1523.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="212.8" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (1 samples, 0.05%)</title><rect x="210.4" y="1571.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="213.4" y="1582.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (3 samples, 0.16%)</title><rect x="211.0" y="1571.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.0" y="1582.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (3 samples, 0.16%)</title><rect x="211.0" y="1555.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.0" y="1566.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (3 samples, 0.16%)</title><rect x="211.0" y="1539.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="214.0" y="1550.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (2 samples, 0.11%)</title><rect x="211.7" y="1523.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="214.7" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.05%)</title><rect x="211.7" y="1507.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="214.7" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="212.3" y="1507.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="215.3" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve (1 samples, 0.05%)</title><rect x="213.0" y="1571.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="216.0" y="1582.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (4 samples, 0.22%)</title><rect x="213.6" y="1571.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.6" y="1582.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (4 samples, 0.22%)</title><rect x="213.6" y="1555.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.6" y="1566.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$8975/1695633323.apply (4 samples, 0.22%)</title><rect x="213.6" y="1539.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.6" y="1550.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (4 samples, 0.22%)</title><rect x="213.6" y="1523.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="216.6" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (3 samples, 0.16%)</title><rect x="214.2" y="1507.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="217.2" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (3 samples, 0.16%)</title><rect x="214.2" y="1491.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="217.2" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (3 samples, 0.16%)</title><rect x="214.2" y="1475.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="217.2" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (3 samples, 0.16%)</title><rect x="214.2" y="1459.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.2" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="214.2" y="1443.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.2" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="214.2" y="1427.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="217.2" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="214.2" y="1411.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="217.2" y="1422.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="214.2" y="1395.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.2" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="214.2" y="1379.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="217.2" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.05%)</title><rect x="214.9" y="1443.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="217.9" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="215.5" y="1443.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="218.5" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.table (1 samples, 0.05%)</title><rect x="215.5" y="1427.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.5" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (4 samples, 0.22%)</title><rect x="216.2" y="1571.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="219.2" y="1582.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (4 samples, 0.22%)</title><rect x="216.2" y="1555.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="219.2" y="1566.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (4 samples, 0.22%)</title><rect x="216.2" y="1539.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.2" y="1550.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (4 samples, 0.22%)</title><rect x="216.2" y="1523.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="219.2" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (4 samples, 0.22%)</title><rect x="216.2" y="1507.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.2" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (4 samples, 0.22%)</title><rect x="216.2" y="1491.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="219.2" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (4 samples, 0.22%)</title><rect x="216.2" y="1475.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.2" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (4 samples, 0.22%)</title><rect x="216.2" y="1459.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="219.2" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (4 samples, 0.22%)</title><rect x="216.2" y="1443.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.2" y="1454.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (4 samples, 0.22%)</title><rect x="216.2" y="1427.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="219.2" y="1438.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (4 samples, 0.22%)</title><rect x="216.2" y="1411.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.2" y="1422.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.11%)</title><rect x="216.2" y="1395.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="219.2" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.11%)</title><rect x="217.4" y="1395.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="220.4" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="218.1" y="1379.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="221.1" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$8920/1896132859.apply$mcI$sp (1 samples, 0.05%)</title><rect x="218.7" y="1699.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="221.7" y="1710.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$1 (1 samples, 0.05%)</title><rect x="218.7" y="1683.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="221.7" y="1694.0"></text>
</g>
<g>
<title>treadle/executable/TailInts.apply (1 samples, 0.05%)</title><rect x="218.7" y="1667.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="221.7" y="1678.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$8927/925432877.apply$mcI$sp (1 samples, 0.05%)</title><rect x="218.7" y="1651.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.7" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$153 (1 samples, 0.05%)</title><rect x="218.7" y="1635.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="221.7" y="1646.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$GetInt.apply (1 samples, 0.05%)</title><rect x="218.7" y="1619.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.7" y="1630.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$GetInt.index (1 samples, 0.05%)</title><rect x="218.7" y="1603.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.7" y="1614.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.getValue (2 samples, 0.11%)</title><rect x="219.4" y="1811.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.4" y="1822.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (2 samples, 0.11%)</title><rect x="219.4" y="1795.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="222.4" y="1806.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (2 samples, 0.11%)</title><rect x="219.4" y="1779.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.4" y="1790.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.11%)</title><rect x="219.4" y="1763.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="222.4" y="1774.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.11%)</title><rect x="219.4" y="1747.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="222.4" y="1758.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.11%)</title><rect x="219.4" y="1731.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="222.4" y="1742.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.05%)</title><rect x="219.4" y="1715.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="222.4" y="1726.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.05%)</title><rect x="219.4" y="1699.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="222.4" y="1710.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.05%)</title><rect x="219.4" y="1683.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="222.4" y="1694.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.improve (1 samples, 0.05%)</title><rect x="219.4" y="1667.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.4" y="1678.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve$ (1 samples, 0.05%)</title><rect x="219.4" y="1651.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="222.4" y="1662.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="220.0" y="1715.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.0" y="1726.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="220.0" y="1699.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.0" y="1710.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="220.0" y="1683.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.0" y="1694.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="220.0" y="1667.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="223.0" y="1678.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.combinationalBump (2 samples, 0.11%)</title><rect x="220.6" y="1811.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="223.6" y="1822.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.incrementTime (2 samples, 0.11%)</title><rect x="220.6" y="1795.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="223.6" y="1806.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.runUntil (2 samples, 0.11%)</title><rect x="220.6" y="1779.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.6" y="1790.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.setTime (2 samples, 0.11%)</title><rect x="220.6" y="1763.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="223.6" y="1774.0"></text>
</g>
<g>
<title>treadle/TreadleTester$$Lambda$8952/1101334900.apply$mcV$sp (2 samples, 0.11%)</title><rect x="220.6" y="1747.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.6" y="1758.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$2 (2 samples, 0.11%)</title><rect x="220.6" y="1731.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="223.6" y="1742.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="220.6" y="1715.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="223.6" y="1726.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$8966/992540979.apply$mcV$sp (1 samples, 0.05%)</title><rect x="221.3" y="1715.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="224.3" y="1726.0"></text>
</g>
<g>
<title>treadle/TreadleTester.step (76 samples, 4.12%)</title><rect x="221.9" y="1827.0" width="48.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="224.9" y="1838.0">trea..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.run (76 samples, 4.12%)</title><rect x="221.9" y="1811.0" width="48.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="224.9" y="1822.0">trea..</text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach$mVc$sp (76 samples, 4.12%)</title><rect x="221.9" y="1795.0" width="48.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="224.9" y="1806.0">scal..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper$$Lambda$8973/1412921243.apply$mcVI$sp (76 samples, 4.12%)</title><rect x="221.9" y="1779.0" width="48.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="224.9" y="1790.0">trea..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.$anonfun$run$2 (76 samples, 4.12%)</title><rect x="221.9" y="1763.0" width="48.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="224.9" y="1774.0">trea..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (4 samples, 0.22%)</title><rect x="221.9" y="1747.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.9" y="1758.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (4 samples, 0.22%)</title><rect x="221.9" y="1731.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="224.9" y="1742.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (4 samples, 0.22%)</title><rect x="221.9" y="1715.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="224.9" y="1726.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (4 samples, 0.22%)</title><rect x="221.9" y="1699.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.9" y="1710.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$8966/992540979.apply$mcV$sp (4 samples, 0.22%)</title><rect x="221.9" y="1683.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="224.9" y="1694.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (4 samples, 0.22%)</title><rect x="221.9" y="1667.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="224.9" y="1678.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (4 samples, 0.22%)</title><rect x="221.9" y="1651.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="224.9" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.treadle$executable$DataStore$AssignInt$$$outer (1 samples, 0.05%)</title><rect x="221.9" y="1635.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="224.9" y="1646.0"></text>
</g>
<g>
<title>treadle/executable/SubInts.apply (1 samples, 0.05%)</title><rect x="221.9" y="1619.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="224.9" y="1630.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (3 samples, 0.16%)</title><rect x="222.6" y="1635.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="225.6" y="1646.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (3 samples, 0.16%)</title><rect x="222.6" y="1619.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="225.6" y="1630.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (3 samples, 0.16%)</title><rect x="222.6" y="1603.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.6" y="1614.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (3 samples, 0.16%)</title><rect x="222.6" y="1587.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.6" y="1598.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8974/263614067.apply (3 samples, 0.16%)</title><rect x="222.6" y="1571.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.6" y="1582.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (3 samples, 0.16%)</title><rect x="222.6" y="1555.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="225.6" y="1566.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (3 samples, 0.16%)</title><rect x="222.6" y="1539.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="225.6" y="1550.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (3 samples, 0.16%)</title><rect x="222.6" y="1523.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="225.6" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (2 samples, 0.11%)</title><rect x="222.6" y="1507.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="225.6" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (2 samples, 0.11%)</title><rect x="222.6" y="1491.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="225.6" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (2 samples, 0.11%)</title><rect x="222.6" y="1475.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.6" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (2 samples, 0.11%)</title><rect x="222.6" y="1459.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="225.6" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.11%)</title><rect x="222.6" y="1443.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.6" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (2 samples, 0.11%)</title><rect x="222.6" y="1427.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="225.6" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (2 samples, 0.11%)</title><rect x="222.6" y="1411.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="225.6" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (2 samples, 0.11%)</title><rect x="222.6" y="1395.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.6" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.05%)</title><rect x="222.6" y="1379.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="225.6" y="1390.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="223.2" y="1379.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="226.2" y="1390.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="223.2" y="1363.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="226.2" y="1374.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="223.2" y="1347.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="226.2" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (1 samples, 0.05%)</title><rect x="223.8" y="1507.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="226.8" y="1518.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.05%)</title><rect x="223.8" y="1491.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.8" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$8975/1695633323.apply (1 samples, 0.05%)</title><rect x="223.8" y="1475.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="226.8" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (1 samples, 0.05%)</title><rect x="223.8" y="1459.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.8" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.05%)</title><rect x="223.8" y="1443.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.8" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.05%)</title><rect x="223.8" y="1427.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.8" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.05%)</title><rect x="223.8" y="1411.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.8" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="223.8" y="1395.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.8" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="223.8" y="1379.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.8" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="223.8" y="1363.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="226.8" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="223.8" y="1347.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="226.8" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="223.8" y="1331.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="226.8" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="223.8" y="1315.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="226.8" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.uniqueId (1 samples, 0.05%)</title><rect x="223.8" y="1299.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="226.8" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.raiseClock$1 (72 samples, 3.91%)</title><rect x="224.5" y="1747.0" width="46.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.5" y="1758.0">trea..</text>
</g>
<g>
<title>treadle/chronometry/UTC.incrementTime (6 samples, 0.33%)</title><rect x="224.5" y="1731.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.5" y="1742.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.runUntil (6 samples, 0.33%)</title><rect x="224.5" y="1715.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.5" y="1726.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.setTime (6 samples, 0.33%)</title><rect x="224.5" y="1699.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.5" y="1710.0"></text>
</g>
<g>
<title>treadle/TreadleTester$$Lambda$8952/1101334900.apply$mcV$sp (6 samples, 0.33%)</title><rect x="224.5" y="1683.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.5" y="1694.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$2 (6 samples, 0.33%)</title><rect x="224.5" y="1667.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="227.5" y="1678.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.run (1 samples, 0.05%)</title><rect x="225.1" y="1651.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.1" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$8940/1630179144.apply$mcV$sp (1 samples, 0.05%)</title><rect x="225.8" y="1651.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="228.8" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$8966/992540979.apply$mcV$sp (1 samples, 0.05%)</title><rect x="226.4" y="1651.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="229.4" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.run (2 samples, 0.11%)</title><rect x="227.0" y="1651.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.0" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (65 samples, 3.53%)</title><rect x="228.3" y="1731.0" width="41.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.3" y="1742.0">tre..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (65 samples, 3.53%)</title><rect x="228.3" y="1715.0" width="41.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.3" y="1726.0">tre..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (65 samples, 3.53%)</title><rect x="228.3" y="1699.0" width="41.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="231.3" y="1710.0">tre..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (65 samples, 3.53%)</title><rect x="228.3" y="1683.0" width="41.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="231.3" y="1694.0">tre..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.apply (1 samples, 0.05%)</title><rect x="228.3" y="1667.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.3" y="1678.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply$ (1 samples, 0.05%)</title><rect x="228.3" y="1651.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.3" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner$$Lambda$8967/1308654645.apply$mcV$sp (19 samples, 1.03%)</title><rect x="229.0" y="1667.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="232.0" y="1678.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.$anonfun$setLeanMode$2 (19 samples, 1.03%)</title><rect x="229.0" y="1651.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="232.0" y="1662.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.runFull (19 samples, 1.03%)</title><rect x="229.0" y="1635.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="232.0" y="1646.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$8966/992540979.apply$mcV$sp (19 samples, 1.03%)</title><rect x="229.0" y="1619.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="232.0" y="1630.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (19 samples, 1.03%)</title><rect x="229.0" y="1603.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.0" y="1614.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (19 samples, 1.03%)</title><rect x="229.0" y="1587.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.0" y="1598.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (19 samples, 1.03%)</title><rect x="229.0" y="1571.0" width="12.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.0" y="1582.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (19 samples, 1.03%)</title><rect x="229.0" y="1555.0" width="12.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="232.0" y="1566.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (19 samples, 1.03%)</title><rect x="229.0" y="1539.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.0" y="1550.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (19 samples, 1.03%)</title><rect x="229.0" y="1523.0" width="12.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="232.0" y="1534.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8974/263614067.apply (19 samples, 1.03%)</title><rect x="229.0" y="1507.0" width="12.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="232.0" y="1518.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (19 samples, 1.03%)</title><rect x="229.0" y="1491.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="232.0" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (19 samples, 1.03%)</title><rect x="229.0" y="1475.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.0" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (19 samples, 1.03%)</title><rect x="229.0" y="1459.0" width="12.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="232.0" y="1470.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (4 samples, 0.22%)</title><rect x="232.2" y="1443.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="235.2" y="1454.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (2 samples, 0.11%)</title><rect x="232.2" y="1427.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="235.2" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (2 samples, 0.11%)</title><rect x="232.2" y="1411.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="235.2" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (2 samples, 0.11%)</title><rect x="232.2" y="1395.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.2" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (2 samples, 0.11%)</title><rect x="232.2" y="1379.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.2" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (2 samples, 0.11%)</title><rect x="232.2" y="1363.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.2" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="232.2" y="1347.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="235.2" y="1358.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="232.2" y="1331.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="235.2" y="1342.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="232.2" y="1315.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.2" y="1326.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="232.2" y="1299.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="235.2" y="1310.0"></text>
</g>
<g>
<title>scala/collection/GenTraversableOnce.$init$ (1 samples, 0.05%)</title><rect x="232.2" y="1283.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.2" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.$init$ (1 samples, 0.05%)</title><rect x="232.8" y="1347.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="235.8" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialThreshold (1 samples, 0.05%)</title><rect x="232.8" y="1331.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.8" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialCapacity (1 samples, 0.05%)</title><rect x="232.8" y="1315.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="235.8" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.initialSize (1 samples, 0.05%)</title><rect x="232.8" y="1299.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="235.8" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialSize$ (1 samples, 0.05%)</title><rect x="232.8" y="1283.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.8" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (2 samples, 0.11%)</title><rect x="233.5" y="1427.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="236.5" y="1438.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (2 samples, 0.11%)</title><rect x="233.5" y="1411.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="236.5" y="1422.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (2 samples, 0.11%)</title><rect x="233.5" y="1395.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="236.5" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.foreach (2 samples, 0.11%)</title><rect x="233.5" y="1379.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="236.5" y="1390.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach$ (2 samples, 0.11%)</title><rect x="233.5" y="1363.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="236.5" y="1374.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach (2 samples, 0.11%)</title><rect x="233.5" y="1347.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="236.5" y="1358.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable$$Lambda$3544/1563367365.apply (2 samples, 0.11%)</title><rect x="233.5" y="1331.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="236.5" y="1342.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$anonfun$$plus$plus$eq$1 (2 samples, 0.11%)</title><rect x="233.5" y="1315.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.5" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (2 samples, 0.11%)</title><rect x="233.5" y="1299.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="236.5" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (2 samples, 0.11%)</title><rect x="233.5" y="1283.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="236.5" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (2 samples, 0.11%)</title><rect x="233.5" y="1267.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.5" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (2 samples, 0.11%)</title><rect x="233.5" y="1251.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="236.5" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (2 samples, 0.11%)</title><rect x="233.5" y="1235.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.5" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="233.5" y="1219.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="233.5" y="1203.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="236.5" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="233.5" y="1187.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.5" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="233.5" y="1171.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.5" y="1182.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="233.5" y="1155.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.05%)</title><rect x="234.1" y="1219.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.05%)</title><rect x="234.1" y="1203.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="237.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.05%)</title><rect x="234.1" y="1187.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.improve (1 samples, 0.05%)</title><rect x="234.1" y="1171.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve$ (1 samples, 0.05%)</title><rect x="234.1" y="1155.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve (1 samples, 0.05%)</title><rect x="234.1" y="1139.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (1 samples, 0.05%)</title><rect x="234.7" y="1443.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.7" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (1 samples, 0.05%)</title><rect x="235.4" y="1443.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="238.4" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (2 samples, 0.11%)</title><rect x="236.0" y="1443.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.0" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (2 samples, 0.11%)</title><rect x="236.0" y="1427.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.0" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (2 samples, 0.11%)</title><rect x="236.0" y="1411.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.0" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (2 samples, 0.11%)</title><rect x="236.0" y="1395.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.0" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (2 samples, 0.11%)</title><rect x="236.0" y="1379.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.0" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (1 samples, 0.05%)</title><rect x="236.7" y="1363.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.7" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.alwaysInitSizeMap$ (1 samples, 0.05%)</title><rect x="237.3" y="1443.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.3" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialSize$ (1 samples, 0.05%)</title><rect x="237.9" y="1443.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.9" y="1454.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.apply (1 samples, 0.05%)</title><rect x="238.6" y="1443.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.6" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (1 samples, 0.05%)</title><rect x="238.6" y="1427.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.6" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="238.6" y="1411.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.6" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="238.6" y="1395.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="241.6" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="238.6" y="1379.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="241.6" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="238.6" y="1363.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.6" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="238.6" y="1347.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="241.6" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="238.6" y="1331.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.6" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="238.6" y="1315.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.6" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="238.6" y="1299.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="241.6" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="238.6" y="1283.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.6" y="1294.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="238.6" y="1267.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="241.6" y="1278.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="238.6" y="1251.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="241.6" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (3 samples, 0.16%)</title><rect x="239.2" y="1443.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.2" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (3 samples, 0.16%)</title><rect x="239.2" y="1427.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="242.2" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (3 samples, 0.16%)</title><rect x="239.2" y="1411.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.2" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (3 samples, 0.16%)</title><rect x="239.2" y="1395.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="242.2" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (3 samples, 0.16%)</title><rect x="239.2" y="1379.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.2" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (3 samples, 0.16%)</title><rect x="239.2" y="1363.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.2" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (1 samples, 0.05%)</title><rect x="239.9" y="1347.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.9" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="240.5" y="1347.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.5" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="240.5" y="1331.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.5" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="240.5" y="1315.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="243.5" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="240.5" y="1299.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.5" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="240.5" y="1283.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="243.5" y="1294.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="240.5" y="1267.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.5" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$8966/992540979.apply$mcV$sp (45 samples, 2.44%)</title><rect x="241.1" y="1667.0" width="28.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="244.1" y="1678.0">tr..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (45 samples, 2.44%)</title><rect x="241.1" y="1651.0" width="28.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="244.1" y="1662.0">tr..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (45 samples, 2.44%)</title><rect x="241.1" y="1635.0" width="28.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="244.1" y="1646.0">tr..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.index (1 samples, 0.05%)</title><rect x="241.1" y="1619.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="244.1" y="1630.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.05%)</title><rect x="241.8" y="1619.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.8" y="1630.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.05%)</title><rect x="241.8" y="1603.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="244.8" y="1614.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.05%)</title><rect x="241.8" y="1587.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="244.8" y="1598.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (43 samples, 2.33%)</title><rect x="242.4" y="1619.0" width="27.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.4" y="1630.0">t..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (43 samples, 2.33%)</title><rect x="242.4" y="1603.0" width="27.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.4" y="1614.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (43 samples, 2.33%)</title><rect x="242.4" y="1587.0" width="27.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="245.4" y="1598.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (43 samples, 2.33%)</title><rect x="242.4" y="1571.0" width="27.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="245.4" y="1582.0">s..</text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8974/263614067.apply (41 samples, 2.22%)</title><rect x="243.1" y="1555.0" width="26.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="246.1" y="1566.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (41 samples, 2.22%)</title><rect x="243.1" y="1539.0" width="26.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.1" y="1550.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (41 samples, 2.22%)</title><rect x="243.1" y="1523.0" width="26.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.1" y="1534.0">t..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (41 samples, 2.22%)</title><rect x="243.1" y="1507.0" width="26.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.1" y="1518.0">t..</text>
</g>
<g>
<title>java/lang/Object.equals (1 samples, 0.05%)</title><rect x="252.7" y="1491.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="255.7" y="1502.0"></text>
</g>
<g>
<title>scala/LowPriorityImplicits.wrapRefArray (1 samples, 0.05%)</title><rect x="253.3" y="1491.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.3" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.&lt;init&gt; (1 samples, 0.05%)</title><rect x="253.3" y="1475.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.3" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.&lt;init&gt; (1 samples, 0.05%)</title><rect x="253.3" y="1459.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="256.3" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSeq.&lt;init&gt; (1 samples, 0.05%)</title><rect x="253.3" y="1443.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.3" y="1454.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.&lt;init&gt; (1 samples, 0.05%)</title><rect x="253.3" y="1427.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.3" y="1438.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="253.3" y="1411.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.3" y="1422.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (7 samples, 0.38%)</title><rect x="253.9" y="1491.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.9" y="1502.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (6 samples, 0.33%)</title><rect x="253.9" y="1475.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="256.9" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (6 samples, 0.33%)</title><rect x="253.9" y="1459.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.9" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (6 samples, 0.33%)</title><rect x="253.9" y="1443.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.9" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (6 samples, 0.33%)</title><rect x="253.9" y="1427.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.9" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (6 samples, 0.33%)</title><rect x="253.9" y="1411.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.9" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.&lt;init&gt; (4 samples, 0.22%)</title><rect x="254.6" y="1395.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="257.6" y="1406.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (4 samples, 0.22%)</title><rect x="254.6" y="1379.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.6" y="1390.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (4 samples, 0.22%)</title><rect x="254.6" y="1363.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.6" y="1374.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (4 samples, 0.22%)</title><rect x="254.6" y="1347.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="257.6" y="1358.0"></text>
</g>
<g>
<title>scala/collection/Parallelizable.$init$ (1 samples, 0.05%)</title><rect x="256.5" y="1331.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="259.5" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.$init$ (1 samples, 0.05%)</title><rect x="257.1" y="1395.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="260.1" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialThreshold (1 samples, 0.05%)</title><rect x="257.1" y="1379.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="260.1" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialCapacity (1 samples, 0.05%)</title><rect x="257.1" y="1363.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="260.1" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.initialSize (1 samples, 0.05%)</title><rect x="257.1" y="1347.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="260.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialSize$ (1 samples, 0.05%)</title><rect x="257.1" y="1331.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.1" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (1 samples, 0.05%)</title><rect x="257.8" y="1475.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="260.8" y="1486.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (1 samples, 0.05%)</title><rect x="257.8" y="1459.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="260.8" y="1470.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (1 samples, 0.05%)</title><rect x="257.8" y="1443.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.8" y="1454.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.loop$1 (1 samples, 0.05%)</title><rect x="257.8" y="1427.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="260.8" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (1 samples, 0.05%)</title><rect x="257.8" y="1411.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="260.8" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (1 samples, 0.05%)</title><rect x="257.8" y="1395.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="260.8" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.05%)</title><rect x="257.8" y="1379.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="260.8" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.05%)</title><rect x="257.8" y="1363.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.8" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="257.8" y="1347.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="260.8" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (1 samples, 0.05%)</title><rect x="258.4" y="1491.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="261.4" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.05%)</title><rect x="259.1" y="1491.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.1" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="259.1" y="1475.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="262.1" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="259.1" y="1459.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="262.1" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="259.1" y="1443.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.1" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.05%)</title><rect x="259.1" y="1427.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="262.1" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.05%)</title><rect x="259.1" y="1411.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.1" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.05%)</title><rect x="259.1" y="1395.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.1" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.improve (1 samples, 0.05%)</title><rect x="259.1" y="1379.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="262.1" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve$ (1 samples, 0.05%)</title><rect x="259.1" y="1363.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="262.1" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve (1 samples, 0.05%)</title><rect x="259.1" y="1347.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateRight (1 samples, 0.05%)</title><rect x="259.1" y="1331.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.1" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (8 samples, 0.43%)</title><rect x="259.7" y="1491.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="262.7" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (8 samples, 0.43%)</title><rect x="259.7" y="1475.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="262.7" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (8 samples, 0.43%)</title><rect x="259.7" y="1459.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.7" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (8 samples, 0.43%)</title><rect x="259.7" y="1443.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="262.7" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="259.7" y="1427.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="262.7" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="259.7" y="1411.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.7" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="259.7" y="1395.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="262.7" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="259.7" y="1379.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.7" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (6 samples, 0.33%)</title><rect x="260.3" y="1427.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="263.3" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (2 samples, 0.11%)</title><rect x="262.9" y="1411.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="265.9" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="263.5" y="1395.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="266.5" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="263.5" y="1379.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="266.5" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="263.5" y="1363.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="266.5" y="1374.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="263.5" y="1347.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="266.5" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="263.5" y="1331.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="266.5" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="264.2" y="1427.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="267.2" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="264.2" y="1411.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.2" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="264.2" y="1395.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="267.2" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="264.2" y="1379.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.2" y="1390.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="264.2" y="1363.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="267.2" y="1374.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="264.2" y="1347.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.2" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialSize$ (1 samples, 0.05%)</title><rect x="264.8" y="1491.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="267.8" y="1502.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToInteger (1 samples, 0.05%)</title><rect x="265.5" y="1491.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.5" y="1502.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.05%)</title><rect x="265.5" y="1475.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.5" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (3 samples, 0.16%)</title><rect x="266.1" y="1491.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="269.1" y="1502.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (3 samples, 0.16%)</title><rect x="266.1" y="1475.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="269.1" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$8975/1695633323.apply (3 samples, 0.16%)</title><rect x="266.1" y="1459.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="269.1" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (3 samples, 0.16%)</title><rect x="266.1" y="1443.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="269.1" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (3 samples, 0.16%)</title><rect x="266.1" y="1427.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="269.1" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (3 samples, 0.16%)</title><rect x="266.1" y="1411.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="269.1" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (3 samples, 0.16%)</title><rect x="266.1" y="1395.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="269.1" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (3 samples, 0.16%)</title><rect x="266.1" y="1379.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="269.1" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (2 samples, 0.11%)</title><rect x="266.1" y="1363.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="269.1" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (2 samples, 0.11%)</title><rect x="266.1" y="1347.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="269.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashEntry.$init$ (1 samples, 0.05%)</title><rect x="266.7" y="1331.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="269.7" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.05%)</title><rect x="267.4" y="1363.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="270.4" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (2 samples, 0.11%)</title><rect x="268.0" y="1491.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="271.0" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (2 samples, 0.11%)</title><rect x="268.0" y="1475.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.0" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.11%)</title><rect x="268.0" y="1459.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.0" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.11%)</title><rect x="268.0" y="1443.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.0" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.11%)</title><rect x="268.0" y="1427.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="271.0" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.11%)</title><rect x="268.0" y="1411.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="271.0" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (2 samples, 0.11%)</title><rect x="268.0" y="1395.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.0" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (2 samples, 0.11%)</title><rect x="268.0" y="1379.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.0" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (2 samples, 0.11%)</title><rect x="268.0" y="1363.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="271.0" y="1374.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.11%)</title><rect x="268.0" y="1347.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.0" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.11%)</title><rect x="268.0" y="1331.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="271.0" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="268.7" y="1315.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.7" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (1 samples, 0.05%)</title><rect x="269.3" y="1555.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.3" y="1566.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setIntValue (1 samples, 0.05%)</title><rect x="269.9" y="1731.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.9" y="1742.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (1 samples, 0.05%)</title><rect x="269.9" y="1715.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.9" y="1726.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (1 samples, 0.05%)</title><rect x="269.9" y="1699.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="272.9" y="1710.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (1 samples, 0.05%)</title><rect x="269.9" y="1683.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.9" y="1694.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (1 samples, 0.05%)</title><rect x="269.9" y="1667.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="272.9" y="1678.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (1 samples, 0.05%)</title><rect x="269.9" y="1651.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="272.9" y="1662.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="269.9" y="1635.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="272.9" y="1646.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="269.9" y="1619.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.9" y="1630.0"></text>
</g>
<g>
<title>treadle/TreadleTester$.apply (3 samples, 0.16%)</title><rect x="270.6" y="2019.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.6" y="2030.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$.transform (3 samples, 0.16%)</title><rect x="270.6" y="2003.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.6" y="2014.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (3 samples, 0.16%)</title><rect x="270.6" y="1987.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.6" y="1998.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (3 samples, 0.16%)</title><rect x="270.6" y="1971.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.6" y="1982.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (3 samples, 0.16%)</title><rect x="270.6" y="1955.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="273.6" y="1966.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$$$Lambda$8096/988424465.apply (3 samples, 0.16%)</title><rect x="270.6" y="1939.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.6" y="1950.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$.$anonfun$transform$2 (3 samples, 0.16%)</title><rect x="270.6" y="1923.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.6" y="1934.0"></text>
</g>
<g>
<title>treadle/stage/phases/PrepareAst$.transform (3 samples, 0.16%)</title><rect x="270.6" y="1907.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.6" y="1918.0"></text>
</g>
<g>
<title>treadle/stage/phases/PrepareAst$.transform (3 samples, 0.16%)</title><rect x="270.6" y="1891.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.6" y="1902.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.transform$ (3 samples, 0.16%)</title><rect x="270.6" y="1875.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.6" y="1886.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.transform (3 samples, 0.16%)</title><rect x="270.6" y="1859.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="273.6" y="1870.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.flatMap (3 samples, 0.16%)</title><rect x="270.6" y="1843.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="273.6" y="1854.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap$ (3 samples, 0.16%)</title><rect x="270.6" y="1827.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="273.6" y="1838.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap (3 samples, 0.16%)</title><rect x="270.6" y="1811.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.6" y="1822.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (3 samples, 0.16%)</title><rect x="270.6" y="1795.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="273.6" y="1806.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$4260/1994229284.apply (3 samples, 0.16%)</title><rect x="270.6" y="1779.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.6" y="1790.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$flatMap$1 (3 samples, 0.16%)</title><rect x="270.6" y="1763.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.6" y="1774.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase$$Lambda$8115/2011030738.apply (3 samples, 0.16%)</title><rect x="270.6" y="1747.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="273.6" y="1758.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.$anonfun$transform$2 (3 samples, 0.16%)</title><rect x="270.6" y="1731.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.6" y="1742.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (3 samples, 0.16%)</title><rect x="270.6" y="1715.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.6" y="1726.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (3 samples, 0.16%)</title><rect x="270.6" y="1699.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.6" y="1710.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (3 samples, 0.16%)</title><rect x="270.6" y="1683.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="273.6" y="1694.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase$$Lambda$8116/2105556646.apply (3 samples, 0.16%)</title><rect x="270.6" y="1667.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.6" y="1678.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.$anonfun$transform$3 (3 samples, 0.16%)</title><rect x="270.6" y="1651.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="273.6" y="1662.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (3 samples, 0.16%)</title><rect x="270.6" y="1635.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.6" y="1646.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (3 samples, 0.16%)</title><rect x="270.6" y="1619.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="273.6" y="1630.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8118/2070014693.apply (3 samples, 0.16%)</title><rect x="270.6" y="1603.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="273.6" y="1614.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (3 samples, 0.16%)</title><rect x="270.6" y="1587.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.6" y="1598.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (1 samples, 0.05%)</title><rect x="270.6" y="1571.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="273.6" y="1582.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (1 samples, 0.05%)</title><rect x="270.6" y="1555.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.6" y="1566.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (1 samples, 0.05%)</title><rect x="270.6" y="1539.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.6" y="1550.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (1 samples, 0.05%)</title><rect x="270.6" y="1523.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="273.6" y="1534.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (1 samples, 0.05%)</title><rect x="270.6" y="1507.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.6" y="1518.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (1 samples, 0.05%)</title><rect x="270.6" y="1491.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="273.6" y="1502.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (1 samples, 0.05%)</title><rect x="270.6" y="1475.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.6" y="1486.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$8119/1092734470.apply (1 samples, 0.05%)</title><rect x="270.6" y="1459.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.6" y="1470.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (1 samples, 0.05%)</title><rect x="270.6" y="1443.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.6" y="1454.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (1 samples, 0.05%)</title><rect x="270.6" y="1427.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="273.6" y="1438.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (1 samples, 0.05%)</title><rect x="270.6" y="1411.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.6" y="1422.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8118/2070014693.apply (1 samples, 0.05%)</title><rect x="270.6" y="1395.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.6" y="1406.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (1 samples, 0.05%)</title><rect x="270.6" y="1379.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="273.6" y="1390.0"></text>
</g>
<g>
<title>firrtl/passes/Legalize$.execute (1 samples, 0.05%)</title><rect x="270.6" y="1363.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.6" y="1374.0"></text>
</g>
<g>
<title>firrtl/passes/Pass.execute$ (1 samples, 0.05%)</title><rect x="270.6" y="1347.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="273.6" y="1358.0"></text>
</g>
<g>
<title>firrtl/passes/Pass.execute (1 samples, 0.05%)</title><rect x="270.6" y="1331.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="273.6" y="1342.0"></text>
</g>
<g>
<title>firrtl/passes/Legalize$.run (1 samples, 0.05%)</title><rect x="270.6" y="1315.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.6" y="1326.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.05%)</title><rect x="270.6" y="1299.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.6" y="1310.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="270.6" y="1283.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="273.6" y="1294.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="270.6" y="1267.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="273.6" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="270.6" y="1251.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="270.6" y="1235.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="270.6" y="1219.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="273.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3624/554593271.apply (1 samples, 0.05%)</title><rect x="270.6" y="1203.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="273.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="270.6" y="1187.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.6" y="1198.0"></text>
</g>
<g>
<title>firrtl/passes/Legalize$$$Lambda$8671/1753667564.apply (1 samples, 0.05%)</title><rect x="270.6" y="1171.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.6" y="1182.0"></text>
</g>
<g>
<title>firrtl/passes/Legalize$.$anonfun$run$26 (1 samples, 0.05%)</title><rect x="270.6" y="1155.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.6" y="1166.0"></text>
</g>
<g>
<title>firrtl/Mappers$ModuleMap$.map$extension (1 samples, 0.05%)</title><rect x="270.6" y="1139.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.6" y="1150.0"></text>
</g>
<g>
<title>firrtl/Mappers$ModuleMagnet$$anon$13.map (1 samples, 0.05%)</title><rect x="270.6" y="1123.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="273.6" y="1134.0"></text>
</g>
<g>
<title>firrtl/ir/Module.mapStmt (1 samples, 0.05%)</title><rect x="270.6" y="1107.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.6" y="1118.0"></text>
</g>
<g>
<title>firrtl/passes/Legalize$$$Lambda$8672/203383390.apply (1 samples, 0.05%)</title><rect x="270.6" y="1091.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="273.6" y="1102.0"></text>
</g>
<g>
<title>firrtl/passes/Legalize$.$anonfun$run$27 (1 samples, 0.05%)</title><rect x="270.6" y="1075.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="273.6" y="1086.0"></text>
</g>
<g>
<title>firrtl/passes/Legalize$.legalizeS$1 (1 samples, 0.05%)</title><rect x="270.6" y="1059.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.6" y="1070.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMap$.map$extension (1 samples, 0.05%)</title><rect x="270.6" y="1043.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.6" y="1054.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMagnet$$anon$2.map (1 samples, 0.05%)</title><rect x="270.6" y="1027.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="273.6" y="1038.0"></text>
</g>
<g>
<title>firrtl/ir/Block.mapStmt (1 samples, 0.05%)</title><rect x="270.6" y="1011.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.6" y="1022.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.05%)</title><rect x="270.6" y="995.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.6" y="1006.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="270.6" y="979.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="273.6" y="990.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="270.6" y="963.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="273.6" y="974.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="270.6" y="947.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.6" y="958.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="270.6" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="273.6" y="942.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="270.6" y="915.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.6" y="926.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3624/554593271.apply (1 samples, 0.05%)</title><rect x="270.6" y="899.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="273.6" y="910.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="270.6" y="883.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="273.6" y="894.0"></text>
</g>
<g>
<title>firrtl/passes/Legalize$$$Lambda$8674/1154861937.apply (1 samples, 0.05%)</title><rect x="270.6" y="867.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.6" y="878.0"></text>
</g>
<g>
<title>firrtl/passes/Legalize$.$anonfun$run$22 (1 samples, 0.05%)</title><rect x="270.6" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="273.6" y="862.0"></text>
</g>
<g>
<title>firrtl/passes/Legalize$.legalizeS$1 (1 samples, 0.05%)</title><rect x="270.6" y="835.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.6" y="846.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMap$.map$extension (1 samples, 0.05%)</title><rect x="270.6" y="819.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.6" y="830.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMagnet$$anon$2.map (1 samples, 0.05%)</title><rect x="270.6" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="273.6" y="814.0"></text>
</g>
<g>
<title>firrtl/ir/Connect.mapStmt (1 samples, 0.05%)</title><rect x="270.6" y="787.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="273.6" y="798.0"></text>
</g>
<g>
<title>treadle/stage/phases/ChirrtlToLow.execute (2 samples, 0.11%)</title><rect x="271.2" y="1571.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.2" y="1582.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (2 samples, 0.11%)</title><rect x="271.2" y="1555.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.2" y="1566.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (2 samples, 0.11%)</title><rect x="271.2" y="1539.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.2" y="1550.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (2 samples, 0.11%)</title><rect x="271.2" y="1523.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.2" y="1534.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (2 samples, 0.11%)</title><rect x="271.2" y="1507.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.2" y="1518.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (2 samples, 0.11%)</title><rect x="271.2" y="1491.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="274.2" y="1502.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (2 samples, 0.11%)</title><rect x="271.2" y="1475.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.2" y="1486.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (2 samples, 0.11%)</title><rect x="271.2" y="1459.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.2" y="1470.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$8119/1092734470.apply (2 samples, 0.11%)</title><rect x="271.2" y="1443.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.2" y="1454.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (2 samples, 0.11%)</title><rect x="271.2" y="1427.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.2" y="1438.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (2 samples, 0.11%)</title><rect x="271.2" y="1411.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.2" y="1422.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (2 samples, 0.11%)</title><rect x="271.2" y="1395.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.2" y="1406.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8118/2070014693.apply (2 samples, 0.11%)</title><rect x="271.2" y="1379.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="274.2" y="1390.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (2 samples, 0.11%)</title><rect x="271.2" y="1363.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="274.2" y="1374.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (2 samples, 0.11%)</title><rect x="271.2" y="1347.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.2" y="1358.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (2 samples, 0.11%)</title><rect x="271.2" y="1331.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.2" y="1342.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (2 samples, 0.11%)</title><rect x="271.2" y="1315.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="274.2" y="1326.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (2 samples, 0.11%)</title><rect x="271.2" y="1299.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.2" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (2 samples, 0.11%)</title><rect x="271.2" y="1283.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.2" y="1294.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (2 samples, 0.11%)</title><rect x="271.2" y="1267.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.2" y="1278.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (2 samples, 0.11%)</title><rect x="271.2" y="1251.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.2" y="1262.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$8119/1092734470.apply (2 samples, 0.11%)</title><rect x="271.2" y="1235.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.2" y="1246.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (2 samples, 0.11%)</title><rect x="271.2" y="1219.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.2" y="1230.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (2 samples, 0.11%)</title><rect x="271.2" y="1203.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.2" y="1214.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (2 samples, 0.11%)</title><rect x="271.2" y="1187.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.2" y="1198.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8118/2070014693.apply (2 samples, 0.11%)</title><rect x="271.2" y="1171.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.2" y="1182.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (2 samples, 0.11%)</title><rect x="271.2" y="1155.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.2" y="1166.0"></text>
</g>
<g>
<title>firrtl/passes/InferWidths.execute (2 samples, 0.11%)</title><rect x="271.2" y="1139.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.2" y="1150.0"></text>
</g>
<g>
<title>firrtl/passes/InferWidths.run (2 samples, 0.11%)</title><rect x="271.2" y="1123.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.2" y="1134.0"></text>
</g>
<g>
<title>firrtl/annotations/CircuitTarget.&lt;init&gt; (1 samples, 0.05%)</title><rect x="271.2" y="1107.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.2" y="1118.0"></text>
</g>
<g>
<title>firrtl/annotations/CompleteTarget.$init$ (1 samples, 0.05%)</title><rect x="271.2" y="1091.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.2" y="1102.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="271.2" y="1075.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="274.2" y="1086.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="271.2" y="1059.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="274.2" y="1070.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="271.2" y="1043.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="274.2" y="1054.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="271.2" y="1027.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="274.2" y="1038.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::call_event(Method*, CompLevel) (1 samples, 0.05%)</title><rect x="271.2" y="1011.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="274.2" y="1022.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::common(bool (AdvancedThresholdPolicy::*)(int, int, CompLevel), Method*, CompLevel, bool) (1 samples, 0.05%)</title><rect x="271.2" y="995.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="274.2" y="1006.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.run (1 samples, 0.05%)</title><rect x="271.9" y="1107.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.05%)</title><rect x="271.9" y="1091.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="271.9" y="1075.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="274.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="271.9" y="1059.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="271.9" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.9" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="271.9" y="1027.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.9" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="271.9" y="1011.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.9" y="1022.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3624/554593271.apply (1 samples, 0.05%)</title><rect x="271.9" y="995.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.9" y="1006.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="271.9" y="979.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="274.9" y="990.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$$$Lambda$8240/266811909.apply (1 samples, 0.05%)</title><rect x="271.9" y="963.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.9" y="974.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.$anonfun$run$22 (1 samples, 0.05%)</title><rect x="271.9" y="947.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.9" y="958.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.infer_types$1 (1 samples, 0.05%)</title><rect x="271.9" y="931.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.9" y="942.0"></text>
</g>
<g>
<title>firrtl/Mappers$ModuleMap$.map$extension (1 samples, 0.05%)</title><rect x="271.9" y="915.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.9" y="926.0"></text>
</g>
<g>
<title>firrtl/Mappers$ModuleMagnet$$anon$13.map (1 samples, 0.05%)</title><rect x="271.9" y="899.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.9" y="910.0"></text>
</g>
<g>
<title>firrtl/ir/Module.mapStmt (1 samples, 0.05%)</title><rect x="271.9" y="883.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.9" y="894.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$$$Lambda$8247/323431730.apply (1 samples, 0.05%)</title><rect x="271.9" y="867.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.9" y="878.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.$anonfun$run$20 (1 samples, 0.05%)</title><rect x="271.9" y="851.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.9" y="862.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.infer_types_s$1 (1 samples, 0.05%)</title><rect x="271.9" y="835.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.9" y="846.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMap$.map$extension (1 samples, 0.05%)</title><rect x="271.9" y="819.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.9" y="830.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMagnet$$anon$2.map (1 samples, 0.05%)</title><rect x="271.9" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.9" y="814.0"></text>
</g>
<g>
<title>firrtl/ir/Block.mapStmt (1 samples, 0.05%)</title><rect x="271.9" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.9" y="798.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (1 samples, 0.05%)</title><rect x="271.9" y="771.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.9" y="782.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="271.9" y="755.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.9" y="766.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="271.9" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.9" y="750.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.05%)</title><rect x="271.9" y="723.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="274.9" y="734.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3624/554593271.apply (1 samples, 0.05%)</title><rect x="271.9" y="707.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="274.9" y="718.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="271.9" y="691.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.9" y="702.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$$$Lambda$8249/1478609459.apply (1 samples, 0.05%)</title><rect x="271.9" y="675.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.9" y="686.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.$anonfun$run$14 (1 samples, 0.05%)</title><rect x="271.9" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.9" y="670.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.infer_types_s$1 (1 samples, 0.05%)</title><rect x="271.9" y="643.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.9" y="654.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMap$.map$extension (1 samples, 0.05%)</title><rect x="271.9" y="627.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.9" y="638.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMagnet$$anon$2.map (1 samples, 0.05%)</title><rect x="271.9" y="611.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="274.9" y="622.0"></text>
</g>
<g>
<title>firrtl/ir/Block.mapStmt (1 samples, 0.05%)</title><rect x="271.9" y="595.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.9" y="606.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.05%)</title><rect x="271.9" y="579.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="274.9" y="590.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="271.9" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.9" y="574.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="271.9" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.9" y="558.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="271.9" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="274.9" y="542.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="271.9" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.9" y="526.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="271.9" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.9" y="510.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3624/554593271.apply (1 samples, 0.05%)</title><rect x="271.9" y="483.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.9" y="494.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="271.9" y="467.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.9" y="478.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$$$Lambda$8249/1478609459.apply (1 samples, 0.05%)</title><rect x="271.9" y="451.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.9" y="462.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.$anonfun$run$14 (1 samples, 0.05%)</title><rect x="271.9" y="435.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.9" y="446.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.infer_types_s$1 (1 samples, 0.05%)</title><rect x="271.9" y="419.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.9" y="430.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMap$.map$extension (1 samples, 0.05%)</title><rect x="271.9" y="403.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="274.9" y="414.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMagnet$$anon$3.map (1 samples, 0.05%)</title><rect x="271.9" y="387.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.9" y="398.0"></text>
</g>
<g>
<title>firrtl/ir/DefNode.mapExpr (1 samples, 0.05%)</title><rect x="271.9" y="371.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.9" y="382.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$$$Lambda$8257/1945447123.apply (1 samples, 0.05%)</title><rect x="271.9" y="355.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.9" y="366.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.$anonfun$run$10 (1 samples, 0.05%)</title><rect x="271.9" y="339.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.9" y="350.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.infer_types_e$1 (1 samples, 0.05%)</title><rect x="271.9" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.9" y="334.0"></text>
</g>
<g>
<title>firrtl/Mappers$ExprMap$.map$extension (1 samples, 0.05%)</title><rect x="271.9" y="307.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.9" y="318.0"></text>
</g>
<g>
<title>firrtl/Mappers$ExprMagnet$$anon$7.map (1 samples, 0.05%)</title><rect x="271.9" y="291.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="274.9" y="302.0"></text>
</g>
<g>
<title>firrtl/ir/Mux.mapExpr (1 samples, 0.05%)</title><rect x="271.9" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.9" y="286.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$$$Lambda$8253/443449201.apply (1 samples, 0.05%)</title><rect x="271.9" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.9" y="270.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.$anonfun$run$6 (1 samples, 0.05%)</title><rect x="271.9" y="243.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.9" y="254.0"></text>
</g>
<g>
<title>firrtl/passes/InferTypes$.infer_types_e$1 (1 samples, 0.05%)</title><rect x="271.9" y="227.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.9" y="238.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.apply (1 samples, 0.05%)</title><rect x="271.9" y="211.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="274.9" y="222.0"></text>
</g>
<g>
<title>scala/collection/MapLike.apply$ (1 samples, 0.05%)</title><rect x="271.9" y="195.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.9" y="206.0"></text>
</g>
<g>
<title>scala/collection/MapLike.apply (1 samples, 0.05%)</title><rect x="271.9" y="179.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.9" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/LinkedHashMap.get (1 samples, 0.05%)</title><rect x="271.9" y="163.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.9" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/LinkedHashMap.findEntry (1 samples, 0.05%)</title><rect x="271.9" y="147.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="274.9" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="271.9" y="131.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.9" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="271.9" y="115.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.9" y="126.0"></text>
</g>
<g>
<title>scala/collection/mutable/LinkedHashMap.elemHashCode (1 samples, 0.05%)</title><rect x="271.9" y="99.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.9" y="110.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="271.9" y="83.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.9" y="94.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="271.9" y="67.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.9" y="78.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="271.9" y="51.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.9" y="62.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="271.9" y="35.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.9" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.05%)</title><rect x="272.5" y="3171.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="275.5" y="3182.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (1 samples, 0.05%)</title><rect x="272.5" y="3155.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="275.5" y="3166.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.05%)</title><rect x="272.5" y="3139.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="275.5" y="3150.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (1 samples, 0.05%)</title><rect x="272.5" y="3123.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="275.5" y="3134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (1 samples, 0.05%)</title><rect x="272.5" y="3107.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="275.5" y="3118.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="272.5" y="3091.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="275.5" y="3102.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.05%)</title><rect x="272.5" y="3075.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="275.5" y="3086.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.05%)</title><rect x="272.5" y="3059.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="275.5" y="3070.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.05%)</title><rect x="272.5" y="3043.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="275.5" y="3054.0"></text>
</g>
<g>
<title>sbt/internal/ConsoleChannel$$anon$1.run (4 samples, 0.22%)</title><rect x="273.1" y="3219.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.1" y="3230.0"></text>
</g>
<g>
<title>sbt/internal/util/JLine.readLine (4 samples, 0.22%)</title><rect x="273.1" y="3203.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="276.1" y="3214.0"></text>
</g>
<g>
<title>sbt/internal/util/JLine$.withJLine (4 samples, 0.22%)</title><rect x="273.1" y="3187.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="276.1" y="3198.0"></text>
</g>
<g>
<title>sbt/internal/util/JLine$.withTerminal (4 samples, 0.22%)</title><rect x="273.1" y="3171.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.1" y="3182.0"></text>
</g>
<g>
<title>sbt/internal/util/JLine$$$Lambda$3202/130266291.apply (4 samples, 0.22%)</title><rect x="273.1" y="3155.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.1" y="3166.0"></text>
</g>
<g>
<title>sbt/internal/util/JLine$.$anonfun$withJLine$1 (4 samples, 0.22%)</title><rect x="273.1" y="3139.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="276.1" y="3150.0"></text>
</g>
<g>
<title>jline/UnixTerminal.init (1 samples, 0.05%)</title><rect x="273.1" y="3123.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="276.1" y="3134.0"></text>
</g>
<g>
<title>jline/UnixTerminal.parseInfoCmp (1 samples, 0.05%)</title><rect x="273.1" y="3107.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="276.1" y="3118.0"></text>
</g>
<g>
<title>jline/internal/InfoCmp.parseInfoCmp (1 samples, 0.05%)</title><rect x="273.1" y="3091.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.1" y="3102.0"></text>
</g>
<g>
<title>java/lang/String.split (1 samples, 0.05%)</title><rect x="273.1" y="3075.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="276.1" y="3086.0"></text>
</g>
<g>
<title>java/lang/String.split (1 samples, 0.05%)</title><rect x="273.1" y="3059.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="276.1" y="3070.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.compile (1 samples, 0.05%)</title><rect x="273.1" y="3043.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="276.1" y="3054.0"></text>
</g>
<g>
<title>sbt/internal/util/JLine$$Lambda$3201/66854932.apply (3 samples, 0.16%)</title><rect x="273.8" y="3123.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="276.8" y="3134.0"></text>
</g>
<g>
<title>sbt/internal/util/JLine.$anonfun$readLine$1 (3 samples, 0.16%)</title><rect x="273.8" y="3107.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.8" y="3118.0"></text>
</g>
<g>
<title>sbt/internal/util/JLine.unsynchronizedReadLine (3 samples, 0.16%)</title><rect x="273.8" y="3091.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="276.8" y="3102.0"></text>
</g>
<g>
<title>sbt/internal/util/JLine.readLineWithHistory (3 samples, 0.16%)</title><rect x="273.8" y="3075.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="276.8" y="3086.0"></text>
</g>
<g>
<title>sbt/internal/util/JLine.readLineDirect (3 samples, 0.16%)</title><rect x="273.8" y="3059.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.8" y="3070.0"></text>
</g>
<g>
<title>sbt/internal/util/Signals$.withHandler (3 samples, 0.16%)</title><rect x="273.8" y="3043.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="276.8" y="3054.0"></text>
</g>
<g>
<title>sbt/internal/util/Signals0.withHandler (3 samples, 0.16%)</title><rect x="273.8" y="3027.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="276.8" y="3038.0"></text>
</g>
<g>
<title>sbt/internal/util/JLine$$Lambda$3204/299315315.apply (3 samples, 0.16%)</title><rect x="273.8" y="3011.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="276.8" y="3022.0"></text>
</g>
<g>
<title>sbt/internal/util/JLine.$anonfun$readLineDirect$2 (3 samples, 0.16%)</title><rect x="273.8" y="2995.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.8" y="3006.0"></text>
</g>
<g>
<title>sbt/internal/util/JLine.readLineDirectRaw (3 samples, 0.16%)</title><rect x="273.8" y="2979.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="276.8" y="2990.0"></text>
</g>
<g>
<title>jline/console/ConsoleReader.readLine (3 samples, 0.16%)</title><rect x="273.8" y="2963.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="276.8" y="2974.0"></text>
</g>
<g>
<title>jline/console/ConsoleReader.readLine (3 samples, 0.16%)</title><rect x="273.8" y="2947.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="276.8" y="2958.0"></text>
</g>
<g>
<title>jline/console/ConsoleReader.readLine (3 samples, 0.16%)</title><rect x="273.8" y="2931.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="276.8" y="2942.0"></text>
</g>
<g>
<title>jline/console/ConsoleReader.readBinding (3 samples, 0.16%)</title><rect x="273.8" y="2915.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.8" y="2926.0"></text>
</g>
<g>
<title>jline/console/ConsoleReader.readCharacter (3 samples, 0.16%)</title><rect x="273.8" y="2899.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="276.8" y="2910.0"></text>
</g>
<g>
<title>jline/console/ConsoleReader.readCharacter (3 samples, 0.16%)</title><rect x="273.8" y="2883.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.8" y="2894.0"></text>
</g>
<g>
<title>jline/internal/InputStreamReader.read (3 samples, 0.16%)</title><rect x="273.8" y="2867.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.8" y="2878.0"></text>
</g>
<g>
<title>jline/internal/InputStreamReader.read (3 samples, 0.16%)</title><rect x="273.8" y="2851.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="276.8" y="2862.0"></text>
</g>
<g>
<title>jline/internal/NonBlockingInputStream.read (3 samples, 0.16%)</title><rect x="273.8" y="2835.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.8" y="2846.0"></text>
</g>
<g>
<title>sbt/internal/util/InputStreamWrapper.read (3 samples, 0.16%)</title><rect x="273.8" y="2819.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="276.8" y="2830.0"></text>
</g>
<g>
<title>java/io/FileInputStream.available (1 samples, 0.05%)</title><rect x="273.8" y="2803.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="276.8" y="2814.0"></text>
</g>
<g>
<title>Java_java_io_FileInputStream_available (1 samples, 0.05%)</title><rect x="273.8" y="2787.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="276.8" y="2798.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.05%)</title><rect x="273.8" y="2771.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="276.8" y="2782.0"></text>
</g>
<g>
<title>java/lang/Thread.sleep (2 samples, 0.11%)</title><rect x="274.4" y="2803.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.4" y="2814.0"></text>
</g>
<g>
<title>JVM_Sleep (2 samples, 0.11%)</title><rect x="274.4" y="2787.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="277.4" y="2798.0"></text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (2 samples, 0.11%)</title><rect x="274.4" y="2771.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="277.4" y="2782.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.11%)</title><rect x="274.4" y="2755.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="277.4" y="2766.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.11%)</title><rect x="274.4" y="2739.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="277.4" y="2750.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress$ProgressThread.run (7 samples, 0.38%)</title><rect x="275.7" y="3219.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.7" y="3230.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress.sbt$internal$TaskProgress$$report (7 samples, 0.38%)</title><rect x="275.7" y="3203.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.7" y="3214.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress.report0$1 (7 samples, 0.38%)</title><rect x="275.7" y="3187.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="278.7" y="3198.0"></text>
</g>
<g>
<title>java/lang/Class.getClassLoader (2 samples, 0.11%)</title><rect x="275.7" y="3171.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.7" y="3182.0"></text>
</g>
<g>
<title>sun/reflect/Reflection.getCallerClass (2 samples, 0.11%)</title><rect x="275.7" y="3155.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="278.7" y="3166.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (2 samples, 0.11%)</title><rect x="275.7" y="3139.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="278.7" y="3150.0"></text>
</g>
<g>
<title>JDK_Version::is_gte_jdk14x_version() (1 samples, 0.05%)</title><rect x="275.7" y="3123.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="278.7" y="3134.0"></text>
</g>
<g>
<title>vframeStreamCommon::next() (1 samples, 0.05%)</title><rect x="276.3" y="3123.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="279.3" y="3134.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="276.3" y="3107.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="279.3" y="3118.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.05%)</title><rect x="276.3" y="3091.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="279.3" y="3102.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="276.3" y="3075.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="279.3" y="3086.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.05%)</title><rect x="276.3" y="3059.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="279.3" y="3070.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.05%)</title><rect x="276.3" y="3043.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="279.3" y="3054.0"></text>
</g>
<g>
<title>sbt/internal/util/ManagedLogger.logEvent (1 samples, 0.05%)</title><rect x="277.0" y="3171.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="280.0" y="3182.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.apply (1 samples, 0.05%)</title><rect x="277.0" y="3155.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="280.0" y="3166.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.retry$1 (1 samples, 0.05%)</title><rect x="277.0" y="3139.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.0" y="3150.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.doApply$1 (1 samples, 0.05%)</title><rect x="277.0" y="3123.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="280.0" y="3134.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.typeToString (1 samples, 0.05%)</title><rect x="277.0" y="3107.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="280.0" y="3118.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$Type.toString (1 samples, 0.05%)</title><rect x="277.0" y="3091.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.0" y="3102.0"></text>
</g>
<g>
<title>scala/reflect/internal/SymbolTable.typeToString (1 samples, 0.05%)</title><rect x="277.0" y="3075.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.0" y="3086.0"></text>
</g>
<g>
<title>scala/reflect/internal/tpe/TypeToStrings.typeToString$ (1 samples, 0.05%)</title><rect x="277.0" y="3059.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.0" y="3070.0"></text>
</g>
<g>
<title>scala/reflect/internal/tpe/TypeToStrings.typeToString (1 samples, 0.05%)</title><rect x="277.0" y="3043.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.0" y="3054.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaUniverse.toStringRecursions (1 samples, 0.05%)</title><rect x="277.0" y="3027.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.0" y="3038.0"></text>
</g>
<g>
<title>scala/reflect/runtime/SynchronizedTypes.toStringRecursions$ (1 samples, 0.05%)</title><rect x="277.0" y="3011.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="280.0" y="3022.0"></text>
</g>
<g>
<title>scala/reflect/runtime/SynchronizedTypes.toStringRecursions (1 samples, 0.05%)</title><rect x="277.0" y="2995.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="280.0" y="3006.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaUniverse.scala$reflect$runtime$SynchronizedTypes$$_toStringRecursions (1 samples, 0.05%)</title><rect x="277.0" y="2979.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.0" y="2990.0"></text>
</g>
<g>
<title>scala/reflect/api/TypeTags$TypeTag$.apply (2 samples, 0.11%)</title><rect x="277.6" y="3171.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="280.6" y="3182.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (2 samples, 0.11%)</title><rect x="277.6" y="3155.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="280.6" y="3166.0"></text>
</g>
<g>
<title>java/lang/Class.checkMemberAccess (1 samples, 0.05%)</title><rect x="277.6" y="3139.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.6" y="3150.0"></text>
</g>
<g>
<title>java/lang/Class.checkPackageAccess (1 samples, 0.05%)</title><rect x="277.6" y="3123.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.6" y="3134.0"></text>
</g>
<g>
<title>sun/reflect/misc/ReflectUtil.needsPackageAccessCheck (1 samples, 0.05%)</title><rect x="277.6" y="3107.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="280.6" y="3118.0"></text>
</g>
<g>
<title>sun/reflect/misc/ReflectUtil.isAncestor (1 samples, 0.05%)</title><rect x="277.6" y="3091.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="280.6" y="3102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getParent (1 samples, 0.05%)</title><rect x="277.6" y="3075.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="280.6" y="3086.0"></text>
</g>
<g>
<title>sun/reflect/Reflection.getCallerClass (1 samples, 0.05%)</title><rect x="277.6" y="3059.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="280.6" y="3070.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (1 samples, 0.05%)</title><rect x="277.6" y="3043.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="280.6" y="3054.0"></text>
</g>
<g>
<title>vframeStreamCommon::next() (1 samples, 0.05%)</title><rect x="277.6" y="3027.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="280.6" y="3038.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="277.6" y="3011.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="280.6" y="3022.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.05%)</title><rect x="277.6" y="2995.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="280.6" y="3006.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="277.6" y="2979.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="280.6" y="2990.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.05%)</title><rect x="277.6" y="2963.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="280.6" y="2974.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.05%)</title><rect x="277.6" y="2947.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="280.6" y="2958.0"></text>
</g>
<g>
<title>sun/reflect/Reflection.getCallerClass (1 samples, 0.05%)</title><rect x="278.3" y="3139.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.3" y="3150.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (1 samples, 0.05%)</title><rect x="278.3" y="3123.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="281.3" y="3134.0"></text>
</g>
<g>
<title>vframeStreamCommon::next() (1 samples, 0.05%)</title><rect x="278.3" y="3107.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="281.3" y="3118.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="278.3" y="3091.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="281.3" y="3102.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.05%)</title><rect x="278.3" y="3075.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="281.3" y="3086.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="278.3" y="3059.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="281.3" y="3070.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.05%)</title><rect x="278.3" y="3043.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="281.3" y="3054.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.05%)</title><rect x="278.3" y="3027.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="281.3" y="3038.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaUniverse.runtimeMirror (2 samples, 0.11%)</title><rect x="278.9" y="3171.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.9" y="3182.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaUniverse.runtimeMirror (2 samples, 0.11%)</title><rect x="278.9" y="3155.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.9" y="3166.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors.runtimeMirror$ (2 samples, 0.11%)</title><rect x="278.9" y="3139.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.9" y="3150.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors.runtimeMirror (2 samples, 0.11%)</title><rect x="278.9" y="3123.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="281.9" y="3134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="278.9" y="3107.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.9" y="3118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="278.9" y="3091.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="281.9" y="3102.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors.$anonfun$runtimeMirror$1 (1 samples, 0.05%)</title><rect x="279.5" y="3107.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.5" y="3118.0"></text>
</g>
<g>
<title>scala/collection/convert/Wrappers$JMapWrapper.get (1 samples, 0.05%)</title><rect x="279.5" y="3091.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="282.5" y="3102.0"></text>
</g>
<g>
<title>scala/collection/convert/Wrappers$JMapWrapperLike.get$ (1 samples, 0.05%)</title><rect x="279.5" y="3075.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.5" y="3086.0"></text>
</g>
<g>
<title>scala/collection/convert/Wrappers$JMapWrapperLike.get (1 samples, 0.05%)</title><rect x="279.5" y="3059.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.5" y="3070.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.get (1 samples, 0.05%)</title><rect x="279.5" y="3043.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="282.5" y="3054.0"></text>
</g>
<g>
<title>sbt/internal/classpath/ClassLoaderCache$CleanupThread.run (1 samples, 0.05%)</title><rect x="280.2" y="3219.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="283.2" y="3230.0"></text>
</g>
<g>
<title>sbt/internal/classpath/ClassLoaderCache.sbt$internal$classpath$ClassLoaderCache$$clearExpiredLoaders (1 samples, 0.05%)</title><rect x="280.2" y="3203.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.2" y="3214.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.groupBy (1 samples, 0.05%)</title><rect x="280.2" y="3187.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.2" y="3198.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.groupBy$ (1 samples, 0.05%)</title><rect x="280.2" y="3171.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="283.2" y="3182.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.groupBy (1 samples, 0.05%)</title><rect x="280.2" y="3155.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.2" y="3166.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (1 samples, 0.05%)</title><rect x="280.2" y="3139.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.2" y="3150.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (1 samples, 0.05%)</title><rect x="280.2" y="3123.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.2" y="3134.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (1 samples, 0.05%)</title><rect x="280.2" y="3107.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.2" y="3118.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (1 samples, 0.05%)</title><rect x="280.2" y="3091.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.2" y="3102.0"></text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (1 samples, 0.05%)</title><rect x="280.2" y="3075.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.2" y="3086.0"></text>
</g>
<g>
<title>scala/collection/Iterator.foreach (1 samples, 0.05%)</title><rect x="280.2" y="3059.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.2" y="3070.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$504/662666707.apply (1 samples, 0.05%)</title><rect x="280.2" y="3043.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="283.2" y="3054.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$groupBy$1 (1 samples, 0.05%)</title><rect x="280.2" y="3027.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.2" y="3038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.getOrElseUpdate (1 samples, 0.05%)</title><rect x="280.2" y="3011.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.2" y="3022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="280.2" y="2995.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.2" y="3006.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="280.2" y="2979.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.2" y="2990.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="280.2" y="2963.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="283.2" y="2974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="280.2" y="2947.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.2" y="2958.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (1 samples, 0.05%)</title><rect x="280.2" y="2931.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.2" y="2942.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="280.2" y="2915.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="283.2" y="2926.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="280.2" y="2899.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.2" y="2910.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="280.2" y="2883.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.2" y="2894.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="280.2" y="2867.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="283.2" y="2878.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.hashCode (1 samples, 0.05%)</title><rect x="280.2" y="2851.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.2" y="2862.0"></text>
</g>
<g>
<title>scala/collection/GenSetLike.hashCode$ (1 samples, 0.05%)</title><rect x="280.2" y="2835.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.2" y="2846.0"></text>
</g>
<g>
<title>scala/collection/GenSetLike.hashCode (1 samples, 0.05%)</title><rect x="280.2" y="2819.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.2" y="2830.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.setHash (1 samples, 0.05%)</title><rect x="280.2" y="2803.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.2" y="2814.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.unorderedHash (1 samples, 0.05%)</title><rect x="280.2" y="2787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.2" y="2798.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet$HashTrieSet.foreach (1 samples, 0.05%)</title><rect x="280.2" y="2771.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.2" y="2782.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="280.2" y="2755.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="283.2" y="2766.0"></text>
</g>
<g>
<title>thread_start (1,418 samples, 76.94%)</title><rect x="280.8" y="3219.0" width="907.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="283.8" y="3230.0">thread_start</text>
</g>
<g>
<title>_pthread_start (1,418 samples, 76.94%)</title><rect x="280.8" y="3203.0" width="907.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="283.8" y="3214.0">_pthread_start</text>
</g>
<g>
<title>_pthread_body (1,418 samples, 76.94%)</title><rect x="280.8" y="3187.0" width="907.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="283.8" y="3198.0">_pthread_body</text>
</g>
<g>
<title>java_start(Thread*) (1,418 samples, 76.94%)</title><rect x="280.8" y="3171.0" width="907.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="283.8" y="3182.0">java_start(Thread*)</text>
</g>
<g>
<title>GCTaskThread::run() (1,288 samples, 69.89%)</title><rect x="280.8" y="3155.0" width="824.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="283.8" y="3166.0">GCTaskThread::run()</text>
</g>
<g>
<title>DrainStacksCompactionTask::do_it(GCTaskManager*, unsigned int) (328 samples, 17.80%)</title><rect x="280.8" y="3139.0" width="210.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="283.8" y="3150.0">DrainStacksCompactionTask::d..</text>
</g>
<g>
<title>ParCompactionManager::drain_region_stacks() (328 samples, 17.80%)</title><rect x="280.8" y="3123.0" width="210.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="283.8" y="3134.0">ParCompactionManager::drain_..</text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (328 samples, 17.80%)</title><rect x="280.8" y="3107.0" width="210.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="283.8" y="3118.0">PSParallelCompact::fill_regi..</text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (2 samples, 0.11%)</title><rect x="280.8" y="3091.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="283.8" y="3102.0"></text>
</g>
<g>
<title>PSParallelCompact::skip_live_words(HeapWord*, HeapWord*, unsigned long) (7 samples, 0.38%)</title><rect x="282.1" y="3091.0" width="4.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="285.1" y="3102.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (319 samples, 17.31%)</title><rect x="286.6" y="3091.0" width="204.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="289.6" y="3102.0">ParMarkBitMap::iterate(ParM..</text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="293.6" y="3075.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="296.6" y="3086.0"></text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (305 samples, 16.55%)</title><rect x="294.3" y="3075.0" width="195.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="297.3" y="3086.0">MoveAndUpdateClosure::do_..</text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (188 samples, 10.20%)</title><rect x="303.9" y="3059.0" width="120.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="306.9" y="3070.0">InstanceKlass::..</text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (177 samples, 9.60%)</title><rect x="310.9" y="3043.0" width="113.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="313.9" y="3054.0">ParallelCompac..</text>
</g>
<g>
<title>PSParallelCompact::fill_blocks(unsigned long) (4 samples, 0.22%)</title><rect x="313.5" y="3027.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="316.5" y="3038.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (169 samples, 9.17%)</title><rect x="316.0" y="3027.0" width="108.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="319.0" y="3038.0">ParMarkBitMap..</text>
</g>
<g>
<title>InstanceKlass::vtable_length() const (2 samples, 0.11%)</title><rect x="424.2" y="3059.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="427.2" y="3070.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (88 samples, 4.77%)</title><rect x="425.5" y="3059.0" width="56.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="428.5" y="3070.0">ObjArr..</text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (82 samples, 4.45%)</title><rect x="429.4" y="3043.0" width="52.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="432.4" y="3054.0">Paral..</text>
</g>
<g>
<title>PSParallelCompact::fill_blocks(unsigned long) (8 samples, 0.43%)</title><rect x="431.9" y="3027.0" width="5.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="434.9" y="3038.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (70 samples, 3.80%)</title><rect x="437.1" y="3027.0" width="44.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="440.1" y="3038.0">ParM..</text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (12 samples, 0.65%)</title><rect x="481.9" y="3059.0" width="7.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="484.9" y="3070.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="489.6" y="3075.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="492.6" y="3086.0"></text>
</g>
<g>
<title>_setcontext (1 samples, 0.05%)</title><rect x="490.2" y="3075.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="493.2" y="3086.0"></text>
</g>
<g>
<title>GCTaskManager::get_task(unsigned int) (7 samples, 0.38%)</title><rect x="490.8" y="3139.0" width="4.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="493.8" y="3150.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (6 samples, 0.33%)</title><rect x="490.8" y="3123.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="493.8" y="3134.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (6 samples, 0.33%)</title><rect x="490.8" y="3107.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="493.8" y="3118.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (5 samples, 0.27%)</title><rect x="490.8" y="3091.0" width="3.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="493.8" y="3102.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (5 samples, 0.27%)</title><rect x="490.8" y="3075.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="493.8" y="3086.0"></text>
</g>
<g>
<title>__psynch_cvwait (5 samples, 0.27%)</title><rect x="490.8" y="3059.0" width="3.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="493.8" y="3070.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.05%)</title><rect x="494.0" y="3091.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="497.0" y="3102.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.05%)</title><rect x="494.0" y="3075.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="497.0" y="3086.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.05%)</title><rect x="494.7" y="3123.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="497.7" y="3134.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.05%)</title><rect x="494.7" y="3107.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="497.7" y="3118.0"></text>
</g>
<g>
<title>GCTaskManager::note_completion(unsigned int) (1 samples, 0.05%)</title><rect x="495.3" y="3139.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="498.3" y="3150.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="495.3" y="3123.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="498.3" y="3134.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.05%)</title><rect x="495.3" y="3107.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="498.3" y="3118.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.05%)</title><rect x="495.3" y="3091.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="498.3" y="3102.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.05%)</title><rect x="495.3" y="3075.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="498.3" y="3086.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.05%)</title><rect x="495.3" y="3059.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="498.3" y="3070.0"></text>
</g>
<g>
<title>MarkFromRootsTask::do_it(GCTaskManager*, unsigned int) (8 samples, 0.43%)</title><rect x="496.0" y="3139.0" width="5.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="499.0" y="3150.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (7 samples, 0.38%)</title><rect x="496.0" y="3123.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="499.0" y="3134.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (4 samples, 0.22%)</title><rect x="497.2" y="3107.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="500.2" y="3118.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (4 samples, 0.22%)</title><rect x="497.2" y="3091.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="500.2" y="3102.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="499.2" y="3075.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="502.2" y="3086.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (1 samples, 0.05%)</title><rect x="499.8" y="3107.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="502.8" y="3118.0"></text>
</g>
<g>
<title>SystemDictionary::roots_oops_do(OopClosure*, OopClosure*) (1 samples, 0.05%)</title><rect x="500.4" y="3123.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="503.4" y="3134.0"></text>
</g>
<g>
<title>Dictionary::roots_oops_do(OopClosure*, OopClosure*) (1 samples, 0.05%)</title><rect x="500.4" y="3107.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="503.4" y="3118.0"></text>
</g>
<g>
<title>OldToYoungRootsTask::do_it(GCTaskManager*, unsigned int) (47 samples, 2.55%)</title><rect x="501.1" y="3139.0" width="30.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="504.1" y="3150.0">Ol..</text>
</g>
<g>
<title>CardTableExtension::scavenge_contents_parallel(ObjectStartArray*, MutableSpace*, HeapWord*, PSPromotionManager*, unsigned int, unsigned int) (47 samples, 2.55%)</title><rect x="501.1" y="3123.0" width="30.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="504.1" y="3134.0">Ca..</text>
</g>
<g>
<title>ObjArrayKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="501.7" y="3107.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="504.7" y="3118.0"></text>
</g>
<g>
<title>ObjectStartArray::object_start(HeapWord*) const (2 samples, 0.11%)</title><rect x="502.4" y="3107.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="505.4" y="3118.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.11%)</title><rect x="502.4" y="3091.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="505.4" y="3102.0"></text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (42 samples, 2.28%)</title><rect x="503.6" y="3107.0" width="26.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="506.6" y="3118.0">P..</text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (32 samples, 1.74%)</title><rect x="510.0" y="3091.0" width="20.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="513.0" y="3102.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (29 samples, 1.57%)</title><rect x="512.0" y="3075.0" width="18.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="515.0" y="3086.0"></text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (5 samples, 0.27%)</title><rect x="520.9" y="3059.0" width="3.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="523.9" y="3070.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (3 samples, 0.16%)</title><rect x="522.2" y="3043.0" width="1.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="525.2" y="3054.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (5 samples, 0.27%)</title><rect x="524.1" y="3059.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="527.1" y="3070.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (3 samples, 0.16%)</title><rect x="527.3" y="3059.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="530.3" y="3070.0"></text>
</g>
<g>
<title>_setcontext (1 samples, 0.05%)</title><rect x="529.3" y="3059.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="532.3" y="3070.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.05%)</title><rect x="529.9" y="3059.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="532.9" y="3070.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (1 samples, 0.05%)</title><rect x="530.5" y="3107.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="533.5" y="3118.0"></text>
</g>
<g>
<title>PSParallelCompact::update_and_deadwood_in_dense_prefix(ParCompactionManager*, PSParallelCompact::SpaceId, unsigned long, unsigned long) (18 samples, 0.98%)</title><rect x="531.2" y="3139.0" width="11.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="534.2" y="3150.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, ParMarkBitMapClosure*, unsigned long, unsigned long, unsigned long) const (17 samples, 0.92%)</title><rect x="531.2" y="3123.0" width="10.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="534.2" y="3134.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (2 samples, 0.11%)</title><rect x="533.7" y="3107.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="536.7" y="3118.0"></text>
</g>
<g>
<title>UpdateOnlyClosure::do_addr(HeapWord*, unsigned long) (11 samples, 0.60%)</title><rect x="535.0" y="3107.0" width="7.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="538.0" y="3118.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (4 samples, 0.22%)</title><rect x="538.2" y="3091.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="541.2" y="3102.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (2 samples, 0.11%)</title><rect x="539.5" y="3075.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="542.5" y="3086.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="540.8" y="3091.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="543.8" y="3102.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="540.8" y="3075.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="543.8" y="3086.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="541.4" y="3091.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="544.4" y="3102.0"></text>
</g>
<g>
<title>UpdateOnlyClosure::do_addr(HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="542.1" y="3123.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="545.1" y="3134.0"></text>
</g>
<g>
<title>ScavengeRootsTask::do_it(GCTaskManager*, unsigned int) (12 samples, 0.65%)</title><rect x="542.7" y="3139.0" width="7.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="545.7" y="3150.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::oops_do(OopClosure*, KlassClosure*, bool) (12 samples, 0.65%)</title><rect x="542.7" y="3123.0" width="7.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="545.7" y="3134.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (7 samples, 0.38%)</title><rect x="542.7" y="3107.0" width="4.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="545.7" y="3118.0"></text>
</g>
<g>
<title>PSScavengeKlassClosure::do_klass(Klass*) (6 samples, 0.33%)</title><rect x="543.3" y="3091.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="546.3" y="3102.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (5 samples, 0.27%)</title><rect x="547.2" y="3107.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="550.2" y="3118.0"></text>
</g>
<g>
<title>JNIHandleBlock::oops_do(OopClosure*) (4 samples, 0.22%)</title><rect x="547.8" y="3091.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="550.8" y="3102.0"></text>
</g>
<g>
<title>StealMarkingTask::do_it(GCTaskManager*, unsigned int) (431 samples, 23.39%)</title><rect x="550.4" y="3139.0" width="275.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="553.4" y="3150.0">StealMarkingTask::do_it(GCTaskManager..</text>
</g>
<g>
<title>GenericTaskQueueSet&lt;GenericTaskQueue&lt;oopDesc*, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal(unsigned int, int*, oopDesc*&amp;) (3 samples, 0.16%)</title><rect x="550.4" y="3123.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="553.4" y="3134.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;GenericTaskQueue&lt;oopDesc*, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, oopDesc*&amp;) (3 samples, 0.16%)</title><rect x="550.4" y="3107.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="553.4" y="3118.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="552.3" y="3123.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="555.3" y="3134.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.05%)</title><rect x="552.3" y="3107.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="555.3" y="3118.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="552.3" y="3091.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="555.3" y="3102.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (99 samples, 5.37%)</title><rect x="552.9" y="3123.0" width="63.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="555.9" y="3134.0">ParComp..</text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (45 samples, 2.44%)</title><rect x="560.0" y="3107.0" width="28.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="563.0" y="3118.0">In..</text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.05%)</title><rect x="562.5" y="3091.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="565.5" y="3102.0"></text>
</g>
<g>
<title>ParallelCompactData::add_obj(HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="563.2" y="3091.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="566.2" y="3102.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;oopDesc*&gt;(ParCompactionManager*, oopDesc**) (2 samples, 0.11%)</title><rect x="563.8" y="3091.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="566.8" y="3102.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (37 samples, 2.01%)</title><rect x="565.1" y="3091.0" width="23.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="568.1" y="3102.0">v..</text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (13 samples, 0.71%)</title><rect x="571.5" y="3075.0" width="8.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="574.5" y="3086.0"></text>
</g>
<g>
<title>ParallelCompactData::add_obj(HeapWord*, unsigned long) (8 samples, 0.43%)</title><rect x="579.8" y="3075.0" width="5.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="582.8" y="3086.0"></text>
</g>
<g>
<title>oopDesc::size() (6 samples, 0.33%)</title><rect x="585.0" y="3075.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="588.0" y="3086.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="588.8" y="3107.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="591.8" y="3118.0"></text>
</g>
<g>
<title>PSParallelCompact::follow_class_loader(ParCompactionManager*, ClassLoaderData*) (1 samples, 0.05%)</title><rect x="588.8" y="3091.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="591.8" y="3102.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (1 samples, 0.05%)</title><rect x="588.8" y="3075.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="591.8" y="3086.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;oopDesc*&gt;(ParCompactionManager*, oopDesc**) (1 samples, 0.05%)</title><rect x="588.8" y="3059.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="591.8" y="3070.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.05%)</title><rect x="588.8" y="3043.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="591.8" y="3054.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.05%)</title><rect x="589.4" y="3107.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="592.4" y="3118.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (39 samples, 2.12%)</title><rect x="590.1" y="3107.0" width="24.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="593.1" y="3118.0">O..</text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (36 samples, 1.95%)</title><rect x="590.1" y="3091.0" width="23.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="593.1" y="3102.0">v..</text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (35 samples, 1.90%)</title><rect x="590.7" y="3075.0" width="22.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="593.7" y="3086.0">v..</text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (10 samples, 0.54%)</title><rect x="595.2" y="3059.0" width="6.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="598.2" y="3070.0"></text>
</g>
<g>
<title>ParallelCompactData::add_obj(HeapWord*, unsigned long) (4 samples, 0.22%)</title><rect x="601.6" y="3059.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="604.6" y="3070.0"></text>
</g>
<g>
<title>oopDesc::size() (14 samples, 0.76%)</title><rect x="604.2" y="3059.0" width="8.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="607.2" y="3070.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (3 samples, 0.16%)</title><rect x="613.1" y="3091.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="616.1" y="3102.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (1 samples, 0.05%)</title><rect x="615.0" y="3107.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="618.0" y="3118.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;oopDesc*&gt;(ParCompactionManager*, oopDesc**) (1 samples, 0.05%)</title><rect x="615.7" y="3107.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="618.7" y="3118.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (77 samples, 4.18%)</title><rect x="616.3" y="3123.0" width="49.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="619.3" y="3134.0">Paral..</text>
</g>
<g>
<title>xdrmem_ops_aligned (61 samples, 3.31%)</title><rect x="626.6" y="3107.0" width="39.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="629.6" y="3118.0">xdr..</text>
</g>
<g>
<title>SpinPause (251 samples, 13.62%)</title><rect x="665.6" y="3123.0" width="160.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="668.6" y="3134.0">SpinPause</text>
</g>
<g>
<title>StealRegionCompactionTask::do_it(GCTaskManager*, unsigned int) (8 samples, 0.43%)</title><rect x="826.3" y="3139.0" width="5.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="829.3" y="3150.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.05%)</title><rect x="826.3" y="3123.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="829.3" y="3134.0"></text>
</g>
<g>
<title>xdrmem_ops_aligned (1 samples, 0.05%)</title><rect x="826.3" y="3107.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="829.3" y="3118.0"></text>
</g>
<g>
<title>SpinPause (7 samples, 0.38%)</title><rect x="827.0" y="3123.0" width="4.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="830.0" y="3134.0"></text>
</g>
<g>
<title>StealTask::do_it(GCTaskManager*, unsigned int) (411 samples, 22.30%)</title><rect x="831.5" y="3139.0" width="263.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="834.5" y="3150.0">StealTask::do_it(GCTaskManager*, un..</text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)1, 131072u&gt;, (MemoryType)1&gt;::steal(unsigned int, int*, StarTask&amp;) (8 samples, 0.43%)</title><rect x="831.5" y="3123.0" width="5.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="834.5" y="3134.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)1, 131072u&gt;, (MemoryType)1&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (6 samples, 0.33%)</title><rect x="832.1" y="3107.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="835.1" y="3118.0"></text>
</g>
<g>
<title>GenericTaskQueue&lt;StarTask, (MemoryType)1, 131072u&gt;::pop_global(StarTask volatile&amp;) (3 samples, 0.16%)</title><rect x="834.0" y="3091.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="837.0" y="3102.0"></text>
</g>
<g>
<title>TaskQueueSetSuper::randomParkAndMiller(int*) (1 samples, 0.05%)</title><rect x="835.9" y="3107.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="838.9" y="3118.0"></text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (392 samples, 21.27%)</title><rect x="836.6" y="3123.0" width="251.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="839.6" y="3134.0">PSPromotionManager::drain_stacks_..</text>
</g>
<g>
<title>GenericTaskQueue&lt;StarTask, (MemoryType)1, 131072u&gt;::pop_local_slow(unsigned int, TaskQueueSuper&lt;131072u, (MemoryType)1&gt;::Age) (4 samples, 0.22%)</title><rect x="861.5" y="3107.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="864.5" y="3118.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (345 samples, 18.72%)</title><rect x="864.1" y="3107.0" width="220.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="867.1" y="3118.0">PSPromotionManager::process_p..</text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (3 samples, 0.16%)</title><rect x="882.0" y="3091.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="885.0" y="3102.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="884.0" y="3091.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="887.0" y="3102.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (312 samples, 16.93%)</title><rect x="884.6" y="3091.0" width="199.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="887.6" y="3102.0">oopDesc* PSPromotionManage..</text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (43 samples, 2.33%)</title><rect x="962.1" y="3075.0" width="27.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="965.1" y="3086.0">C..</text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (20 samples, 1.09%)</title><rect x="976.8" y="3059.0" width="12.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="979.8" y="3070.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (74 samples, 4.02%)</title><rect x="989.6" y="3075.0" width="47.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="992.6" y="3086.0">Inst..</text>
</g>
<g>
<title>void PSPromotionManager::push_depth&lt;unsigned int&gt;(unsigned int*) (4 samples, 0.22%)</title><rect x="1034.4" y="3059.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1037.4" y="3070.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (42 samples, 2.28%)</title><rect x="1037.0" y="3075.0" width="26.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1040.0" y="3086.0">O..</text>
</g>
<g>
<title>void PSPromotionManager::push_depth&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.11%)</title><rect x="1062.6" y="3059.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1065.6" y="3070.0"></text>
</g>
<g>
<title>PSOldGen::cas_allocate(unsigned long) (1 samples, 0.05%)</title><rect x="1063.9" y="3075.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1066.9" y="3086.0"></text>
</g>
<g>
<title>PSOldGen::cas_allocate_noexpand(unsigned long) (1 samples, 0.05%)</title><rect x="1063.9" y="3059.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1066.9" y="3070.0"></text>
</g>
<g>
<title>PSOldPromotionLAB::allocate(unsigned long) (4 samples, 0.22%)</title><rect x="1064.5" y="3075.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1067.5" y="3086.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="1067.1" y="3075.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1070.1" y="3086.0"></text>
</g>
<g>
<title>_setcontext (1 samples, 0.05%)</title><rect x="1067.7" y="3075.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1070.7" y="3086.0"></text>
</g>
<g>
<title>oopDesc::size() (24 samples, 1.30%)</title><rect x="1068.4" y="3075.0" width="15.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1071.4" y="3086.0"></text>
</g>
<g>
<title>void PSPromotionManager::push_depth&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.05%)</title><rect x="1083.7" y="3075.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1086.7" y="3086.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.05%)</title><rect x="1084.4" y="3091.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1087.4" y="3102.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (4 samples, 0.22%)</title><rect x="1085.0" y="3107.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1088.0" y="3118.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (10 samples, 0.54%)</title><rect x="1087.6" y="3123.0" width="6.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1090.6" y="3134.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (2 samples, 0.11%)</title><rect x="1092.7" y="3107.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1095.7" y="3118.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="1092.7" y="3091.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1095.7" y="3102.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.05%)</title><rect x="1093.3" y="3091.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1096.3" y="3102.0"></text>
</g>
<g>
<title>void PSPromotionManager::process_array_chunk_work&lt;unsigned int&gt;(oopDesc*, int, int) (1 samples, 0.05%)</title><rect x="1094.0" y="3123.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1097.0" y="3134.0"></text>
</g>
<g>
<title>ThreadRootsMarkingTask::do_it(GCTaskManager*, unsigned int) (17 samples, 0.92%)</title><rect x="1094.6" y="3139.0" width="10.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1097.6" y="3150.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (17 samples, 0.92%)</title><rect x="1094.6" y="3123.0" width="10.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1097.6" y="3134.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (11 samples, 0.60%)</title><rect x="1095.9" y="3107.0" width="7.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1098.9" y="3118.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (11 samples, 0.60%)</title><rect x="1095.9" y="3091.0" width="7.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1098.9" y="3102.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="1099.7" y="3075.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1102.7" y="3086.0"></text>
</g>
<g>
<title>ParallelCompactData::add_obj(HeapWord*, unsigned long) (2 samples, 0.11%)</title><rect x="1100.4" y="3075.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1103.4" y="3086.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.11%)</title><rect x="1101.6" y="3075.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1104.6" y="3086.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (3 samples, 0.16%)</title><rect x="1102.9" y="3107.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1105.9" y="3118.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (3 samples, 0.16%)</title><rect x="1102.9" y="3091.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1105.9" y="3102.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (3 samples, 0.16%)</title><rect x="1102.9" y="3075.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1105.9" y="3086.0"></text>
</g>
<g>
<title>oopDesc::size() (3 samples, 0.16%)</title><rect x="1102.9" y="3059.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1105.9" y="3070.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (1 samples, 0.05%)</title><rect x="1104.8" y="3107.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1107.8" y="3118.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.05%)</title><rect x="1104.8" y="3091.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1107.8" y="3102.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.05%)</title><rect x="1104.8" y="3075.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1107.8" y="3086.0"></text>
</g>
<g>
<title>JavaThread::run() (100 samples, 5.43%)</title><rect x="1105.5" y="3155.0" width="64.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1108.5" y="3166.0">JavaThr..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (100 samples, 5.43%)</title><rect x="1105.5" y="3139.0" width="64.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1108.5" y="3150.0">JavaThr..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (98 samples, 5.32%)</title><rect x="1105.5" y="3123.0" width="62.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1108.5" y="3134.0">Compil..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (88 samples, 4.77%)</title><rect x="1105.5" y="3107.0" width="56.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1108.5" y="3118.0">Compil..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (75 samples, 4.07%)</title><rect x="1105.5" y="3091.0" width="48.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1108.5" y="3102.0">C2Co..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (75 samples, 4.07%)</title><rect x="1105.5" y="3075.0" width="48.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1108.5" y="3086.0">Comp..</text>
</g>
<g>
<title>Compile::Code_Gen() (40 samples, 2.17%)</title><rect x="1105.5" y="3059.0" width="25.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1108.5" y="3070.0">C..</text>
</g>
<g>
<title>Compile::Output() (5 samples, 0.27%)</title><rect x="1105.5" y="3043.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1108.5" y="3054.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (5 samples, 0.27%)</title><rect x="1105.5" y="3027.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1108.5" y="3038.0"></text>
</g>
<g>
<title>CodeBuffer::initialize(int, int) (1 samples, 0.05%)</title><rect x="1105.5" y="3011.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1108.5" y="3022.0"></text>
</g>
<g>
<title>BufferBlob::create(char const*, int) (1 samples, 0.05%)</title><rect x="1105.5" y="2995.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1108.5" y="3006.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (1 samples, 0.05%)</title><rect x="1105.5" y="2979.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1108.5" y="2990.0"></text>
</g>
<g>
<title>CodeHeap::expand_by(unsigned long) (1 samples, 0.05%)</title><rect x="1105.5" y="2963.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1108.5" y="2974.0"></text>
</g>
<g>
<title>VirtualSpace::expand_by(unsigned long, bool) (1 samples, 0.05%)</title><rect x="1105.5" y="2947.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1108.5" y="2958.0"></text>
</g>
<g>
<title>os::commit_memory(char*, unsigned long, unsigned long, bool) (1 samples, 0.05%)</title><rect x="1105.5" y="2931.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1108.5" y="2942.0"></text>
</g>
<g>
<title>os::pd_commit_memory(char*, unsigned long, unsigned long, bool) (1 samples, 0.05%)</title><rect x="1105.5" y="2915.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1108.5" y="2926.0"></text>
</g>
<g>
<title>__mmap (1 samples, 0.05%)</title><rect x="1105.5" y="2899.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1108.5" y="2910.0"></text>
</g>
<g>
<title>Compile::init_scratch_buffer_blob(int) (2 samples, 0.11%)</title><rect x="1106.1" y="3011.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1109.1" y="3022.0"></text>
</g>
<g>
<title>BufferBlob::create(char const*, int) (2 samples, 0.11%)</title><rect x="1106.1" y="2995.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1109.1" y="3006.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (2 samples, 0.11%)</title><rect x="1106.1" y="2979.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1109.1" y="2990.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long, bool) (2 samples, 0.11%)</title><rect x="1106.1" y="2963.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1109.1" y="2974.0"></text>
</g>
<g>
<title>CodeHeap::search_freelist(unsigned long, bool) (2 samples, 0.11%)</title><rect x="1106.1" y="2947.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1109.1" y="2958.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.05%)</title><rect x="1107.4" y="3011.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1110.4" y="3022.0"></text>
</g>
<g>
<title>addP_rReg_immNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.05%)</title><rect x="1107.4" y="2995.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1110.4" y="3006.0"></text>
</g>
<g>
<title>MachNode::alignment_required() const (1 samples, 0.05%)</title><rect x="1108.0" y="3011.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1111.0" y="3022.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (3 samples, 0.16%)</title><rect x="1108.7" y="3043.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1111.7" y="3054.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.05%)</title><rect x="1109.3" y="3027.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1112.3" y="3038.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, ciMethod*, int, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.05%)</title><rect x="1109.3" y="3011.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1112.3" y="3022.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.05%)</title><rect x="1109.3" y="2995.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1112.3" y="3006.0"></text>
</g>
<g>
<title>DIR_Chunk::find_match(GrowableArray&lt;DIR_Chunk*&gt;*, int, DebugInformationRecorder*) (1 samples, 0.05%)</title><rect x="1109.3" y="2979.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1112.3" y="2990.0"></text>
</g>
<g>
<title>NonSafepointEmitter::observe_instruction(Node*, int) (1 samples, 0.05%)</title><rect x="1110.0" y="3027.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1113.0" y="3038.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.05%)</title><rect x="1110.0" y="3011.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1113.0" y="3022.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, ciMethod*, int, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.05%)</title><rect x="1110.0" y="2995.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1113.0" y="3006.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.05%)</title><rect x="1110.0" y="2979.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1113.0" y="2990.0"></text>
</g>
<g>
<title>Matcher::match() (4 samples, 0.22%)</title><rect x="1110.6" y="3043.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1113.6" y="3054.0"></text>
</g>
<g>
<title>Arena::destruct_contents() (1 samples, 0.05%)</title><rect x="1110.6" y="3027.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1113.6" y="3038.0"></text>
</g>
<g>
<title>Chunk::operator delete(void*) (1 samples, 0.05%)</title><rect x="1110.6" y="3011.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1113.6" y="3022.0"></text>
</g>
<g>
<title>free_large (1 samples, 0.05%)</title><rect x="1110.6" y="2995.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1113.6" y="3006.0"></text>
</g>
<g>
<title>mvm_deallocate_pages (1 samples, 0.05%)</title><rect x="1110.6" y="2979.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1113.6" y="2990.0"></text>
</g>
<g>
<title>si_module_static_search.search_vtable (1 samples, 0.05%)</title><rect x="1110.6" y="2963.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1113.6" y="2974.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.05%)</title><rect x="1111.2" y="3027.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1114.2" y="3038.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.05%)</title><rect x="1111.2" y="3011.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1114.2" y="3022.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.11%)</title><rect x="1111.9" y="3027.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1114.9" y="3038.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.05%)</title><rect x="1112.5" y="3011.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1115.5" y="3022.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.05%)</title><rect x="1113.2" y="3043.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1116.2" y="3054.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.05%)</title><rect x="1113.2" y="3027.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1116.2" y="3038.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.05%)</title><rect x="1113.2" y="3011.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1116.2" y="3022.0"></text>
</g>
<g>
<title>Node::del_out(Node*) (1 samples, 0.05%)</title><rect x="1113.2" y="2995.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1116.2" y="3006.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.11%)</title><rect x="1113.8" y="3043.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1116.8" y="3054.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.11%)</title><rect x="1113.8" y="3027.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1116.8" y="3038.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_List&amp;) (2 samples, 0.11%)</title><rect x="1113.8" y="3011.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1116.8" y="3022.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (1 samples, 0.05%)</title><rect x="1113.8" y="2995.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1116.8" y="3006.0"></text>
</g>
<g>
<title>Node_Array::insert(unsigned int, Node*) (1 samples, 0.05%)</title><rect x="1113.8" y="2979.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1116.8" y="2990.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.05%)</title><rect x="1113.8" y="2963.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1116.8" y="2974.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1113.8" y="2947.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1116.8" y="2958.0"></text>
</g>
<g>
<title>PhiNode::Opcode() const (1 samples, 0.05%)</title><rect x="1114.4" y="2995.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1117.4" y="3006.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (25 samples, 1.36%)</title><rect x="1115.1" y="3043.0" width="16.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1118.1" y="3054.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (3 samples, 0.16%)</title><rect x="1115.1" y="3027.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1118.1" y="3038.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.05%)</title><rect x="1117.0" y="3027.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1120.0" y="3038.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.05%)</title><rect x="1117.0" y="3011.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1120.0" y="3022.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1117.0" y="2995.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1120.0" y="3006.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1 samples, 0.05%)</title><rect x="1117.7" y="3027.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1120.7" y="3038.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.05%)</title><rect x="1117.7" y="3011.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1120.7" y="3022.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1117.7" y="2995.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1120.7" y="3006.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.11%)</title><rect x="1118.3" y="3027.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1121.3" y="3038.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (5 samples, 0.27%)</title><rect x="1119.6" y="3027.0" width="3.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1122.6" y="3038.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1120.2" y="3011.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1123.2" y="3022.0"></text>
</g>
<g>
<title>IndexSetIterator::next() (1 samples, 0.05%)</title><rect x="1120.9" y="3011.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1123.9" y="3022.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.05%)</title><rect x="1121.5" y="3011.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1124.5" y="3022.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.05%)</title><rect x="1121.5" y="2995.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1124.5" y="3006.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.05%)</title><rect x="1122.1" y="3011.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1125.1" y="3022.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.05%)</title><rect x="1122.8" y="3027.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1125.8" y="3038.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.05%)</title><rect x="1122.8" y="3011.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1125.8" y="3022.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1122.8" y="2995.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1125.8" y="3006.0"></text>
</g>
<g>
<title>PhaseChaitin::compact() (1 samples, 0.05%)</title><rect x="1123.4" y="3027.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1126.4" y="3038.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (1 samples, 0.05%)</title><rect x="1124.1" y="3027.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1127.1" y="3038.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (4 samples, 0.22%)</title><rect x="1124.7" y="3027.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1127.7" y="3038.0"></text>
</g>
<g>
<title>MachNode::cisc_RegMask() const (1 samples, 0.05%)</title><rect x="1125.3" y="3011.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1128.3" y="3022.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.05%)</title><rect x="1126.0" y="3011.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1129.0" y="3022.0"></text>
</g>
<g>
<title>TypeNode::ideal_reg() const (1 samples, 0.05%)</title><rect x="1126.6" y="3011.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1129.6" y="3022.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.11%)</title><rect x="1127.3" y="3027.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1130.3" y="3038.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.05%)</title><rect x="1128.5" y="3027.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1131.5" y="3038.0"></text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (1 samples, 0.05%)</title><rect x="1128.5" y="3011.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1131.5" y="3022.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1128.5" y="2995.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1131.5" y="3006.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (3 samples, 0.16%)</title><rect x="1129.2" y="3027.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1132.2" y="3038.0"></text>
</g>
<g>
<title>IndexSet::insert(unsigned int) (2 samples, 0.11%)</title><rect x="1129.2" y="3011.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1132.2" y="3022.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.05%)</title><rect x="1129.8" y="2995.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1132.8" y="3006.0"></text>
</g>
<g>
<title>IndexSet::alloc_block() (1 samples, 0.05%)</title><rect x="1129.8" y="2979.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1132.8" y="2990.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.05%)</title><rect x="1130.5" y="3011.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1133.5" y="3022.0"></text>
</g>
<g>
<title>Compile::Optimize() (23 samples, 1.25%)</title><rect x="1131.1" y="3059.0" width="14.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1134.1" y="3070.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.05%)</title><rect x="1131.1" y="3043.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1134.1" y="3054.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.05%)</title><rect x="1131.1" y="3027.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1134.1" y="3038.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) (1 samples, 0.05%)</title><rect x="1131.1" y="3011.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1134.1" y="3022.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.05%)</title><rect x="1131.7" y="3043.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1134.7" y="3054.0"></text>
</g>
<g>
<title>Unique_Node_List::pop() (1 samples, 0.05%)</title><rect x="1131.7" y="3027.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1134.7" y="3038.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.05%)</title><rect x="1132.4" y="3043.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1135.4" y="3054.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.05%)</title><rect x="1132.4" y="3027.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1135.4" y="3038.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (1 samples, 0.05%)</title><rect x="1132.4" y="3011.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1135.4" y="3022.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.05%)</title><rect x="1132.4" y="2995.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1135.4" y="3006.0"></text>
</g>
<g>
<title>TypeAryPtr::add_offset(long) const (1 samples, 0.05%)</title><rect x="1132.4" y="2979.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1135.4" y="2990.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="1132.4" y="2963.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1135.4" y="2974.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.05%)</title><rect x="1132.4" y="2947.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1135.4" y="2958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::PhaseIdealLoop(PhaseIterGVN&amp;, bool, bool) (1 samples, 0.05%)</title><rect x="1133.0" y="3043.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1136.0" y="3054.0"></text>
</g>
<g>
<title>PhaseTransform::PhaseTransform(Phase::PhaseNumber) (1 samples, 0.05%)</title><rect x="1133.0" y="3027.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1136.0" y="3038.0"></text>
</g>
<g>
<title>Type_Array::grow(unsigned int) (1 samples, 0.05%)</title><rect x="1133.0" y="3011.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1136.0" y="3022.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1133.0" y="2995.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1136.0" y="3006.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1133.0" y="2979.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1136.0" y="2990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (13 samples, 0.71%)</title><rect x="1133.7" y="3043.0" width="8.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1136.7" y="3054.0"></text>
</g>
<g>
<title>IfTrueNode::Opcode() const (1 samples, 0.05%)</title><rect x="1133.7" y="3027.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1136.7" y="3038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.05%)</title><rect x="1134.3" y="3027.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1137.3" y="3038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (6 samples, 0.33%)</title><rect x="1134.9" y="3027.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1137.9" y="3038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (5 samples, 0.27%)</title><rect x="1135.6" y="3011.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1138.6" y="3022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (4 samples, 0.22%)</title><rect x="1135.6" y="2995.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1138.6" y="3006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (1 samples, 0.05%)</title><rect x="1136.2" y="2979.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1139.2" y="2990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl(Node*, Node*, Node*) (1 samples, 0.05%)</title><rect x="1136.2" y="2963.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1139.2" y="2974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.05%)</title><rect x="1136.2" y="2947.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1139.2" y="2958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::idom_no_update(Node*) const (1 samples, 0.05%)</title><rect x="1136.2" y="2931.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1139.2" y="2942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (2 samples, 0.11%)</title><rect x="1136.9" y="2979.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1139.9" y="2990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::idom_no_update(Node*) const (2 samples, 0.11%)</title><rect x="1136.9" y="2963.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1139.9" y="2974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.05%)</title><rect x="1138.1" y="2995.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1141.1" y="3006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_node(Node*) const (1 samples, 0.05%)</title><rect x="1138.1" y="2979.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1141.1" y="2990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.05%)</title><rect x="1138.8" y="3027.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1141.8" y="3038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.05%)</title><rect x="1138.8" y="3011.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1141.8" y="3022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.05%)</title><rect x="1139.4" y="3027.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1142.4" y="3038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.05%)</title><rect x="1139.4" y="3011.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1142.4" y="3022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.05%)</title><rect x="1139.4" y="2995.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1142.4" y="3006.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="1139.4" y="2979.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1142.4" y="2990.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.05%)</title><rect x="1139.4" y="2963.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1142.4" y="2974.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.05%)</title><rect x="1139.4" y="2947.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1142.4" y="2958.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.05%)</title><rect x="1140.1" y="3027.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1143.1" y="3038.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.05%)</title><rect x="1140.1" y="3011.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1143.1" y="3022.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="1140.1" y="2995.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1143.1" y="3006.0"></text>
</g>
<g>
<title>PhaseIterGVN::register_new_node_with_optimizer(Node*, Node*) (1 samples, 0.05%)</title><rect x="1140.1" y="2979.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1143.1" y="2990.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (1 samples, 0.05%)</title><rect x="1140.7" y="3027.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1143.7" y="3038.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.05%)</title><rect x="1141.3" y="3027.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1144.3" y="3038.0"></text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.05%)</title><rect x="1141.3" y="3011.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1144.3" y="3022.0"></text>
</g>
<g>
<title>Chunk::operator delete(void*) (1 samples, 0.05%)</title><rect x="1141.3" y="2995.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1144.3" y="3006.0"></text>
</g>
<g>
<title>free_large (1 samples, 0.05%)</title><rect x="1141.3" y="2979.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1144.3" y="2990.0"></text>
</g>
<g>
<title>mvm_deallocate_pages (1 samples, 0.05%)</title><rect x="1141.3" y="2963.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1144.3" y="2974.0"></text>
</g>
<g>
<title>si_module_static_search.search_vtable (1 samples, 0.05%)</title><rect x="1141.3" y="2947.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1144.3" y="2958.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (1 samples, 0.05%)</title><rect x="1142.0" y="3043.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1145.0" y="3054.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.22%)</title><rect x="1142.6" y="3043.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1145.6" y="3054.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.16%)</title><rect x="1143.3" y="3027.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1146.3" y="3038.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.05%)</title><rect x="1143.3" y="3011.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1146.3" y="3022.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="1143.9" y="3011.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1146.9" y="3022.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (1 samples, 0.05%)</title><rect x="1143.9" y="2995.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1146.9" y="3006.0"></text>
</g>
<g>
<title>VectorSet::test_set(unsigned int) (1 samples, 0.05%)</title><rect x="1143.9" y="2979.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1146.9" y="2990.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="1144.5" y="3011.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1147.5" y="3022.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) (1 samples, 0.05%)</title><rect x="1144.5" y="2995.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1147.5" y="3006.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1144.5" y="2979.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1147.5" y="2990.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1144.5" y="2963.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1147.5" y="2974.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1144.5" y="2947.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1147.5" y="2958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1144.5" y="2931.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1147.5" y="2942.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.05%)</title><rect x="1144.5" y="2915.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1147.5" y="2926.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.05%)</title><rect x="1144.5" y="2899.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1147.5" y="2910.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.05%)</title><rect x="1145.2" y="3043.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1148.2" y="3054.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.05%)</title><rect x="1145.2" y="3027.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1148.2" y="3038.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.05%)</title><rect x="1145.2" y="3011.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1148.2" y="3022.0"></text>
</g>
<g>
<title>NodeHash::hash_delete(Node const*) (1 samples, 0.05%)</title><rect x="1145.2" y="2995.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1148.2" y="3006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.49%)</title><rect x="1145.8" y="3059.0" width="5.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1148.8" y="3070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.49%)</title><rect x="1145.8" y="3043.0" width="5.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1148.8" y="3054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.49%)</title><rect x="1145.8" y="3027.0" width="5.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1148.8" y="3038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.49%)</title><rect x="1145.8" y="3011.0" width="5.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1148.8" y="3022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.49%)</title><rect x="1145.8" y="2995.0" width="5.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1148.8" y="3006.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.49%)</title><rect x="1145.8" y="2979.0" width="5.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1148.8" y="2990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.43%)</title><rect x="1145.8" y="2963.0" width="5.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1148.8" y="2974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.43%)</title><rect x="1145.8" y="2947.0" width="5.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1148.8" y="2958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.38%)</title><rect x="1145.8" y="2931.0" width="4.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.8" y="2942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.38%)</title><rect x="1145.8" y="2915.0" width="4.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1148.8" y="2926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.38%)</title><rect x="1145.8" y="2899.0" width="4.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1148.8" y="2910.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.38%)</title><rect x="1145.8" y="2883.0" width="4.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1148.8" y="2894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.38%)</title><rect x="1145.8" y="2867.0" width="4.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1148.8" y="2878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.33%)</title><rect x="1145.8" y="2851.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1148.8" y="2862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.33%)</title><rect x="1145.8" y="2835.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1148.8" y="2846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.33%)</title><rect x="1145.8" y="2819.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1148.8" y="2830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.33%)</title><rect x="1145.8" y="2803.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1148.8" y="2814.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.33%)</title><rect x="1145.8" y="2787.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1148.8" y="2798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.33%)</title><rect x="1145.8" y="2771.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1148.8" y="2782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.33%)</title><rect x="1145.8" y="2755.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1148.8" y="2766.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.05%)</title><rect x="1145.8" y="2739.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1148.8" y="2750.0"></text>
</g>
<g>
<title>GraphKit::null_check_receiver_before_call(ciMethod*) (1 samples, 0.05%)</title><rect x="1145.8" y="2723.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1148.8" y="2734.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**) (1 samples, 0.05%)</title><rect x="1145.8" y="2707.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1148.8" y="2718.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.05%)</title><rect x="1145.8" y="2691.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1148.8" y="2702.0"></text>
</g>
<g>
<title>PhaseTransform::intcon(int) (1 samples, 0.05%)</title><rect x="1145.8" y="2675.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1148.8" y="2686.0"></text>
</g>
<g>
<title>PhaseValues::uncached_makecon(Type const*) (1 samples, 0.05%)</title><rect x="1145.8" y="2659.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1148.8" y="2670.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.05%)</title><rect x="1145.8" y="2643.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1148.8" y="2654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.22%)</title><rect x="1146.5" y="2739.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1149.5" y="2750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.22%)</title><rect x="1146.5" y="2723.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1149.5" y="2734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.22%)</title><rect x="1146.5" y="2707.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.5" y="2718.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.22%)</title><rect x="1146.5" y="2691.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.5" y="2702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.22%)</title><rect x="1146.5" y="2675.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1149.5" y="2686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.22%)</title><rect x="1146.5" y="2659.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.5" y="2670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.22%)</title><rect x="1146.5" y="2643.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.5" y="2654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.22%)</title><rect x="1146.5" y="2627.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1149.5" y="2638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.22%)</title><rect x="1146.5" y="2611.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.5" y="2622.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.22%)</title><rect x="1146.5" y="2595.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1149.5" y="2606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.22%)</title><rect x="1146.5" y="2579.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1149.5" y="2590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.22%)</title><rect x="1146.5" y="2563.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1149.5" y="2574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.16%)</title><rect x="1146.5" y="2547.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1149.5" y="2558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.16%)</title><rect x="1146.5" y="2531.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1149.5" y="2542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.16%)</title><rect x="1146.5" y="2515.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1149.5" y="2526.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.11%)</title><rect x="1146.5" y="2499.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1149.5" y="2510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1146.5" y="2483.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1149.5" y="2494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.11%)</title><rect x="1146.5" y="2467.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.5" y="2478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.11%)</title><rect x="1146.5" y="2451.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1149.5" y="2462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.11%)</title><rect x="1146.5" y="2435.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1149.5" y="2446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.11%)</title><rect x="1146.5" y="2419.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.5" y="2430.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.11%)</title><rect x="1146.5" y="2403.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1149.5" y="2414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1146.5" y="2387.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1149.5" y="2398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.11%)</title><rect x="1146.5" y="2371.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1149.5" y="2382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.11%)</title><rect x="1146.5" y="2355.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1149.5" y="2366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.11%)</title><rect x="1146.5" y="2339.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1149.5" y="2350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.11%)</title><rect x="1146.5" y="2323.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.5" y="2334.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.11%)</title><rect x="1146.5" y="2307.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1149.5" y="2318.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.05%)</title><rect x="1146.5" y="2291.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1149.5" y="2302.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.05%)</title><rect x="1146.5" y="2275.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1149.5" y="2286.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.05%)</title><rect x="1146.5" y="2259.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1149.5" y="2270.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.05%)</title><rect x="1146.5" y="2243.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.5" y="2254.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.05%)</title><rect x="1146.5" y="2227.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.5" y="2238.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.05%)</title><rect x="1146.5" y="2211.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1149.5" y="2222.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1146.5" y="2195.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.5" y="2206.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1146.5" y="2179.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1149.5" y="2190.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.05%)</title><rect x="1146.5" y="2163.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1149.5" y="2174.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.05%)</title><rect x="1146.5" y="2147.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.5" y="2158.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.05%)</title><rect x="1146.5" y="2131.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1149.5" y="2142.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.05%)</title><rect x="1146.5" y="2115.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1149.5" y="2126.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.05%)</title><rect x="1146.5" y="2099.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1149.5" y="2110.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.05%)</title><rect x="1146.5" y="2083.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1149.5" y="2094.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.05%)</title><rect x="1146.5" y="2067.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1149.5" y="2078.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.05%)</title><rect x="1146.5" y="2051.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.5" y="2062.0"></text>
</g>
<g>
<title>FieldStreamBase::name() const (1 samples, 0.05%)</title><rect x="1146.5" y="2035.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1149.5" y="2046.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::remove_at(int) (1 samples, 0.05%)</title><rect x="1147.1" y="2291.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1150.1" y="2302.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.05%)</title><rect x="1147.7" y="2499.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1150.7" y="2510.0"></text>
</g>
<g>
<title>PhiNode::slice_memory(TypePtr const*) const (1 samples, 0.05%)</title><rect x="1147.7" y="2483.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1150.7" y="2494.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.05%)</title><rect x="1147.7" y="2467.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.7" y="2478.0"></text>
</g>
<g>
<title>Node::add_out(Node*) (1 samples, 0.05%)</title><rect x="1147.7" y="2451.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1150.7" y="2462.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1148.4" y="2547.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.4" y="2558.0"></text>
</g>
<g>
<title>Parse::do_method_entry() (1 samples, 0.05%)</title><rect x="1149.0" y="2739.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.0" y="2750.0"></text>
</g>
<g>
<title>GraphKit::record_profiled_parameters_for_speculation() (1 samples, 0.05%)</title><rect x="1149.0" y="2723.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1152.0" y="2734.0"></text>
</g>
<g>
<title>RootNode::bottom_type() const (1 samples, 0.05%)</title><rect x="1149.7" y="2851.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.7" y="2862.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.05%)</title><rect x="1150.3" y="2931.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.3" y="2942.0"></text>
</g>
<g>
<title>GraphKit::clean_stack(int) (1 samples, 0.05%)</title><rect x="1150.3" y="2915.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.3" y="2926.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1150.9" y="2963.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1153.9" y="2974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1150.9" y="2947.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.9" y="2958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1150.9" y="2931.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.9" y="2942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1150.9" y="2915.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.9" y="2926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1150.9" y="2899.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1153.9" y="2910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1150.9" y="2883.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.9" y="2894.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1150.9" y="2867.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.9" y="2878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1150.9" y="2851.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1153.9" y="2862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1150.9" y="2835.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1153.9" y="2846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1150.9" y="2819.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.9" y="2830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1150.9" y="2803.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.9" y="2814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1150.9" y="2787.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.9" y="2798.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1150.9" y="2771.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.9" y="2782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1150.9" y="2755.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1153.9" y="2766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1150.9" y="2739.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.9" y="2750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1150.9" y="2723.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1153.9" y="2734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1150.9" y="2707.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.9" y="2718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1150.9" y="2691.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.9" y="2702.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1150.9" y="2675.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.9" y="2686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1150.9" y="2659.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.9" y="2670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1150.9" y="2643.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1153.9" y="2654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1150.9" y="2627.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1153.9" y="2638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1150.9" y="2611.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.9" y="2622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1150.9" y="2595.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.9" y="2606.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1150.9" y="2579.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.9" y="2590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1150.9" y="2563.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.9" y="2574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1150.9" y="2547.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1153.9" y="2558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1150.9" y="2531.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.9" y="2542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1150.9" y="2515.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.9" y="2526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1150.9" y="2499.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.9" y="2510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1150.9" y="2483.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.9" y="2494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1150.9" y="2467.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.9" y="2478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1150.9" y="2451.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1153.9" y="2462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1150.9" y="2435.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.9" y="2446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1150.9" y="2419.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.9" y="2430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1150.9" y="2403.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1153.9" y="2414.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1150.9" y="2387.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.9" y="2398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1150.9" y="2371.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.9" y="2382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1150.9" y="2355.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.9" y="2366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1150.9" y="2339.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.9" y="2350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1150.9" y="2323.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.9" y="2334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1150.9" y="2307.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.9" y="2318.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1150.9" y="2291.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.9" y="2302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1150.9" y="2275.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.9" y="2286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1150.9" y="2259.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1153.9" y="2270.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.05%)</title><rect x="1150.9" y="2243.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.9" y="2254.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1150.9" y="2227.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.9" y="2238.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="1150.9" y="2211.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.9" y="2222.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.05%)</title><rect x="1151.6" y="3059.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.6" y="3070.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.05%)</title><rect x="1151.6" y="3043.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1154.6" y="3054.0"></text>
</g>
<g>
<title>VectorSet::test_set(unsigned int) (1 samples, 0.05%)</title><rect x="1151.6" y="3027.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.6" y="3038.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.05%)</title><rect x="1152.2" y="3059.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.2" y="3070.0"></text>
</g>
<g>
<title>TypeTuple::make_range(ciSignature*) (1 samples, 0.05%)</title><rect x="1152.2" y="3043.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.2" y="3054.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (1 samples, 0.05%)</title><rect x="1152.9" y="3059.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.9" y="3070.0"></text>
</g>
<g>
<title>nmethod::make_not_entrant_or_zombie(unsigned int) (1 samples, 0.05%)</title><rect x="1152.9" y="3043.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.9" y="3054.0"></text>
</g>
<g>
<title>NMethodSweeper::report_state_change(nmethod*) (1 samples, 0.05%)</title><rect x="1152.9" y="3027.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.9" y="3038.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (10 samples, 0.54%)</title><rect x="1153.5" y="3091.0" width="6.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1156.5" y="3102.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (10 samples, 0.54%)</title><rect x="1153.5" y="3075.0" width="6.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.5" y="3086.0"></text>
</g>
<g>
<title>Compilation::compile_method() (10 samples, 0.54%)</title><rect x="1153.5" y="3059.0" width="6.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.5" y="3070.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (9 samples, 0.49%)</title><rect x="1153.5" y="3043.0" width="5.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.5" y="3054.0"></text>
</g>
<g>
<title>Compilation::build_hir() (3 samples, 0.16%)</title><rect x="1153.5" y="3027.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.5" y="3038.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (3 samples, 0.16%)</title><rect x="1153.5" y="3011.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.5" y="3022.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (3 samples, 0.16%)</title><rect x="1153.5" y="2995.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.5" y="3006.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (3 samples, 0.16%)</title><rect x="1153.5" y="2979.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1156.5" y="2990.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (3 samples, 0.16%)</title><rect x="1153.5" y="2963.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.5" y="2974.0"></text>
</g>
<g>
<title>BlockEnd::set_begin(BlockBegin*) (1 samples, 0.05%)</title><rect x="1153.5" y="2947.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1156.5" y="2958.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.11%)</title><rect x="1154.1" y="2947.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1157.1" y="2958.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.11%)</title><rect x="1154.1" y="2931.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1157.1" y="2942.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1154.1" y="2915.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.1" y="2926.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1154.1" y="2899.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1157.1" y="2910.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.05%)</title><rect x="1154.1" y="2883.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.1" y="2894.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.05%)</title><rect x="1154.1" y="2867.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1157.1" y="2878.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1154.1" y="2851.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.1" y="2862.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1154.1" y="2835.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1157.1" y="2846.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1154.1" y="2819.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1157.1" y="2830.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.05%)</title><rect x="1154.1" y="2803.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.1" y="2814.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.05%)</title><rect x="1154.1" y="2787.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.1" y="2798.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1154.1" y="2771.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.1" y="2782.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1154.1" y="2755.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1157.1" y="2766.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1154.1" y="2739.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.1" y="2750.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.05%)</title><rect x="1154.1" y="2723.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1157.1" y="2734.0"></text>
</g>
<g>
<title>Instruction::as_NewArray() (1 samples, 0.05%)</title><rect x="1154.1" y="2707.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1157.1" y="2718.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.05%)</title><rect x="1154.8" y="2915.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.8" y="2926.0"></text>
</g>
<g>
<title>ConstantPool::has_method_type_at_if_loaded(constantPoolHandle, int) (1 samples, 0.05%)</title><rect x="1154.8" y="2899.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.8" y="2910.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.05%)</title><rect x="1155.4" y="3027.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1158.4" y="3038.0"></text>
</g>
<g>
<title>Compilation::emit_code_epilog(LIR_Assembler*) (1 samples, 0.05%)</title><rect x="1155.4" y="3011.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1158.4" y="3022.0"></text>
</g>
<g>
<title>AbstractAssembler::end_a_stub() (1 samples, 0.05%)</title><rect x="1155.4" y="2995.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1158.4" y="3006.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (4 samples, 0.22%)</title><rect x="1156.1" y="3027.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.1" y="3038.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (1 samples, 0.05%)</title><rect x="1156.1" y="3011.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.1" y="3022.0"></text>
</g>
<g>
<title>LIRGenerator::block_do(BlockBegin*) (1 samples, 0.05%)</title><rect x="1156.1" y="2995.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1159.1" y="3006.0"></text>
</g>
<g>
<title>LIRGenerator::do_root(Instruction*) (1 samples, 0.05%)</title><rect x="1156.1" y="2979.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1159.1" y="2990.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (1 samples, 0.05%)</title><rect x="1156.1" y="2963.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.1" y="2974.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (1 samples, 0.05%)</title><rect x="1156.1" y="2947.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1159.1" y="2958.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (3 samples, 0.16%)</title><rect x="1156.7" y="3011.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1159.7" y="3022.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (1 samples, 0.05%)</title><rect x="1156.7" y="2995.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1159.7" y="3006.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 0.05%)</title><rect x="1156.7" y="2979.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.7" y="2990.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(IntervalState, int) (1 samples, 0.05%)</title><rect x="1156.7" y="2963.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1159.7" y="2974.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.05%)</title><rect x="1157.3" y="2995.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1160.3" y="3006.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(LIR_OpList*, IntervalWalker*) (1 samples, 0.05%)</title><rect x="1157.3" y="2979.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1160.3" y="2990.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info(CodeEmitInfo*, int) (1 samples, 0.05%)</title><rect x="1157.3" y="2963.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1160.3" y="2974.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.05%)</title><rect x="1157.3" y="2947.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1160.3" y="2958.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.05%)</title><rect x="1157.3" y="2931.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1160.3" y="2942.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value(int, Instruction*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.05%)</title><rect x="1157.3" y="2915.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1160.3" y="2926.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value_for_operand(LIR_OprDesc*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.05%)</title><rect x="1157.3" y="2899.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1160.3" y="2910.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (1 samples, 0.05%)</title><rect x="1158.0" y="2995.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.0" y="3006.0"></text>
</g>
<g>
<title>LinearScan::add_use(int, int, int, IntervalUseKind, BasicType) (1 samples, 0.05%)</title><rect x="1158.0" y="2979.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.0" y="2990.0"></text>
</g>
<g>
<title>LinearScan::create_interval(int) (1 samples, 0.05%)</title><rect x="1158.0" y="2963.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.0" y="2974.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.05%)</title><rect x="1158.6" y="3027.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1161.6" y="3038.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle) (1 samples, 0.05%)</title><rect x="1158.6" y="3011.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1161.6" y="3022.0"></text>
</g>
<g>
<title>Method::build_interpreter_method_data(methodHandle, Thread*) (1 samples, 0.05%)</title><rect x="1158.6" y="2995.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.6" y="3006.0"></text>
</g>
<g>
<title>MethodData::allocate(ClassLoaderData*, methodHandle, Thread*) (1 samples, 0.05%)</title><rect x="1158.6" y="2979.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1161.6" y="2990.0"></text>
</g>
<g>
<title>MethodData::compute_allocation_size_in_words(methodHandle) (1 samples, 0.05%)</title><rect x="1158.6" y="2963.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1161.6" y="2974.0"></text>
</g>
<g>
<title>MethodData::compute_allocation_size_in_bytes(methodHandle) (1 samples, 0.05%)</title><rect x="1158.6" y="2947.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1161.6" y="2958.0"></text>
</g>
<g>
<title>MethodData::compute_data_size(BytecodeStream*) (1 samples, 0.05%)</title><rect x="1158.6" y="2931.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1161.6" y="2942.0"></text>
</g>
<g>
<title>TypeEntriesAtCall::compute_cell_count(BytecodeStream*) (1 samples, 0.05%)</title><rect x="1158.6" y="2915.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.6" y="2926.0"></text>
</g>
<g>
<title>TypeStackSlotEntries::compute_cell_count(Symbol*, bool, int) (1 samples, 0.05%)</title><rect x="1158.6" y="2899.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1161.6" y="2910.0"></text>
</g>
<g>
<title>SignatureStream::next_non_primitive(int) (1 samples, 0.05%)</title><rect x="1158.6" y="2883.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1161.6" y="2894.0"></text>
</g>
<g>
<title>Compilation::install_code(int) (1 samples, 0.05%)</title><rect x="1159.3" y="3043.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.3" y="3054.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (1 samples, 0.05%)</title><rect x="1159.3" y="3027.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.3" y="3038.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (1 samples, 0.05%)</title><rect x="1159.3" y="3011.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1162.3" y="3022.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (1 samples, 0.05%)</title><rect x="1159.3" y="2995.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1162.3" y="3006.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long, bool) (1 samples, 0.05%)</title><rect x="1159.3" y="2979.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.3" y="2990.0"></text>
</g>
<g>
<title>CodeHeap::search_freelist(unsigned long, bool) (1 samples, 0.05%)</title><rect x="1159.3" y="2963.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1162.3" y="2974.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (1 samples, 0.05%)</title><rect x="1159.9" y="3091.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1162.9" y="3102.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.05%)</title><rect x="1159.9" y="3075.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.9" y="3086.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (2 samples, 0.11%)</title><rect x="1160.5" y="3091.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.5" y="3102.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.11%)</title><rect x="1160.5" y="3075.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.5" y="3086.0"></text>
</g>
<g>
<title>Method::is_method() const volatile (1 samples, 0.05%)</title><rect x="1160.5" y="3059.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.5" y="3070.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.05%)</title><rect x="1161.2" y="3059.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1164.2" y="3070.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1161.2" y="3043.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1164.2" y="3054.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle, ciSymbol*) (1 samples, 0.05%)</title><rect x="1161.2" y="3027.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1164.2" y="3038.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.05%)</title><rect x="1161.2" y="3011.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1164.2" y="3022.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.05%)</title><rect x="1161.2" y="2995.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.2" y="3006.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.05%)</title><rect x="1161.2" y="2979.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.2" y="2990.0"></text>
</g>
<g>
<title>CompileQueue::get() (10 samples, 0.54%)</title><rect x="1161.8" y="3107.0" width="6.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1164.8" y="3118.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.05%)</title><rect x="1161.8" y="3091.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1164.8" y="3102.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.05%)</title><rect x="1161.8" y="3075.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1164.8" y="3086.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (9 samples, 0.49%)</title><rect x="1162.5" y="3091.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.5" y="3102.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (9 samples, 0.49%)</title><rect x="1162.5" y="3075.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.5" y="3086.0"></text>
</g>
<g>
<title>CodeCache::next_nmethod(CodeBlob*) (3 samples, 0.16%)</title><rect x="1162.5" y="3059.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.5" y="3070.0"></text>
</g>
<g>
<title>CodeHeap::next_free(HeapBlock*) const (3 samples, 0.16%)</title><rect x="1162.5" y="3043.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.5" y="3054.0"></text>
</g>
<g>
<title>NMethodSweeper::process_nmethod(nmethod*) (6 samples, 0.33%)</title><rect x="1164.4" y="3059.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1167.4" y="3070.0"></text>
</g>
<g>
<title>CodeCache::reverse_free_ratio() (1 samples, 0.05%)</title><rect x="1164.4" y="3043.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.4" y="3054.0"></text>
</g>
<g>
<title>NMethodSweeper::release_nmethod(nmethod*) (1 samples, 0.05%)</title><rect x="1165.0" y="3043.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1168.0" y="3054.0"></text>
</g>
<g>
<title>CodeHeap::add_to_freelist(HeapBlock*) (1 samples, 0.05%)</title><rect x="1165.0" y="3027.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.0" y="3038.0"></text>
</g>
<g>
<title>nmethod::cleanup_inline_caches() (4 samples, 0.22%)</title><rect x="1165.7" y="3043.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.7" y="3054.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.05%)</title><rect x="1165.7" y="3027.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.7" y="3038.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.05%)</title><rect x="1165.7" y="3011.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1168.7" y="3022.0"></text>
</g>
<g>
<title>CompiledIC::ic_destination() const (1 samples, 0.05%)</title><rect x="1166.3" y="3027.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1169.3" y="3038.0"></text>
</g>
<g>
<title>NativeCall::destination() const (1 samples, 0.05%)</title><rect x="1166.3" y="3011.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.3" y="3022.0"></text>
</g>
<g>
<title>RelocIterator::next() (2 samples, 0.11%)</title><rect x="1167.0" y="3027.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1170.0" y="3038.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (2 samples, 0.11%)</title><rect x="1168.2" y="3123.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.2" y="3134.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (2 samples, 0.11%)</title><rect x="1168.2" y="3107.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1171.2" y="3118.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (2 samples, 0.11%)</title><rect x="1168.2" y="3091.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.2" y="3102.0"></text>
</g>
<g>
<title>JvmtiCompiledMethodLoadEventMark::JvmtiCompiledMethodLoadEventMark(JavaThread*, nmethod*, void*) (1 samples, 0.05%)</title><rect x="1168.2" y="3075.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.2" y="3086.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (1 samples, 0.05%)</title><rect x="1168.2" y="3059.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.2" y="3070.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.05%)</title><rect x="1168.2" y="3043.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.2" y="3054.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (1 samples, 0.05%)</title><rect x="1168.9" y="3075.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1171.9" y="3086.0"></text>
</g>
<g>
<title>Method::jmethod_id() (1 samples, 0.05%)</title><rect x="1168.9" y="3059.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1171.9" y="3070.0"></text>
</g>
<g>
<title>VMThread::run() (26 samples, 1.41%)</title><rect x="1169.5" y="3155.0" width="16.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1172.5" y="3166.0"></text>
</g>
<g>
<title>VMThread::loop() (26 samples, 1.41%)</title><rect x="1169.5" y="3139.0" width="16.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.5" y="3150.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (26 samples, 1.41%)</title><rect x="1169.5" y="3123.0" width="16.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1172.5" y="3134.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (26 samples, 1.41%)</title><rect x="1169.5" y="3107.0" width="16.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.5" y="3118.0"></text>
</g>
<g>
<title>VM_ParallelGCFailedAllocation::doit() (25 samples, 1.36%)</title><rect x="1169.5" y="3091.0" width="16.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.5" y="3102.0"></text>
</g>
<g>
<title>ParallelScavengeHeap::failed_mem_allocate(unsigned long) (25 samples, 1.36%)</title><rect x="1169.5" y="3075.0" width="16.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.5" y="3086.0"></text>
</g>
<g>
<title>PSScavenge::invoke() (25 samples, 1.36%)</title><rect x="1169.5" y="3059.0" width="16.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.5" y="3070.0"></text>
</g>
<g>
<title>PSParallelCompact::invoke_no_policy(bool) (21 samples, 1.14%)</title><rect x="1169.5" y="3043.0" width="13.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.5" y="3054.0"></text>
</g>
<g>
<title>PSParallelCompact::adjust_roots() (8 samples, 0.43%)</title><rect x="1169.5" y="3027.0" width="5.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1172.5" y="3038.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::clear_claimed_marks() (1 samples, 0.05%)</title><rect x="1169.5" y="3011.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.5" y="3022.0"></text>
</g>
<g>
<title>CodeCache::blobs_do(CodeBlobClosure*) (6 samples, 0.33%)</title><rect x="1170.2" y="3011.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.2" y="3022.0"></text>
</g>
<g>
<title>CodeBlobToOopClosure::do_nmethod(nmethod*) (1 samples, 0.05%)</title><rect x="1170.2" y="2995.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.2" y="3006.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.05%)</title><rect x="1170.2" y="2979.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.2" y="2990.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.05%)</title><rect x="1170.2" y="2963.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1173.2" y="2974.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.05%)</title><rect x="1170.8" y="2995.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.8" y="3006.0"></text>
</g>
<g>
<title>metadata_Relocation::unpack_data() (1 samples, 0.05%)</title><rect x="1171.4" y="2995.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1174.4" y="3006.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (3 samples, 0.16%)</title><rect x="1172.1" y="2995.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.1" y="3006.0"></text>
</g>
<g>
<title>RelocIterator::next() (2 samples, 0.11%)</title><rect x="1172.7" y="2979.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.7" y="2990.0"></text>
</g>
<g>
<title>StringTable::buckets_oops_do(OopClosure*, int, int) (1 samples, 0.05%)</title><rect x="1174.0" y="3011.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1177.0" y="3022.0"></text>
</g>
<g>
<title>PSParallelCompact::AdjustPointerClosure::do_oop(oopDesc**) (1 samples, 0.05%)</title><rect x="1174.0" y="2995.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.0" y="3006.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.05%)</title><rect x="1174.0" y="2979.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1177.0" y="2990.0"></text>
</g>
<g>
<title>PSParallelCompact::compact() (1 samples, 0.05%)</title><rect x="1174.6" y="3027.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1177.6" y="3038.0"></text>
</g>
<g>
<title>PSParallelCompact::update_deferred_objects(ParCompactionManager*, PSParallelCompact::SpaceId) (1 samples, 0.05%)</title><rect x="1174.6" y="3011.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1177.6" y="3022.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="1174.6" y="2995.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1177.6" y="3006.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.05%)</title><rect x="1174.6" y="2979.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1177.6" y="2990.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.05%)</title><rect x="1174.6" y="2963.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.6" y="2974.0"></text>
</g>
<g>
<title>PSParallelCompact::marking_phase(ParCompactionManager*, bool, ParallelOldTracer*) (11 samples, 0.60%)</title><rect x="1175.3" y="3027.0" width="7.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.3" y="3038.0"></text>
</g>
<g>
<title>CodeCache::do_unloading(BoolObjectClosure*, bool) (3 samples, 0.16%)</title><rect x="1175.3" y="3011.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1178.3" y="3022.0"></text>
</g>
<g>
<title>CodeCache::next(CodeBlob*) (1 samples, 0.05%)</title><rect x="1175.3" y="2995.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.3" y="3006.0"></text>
</g>
<g>
<title>CodeHeap::next_free(HeapBlock*) const (1 samples, 0.05%)</title><rect x="1175.9" y="2995.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.9" y="3006.0"></text>
</g>
<g>
<title>nmethod::do_unloading(BoolObjectClosure*, bool) (1 samples, 0.05%)</title><rect x="1176.6" y="2995.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.6" y="3006.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.05%)</title><rect x="1176.6" y="2979.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1179.6" y="2990.0"></text>
</g>
<g>
<title>Klass::clean_weak_klass_links(BoolObjectClosure*, bool) (3 samples, 0.16%)</title><rect x="1177.2" y="3011.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.2" y="3022.0"></text>
</g>
<g>
<title>InstanceKlass::clean_weak_instanceklass_links(BoolObjectClosure*) (2 samples, 0.11%)</title><rect x="1177.8" y="2995.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.8" y="3006.0"></text>
</g>
<g>
<title>InstanceKlass::clean_method_data(BoolObjectClosure*) (2 samples, 0.11%)</title><rect x="1177.8" y="2979.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.8" y="2990.0"></text>
</g>
<g>
<title>MethodData::clean_method_data(BoolObjectClosure*) (1 samples, 0.05%)</title><rect x="1178.5" y="2963.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.5" y="2974.0"></text>
</g>
<g>
<title>DataLayout::data_in() (1 samples, 0.05%)</title><rect x="1178.5" y="2947.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.5" y="2958.0"></text>
</g>
<g>
<title>SymbolTable::unlink(int*, int*) (5 samples, 0.27%)</title><rect x="1179.1" y="3011.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.1" y="3022.0"></text>
</g>
<g>
<title>SymbolTable::buckets_unlink(int, int, int*, int*, unsigned long*) (5 samples, 0.27%)</title><rect x="1179.1" y="2995.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.1" y="3006.0"></text>
</g>
<g>
<title>PSParallelCompact::post_compact() (1 samples, 0.05%)</title><rect x="1182.3" y="3027.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.3" y="3038.0"></text>
</g>
<g>
<title>PSParallelCompact::clear_data_covering_space(PSParallelCompact::SpaceId) (1 samples, 0.05%)</title><rect x="1182.3" y="3011.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.3" y="3022.0"></text>
</g>
<g>
<title>BitMap::clear_range(unsigned long, unsigned long) (1 samples, 0.05%)</title><rect x="1182.3" y="2995.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.3" y="3006.0"></text>
</g>
<g>
<title>PSScavenge::invoke_no_policy() (4 samples, 0.22%)</title><rect x="1183.0" y="3043.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.0" y="3054.0"></text>
</g>
<g>
<title>PSIsAliveClosure::do_object_b(oopDesc*) (1 samples, 0.05%)</title><rect x="1183.0" y="3027.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.0" y="3038.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_references(BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*, GCTimer*, GCId) (3 samples, 0.16%)</title><rect x="1183.6" y="3027.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.6" y="3038.0"></text>
</g>
<g>
<title>JNIHandleBlock::weak_oops_do(BoolObjectClosure*, OopClosure*) (2 samples, 0.11%)</title><rect x="1183.6" y="3011.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.6" y="3022.0"></text>
</g>
<g>
<title>PSIsAliveClosure::do_object_b(oopDesc*) (1 samples, 0.05%)</title><rect x="1184.9" y="3011.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.9" y="3022.0"></text>
</g>
<g>
<title>VM_RevokeBias::doit() (1 samples, 0.05%)</title><rect x="1185.5" y="3091.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.5" y="3102.0"></text>
</g>
<g>
<title>revoke_bias(oopDesc*, bool, bool, JavaThread*) (1 samples, 0.05%)</title><rect x="1185.5" y="3075.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1188.5" y="3086.0"></text>
</g>
<g>
<title>get_or_compute_monitor_info(JavaThread*) (1 samples, 0.05%)</title><rect x="1185.5" y="3059.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1188.5" y="3070.0"></text>
</g>
<g>
<title>vframe::java_sender() const (1 samples, 0.05%)</title><rect x="1185.5" y="3043.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.5" y="3054.0"></text>
</g>
<g>
<title>compiledVFrame::sender() const (1 samples, 0.05%)</title><rect x="1185.5" y="3027.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.5" y="3038.0"></text>
</g>
<g>
<title>vframe::sender() const (1 samples, 0.05%)</title><rect x="1185.5" y="3011.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.5" y="3022.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="1185.5" y="2995.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1188.5" y="3006.0"></text>
</g>
<g>
<title>WatcherThread::run() (4 samples, 0.22%)</title><rect x="1186.2" y="3155.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.2" y="3166.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (4 samples, 0.22%)</title><rect x="1186.2" y="3139.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.2" y="3150.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (4 samples, 0.22%)</title><rect x="1186.2" y="3123.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.2" y="3134.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (4 samples, 0.22%)</title><rect x="1186.2" y="3107.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.2" y="3118.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (4 samples, 0.22%)</title><rect x="1186.2" y="3091.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.2" y="3102.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 0.22%)</title><rect x="1186.2" y="3075.0" width="2.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1189.2" y="3086.0"></text>
</g>
<g>
<title>xsbt/boot/Boot.main (2 samples, 0.11%)</title><rect x="1188.7" y="3219.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1191.7" y="3230.0"></text>
</g>
<g>
<title>xsbt/boot/Boot$.main (2 samples, 0.11%)</title><rect x="1188.7" y="3203.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.7" y="3214.0"></text>
</g>
<g>
<title>xsbt/boot/Boot$.runImpl (2 samples, 0.11%)</title><rect x="1188.7" y="3187.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.7" y="3198.0"></text>
</g>
<g>
<title>xsbt/boot/Launch$.apply (2 samples, 0.11%)</title><rect x="1188.7" y="3171.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.7" y="3182.0"></text>
</g>
<g>
<title>xsbt/boot/Launch$.launch (2 samples, 0.11%)</title><rect x="1188.7" y="3155.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1191.7" y="3166.0"></text>
</g>
<g>
<title>xsbt/boot/Launch$$anonfun$apply$1.apply (2 samples, 0.11%)</title><rect x="1188.7" y="3139.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.7" y="3150.0"></text>
</g>
<g>
<title>xsbt/boot/Launch$.run (2 samples, 0.11%)</title><rect x="1188.7" y="3123.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1191.7" y="3134.0"></text>
</g>
<g>
<title>xsbt/boot/Launch$.withContextLoader (2 samples, 0.11%)</title><rect x="1188.7" y="3107.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.7" y="3118.0"></text>
</g>
<g>
<title>xsbt/boot/Launch$$anonfun$run$1.apply (2 samples, 0.11%)</title><rect x="1188.7" y="3091.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.7" y="3102.0"></text>
</g>
<g>
<title>sbt/xMain.run (2 samples, 0.11%)</title><rect x="1188.7" y="3075.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.7" y="3086.0"></text>
</g>
<g>
<title>sbt/internal/XMainConfiguration.run (2 samples, 0.11%)</title><rect x="1188.7" y="3059.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1191.7" y="3070.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.11%)</title><rect x="1188.7" y="3043.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.7" y="3054.0"></text>
</g>
<g>
<title>sun/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.11%)</title><rect x="1188.7" y="3027.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.7" y="3038.0"></text>
</g>
<g>
<title>sun/reflect/NativeMethodAccessorImpl.invoke (2 samples, 0.11%)</title><rect x="1188.7" y="3011.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1191.7" y="3022.0"></text>
</g>
<g>
<title>sun/reflect/NativeMethodAccessorImpl.invoke0 (2 samples, 0.11%)</title><rect x="1188.7" y="2995.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1191.7" y="3006.0"></text>
</g>
<g>
<title>sbt/xMain$.run (2 samples, 0.11%)</title><rect x="1188.7" y="2979.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1191.7" y="2990.0"></text>
</g>
<g>
<title>sbt/StandardMain$.runManaged (2 samples, 0.11%)</title><rect x="1188.7" y="2963.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.7" y="2974.0"></text>
</g>
<g>
<title>sbt/MainLoop$.runLogged (2 samples, 0.11%)</title><rect x="1188.7" y="2947.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.7" y="2958.0"></text>
</g>
<g>
<title>sbt/MainLoop$.runLoggedLoop (2 samples, 0.11%)</title><rect x="1188.7" y="2931.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1191.7" y="2942.0"></text>
</g>
<g>
<title>sbt/MainLoop$.runAndClearLast (2 samples, 0.11%)</title><rect x="1188.7" y="2915.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.7" y="2926.0"></text>
</g>
<g>
<title>sbt/MainLoop$.runWithNewLog (2 samples, 0.11%)</title><rect x="1188.7" y="2899.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.7" y="2910.0"></text>
</g>
<g>
<title>sbt/io/Using.apply (2 samples, 0.11%)</title><rect x="1188.7" y="2883.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.7" y="2894.0"></text>
</g>
<g>
<title>sbt/MainLoop$$$Lambda$537/405036720.apply (2 samples, 0.11%)</title><rect x="1188.7" y="2867.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1191.7" y="2878.0"></text>
</g>
<g>
<title>sbt/MainLoop$.$anonfun$runWithNewLog$1 (2 samples, 0.11%)</title><rect x="1188.7" y="2851.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1191.7" y="2862.0"></text>
</g>
<g>
<title>sbt/MainLoop$.run (2 samples, 0.11%)</title><rect x="1188.7" y="2835.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.7" y="2846.0"></text>
</g>
<g>
<title>sbt/MainLoop$.next (2 samples, 0.11%)</title><rect x="1188.7" y="2819.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.7" y="2830.0"></text>
</g>
<g>
<title>sbt/internal/util/ErrorHandling$.wideConvert (2 samples, 0.11%)</title><rect x="1188.7" y="2803.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1191.7" y="2814.0"></text>
</g>
<g>
<title>sbt/MainLoop$$$Lambda$544/771923297.apply (2 samples, 0.11%)</title><rect x="1188.7" y="2787.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.7" y="2798.0"></text>
</g>
<g>
<title>sbt/MainLoop$.$anonfun$next$1 (2 samples, 0.11%)</title><rect x="1188.7" y="2771.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.7" y="2782.0"></text>
</g>
<g>
<title>sbt/State$StateOpsImpl$.process$extension (2 samples, 0.11%)</title><rect x="1188.7" y="2755.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.7" y="2766.0"></text>
</g>
<g>
<title>sbt/State$StateOpsImpl$.runCmd$1 (2 samples, 0.11%)</title><rect x="1188.7" y="2739.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.7" y="2750.0"></text>
</g>
<g>
<title>sbt/MainLoop$$$Lambda$545/1210939243.apply (2 samples, 0.11%)</title><rect x="1188.7" y="2723.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1191.7" y="2734.0"></text>
</g>
<g>
<title>sbt/MainLoop$.$anonfun$next$2 (2 samples, 0.11%)</title><rect x="1188.7" y="2707.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.7" y="2718.0"></text>
</g>
<g>
<title>sbt/MainLoop$.processCommand (2 samples, 0.11%)</title><rect x="1188.7" y="2691.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1191.7" y="2702.0"></text>
</g>
<g>
<title>sbt/MainLoop$.process$1 (1 samples, 0.05%)</title><rect x="1188.7" y="2675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.7" y="2686.0"></text>
</g>
<g>
<title>sbt/Command$.process (1 samples, 0.05%)</title><rect x="1188.7" y="2659.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.7" y="2670.0"></text>
</g>
<g>
<title>sbt/internal/Act$$$Lambda$3147/1859227008.apply (1 samples, 0.05%)</title><rect x="1188.7" y="2643.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.7" y="2654.0"></text>
</g>
<g>
<title>sbt/internal/Act$.$anonfun$actParser0$4 (1 samples, 0.05%)</title><rect x="1188.7" y="2627.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.7" y="2638.0"></text>
</g>
<g>
<title>sbt/Command$$$Lambda$606/17600354.apply (1 samples, 0.05%)</title><rect x="1188.7" y="2611.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.7" y="2622.0"></text>
</g>
<g>
<title>sbt/Command$.$anonfun$applyEffect$2 (1 samples, 0.05%)</title><rect x="1188.7" y="2595.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.7" y="2606.0"></text>
</g>
<g>
<title>sbt/internal/Aggregation$$$Lambda$3225/1821330375.apply (1 samples, 0.05%)</title><rect x="1188.7" y="2579.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.7" y="2590.0"></text>
</g>
<g>
<title>sbt/internal/Aggregation$.$anonfun$applyDynamicTasks$4 (1 samples, 0.05%)</title><rect x="1188.7" y="2563.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.7" y="2574.0"></text>
</g>
<g>
<title>sbt/internal/Aggregation$.runTasks (1 samples, 0.05%)</title><rect x="1188.7" y="2547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.7" y="2558.0"></text>
</g>
<g>
<title>sbt/internal/Aggregation$.timedRun (1 samples, 0.05%)</title><rect x="1188.7" y="2531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.7" y="2542.0"></text>
</g>
<g>
<title>sbt/EvaluateTask$.withStreams (1 samples, 0.05%)</title><rect x="1188.7" y="2515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.7" y="2526.0"></text>
</g>
<g>
<title>sbt/internal/Aggregation$$$Lambda$3157/1411675719.apply (1 samples, 0.05%)</title><rect x="1188.7" y="2499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.7" y="2510.0"></text>
</g>
<g>
<title>sbt/internal/Aggregation$.$anonfun$timedRun$4 (1 samples, 0.05%)</title><rect x="1188.7" y="2483.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.7" y="2494.0"></text>
</g>
<g>
<title>sbt/EvaluateTask$.runTask (1 samples, 0.05%)</title><rect x="1188.7" y="2467.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1191.7" y="2478.0"></text>
</g>
<g>
<title>sbt/EvaluateTask$.run$1 (1 samples, 0.05%)</title><rect x="1188.7" y="2451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.7" y="2462.0"></text>
</g>
<g>
<title>sbt/EvaluateTask$.liftedTree1$1 (1 samples, 0.05%)</title><rect x="1188.7" y="2435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.7" y="2446.0"></text>
</g>
<g>
<title>sbt/Execute.runKeep (1 samples, 0.05%)</title><rect x="1188.7" y="2419.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1191.7" y="2430.0"></text>
</g>
<g>
<title>sbt/internal/Index$$$Lambda$2209/1442707449.apply (1 samples, 0.05%)</title><rect x="1188.7" y="2403.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1191.7" y="2414.0"></text>
</g>
<g>
<title>sbt/internal/Index$.$anonfun$triggers$5 (1 samples, 0.05%)</title><rect x="1188.7" y="2387.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.7" y="2398.0"></text>
</g>
<g>
<title>sbt/Defaults$$$Lambda$2051/70693329.apply$mcV$sp (1 samples, 0.05%)</title><rect x="1188.7" y="2371.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.7" y="2382.0"></text>
</g>
<g>
<title>sbt/Defaults$.$anonfun$globalSbtCore$20 (1 samples, 0.05%)</title><rect x="1188.7" y="2355.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1191.7" y="2366.0"></text>
</g>
<g>
<title>sbt/internal/Clean$.deleteContents (1 samples, 0.05%)</title><rect x="1188.7" y="2339.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1191.7" y="2350.0"></text>
</g>
<g>
<title>sbt/internal/Clean$.deleteContents (1 samples, 0.05%)</title><rect x="1188.7" y="2323.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.7" y="2334.0"></text>
</g>
<g>
<title>sbt/internal/Clean$.deleteRecursive$1 (1 samples, 0.05%)</title><rect x="1188.7" y="2307.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.7" y="2318.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (1 samples, 0.05%)</title><rect x="1188.7" y="2291.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1191.7" y="2302.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (1 samples, 0.05%)</title><rect x="1188.7" y="2275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.7" y="2286.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (1 samples, 0.05%)</title><rect x="1188.7" y="2259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1191.7" y="2270.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (1 samples, 0.05%)</title><rect x="1188.7" y="2243.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1191.7" y="2254.0"></text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (1 samples, 0.05%)</title><rect x="1188.7" y="2227.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1191.7" y="2238.0"></text>
</g>
<g>
<title>scala/collection/Iterator.foreach (1 samples, 0.05%)</title><rect x="1188.7" y="2211.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1191.7" y="2222.0"></text>
</g>
<g>
<title>sbt/internal/Clean$$$Lambda$2894/219387406.apply (1 samples, 0.05%)</title><rect x="1188.7" y="2195.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.7" y="2206.0"></text>
</g>
<g>
<title>sbt/internal/Clean$.$anonfun$deleteContents$4$adapted (1 samples, 0.05%)</title><rect x="1188.7" y="2179.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.7" y="2190.0"></text>
</g>
<g>
<title>sbt/internal/Clean$.$anonfun$deleteContents$4 (1 samples, 0.05%)</title><rect x="1188.7" y="2163.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.7" y="2174.0"></text>
</g>
<g>
<title>sbt/internal/Clean$$$Lambda$2892/987263357.apply (1 samples, 0.05%)</title><rect x="1188.7" y="2147.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1191.7" y="2158.0"></text>
</g>
<g>
<title>sbt/internal/Clean$.$anonfun$tryDelete$1$adapted (1 samples, 0.05%)</title><rect x="1188.7" y="2131.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1191.7" y="2142.0"></text>
</g>
<g>
<title>sbt/internal/Clean$.$anonfun$tryDelete$1 (1 samples, 0.05%)</title><rect x="1188.7" y="2115.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.7" y="2126.0"></text>
</g>
<g>
<title>java/nio/file/Files.deleteIfExists (1 samples, 0.05%)</title><rect x="1188.7" y="2099.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1191.7" y="2110.0"></text>
</g>
<g>
<title>sun/nio/fs/AbstractFileSystemProvider.deleteIfExists (1 samples, 0.05%)</title><rect x="1188.7" y="2083.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.7" y="2094.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.implDelete (1 samples, 0.05%)</title><rect x="1188.7" y="2067.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1191.7" y="2078.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileAttributes.get (1 samples, 0.05%)</title><rect x="1188.7" y="2051.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.7" y="2062.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.lstat (1 samples, 0.05%)</title><rect x="1188.7" y="2035.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.7" y="2046.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.lstat0 (1 samples, 0.05%)</title><rect x="1188.7" y="2019.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.7" y="2030.0"></text>
</g>
<g>
<title>lstat64 (1 samples, 0.05%)</title><rect x="1188.7" y="2003.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1191.7" y="2014.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/Parser$.parse (1 samples, 0.05%)</title><rect x="1189.4" y="2675.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.4" y="2686.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/ParserMain.parse$ (1 samples, 0.05%)</title><rect x="1189.4" y="2659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.4" y="2670.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/ParserMain.parse (1 samples, 0.05%)</title><rect x="1189.4" y="2643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.4" y="2654.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/Parser$.result (1 samples, 0.05%)</title><rect x="1189.4" y="2627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.4" y="2638.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/ParserMain.result$ (1 samples, 0.05%)</title><rect x="1189.4" y="2611.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1192.4" y="2622.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/ParserMain.result (1 samples, 0.05%)</title><rect x="1189.4" y="2595.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.4" y="2606.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/ParserMain.loop$1 (1 samples, 0.05%)</title><rect x="1189.4" y="2579.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1192.4" y="2590.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/HomParser.derive (1 samples, 0.05%)</title><rect x="1189.4" y="2563.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.4" y="2574.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/MapParser.derive (1 samples, 0.05%)</title><rect x="1189.4" y="2547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.4" y="2558.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/BindParser.derive (1 samples, 0.05%)</title><rect x="1189.4" y="2531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.4" y="2542.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/SeqParser.derive (1 samples, 0.05%)</title><rect x="1189.4" y="2515.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1192.4" y="2526.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/And.derive (1 samples, 0.05%)</title><rect x="1189.4" y="2499.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.4" y="2510.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/MapParser.derive (1 samples, 0.05%)</title><rect x="1189.4" y="2483.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.4" y="2494.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/HomParser.derive (1 samples, 0.05%)</title><rect x="1189.4" y="2467.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1192.4" y="2478.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/And.derive (1 samples, 0.05%)</title><rect x="1189.4" y="2451.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.4" y="2462.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/MatchedString.derive (1 samples, 0.05%)</title><rect x="1189.4" y="2435.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.4" y="2446.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/HomParser.derive (1 samples, 0.05%)</title><rect x="1189.4" y="2419.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.4" y="2430.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/HomParser.derive (1 samples, 0.05%)</title><rect x="1189.4" y="2403.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1192.4" y="2414.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/HomParser.derive (1 samples, 0.05%)</title><rect x="1189.4" y="2387.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.4" y="2398.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/HomParser.derive (1 samples, 0.05%)</title><rect x="1189.4" y="2371.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1192.4" y="2382.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/BindParser.derive (1 samples, 0.05%)</title><rect x="1189.4" y="2355.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.4" y="2366.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/Parser$.derive1 (1 samples, 0.05%)</title><rect x="1189.4" y="2339.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1192.4" y="2350.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/ParserMain.derive1$ (1 samples, 0.05%)</title><rect x="1189.4" y="2323.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.4" y="2334.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/ParserMain.derive1 (1 samples, 0.05%)</title><rect x="1189.4" y="2307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.4" y="2318.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/BindParser.derive (1 samples, 0.05%)</title><rect x="1189.4" y="2291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1192.4" y="2302.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/MapParser.derive (1 samples, 0.05%)</title><rect x="1189.4" y="2275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1192.4" y="2286.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/BindParser.derive (1 samples, 0.05%)</title><rect x="1189.4" y="2259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.4" y="2270.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/HomParser.resultEmpty (1 samples, 0.05%)</title><rect x="1189.4" y="2243.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1192.4" y="2254.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/HomParser.resultEmpty$lzycompute (1 samples, 0.05%)</title><rect x="1189.4" y="2227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.4" y="2238.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/Parser$Failure.or (1 samples, 0.05%)</title><rect x="1189.4" y="2211.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1192.4" y="2222.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/HomParser$$Lambda$574/698747943.apply (1 samples, 0.05%)</title><rect x="1189.4" y="2195.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.4" y="2206.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/HomParser.$anonfun$resultEmpty$4 (1 samples, 0.05%)</title><rect x="1189.4" y="2179.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1192.4" y="2190.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/BindParser.resultEmpty (1 samples, 0.05%)</title><rect x="1189.4" y="2163.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.4" y="2174.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/BindParser.resultEmpty$lzycompute (1 samples, 0.05%)</title><rect x="1189.4" y="2147.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.4" y="2158.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/Parser$Value.flatMap (1 samples, 0.05%)</title><rect x="1189.4" y="2131.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.4" y="2142.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/BindParser$$Lambda$581/1650955365.apply (1 samples, 0.05%)</title><rect x="1189.4" y="2115.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.4" y="2126.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/BindParser.$anonfun$resultEmpty$10 (1 samples, 0.05%)</title><rect x="1189.4" y="2099.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1192.4" y="2110.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/MapParser.resultEmpty (1 samples, 0.05%)</title><rect x="1189.4" y="2083.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.4" y="2094.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/MapParser.resultEmpty$lzycompute (1 samples, 0.05%)</title><rect x="1189.4" y="2067.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.4" y="2078.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/Parser$Value.map (1 samples, 0.05%)</title><rect x="1189.4" y="2051.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.4" y="2062.0"></text>
</g>
<g>
<title>scala/Function1$$Lambda$68/769429195.apply (1 samples, 0.05%)</title><rect x="1189.4" y="2035.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1192.4" y="2046.0"></text>
</g>
<g>
<title>scala/Function1.$anonfun$andThen$1 (1 samples, 0.05%)</title><rect x="1189.4" y="2019.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.4" y="2030.0"></text>
</g>
<g>
<title>sbt/internal/Act$$$Lambda$3095/729401599.apply (1 samples, 0.05%)</title><rect x="1189.4" y="2003.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.4" y="2014.0"></text>
</g>
<g>
<title>sbt/internal/Act$.$anonfun$scopedKeyFull$5 (1 samples, 0.05%)</title><rect x="1189.4" y="1987.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.4" y="1998.0"></text>
</g>
<g>
<title>sbt/internal/Act$.taskKeyExtra (1 samples, 0.05%)</title><rect x="1189.4" y="1971.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1192.4" y="1982.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (1 samples, 0.05%)</title><rect x="1189.4" y="1955.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.4" y="1966.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="1189.4" y="1939.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.4" y="1950.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="1189.4" y="1923.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1192.4" y="1934.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.05%)</title><rect x="1189.4" y="1907.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1192.4" y="1918.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$8/1772160903.apply (1 samples, 0.05%)</title><rect x="1189.4" y="1891.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.4" y="1902.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="1189.4" y="1875.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.4" y="1886.0"></text>
</g>
<g>
<title>sbt/internal/Act$$$Lambda$3104/211251739.apply (1 samples, 0.05%)</title><rect x="1189.4" y="1859.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1192.4" y="1870.0"></text>
</g>
<g>
<title>sbt/internal/Act$.$anonfun$taskKeyExtra$1 (1 samples, 0.05%)</title><rect x="1189.4" y="1843.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.4" y="1854.0"></text>
</g>
<g>
<title>sbt/internal/Act$.taskAxis (1 samples, 0.05%)</title><rect x="1189.4" y="1827.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1192.4" y="1838.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/DefaultParsers$.token (1 samples, 0.05%)</title><rect x="1189.4" y="1811.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.4" y="1822.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/ParserMain.token$ (1 samples, 0.05%)</title><rect x="1189.4" y="1795.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.4" y="1806.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/ParserMain.token (1 samples, 0.05%)</title><rect x="1189.4" y="1779.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.4" y="1790.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/DefaultParsers$.token (1 samples, 0.05%)</title><rect x="1189.4" y="1763.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.4" y="1774.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/ParserMain.token$ (1 samples, 0.05%)</title><rect x="1189.4" y="1747.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.4" y="1758.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/ParserMain.token (1 samples, 0.05%)</title><rect x="1189.4" y="1731.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.4" y="1742.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/DefaultParsers$.mkToken (1 samples, 0.05%)</title><rect x="1189.4" y="1715.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.4" y="1726.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/ParserMain.mkToken$ (1 samples, 0.05%)</title><rect x="1189.4" y="1699.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1192.4" y="1710.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/ParserMain.mkToken (1 samples, 0.05%)</title><rect x="1189.4" y="1683.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.4" y="1694.0"></text>
</g>
<g>
<title>sbt/internal/util/complete/StringLiteral.result (1 samples, 0.05%)</title><rect x="1189.4" y="1667.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1192.4" y="1678.0"></text>
</g>
</g>
</svg>
