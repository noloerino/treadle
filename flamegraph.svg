<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2278" onload="init(evt)" viewBox="0 0 1200 2278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="2261"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="2261"> </text>
<g id="frames">
<g>
<title>all (726 samples, 100.00%)</title><rect x="10.0" y="2227.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="2238.0">all</text>
</g>
<g>
<title>[not_walkable] (1 samples, 0.14%)</title><rect x="10.0" y="2211.0" width="1.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="2222.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.41%)</title><rect x="11.6" y="2211.0" width="4.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="14.6" y="2222.0"></text>
</g>
<g>
<title>java/lang/Thread.run (339 samples, 46.69%)</title><rect x="16.5" y="2211.0" width="551.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.5" y="2222.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (339 samples, 46.69%)</title><rect x="16.5" y="2195.0" width="551.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.5" y="2206.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (339 samples, 46.69%)</title><rect x="16.5" y="2179.0" width="551.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.5" y="2190.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (339 samples, 46.69%)</title><rect x="16.5" y="2163.0" width="551.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.5" y="2174.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (339 samples, 46.69%)</title><rect x="16.5" y="2147.0" width="551.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.5" y="2158.0">java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (339 samples, 46.69%)</title><rect x="16.5" y="2131.0" width="551.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.5" y="2142.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>sbt/CompletionService$$anon$2.call (339 samples, 46.69%)</title><rect x="16.5" y="2115.0" width="551.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.5" y="2126.0">sbt/CompletionService$$anon$2.call</text>
</g>
<g>
<title>sbt/ConcurrentRestrictions$$anon$4$$Lambda$2216/2084041029.apply (339 samples, 46.69%)</title><rect x="16.5" y="2099.0" width="551.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.5" y="2110.0">sbt/ConcurrentRestrictions$$anon$4$$Lambda$2216/2084041029.apply</text>
</g>
<g>
<title>sbt/ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1 (339 samples, 46.69%)</title><rect x="16.5" y="2083.0" width="551.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.5" y="2094.0">sbt/ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1</text>
</g>
<g>
<title>sbt/Execute$$Lambda$2209/1857852787.apply (339 samples, 46.69%)</title><rect x="16.5" y="2067.0" width="551.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.5" y="2078.0">sbt/Execute$$Lambda$2209/1857852787.apply</text>
</g>
<g>
<title>sbt/Execute.$anonfun$submit$1 (339 samples, 46.69%)</title><rect x="16.5" y="2051.0" width="551.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.5" y="2062.0">sbt/Execute.$anonfun$submit$1</text>
</g>
<g>
<title>sbt/Execute.work (339 samples, 46.69%)</title><rect x="16.5" y="2035.0" width="551.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.5" y="2046.0">sbt/Execute.work</text>
</g>
<g>
<title>sbt/internal/util/ErrorHandling$.wideConvert (339 samples, 46.69%)</title><rect x="16.5" y="2019.0" width="551.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.5" y="2030.0">sbt/internal/util/ErrorHandling$.wideConvert</text>
</g>
<g>
<title>sbt/Execute$$Lambda$2218/1083326595.apply (339 samples, 46.69%)</title><rect x="16.5" y="2003.0" width="551.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.5" y="2014.0">sbt/Execute$$Lambda$2218/1083326595.apply</text>
</g>
<g>
<title>sbt/Execute.$anonfun$submit$2 (339 samples, 46.69%)</title><rect x="16.5" y="1987.0" width="551.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.5" y="1998.0">sbt/Execute.$anonfun$submit$2</text>
</g>
<g>
<title>sbt/std/Transform$$anon$4.work (339 samples, 46.69%)</title><rect x="16.5" y="1971.0" width="551.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.5" y="1982.0">sbt/std/Transform$$anon$4.work</text>
</g>
<g>
<title>sbt/std/Transform$$anon$3$$Lambda$2207/1845746463.apply (339 samples, 46.69%)</title><rect x="16.5" y="1955.0" width="551.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.5" y="1966.0">sbt/std/Transform$$anon$3$$Lambda$2207/1845746463.apply</text>
</g>
<g>
<title>sbt/std/Transform$$anon$3.$anonfun$apply$2 (339 samples, 46.69%)</title><rect x="16.5" y="1939.0" width="551.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.5" y="1950.0">sbt/std/Transform$$anon$3.$anonfun$apply$2</text>
</g>
<g>
<title>sbt/Tests$$$Lambda$5427/1723090949.apply (339 samples, 46.69%)</title><rect x="16.5" y="1923.0" width="551.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.5" y="1934.0">sbt/Tests$$$Lambda$5427/1723090949.apply</text>
</g>
<g>
<title>sbt/Tests$.$anonfun$toTask$1 (339 samples, 46.69%)</title><rect x="16.5" y="1907.0" width="551.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.5" y="1918.0">sbt/Tests$.$anonfun$toTask$1</text>
</g>
<g>
<title>sbt/TestFunction.apply (339 samples, 46.69%)</title><rect x="16.5" y="1891.0" width="551.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.5" y="1902.0">sbt/TestFunction.apply</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply (339 samples, 46.69%)</title><rect x="16.5" y="1875.0" width="551.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.5" y="1886.0">sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply (339 samples, 46.69%)</title><rect x="16.5" y="1859.0" width="551.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.5" y="1870.0">sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply</text>
</g>
<g>
<title>sbt/TestFramework$.sbt$TestFramework$$withContextLoader (339 samples, 46.69%)</title><rect x="16.5" y="1843.0" width="551.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.5" y="1854.0">sbt/TestFramework$.sbt$TestFramework$$withContextLoader</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1$$Lambda$5448/923388755.apply (339 samples, 46.69%)</title><rect x="16.5" y="1827.0" width="551.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.5" y="1838.0">sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1$$Lambda$5448/92338875..</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1 (339 samples, 46.69%)</title><rect x="16.5" y="1811.0" width="551.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.5" y="1822.0">sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1</text>
</g>
<g>
<title>sbt/TestRunner.run (339 samples, 46.69%)</title><rect x="16.5" y="1795.0" width="551.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.5" y="1806.0">sbt/TestRunner.run</text>
</g>
<g>
<title>sbt/TestRunner.runTest$1 (339 samples, 46.69%)</title><rect x="16.5" y="1779.0" width="551.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.5" y="1790.0">sbt/TestRunner.runTest$1</text>
</g>
<g>
<title>org/scalatest/tools/Framework$ScalaTestTask.execute (339 samples, 46.69%)</title><rect x="16.5" y="1763.0" width="551.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.5" y="1774.0">org/scalatest/tools/Framework$ScalaTestTask.execute</text>
</g>
<g>
<title>org/scalatest/tools/Framework.org$scalatest$tools$Framework$$runSuite (339 samples, 46.69%)</title><rect x="16.5" y="1747.0" width="551.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.5" y="1758.0">org/scalatest/tools/Framework.org$scalatest$tools$Framework$$runSuite</text>
</g>
<g>
<title>org/scalatest/FlatSpec.run (339 samples, 46.69%)</title><rect x="16.5" y="1731.0" width="551.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.5" y="1742.0">org/scalatest/FlatSpec.run</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.run$ (339 samples, 46.69%)</title><rect x="16.5" y="1715.0" width="551.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.5" y="1726.0">org/scalatest/FlatSpecLike.run$</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.run (339 samples, 46.69%)</title><rect x="16.5" y="1699.0" width="551.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.5" y="1710.0">org/scalatest/FlatSpecLike.run</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runImpl (339 samples, 46.69%)</title><rect x="16.5" y="1683.0" width="551.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.5" y="1694.0">org/scalatest/SuperEngine.runImpl</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike$$Lambda$7992/1181514149.apply (339 samples, 46.69%)</title><rect x="16.5" y="1667.0" width="551.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.5" y="1678.0">org/scalatest/FlatSpecLike$$Lambda$7992/1181514149.apply</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.$anonfun$run$1 (339 samples, 46.69%)</title><rect x="16.5" y="1651.0" width="551.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.5" y="1662.0">org/scalatest/FlatSpecLike.$anonfun$run$1</text>
</g>
<g>
<title>org/scalatest/FlatSpec.org$scalatest$FlatSpecLike$$super$run (339 samples, 46.69%)</title><rect x="16.5" y="1635.0" width="551.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.5" y="1646.0">org/scalatest/FlatSpec.org$scalatest$FlatSpecLike$$super$run</text>
</g>
<g>
<title>org/scalatest/Suite.run$ (339 samples, 46.69%)</title><rect x="16.5" y="1619.0" width="551.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.5" y="1630.0">org/scalatest/Suite.run$</text>
</g>
<g>
<title>org/scalatest/Suite.run (339 samples, 46.69%)</title><rect x="16.5" y="1603.0" width="551.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.5" y="1614.0">org/scalatest/Suite.run</text>
</g>
<g>
<title>org/scalatest/FlatSpec.runTests (339 samples, 46.69%)</title><rect x="16.5" y="1587.0" width="551.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.5" y="1598.0">org/scalatest/FlatSpec.runTests</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.runTests$ (339 samples, 46.69%)</title><rect x="16.5" y="1571.0" width="551.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.5" y="1582.0">org/scalatest/FlatSpecLike.runTests$</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.runTests (339 samples, 46.69%)</title><rect x="16.5" y="1555.0" width="551.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.5" y="1566.0">org/scalatest/FlatSpecLike.runTests</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestsImpl (339 samples, 46.69%)</title><rect x="16.5" y="1539.0" width="551.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.5" y="1550.0">org/scalatest/SuperEngine.runTestsImpl</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestsInBranch (339 samples, 46.69%)</title><rect x="16.5" y="1523.0" width="551.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.5" y="1534.0">org/scalatest/SuperEngine.runTestsInBranch</text>
</g>
<g>
<title>org/scalatest/SuperEngine.traverseSubNodes$1 (339 samples, 46.69%)</title><rect x="16.5" y="1507.0" width="551.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.5" y="1518.0">org/scalatest/SuperEngine.traverseSubNodes$1</text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (339 samples, 46.69%)</title><rect x="16.5" y="1491.0" width="551.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.5" y="1502.0">scala/collection/immutable/List.foreach</text>
</g>
<g>
<title>org/scalatest/SuperEngine$$Lambda$8000/254601195.apply (339 samples, 46.69%)</title><rect x="16.5" y="1475.0" width="551.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.5" y="1486.0">org/scalatest/SuperEngine$$Lambda$8000/254601195.apply</text>
</g>
<g>
<title>org/scalatest/SuperEngine.$anonfun$runTestsInBranch$1 (339 samples, 46.69%)</title><rect x="16.5" y="1459.0" width="551.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.5" y="1470.0">org/scalatest/SuperEngine.$anonfun$runTestsInBranch$1</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestsInBranch (339 samples, 46.69%)</title><rect x="16.5" y="1443.0" width="551.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.5" y="1454.0">org/scalatest/SuperEngine.runTestsInBranch</text>
</g>
<g>
<title>org/scalatest/SuperEngine.traverseSubNodes$1 (339 samples, 46.69%)</title><rect x="16.5" y="1427.0" width="551.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.5" y="1438.0">org/scalatest/SuperEngine.traverseSubNodes$1</text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (339 samples, 46.69%)</title><rect x="16.5" y="1411.0" width="551.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.5" y="1422.0">scala/collection/immutable/List.foreach</text>
</g>
<g>
<title>org/scalatest/SuperEngine$$Lambda$8000/254601195.apply (339 samples, 46.69%)</title><rect x="16.5" y="1395.0" width="551.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.5" y="1406.0">org/scalatest/SuperEngine$$Lambda$8000/254601195.apply</text>
</g>
<g>
<title>org/scalatest/SuperEngine.$anonfun$runTestsInBranch$1 (339 samples, 46.69%)</title><rect x="16.5" y="1379.0" width="551.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.5" y="1390.0">org/scalatest/SuperEngine.$anonfun$runTestsInBranch$1</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike$$Lambda$7999/1811475620.apply (339 samples, 46.69%)</title><rect x="16.5" y="1363.0" width="551.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.5" y="1374.0">org/scalatest/FlatSpecLike$$Lambda$7999/1811475620.apply</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.$anonfun$runTests$1 (339 samples, 46.69%)</title><rect x="16.5" y="1347.0" width="551.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.5" y="1358.0">org/scalatest/FlatSpecLike.$anonfun$runTests$1</text>
</g>
<g>
<title>org/scalatest/FlatSpec.runTest (339 samples, 46.69%)</title><rect x="16.5" y="1331.0" width="551.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.5" y="1342.0">org/scalatest/FlatSpec.runTest</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.runTest$ (339 samples, 46.69%)</title><rect x="16.5" y="1315.0" width="551.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.5" y="1326.0">org/scalatest/FlatSpecLike.runTest$</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.runTest (339 samples, 46.69%)</title><rect x="16.5" y="1299.0" width="551.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.5" y="1310.0">org/scalatest/FlatSpecLike.runTest</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestImpl (339 samples, 46.69%)</title><rect x="16.5" y="1283.0" width="551.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.5" y="1294.0">org/scalatest/SuperEngine.runTestImpl</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike$$Lambda$8015/1152827614.apply (339 samples, 46.69%)</title><rect x="16.5" y="1267.0" width="551.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.5" y="1278.0">org/scalatest/FlatSpecLike$$Lambda$8015/1152827614.apply</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.$anonfun$runTest$1 (339 samples, 46.69%)</title><rect x="16.5" y="1251.0" width="551.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.5" y="1262.0">org/scalatest/FlatSpecLike.$anonfun$runTest$1</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.invokeWithFixture$1 (339 samples, 46.69%)</title><rect x="16.5" y="1235.0" width="551.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.5" y="1246.0">org/scalatest/FlatSpecLike.invokeWithFixture$1</text>
</g>
<g>
<title>org/scalatest/FlatSpec.withFixture (339 samples, 46.69%)</title><rect x="16.5" y="1219.0" width="551.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.5" y="1230.0">org/scalatest/FlatSpec.withFixture</text>
</g>
<g>
<title>org/scalatest/TestSuite.withFixture$ (339 samples, 46.69%)</title><rect x="16.5" y="1203.0" width="551.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.5" y="1214.0">org/scalatest/TestSuite.withFixture$</text>
</g>
<g>
<title>org/scalatest/TestSuite.withFixture (339 samples, 46.69%)</title><rect x="16.5" y="1187.0" width="551.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.5" y="1198.0">org/scalatest/TestSuite.withFixture</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike$$anon$5.apply (339 samples, 46.69%)</title><rect x="16.5" y="1171.0" width="551.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.5" y="1182.0">org/scalatest/FlatSpecLike$$anon$5.apply</text>
</g>
<g>
<title>org/scalatest/Transformer.apply (339 samples, 46.69%)</title><rect x="16.5" y="1155.0" width="551.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.5" y="1166.0">org/scalatest/Transformer.apply</text>
</g>
<g>
<title>org/scalatest/Transformer.apply (339 samples, 46.69%)</title><rect x="16.5" y="1139.0" width="551.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.5" y="1150.0">org/scalatest/Transformer.apply</text>
</g>
<g>
<title>org/scalatest/OutcomeOf$.outcomeOf (339 samples, 46.69%)</title><rect x="16.5" y="1123.0" width="551.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.5" y="1134.0">org/scalatest/OutcomeOf$.outcomeOf</text>
</g>
<g>
<title>org/scalatest/OutcomeOf.outcomeOf$ (339 samples, 46.69%)</title><rect x="16.5" y="1107.0" width="551.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.5" y="1118.0">org/scalatest/OutcomeOf.outcomeOf$</text>
</g>
<g>
<title>org/scalatest/OutcomeOf.outcomeOf (339 samples, 46.69%)</title><rect x="16.5" y="1091.0" width="551.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.5" y="1102.0">org/scalatest/OutcomeOf.outcomeOf</text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (339 samples, 46.69%)</title><rect x="16.5" y="1075.0" width="551.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.5" y="1086.0">scala/runtime/java8/JFunction0$mcV$sp.apply</text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$7979/179325202.apply$mcV$sp (106 samples, 14.60%)</title><rect x="16.5" y="1059.0" width="172.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.5" y="1070.0">treadle/GCDTester$$Lam..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$new$2 (106 samples, 14.60%)</title><rect x="16.5" y="1043.0" width="172.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.5" y="1054.0">treadle/GCDTester.$ano..</text>
</g>
<g>
<title>treadle/GCDTester.sizableTest (106 samples, 14.60%)</title><rect x="16.5" y="1027.0" width="172.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.5" y="1038.0">treadle/GCDTester.siza..</text>
</g>
<g>
<title>treadle/TreadleTester.report (106 samples, 14.60%)</title><rect x="16.5" y="1011.0" width="172.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.5" y="1022.0">treadle/TreadleTester...</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.writeVCD (106 samples, 14.60%)</title><rect x="16.5" y="995.0" width="172.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.5" y="1006.0">treadle/executable/Exe..</text>
</g>
<g>
<title>scala/Option.foreach (106 samples, 14.60%)</title><rect x="16.5" y="979.0" width="172.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.5" y="990.0">scala/Option.foreach</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$$Lambda$8946/1980087394.apply (106 samples, 14.60%)</title><rect x="16.5" y="963.0" width="172.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.5" y="974.0">treadle/executable/Exe..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.$anonfun$writeVCD$1$adapted (106 samples, 14.60%)</title><rect x="16.5" y="947.0" width="172.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.5" y="958.0">treadle/executable/Exe..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.$anonfun$writeVCD$1 (106 samples, 14.60%)</title><rect x="16.5" y="931.0" width="172.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.5" y="942.0">treadle/executable/Exe..</text>
</g>
<g>
<title>treadle/vcd/VCD.write (106 samples, 14.60%)</title><rect x="16.5" y="915.0" width="172.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.5" y="926.0">treadle/vcd/VCD.write</text>
</g>
<g>
<title>treadle/vcd/VCD.serialize (106 samples, 14.60%)</title><rect x="16.5" y="899.0" width="172.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.5" y="910.0">treadle/vcd/VCD.serial..</text>
</g>
<g>
<title>java/io/PrintWriter.print (7 samples, 0.96%)</title><rect x="16.5" y="883.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.5" y="894.0"></text>
</g>
<g>
<title>java/io/PrintWriter.write (7 samples, 0.96%)</title><rect x="16.5" y="867.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.5" y="878.0"></text>
</g>
<g>
<title>java/io/PrintWriter.write (7 samples, 0.96%)</title><rect x="16.5" y="851.0" width="11.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.5" y="862.0"></text>
</g>
<g>
<title>java/io/BufferedWriter.write (7 samples, 0.96%)</title><rect x="16.5" y="835.0" width="11.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.5" y="846.0"></text>
</g>
<g>
<title>java/io/BufferedWriter.flushBuffer (5 samples, 0.69%)</title><rect x="16.5" y="819.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.5" y="830.0"></text>
</g>
<g>
<title>java/io/OutputStreamWriter.write (5 samples, 0.69%)</title><rect x="16.5" y="803.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.write (5 samples, 0.69%)</title><rect x="16.5" y="787.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.implWrite (5 samples, 0.69%)</title><rect x="16.5" y="771.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.5" y="782.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.encode (4 samples, 0.55%)</title><rect x="16.5" y="755.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encodeLoop (4 samples, 0.55%)</title><rect x="16.5" y="739.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.5" y="750.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encodeArrayLoop (4 samples, 0.55%)</title><rect x="16.5" y="723.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.writeBytes (1 samples, 0.14%)</title><rect x="23.0" y="755.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.0" y="766.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.14%)</title><rect x="23.0" y="739.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.0" y="750.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.14%)</title><rect x="23.0" y="723.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.0" y="734.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.14%)</title><rect x="23.0" y="707.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="26.0" y="718.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.14%)</title><rect x="23.0" y="691.0" width="1.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="26.0" y="702.0"></text>
</g>
<g>
<title>write (1 samples, 0.14%)</title><rect x="23.0" y="675.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="26.0" y="686.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.28%)</title><rect x="24.6" y="819.0" width="3.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="27.6" y="830.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.serializeChanges (99 samples, 13.64%)</title><rect x="27.9" y="883.0" width="160.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.9" y="894.0">treadle/vcd/VCD.seri..</text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (98 samples, 13.50%)</title><rect x="27.9" y="867.0" width="159.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.9" y="878.0">scala/collection/imm..</text>
</g>
<g>
<title>scala/runtime/java8/JFunction1$mcVJ$sp.apply (98 samples, 13.50%)</title><rect x="27.9" y="851.0" width="159.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.9" y="862.0">scala/runtime/java8/..</text>
</g>
<g>
<title>treadle/vcd/VCD$$Lambda$8951/93430692.apply$mcVJ$sp (97 samples, 13.36%)</title><rect x="29.5" y="835.0" width="157.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.5" y="846.0">treadle/vcd/VCD$$Lam..</text>
</g>
<g>
<title>treadle/vcd/VCD.$anonfun$serializeChanges$1 (97 samples, 13.36%)</title><rect x="29.5" y="819.0" width="157.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.5" y="830.0">treadle/vcd/VCD.$ano..</text>
</g>
<g>
<title>scala/Option.foreach (95 samples, 13.09%)</title><rect x="29.5" y="803.0" width="154.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.5" y="814.0">scala/Option.foreach</text>
</g>
<g>
<title>treadle/vcd/VCD$$Lambda$8952/1430641685.apply (95 samples, 13.09%)</title><rect x="29.5" y="787.0" width="154.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.5" y="798.0">treadle/vcd/VCD$$Lam..</text>
</g>
<g>
<title>treadle/vcd/VCD.$anonfun$serializeChanges$2$adapted (95 samples, 13.09%)</title><rect x="29.5" y="771.0" width="154.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.5" y="782.0">treadle/vcd/VCD.$ano..</text>
</g>
<g>
<title>treadle/vcd/VCD.$anonfun$serializeChanges$2 (95 samples, 13.09%)</title><rect x="29.5" y="755.0" width="154.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.5" y="766.0">treadle/vcd/VCD.$ano..</text>
</g>
<g>
<title>scala/collection/mutable/HashSet.foreach (95 samples, 13.09%)</title><rect x="29.5" y="739.0" width="154.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.5" y="750.0">scala/collection/mut..</text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="29.5" y="723.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="32.5" y="734.0"></text>
</g>
<g>
<title>treadle/vcd/VCD$$Lambda$8953/27933457.apply (94 samples, 12.95%)</title><rect x="31.1" y="723.0" width="152.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="34.1" y="734.0">treadle/vcd/VCD$$La..</text>
</g>
<g>
<title>treadle/vcd/VCD.$anonfun$serializeChanges$3 (94 samples, 12.95%)</title><rect x="31.1" y="707.0" width="152.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.1" y="718.0">treadle/vcd/VCD.$an..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.69%)</title><rect x="37.6" y="691.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.6" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.69%)</title><rect x="37.6" y="675.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.6" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.55%)</title><rect x="39.3" y="659.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.3" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.55%)</title><rect x="39.3" y="643.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.3" y="654.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="44.1" y="627.0" width="1.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="47.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.14%)</title><rect x="45.8" y="691.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="48.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.14%)</title><rect x="45.8" y="675.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.8" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.14%)</title><rect x="45.8" y="659.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="48.8" y="670.0"></text>
</g>
<g>
<title>scala/collection/mutable/StringBuilder.append (1 samples, 0.14%)</title><rect x="47.4" y="691.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="50.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.14%)</title><rect x="47.4" y="675.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.4" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.14%)</title><rect x="47.4" y="659.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="50.4" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.14%)</title><rect x="47.4" y="643.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.4" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.14%)</title><rect x="47.4" y="627.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="50.4" y="638.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="47.4" y="611.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="50.4" y="622.0"></text>
</g>
<g>
<title>treadle/vcd/Change.serialize (83 samples, 11.43%)</title><rect x="49.0" y="691.0" width="134.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.0" y="702.0">treadle/vcd/Chang..</text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.14%)</title><rect x="50.6" y="675.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.6" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.14%)</title><rect x="50.6" y="659.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.69%)</title><rect x="52.3" y="675.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.3" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.41%)</title><rect x="53.9" y="659.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.9" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.41%)</title><rect x="53.9" y="643.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.9" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.41%)</title><rect x="53.9" y="627.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.9" y="638.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.28%)</title><rect x="55.5" y="611.0" width="3.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="58.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.14%)</title><rect x="58.8" y="659.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.8" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.14%)</title><rect x="58.8" y="643.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.8" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.14%)</title><rect x="58.8" y="627.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.8" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.newCapacity (1 samples, 0.14%)</title><rect x="58.8" y="611.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.8" y="622.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (33 samples, 4.55%)</title><rect x="60.4" y="675.0" width="53.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.4" y="686.0">scala..</text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (33 samples, 4.55%)</title><rect x="60.4" y="659.0" width="53.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.4" y="670.0">scala..</text>
</g>
<g>
<title>scala/collection/TraversableLike.map (33 samples, 4.55%)</title><rect x="60.4" y="643.0" width="53.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.4" y="654.0">scala..</text>
</g>
<g>
<title>itable stub (1 samples, 0.14%)</title><rect x="60.4" y="627.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="63.4" y="638.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.builder$1 (2 samples, 0.28%)</title><rect x="62.0" y="627.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.0" y="638.0"></text>
</g>
<g>
<title>scala/collection/generic/GenTraversableFactory$GenericCanBuildFrom.apply (1 samples, 0.14%)</title><rect x="62.0" y="611.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.0" y="622.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.sizeHint (1 samples, 0.14%)</title><rect x="63.6" y="611.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.6" y="622.0"></text>
</g>
<g>
<title>scala/collection/mutable/Builder.sizeHint$ (1 samples, 0.14%)</title><rect x="63.6" y="595.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.6" y="606.0"></text>
</g>
<g>
<title>scala/collection/mutable/Builder.sizeHint (1 samples, 0.14%)</title><rect x="63.6" y="579.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.6" y="590.0"></text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach (27 samples, 3.72%)</title><rect x="65.3" y="627.0" width="43.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.3" y="638.0">scal..</text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$8/1832580921.apply (17 samples, 2.34%)</title><rect x="68.5" y="611.0" width="27.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="71.5" y="622.0">s..</text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (17 samples, 2.34%)</title><rect x="68.5" y="595.0" width="27.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.5" y="606.0">s..</text>
</g>
<g>
<title>itable stub (4 samples, 0.55%)</title><rect x="68.5" y="579.0" width="6.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="71.5" y="590.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.$plus$eq (8 samples, 1.10%)</title><rect x="75.0" y="579.0" width="13.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.0" y="590.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.$plus$eq (5 samples, 0.69%)</title><rect x="79.9" y="563.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.9" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.gotoNextBlockStartWritable (2 samples, 0.28%)</title><rect x="84.8" y="547.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.8" y="558.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.gotoNextBlockStartWritable$ (2 samples, 0.28%)</title><rect x="84.8" y="531.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.8" y="542.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.gotoNextBlockStartWritable (2 samples, 0.28%)</title><rect x="84.8" y="515.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.8" y="526.0"></text>
</g>
<g>
<title>treadle/vcd/Change$$Lambda$8950/727751310.apply (5 samples, 0.69%)</title><rect x="88.0" y="579.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.0" y="590.0"></text>
</g>
<g>
<title>treadle/vcd/Change.$anonfun$serialize$3$adapted (5 samples, 0.69%)</title><rect x="88.0" y="563.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.0" y="574.0"></text>
</g>
<g>
<title>treadle/vcd/Change.$anonfun$serialize$3 (5 samples, 0.69%)</title><rect x="88.0" y="547.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.0" y="558.0"></text>
</g>
<g>
<title>scala/math/BigInt.testBit (5 samples, 0.69%)</title><rect x="88.0" y="531.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.0" y="542.0"></text>
</g>
<g>
<title>java/math/BigInteger.testBit (5 samples, 0.69%)</title><rect x="88.0" y="515.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.0" y="526.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (5 samples, 0.69%)</title><rect x="88.0" y="499.0" width="8.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.0" y="510.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToInteger (8 samples, 1.10%)</title><rect x="96.1" y="611.0" width="13.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.1" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (8 samples, 1.10%)</title><rect x="96.1" y="595.0" width="13.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.1" y="606.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.55%)</title><rect x="99.4" y="579.0" width="6.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="102.4" y="590.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$8/1832580921.apply (2 samples, 0.28%)</title><rect x="105.9" y="579.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.9" y="590.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.result (3 samples, 0.41%)</title><rect x="109.1" y="627.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.1" y="638.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.result (3 samples, 0.41%)</title><rect x="109.1" y="611.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.1" y="622.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.initFrom (3 samples, 0.41%)</title><rect x="109.1" y="595.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.1" y="606.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (3 samples, 0.41%)</title><rect x="109.1" y="579.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.1" y="590.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (3 samples, 0.41%)</title><rect x="109.1" y="563.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="112.1" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.initFrom (3 samples, 0.41%)</title><rect x="109.1" y="547.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.1" y="558.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (3 samples, 0.41%)</title><rect x="109.1" y="531.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.1" y="542.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (3 samples, 0.41%)</title><rect x="109.1" y="515.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.1" y="526.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.41%)</title><rect x="109.1" y="499.0" width="4.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="112.1" y="510.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.mkString (42 samples, 5.79%)</title><rect x="114.0" y="675.0" width="68.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.0" y="686.0">scala/c..</text>
</g>
<g>
<title>scala/collection/TraversableOnce.mkString$ (42 samples, 5.79%)</title><rect x="114.0" y="659.0" width="68.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.0" y="670.0">scala/c..</text>
</g>
<g>
<title>scala/collection/TraversableOnce.mkString (42 samples, 5.79%)</title><rect x="114.0" y="643.0" width="68.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.0" y="654.0">scala/c..</text>
</g>
<g>
<title>scala/collection/AbstractTraversable.mkString (41 samples, 5.65%)</title><rect x="115.6" y="627.0" width="66.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.6" y="638.0">scala/c..</text>
</g>
<g>
<title>scala/collection/TraversableOnce.mkString$ (41 samples, 5.65%)</title><rect x="115.6" y="611.0" width="66.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.6" y="622.0">scala/c..</text>
</g>
<g>
<title>scala/collection/TraversableOnce.mkString (41 samples, 5.65%)</title><rect x="115.6" y="595.0" width="66.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="118.6" y="606.0">scala/c..</text>
</g>
<g>
<title>scala/collection/AbstractTraversable.addString (41 samples, 5.65%)</title><rect x="115.6" y="579.0" width="66.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.6" y="590.0">scala/c..</text>
</g>
<g>
<title>scala/collection/TraversableOnce.addString$ (40 samples, 5.51%)</title><rect x="117.3" y="563.0" width="65.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.3" y="574.0">scala/c..</text>
</g>
<g>
<title>scala/collection/TraversableOnce.addString (40 samples, 5.51%)</title><rect x="117.3" y="547.0" width="65.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.3" y="558.0">scala/c..</text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (40 samples, 5.51%)</title><rect x="117.3" y="531.0" width="65.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.3" y="542.0">scala/c..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (40 samples, 5.51%)</title><rect x="117.3" y="515.0" width="65.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.3" y="526.0">scala/c..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (40 samples, 5.51%)</title><rect x="117.3" y="499.0" width="65.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.3" y="510.0">scala/c..</text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (36 samples, 4.96%)</title><rect x="117.3" y="483.0" width="58.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.3" y="494.0">scala/..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (36 samples, 4.96%)</title><rect x="117.3" y="467.0" width="58.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.3" y="478.0">scala/..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach (36 samples, 4.96%)</title><rect x="117.3" y="451.0" width="58.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="120.3" y="462.0">scala/..</text>
</g>
<g>
<title>itable stub (7 samples, 0.96%)</title><rect x="118.9" y="435.0" width="11.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="121.9" y="446.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce$$Lambda$35/279972832.apply (19 samples, 2.62%)</title><rect x="130.3" y="435.0" width="30.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="133.3" y="446.0">sc..</text>
</g>
<g>
<title>scala/collection/TraversableOnce.$anonfun$addString$1 (18 samples, 2.48%)</title><rect x="131.9" y="419.0" width="29.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.9" y="430.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/StringBuilder.append (18 samples, 2.48%)</title><rect x="131.9" y="403.0" width="29.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.9" y="414.0">sc..</text>
</g>
<g>
<title>java/lang/String.valueOf (15 samples, 2.07%)</title><rect x="131.9" y="387.0" width="24.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.9" y="398.0">j..</text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.14%)</title><rect x="149.8" y="371.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="152.8" y="382.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (3 samples, 0.41%)</title><rect x="151.4" y="371.0" width="4.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="154.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.41%)</title><rect x="156.3" y="387.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="159.3" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.41%)</title><rect x="156.3" y="371.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.3" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.41%)</title><rect x="156.3" y="355.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="159.3" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.41%)</title><rect x="156.3" y="339.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.3" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.next (8 samples, 1.10%)</title><rect x="161.2" y="435.0" width="13.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="164.2" y="446.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.gotoNextBlockStart (1 samples, 0.14%)</title><rect x="172.5" y="419.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="175.5" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (1 samples, 0.14%)</title><rect x="174.2" y="435.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.2" y="446.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.gotoNextBlockStart (1 samples, 0.14%)</title><rect x="174.2" y="419.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="177.2" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.gotoNextBlockStart$ (1 samples, 0.14%)</title><rect x="174.2" y="403.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toString (1 samples, 0.14%)</title><rect x="174.2" y="387.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="177.2" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (4 samples, 0.55%)</title><rect x="175.8" y="483.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="178.8" y="494.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (4 samples, 0.55%)</title><rect x="175.8" y="467.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.8" y="478.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.initIterator (4 samples, 0.55%)</title><rect x="175.8" y="451.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.8" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.initFrom (3 samples, 0.41%)</title><rect x="175.8" y="435.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.8" y="446.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (3 samples, 0.41%)</title><rect x="175.8" y="419.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.8" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (3 samples, 0.41%)</title><rect x="175.8" y="403.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.8" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.initFrom (3 samples, 0.41%)</title><rect x="175.8" y="387.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.8" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (3 samples, 0.41%)</title><rect x="175.8" y="371.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.8" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (3 samples, 0.41%)</title><rect x="175.8" y="355.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.8" y="366.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.41%)</title><rect x="175.8" y="339.0" width="4.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="178.8" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.stabilize (1 samples, 0.14%)</title><rect x="180.7" y="435.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.7" y="446.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.stabilize$ (1 samples, 0.14%)</title><rect x="180.7" y="419.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.7" y="430.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.14%)</title><rect x="182.3" y="675.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.3" y="686.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.14%)</title><rect x="182.3" y="659.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="185.3" y="670.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (1 samples, 0.14%)</title><rect x="182.3" y="643.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.3" y="654.0"></text>
</g>
<g>
<title>scala/math/BigInt.isValidLong (1 samples, 0.14%)</title><rect x="182.3" y="627.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.3" y="638.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (1 samples, 0.14%)</title><rect x="182.3" y="611.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.3" y="622.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.14%)</title><rect x="182.3" y="595.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="185.3" y="606.0"></text>
</g>
<g>
<title>java/math/BigInteger.valueOf (1 samples, 0.14%)</title><rect x="182.3" y="579.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.3" y="590.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (2 samples, 0.28%)</title><rect x="183.9" y="803.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.9" y="814.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.28%)</title><rect x="183.9" y="787.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="186.9" y="798.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.28%)</title><rect x="183.9" y="771.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="186.9" y="782.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.28%)</title><rect x="183.9" y="755.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.9" y="766.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.28%)</title><rect x="183.9" y="739.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.9" y="750.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.14%)</title><rect x="185.5" y="723.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="188.5" y="734.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.14%)</title><rect x="185.5" y="707.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.5" y="718.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.14%)</title><rect x="185.5" y="691.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="188.5" y="702.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.14%)</title><rect x="185.5" y="675.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.5" y="686.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.14%)</title><rect x="185.5" y="659.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="188.5" y="670.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.14%)</title><rect x="185.5" y="643.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.5" y="654.0"></text>
</g>
<g>
<title>scala/collection/mutable/StringBuilder.toString (1 samples, 0.14%)</title><rect x="187.2" y="867.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.2" y="878.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.14%)</title><rect x="187.2" y="851.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="190.2" y="862.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="187.2" y="835.0" width="1.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="190.2" y="846.0"></text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$7980/10616355.apply$mcV$sp (233 samples, 32.09%)</title><rect x="188.8" y="1059.0" width="378.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.8" y="1070.0">treadle/GCDTester$$Lambda$7980/10616355.apply$mcV$sp</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$new$3 (233 samples, 32.09%)</title><rect x="188.8" y="1043.0" width="378.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.8" y="1054.0">treadle/GCDTester.$anonfun$new$3</text>
</g>
<g>
<title>treadle/GCDTester.sizableTest (233 samples, 32.09%)</title><rect x="188.8" y="1027.0" width="378.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.8" y="1038.0">treadle/GCDTester.sizableTest</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.foreach (86 samples, 11.85%)</title><rect x="188.8" y="1011.0" width="139.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.8" y="1022.0">scala/collection/..</text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (86 samples, 11.85%)</title><rect x="188.8" y="995.0" width="139.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.8" y="1006.0">scala/collection/..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (86 samples, 11.85%)</title><rect x="188.8" y="979.0" width="139.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.8" y="990.0">scala/collection/..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (86 samples, 11.85%)</title><rect x="188.8" y="963.0" width="139.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.8" y="974.0">scala/collection/..</text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (86 samples, 11.85%)</title><rect x="188.8" y="947.0" width="139.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.8" y="958.0">scala/collection/..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (86 samples, 11.85%)</title><rect x="188.8" y="931.0" width="139.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.8" y="942.0">scala/collection/..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach (86 samples, 11.85%)</title><rect x="188.8" y="915.0" width="139.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.8" y="926.0">scala/collection/..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter$$Lambda$363/989080133.apply (86 samples, 11.85%)</title><rect x="188.8" y="899.0" width="139.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="191.8" y="910.0">scala/collection/..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.$anonfun$foreach$1 (86 samples, 11.85%)</title><rect x="188.8" y="883.0" width="139.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.8" y="894.0">scala/collection/..</text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$8937/1508522719.apply (86 samples, 11.85%)</title><rect x="188.8" y="867.0" width="139.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.8" y="878.0">treadle/GCDTester..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$sizableTest$4$adapted (86 samples, 11.85%)</title><rect x="188.8" y="851.0" width="139.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.8" y="862.0">treadle/GCDTester..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$sizableTest$4 (86 samples, 11.85%)</title><rect x="188.8" y="835.0" width="139.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.8" y="846.0">treadle/GCDTester..</text>
</g>
<g>
<title>treadle/TreadleTester.peek (28 samples, 3.86%)</title><rect x="188.8" y="819.0" width="45.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.8" y="830.0">trea..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (26 samples, 3.58%)</title><rect x="188.8" y="803.0" width="42.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.8" y="814.0">trea..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (26 samples, 3.58%)</title><rect x="188.8" y="787.0" width="42.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.8" y="798.0">trea..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (24 samples, 3.31%)</title><rect x="192.0" y="771.0" width="39.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.0" y="782.0">tre..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (24 samples, 3.31%)</title><rect x="192.0" y="755.0" width="39.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.0" y="766.0">tre..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$8993/630735195.apply$mcV$sp (14 samples, 1.93%)</title><rect x="193.7" y="739.0" width="22.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="196.7" y="750.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (14 samples, 1.93%)</title><rect x="193.7" y="723.0" width="22.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.7" y="734.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (14 samples, 1.93%)</title><rect x="193.7" y="707.0" width="22.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.7" y="718.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (12 samples, 1.65%)</title><rect x="193.7" y="691.0" width="19.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.7" y="702.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (12 samples, 1.65%)</title><rect x="193.7" y="675.0" width="19.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.7" y="686.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (12 samples, 1.65%)</title><rect x="193.7" y="659.0" width="19.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.7" y="670.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (12 samples, 1.65%)</title><rect x="193.7" y="643.0" width="19.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.7" y="654.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8940/1813723654.apply (12 samples, 1.65%)</title><rect x="193.7" y="627.0" width="19.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.7" y="638.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (12 samples, 1.65%)</title><rect x="193.7" y="611.0" width="19.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="196.7" y="622.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (12 samples, 1.65%)</title><rect x="193.7" y="595.0" width="19.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.7" y="606.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (4 samples, 0.55%)</title><rect x="193.7" y="579.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="196.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/379517125.linkToTargetMethod (1 samples, 0.14%)</title><rect x="195.3" y="563.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/733504799.invokeStatic_LLIL_L (1 samples, 0.14%)</title><rect x="195.3" y="547.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.3" y="558.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$8942/1282100420.get$Lambda (1 samples, 0.14%)</title><rect x="195.3" y="531.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.3" y="542.0"></text>
</g>
<g>
<title>scala/Option.foreach (1 samples, 0.14%)</title><rect x="196.9" y="563.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.9" y="574.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$8942/1282100420.apply (1 samples, 0.14%)</title><rect x="196.9" y="547.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="199.9" y="558.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (1 samples, 0.14%)</title><rect x="196.9" y="531.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.9" y="542.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (1 samples, 0.14%)</title><rect x="196.9" y="515.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="199.9" y="526.0"></text>
</g>
<g>
<title>treadle/executable/SubBigs.apply (1 samples, 0.14%)</title><rect x="198.5" y="563.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="201.5" y="574.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.run (8 samples, 1.10%)</title><rect x="200.2" y="579.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.2" y="590.0"></text>
</g>
<g>
<title>scala/Option.foreach (8 samples, 1.10%)</title><rect x="200.2" y="563.0" width="13.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.2" y="574.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$8941/1667554720.apply (8 samples, 1.10%)</title><rect x="200.2" y="547.0" width="13.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.2" y="558.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5$adapted (8 samples, 1.10%)</title><rect x="200.2" y="531.0" width="13.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.2" y="542.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5 (8 samples, 1.10%)</title><rect x="200.2" y="515.0" width="13.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.2" y="526.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (8 samples, 1.10%)</title><rect x="200.2" y="499.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.2" y="510.0"></text>
</g>
<g>
<title>logger/Logger.info (3 samples, 0.41%)</title><rect x="200.2" y="483.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.2" y="494.0"></text>
</g>
<g>
<title>logger/Logger$.logger$Logger$$showMessage (3 samples, 0.41%)</title><rect x="200.2" y="467.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.2" y="478.0"></text>
</g>
<g>
<title>logger/Logger$.state (2 samples, 0.28%)</title><rect x="200.2" y="451.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.2" y="462.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (2 samples, 0.28%)</title><rect x="200.2" y="435.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.2" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.28%)</title><rect x="200.2" y="419.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.2" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (2 samples, 0.28%)</title><rect x="200.2" y="403.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.2" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.28%)</title><rect x="200.2" y="387.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.2" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.28%)</title><rect x="200.2" y="371.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.2" y="382.0"></text>
</g>
<g>
<title>logger/Logger$.testPackageNameMatch (1 samples, 0.14%)</title><rect x="203.4" y="451.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.4" y="462.0"></text>
</g>
<g>
<title>logger/Logger$.state (1 samples, 0.14%)</title><rect x="203.4" y="435.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="206.4" y="446.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (1 samples, 0.14%)</title><rect x="203.4" y="419.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.4" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.14%)</title><rect x="203.4" y="403.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.4" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.14%)</title><rect x="203.4" y="387.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.4" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.14%)</title><rect x="203.4" y="371.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.4" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.14%)</title><rect x="203.4" y="355.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.4" y="366.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (4 samples, 0.55%)</title><rect x="205.0" y="483.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.0" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (4 samples, 0.55%)</title><rect x="205.0" y="467.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.0" y="478.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (4 samples, 0.55%)</title><rect x="205.0" y="451.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="208.0" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (4 samples, 0.55%)</title><rect x="205.0" y="435.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.0" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (3 samples, 0.41%)</title><rect x="206.7" y="419.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.14%)</title><rect x="206.7" y="403.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.7" y="414.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.index (2 samples, 0.28%)</title><rect x="208.3" y="403.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="211.3" y="414.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index$ (2 samples, 0.28%)</title><rect x="208.3" y="387.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="211.3" y="398.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index (2 samples, 0.28%)</title><rect x="208.3" y="371.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.3" y="382.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.improve (2 samples, 0.28%)</title><rect x="208.3" y="355.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="211.3" y="366.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve$ (2 samples, 0.28%)</title><rect x="208.3" y="339.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="211.3" y="350.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve (2 samples, 0.28%)</title><rect x="208.3" y="323.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.3" y="334.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isTempWire (1 samples, 0.14%)</title><rect x="211.5" y="483.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="214.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String.split (1 samples, 0.14%)</title><rect x="211.5" y="467.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.split (1 samples, 0.14%)</title><rect x="211.5" y="451.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.5" y="462.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$8982/871761655.apply (2 samples, 0.28%)</title><rect x="213.2" y="691.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="216.2" y="702.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$15 (2 samples, 0.28%)</title><rect x="213.2" y="675.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="216.2" y="686.0"></text>
</g>
<g>
<title>treadle/executable/TailBigs.apply (2 samples, 0.28%)</title><rect x="213.2" y="659.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.2" y="670.0"></text>
</g>
<g>
<title>scala/math/BigInt.$amp (2 samples, 0.28%)</title><rect x="213.2" y="643.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.2" y="654.0"></text>
</g>
<g>
<title>java/math/BigInteger.and (2 samples, 0.28%)</title><rect x="213.2" y="627.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.2" y="638.0"></text>
</g>
<g>
<title>java/math/BigInteger.valueOf (2 samples, 0.28%)</title><rect x="213.2" y="611.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.2" y="622.0"></text>
</g>
<g>
<title>java/math/BigInteger.&lt;init&gt; (2 samples, 0.28%)</title><rect x="213.2" y="595.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.2" y="606.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$8927/123455058.apply$mcV$sp (9 samples, 1.24%)</title><rect x="216.4" y="739.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.4" y="750.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (9 samples, 1.24%)</title><rect x="216.4" y="723.0" width="14.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="219.4" y="734.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (9 samples, 1.24%)</title><rect x="216.4" y="707.0" width="14.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="219.4" y="718.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (9 samples, 1.24%)</title><rect x="216.4" y="691.0" width="14.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.4" y="702.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (9 samples, 1.24%)</title><rect x="216.4" y="675.0" width="14.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="219.4" y="686.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (9 samples, 1.24%)</title><rect x="216.4" y="659.0" width="14.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="219.4" y="670.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (9 samples, 1.24%)</title><rect x="216.4" y="643.0" width="14.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.4" y="654.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8940/1813723654.apply (9 samples, 1.24%)</title><rect x="216.4" y="627.0" width="14.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.4" y="638.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (9 samples, 1.24%)</title><rect x="216.4" y="611.0" width="14.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="219.4" y="622.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (9 samples, 1.24%)</title><rect x="216.4" y="595.0" width="14.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.4" y="606.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (2 samples, 0.28%)</title><rect x="216.4" y="579.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="219.4" y="590.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (2 samples, 0.28%)</title><rect x="216.4" y="563.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="219.4" y="574.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.14%)</title><rect x="218.0" y="547.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.0" y="558.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.14%)</title><rect x="218.0" y="531.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="221.0" y="542.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.14%)</title><rect x="218.0" y="515.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="221.0" y="526.0"></text>
</g>
<g>
<title>scala/math/BigInt$.minCached (1 samples, 0.14%)</title><rect x="218.0" y="499.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.0" y="510.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.run (7 samples, 0.96%)</title><rect x="219.7" y="579.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.7" y="590.0"></text>
</g>
<g>
<title>scala/Option.foreach (7 samples, 0.96%)</title><rect x="219.7" y="563.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.7" y="574.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$8941/1667554720.apply (7 samples, 0.96%)</title><rect x="219.7" y="547.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="222.7" y="558.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5$adapted (7 samples, 0.96%)</title><rect x="219.7" y="531.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.7" y="542.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5 (7 samples, 0.96%)</title><rect x="219.7" y="515.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="222.7" y="526.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (7 samples, 0.96%)</title><rect x="219.7" y="499.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="222.7" y="510.0"></text>
</g>
<g>
<title>logger/Logger.info (1 samples, 0.14%)</title><rect x="219.7" y="483.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.7" y="494.0"></text>
</g>
<g>
<title>logger/Logger$.logger$Logger$$showMessage (1 samples, 0.14%)</title><rect x="219.7" y="467.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.7" y="478.0"></text>
</g>
<g>
<title>logger/Logger$.testPackageNameMatch (1 samples, 0.14%)</title><rect x="219.7" y="451.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="222.7" y="462.0"></text>
</g>
<g>
<title>logger/Logger$.state (1 samples, 0.14%)</title><rect x="219.7" y="435.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="222.7" y="446.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (1 samples, 0.14%)</title><rect x="219.7" y="419.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="222.7" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.14%)</title><rect x="219.7" y="403.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="222.7" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.14%)</title><rect x="219.7" y="387.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.7" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.14%)</title><rect x="219.7" y="371.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.7" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.14%)</title><rect x="219.7" y="355.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.7" y="366.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (2 samples, 0.28%)</title><rect x="221.3" y="483.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.3" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.28%)</title><rect x="221.3" y="467.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.3" y="478.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.28%)</title><rect x="221.3" y="451.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="224.3" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.28%)</title><rect x="221.3" y="435.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="224.3" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.28%)</title><rect x="221.3" y="419.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.3" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.14%)</title><rect x="222.9" y="403.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="225.9" y="414.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.14%)</title><rect x="222.9" y="387.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="225.9" y="398.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.14%)</title><rect x="222.9" y="371.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="225.9" y="382.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.14%)</title><rect x="222.9" y="355.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="225.9" y="366.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.14%)</title><rect x="222.9" y="339.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.9" y="350.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.14%)</title><rect x="222.9" y="323.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="225.9" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (1 samples, 0.14%)</title><rect x="224.5" y="483.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.5" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (1 samples, 0.14%)</title><rect x="224.5" y="467.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.5" y="478.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (1 samples, 0.14%)</title><rect x="224.5" y="451.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.5" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (1 samples, 0.14%)</title><rect x="224.5" y="435.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.5" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (1 samples, 0.14%)</title><rect x="224.5" y="419.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.5" y="430.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.14%)</title><rect x="224.5" y="403.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.5" y="414.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.14%)</title><rect x="224.5" y="387.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.5" y="398.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isNewValue (2 samples, 0.28%)</title><rect x="226.2" y="483.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="229.2" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (2 samples, 0.28%)</title><rect x="226.2" y="467.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="229.2" y="478.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.28%)</title><rect x="226.2" y="451.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="229.2" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.28%)</title><rect x="226.2" y="435.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="229.2" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.28%)</title><rect x="226.2" y="419.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="229.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.14%)</title><rect x="226.2" y="403.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.2" y="414.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.14%)</title><rect x="227.8" y="403.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.8" y="414.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.14%)</title><rect x="227.8" y="387.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="230.8" y="398.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.14%)</title><rect x="227.8" y="371.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.8" y="382.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.14%)</title><rect x="227.8" y="355.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.8" y="366.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.14%)</title><rect x="227.8" y="339.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.8" y="350.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.14%)</title><rect x="227.8" y="323.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="230.8" y="334.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.14%)</title><rect x="227.8" y="307.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.8" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.table (1 samples, 0.14%)</title><rect x="227.8" y="291.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.8" y="302.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isTempWire (1 samples, 0.14%)</title><rect x="229.4" y="483.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="232.4" y="494.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.combinationalBump (2 samples, 0.28%)</title><rect x="231.0" y="803.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="234.0" y="814.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.incrementTime (2 samples, 0.28%)</title><rect x="231.0" y="787.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.0" y="798.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.runUntil (2 samples, 0.28%)</title><rect x="231.0" y="771.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="234.0" y="782.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.setTime (2 samples, 0.28%)</title><rect x="231.0" y="755.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.0" y="766.0"></text>
</g>
<g>
<title>treadle/TreadleTester$$Lambda$8908/1823200126.apply$mcV$sp (1 samples, 0.14%)</title><rect x="231.0" y="739.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="234.0" y="750.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$2 (1 samples, 0.14%)</title><rect x="231.0" y="723.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.0" y="734.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$8927/123455058.apply$mcV$sp (1 samples, 0.14%)</title><rect x="232.7" y="739.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="235.7" y="750.0"></text>
</g>
<g>
<title>treadle/TreadleTester.step (58 samples, 7.99%)</title><rect x="234.3" y="819.0" width="94.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.3" y="830.0">treadle/Tre..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.run (58 samples, 7.99%)</title><rect x="234.3" y="803.0" width="94.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.3" y="814.0">treadle/exe..</text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach$mVc$sp (58 samples, 7.99%)</title><rect x="234.3" y="787.0" width="94.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.3" y="798.0">scala/colle..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper$$Lambda$8939/1689241742.apply$mcVI$sp (58 samples, 7.99%)</title><rect x="234.3" y="771.0" width="94.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="237.3" y="782.0">treadle/exe..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.$anonfun$run$2 (58 samples, 7.99%)</title><rect x="234.3" y="755.0" width="94.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.3" y="766.0">treadle/exe..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (3 samples, 0.41%)</title><rect x="234.3" y="739.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.3" y="750.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (3 samples, 0.41%)</title><rect x="234.3" y="723.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.3" y="734.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (3 samples, 0.41%)</title><rect x="234.3" y="707.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.3" y="718.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (3 samples, 0.41%)</title><rect x="234.3" y="691.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.3" y="702.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$8993/630735195.apply$mcV$sp (3 samples, 0.41%)</title><rect x="234.3" y="675.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.3" y="686.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (3 samples, 0.41%)</title><rect x="234.3" y="659.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.3" y="670.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (3 samples, 0.41%)</title><rect x="234.3" y="643.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="237.3" y="654.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (1 samples, 0.14%)</title><rect x="234.3" y="627.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.3" y="638.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.14%)</title><rect x="234.3" y="611.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.3" y="622.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.14%)</title><rect x="234.3" y="595.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.3" y="606.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.14%)</title><rect x="234.3" y="579.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.3" y="590.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8940/1813723654.apply (1 samples, 0.14%)</title><rect x="234.3" y="563.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.3" y="574.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (1 samples, 0.14%)</title><rect x="234.3" y="547.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.3" y="558.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (1 samples, 0.14%)</title><rect x="234.3" y="531.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.3" y="542.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.run (1 samples, 0.14%)</title><rect x="234.3" y="515.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="237.3" y="526.0"></text>
</g>
<g>
<title>scala/Option.foreach (1 samples, 0.14%)</title><rect x="234.3" y="499.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.3" y="510.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$8941/1667554720.apply (1 samples, 0.14%)</title><rect x="234.3" y="483.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.3" y="494.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5$adapted (1 samples, 0.14%)</title><rect x="234.3" y="467.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.3" y="478.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5 (1 samples, 0.14%)</title><rect x="234.3" y="451.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.3" y="462.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (1 samples, 0.14%)</title><rect x="234.3" y="435.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.3" y="446.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isNewValue (1 samples, 0.14%)</title><rect x="234.3" y="419.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.3" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.14%)</title><rect x="234.3" y="403.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.3" y="414.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.14%)</title><rect x="234.3" y="387.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="237.3" y="398.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.14%)</title><rect x="234.3" y="371.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.3" y="382.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.14%)</title><rect x="234.3" y="355.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.3" y="366.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.14%)</title><rect x="234.3" y="339.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.3" y="350.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$8982/871761655.apply (2 samples, 0.28%)</title><rect x="235.9" y="627.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="238.9" y="638.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$15 (2 samples, 0.28%)</title><rect x="235.9" y="611.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.9" y="622.0"></text>
</g>
<g>
<title>treadle/executable/SubBigs.apply (1 samples, 0.14%)</title><rect x="235.9" y="595.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.9" y="606.0"></text>
</g>
<g>
<title>scala/math/BigInt.$minus (1 samples, 0.14%)</title><rect x="235.9" y="579.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.9" y="590.0"></text>
</g>
<g>
<title>treadle/executable/TailBigs.apply (1 samples, 0.14%)</title><rect x="237.5" y="595.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.5" y="606.0"></text>
</g>
<g>
<title>scala/math/BigInt.$amp (1 samples, 0.14%)</title><rect x="237.5" y="579.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.5" y="590.0"></text>
</g>
<g>
<title>java/math/BigInteger.and (1 samples, 0.14%)</title><rect x="237.5" y="563.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.5" y="574.0"></text>
</g>
<g>
<title>java/math/BigInteger.valueOf (1 samples, 0.14%)</title><rect x="237.5" y="547.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="240.5" y="558.0"></text>
</g>
<g>
<title>java/math/BigInteger.&lt;init&gt; (1 samples, 0.14%)</title><rect x="237.5" y="531.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.5" y="542.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.lowerClock$1 (6 samples, 0.83%)</title><rect x="239.2" y="739.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.2" y="750.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setIntValue (6 samples, 0.83%)</title><rect x="239.2" y="723.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="242.2" y="734.0"></text>
</g>
<g>
<title>scala/Option.foreach (6 samples, 0.83%)</title><rect x="239.2" y="707.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="242.2" y="718.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$$Lambda$8944/893982664.apply (6 samples, 0.83%)</title><rect x="239.2" y="691.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="242.2" y="702.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.$anonfun$setIntValue$1$adapted (6 samples, 0.83%)</title><rect x="239.2" y="675.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="242.2" y="686.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.$anonfun$setIntValue$1 (6 samples, 0.83%)</title><rect x="239.2" y="659.0" width="9.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="242.2" y="670.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (6 samples, 0.83%)</title><rect x="239.2" y="643.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="242.2" y="654.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.updateInfo$1 (6 samples, 0.83%)</title><rect x="239.2" y="627.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.2" y="638.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (1 samples, 0.14%)</title><rect x="239.2" y="611.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.2" y="622.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.14%)</title><rect x="239.2" y="595.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.2" y="606.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.14%)</title><rect x="239.2" y="579.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="242.2" y="590.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.14%)</title><rect x="239.2" y="563.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="242.2" y="574.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.14%)</title><rect x="239.2" y="547.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="242.2" y="558.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.14%)</title><rect x="239.2" y="531.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.2" y="542.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.14%)</title><rect x="239.2" y="515.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="242.2" y="526.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.14%)</title><rect x="239.2" y="499.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.2" y="510.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.14%)</title><rect x="239.2" y="483.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="242.2" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.getOrElseUpdate (4 samples, 0.55%)</title><rect x="240.8" y="611.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="243.8" y="622.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (3 samples, 0.41%)</title><rect x="240.8" y="595.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.8" y="606.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.notFound (3 samples, 0.41%)</title><rect x="240.8" y="579.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.8" y="590.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (3 samples, 0.41%)</title><rect x="240.8" y="563.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.8" y="574.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (3 samples, 0.41%)</title><rect x="240.8" y="547.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="243.8" y="558.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (3 samples, 0.41%)</title><rect x="240.8" y="531.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="243.8" y="542.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (3 samples, 0.41%)</title><rect x="240.8" y="515.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.8" y="526.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (3 samples, 0.41%)</title><rect x="240.8" y="499.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.8" y="510.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (3 samples, 0.41%)</title><rect x="240.8" y="483.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="243.8" y="494.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.14%)</title><rect x="244.0" y="467.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.0" y="478.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.14%)</title><rect x="245.7" y="595.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="248.7" y="606.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$minus$eq (1 samples, 0.14%)</title><rect x="247.3" y="611.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.3" y="622.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.removeElem (1 samples, 0.14%)</title><rect x="247.3" y="595.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.3" y="606.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.removeElem$ (1 samples, 0.14%)</title><rect x="247.3" y="579.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="250.3" y="590.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.removeElem (1 samples, 0.14%)</title><rect x="247.3" y="563.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="250.3" y="574.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.raiseClock$1 (49 samples, 6.75%)</title><rect x="248.9" y="739.0" width="79.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.9" y="750.0">treadle/e..</text>
</g>
<g>
<title>treadle/chronometry/UTC.incrementTime (4 samples, 0.55%)</title><rect x="248.9" y="723.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="251.9" y="734.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.runUntil (4 samples, 0.55%)</title><rect x="248.9" y="707.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="251.9" y="718.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.setTime (4 samples, 0.55%)</title><rect x="248.9" y="691.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.9" y="702.0"></text>
</g>
<g>
<title>treadle/TreadleTester$$Lambda$8908/1823200126.apply$mcV$sp (4 samples, 0.55%)</title><rect x="248.9" y="675.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.9" y="686.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$2 (4 samples, 0.55%)</title><rect x="248.9" y="659.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="251.9" y="670.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.14%)</title><rect x="252.2" y="643.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="255.2" y="654.0"></text>
</g>
<g>
<title>scala/collection/mutable/PriorityQueue.isEmpty (1 samples, 0.14%)</title><rect x="253.8" y="643.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.8" y="654.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (36 samples, 4.96%)</title><rect x="255.4" y="723.0" width="58.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="258.4" y="734.0">treadl..</text>
</g>
<g>
<title>scala/collection/mutable/HashSet.clear (1 samples, 0.14%)</title><rect x="255.4" y="707.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="258.4" y="718.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.clearTable (1 samples, 0.14%)</title><rect x="255.4" y="691.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.4" y="702.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.clearTable$ (1 samples, 0.14%)</title><rect x="255.4" y="675.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="258.4" y="686.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.clearTable (1 samples, 0.14%)</title><rect x="255.4" y="659.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.4" y="670.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.table (1 samples, 0.14%)</title><rect x="255.4" y="643.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="258.4" y="654.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (35 samples, 4.82%)</title><rect x="257.1" y="707.0" width="56.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.1" y="718.0">treadl..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (35 samples, 4.82%)</title><rect x="257.1" y="691.0" width="56.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="260.1" y="702.0">treadl..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (35 samples, 4.82%)</title><rect x="257.1" y="675.0" width="56.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="260.1" y="686.0">treadl..</text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner$$Lambda$8928/1233395528.apply$mcV$sp (3 samples, 0.41%)</title><rect x="257.1" y="659.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="260.1" y="670.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.$anonfun$setLeanMode$2 (3 samples, 0.41%)</title><rect x="257.1" y="643.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="260.1" y="654.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.runFull (3 samples, 0.41%)</title><rect x="257.1" y="627.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="260.1" y="638.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$8993/630735195.apply$mcV$sp (3 samples, 0.41%)</title><rect x="257.1" y="611.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.1" y="622.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (3 samples, 0.41%)</title><rect x="257.1" y="595.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.1" y="606.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (3 samples, 0.41%)</title><rect x="257.1" y="579.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.1" y="590.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (3 samples, 0.41%)</title><rect x="257.1" y="563.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.1" y="574.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (3 samples, 0.41%)</title><rect x="257.1" y="547.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.1" y="558.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (3 samples, 0.41%)</title><rect x="257.1" y="531.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="260.1" y="542.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (3 samples, 0.41%)</title><rect x="257.1" y="515.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="260.1" y="526.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8940/1813723654.apply (3 samples, 0.41%)</title><rect x="257.1" y="499.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="260.1" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (3 samples, 0.41%)</title><rect x="257.1" y="483.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.1" y="494.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (3 samples, 0.41%)</title><rect x="257.1" y="467.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="260.1" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (1 samples, 0.14%)</title><rect x="257.1" y="451.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="260.1" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.14%)</title><rect x="257.1" y="435.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="260.1" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.14%)</title><rect x="257.1" y="419.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="260.1" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.14%)</title><rect x="257.1" y="403.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="260.1" y="414.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.14%)</title><rect x="257.1" y="387.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="260.1" y="398.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.14%)</title><rect x="257.1" y="371.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.1" y="382.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.14%)</title><rect x="257.1" y="355.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.1" y="366.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.14%)</title><rect x="257.1" y="339.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.1" y="350.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.14%)</title><rect x="257.1" y="323.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="260.1" y="334.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.14%)</title><rect x="257.1" y="307.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="260.1" y="318.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.14%)</title><rect x="257.1" y="291.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="260.1" y="302.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.run (2 samples, 0.28%)</title><rect x="258.7" y="451.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="261.7" y="462.0"></text>
</g>
<g>
<title>scala/Option.foreach (2 samples, 0.28%)</title><rect x="258.7" y="435.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="261.7" y="446.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$8941/1667554720.apply (2 samples, 0.28%)</title><rect x="258.7" y="419.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.7" y="430.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5$adapted (2 samples, 0.28%)</title><rect x="258.7" y="403.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="261.7" y="414.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5 (2 samples, 0.28%)</title><rect x="258.7" y="387.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="261.7" y="398.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (2 samples, 0.28%)</title><rect x="258.7" y="371.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="261.7" y="382.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (1 samples, 0.14%)</title><rect x="258.7" y="355.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.7" y="366.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.14%)</title><rect x="258.7" y="339.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="261.7" y="350.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.14%)</title><rect x="258.7" y="323.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="261.7" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.14%)</title><rect x="258.7" y="307.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.7" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.14%)</title><rect x="258.7" y="291.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="261.7" y="302.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isNewValue (1 samples, 0.14%)</title><rect x="260.3" y="355.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.3" y="366.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.14%)</title><rect x="260.3" y="339.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="263.3" y="350.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.14%)</title><rect x="260.3" y="323.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="263.3" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.14%)</title><rect x="260.3" y="307.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="263.3" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.14%)</title><rect x="260.3" y="291.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.3" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.14%)</title><rect x="260.3" y="275.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="263.3" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.14%)</title><rect x="260.3" y="259.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="263.3" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.14%)</title><rect x="260.3" y="243.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="263.3" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.14%)</title><rect x="260.3" y="227.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="263.3" y="238.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.14%)</title><rect x="260.3" y="211.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="263.3" y="222.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.14%)</title><rect x="260.3" y="195.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="263.3" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.14%)</title><rect x="260.3" y="179.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="263.3" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.table (1 samples, 0.14%)</title><rect x="260.3" y="163.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="263.3" y="174.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$8993/630735195.apply$mcV$sp (29 samples, 3.99%)</title><rect x="261.9" y="659.0" width="47.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="264.9" y="670.0">trea..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (29 samples, 3.99%)</title><rect x="261.9" y="643.0" width="47.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.9" y="654.0">trea..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (29 samples, 3.99%)</title><rect x="261.9" y="627.0" width="47.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="264.9" y="638.0">trea..</text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (26 samples, 3.58%)</title><rect x="261.9" y="611.0" width="42.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="264.9" y="622.0">trea..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1512660369.linkToTargetMethod (1 samples, 0.14%)</title><rect x="261.9" y="595.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="264.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/983842072.invokeStatic_LIL_L (1 samples, 0.14%)</title><rect x="261.9" y="579.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="264.9" y="590.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8940/1813723654.get$Lambda (1 samples, 0.14%)</title><rect x="261.9" y="563.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="264.9" y="574.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (25 samples, 3.44%)</title><rect x="263.6" y="595.0" width="40.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="266.6" y="606.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (25 samples, 3.44%)</title><rect x="263.6" y="579.0" width="40.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="266.6" y="590.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (25 samples, 3.44%)</title><rect x="263.6" y="563.0" width="40.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="266.6" y="574.0">sca..</text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8940/1813723654.apply (24 samples, 3.31%)</title><rect x="265.2" y="547.0" width="39.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="268.2" y="558.0">tre..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (24 samples, 3.31%)</title><rect x="265.2" y="531.0" width="39.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="268.2" y="542.0">tre..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (24 samples, 3.31%)</title><rect x="265.2" y="515.0" width="39.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="268.2" y="526.0">tre..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (4 samples, 0.55%)</title><rect x="265.2" y="499.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="268.2" y="510.0"></text>
</g>
<g>
<title>scala/Option.foreach (2 samples, 0.28%)</title><rect x="268.4" y="483.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="271.4" y="494.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$8942/1282100420.apply (2 samples, 0.28%)</title><rect x="268.4" y="467.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.4" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (2 samples, 0.28%)</title><rect x="268.4" y="451.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.4" y="462.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (1 samples, 0.14%)</title><rect x="270.1" y="435.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.1" y="446.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.addAntiDependency (1 samples, 0.14%)</title><rect x="270.1" y="419.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.1" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.add (1 samples, 0.14%)</title><rect x="270.1" y="403.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="273.1" y="414.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.run (20 samples, 2.75%)</title><rect x="271.7" y="499.0" width="32.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="274.7" y="510.0">tr..</text>
</g>
<g>
<title>scala/Option.foreach (19 samples, 2.62%)</title><rect x="271.7" y="483.0" width="30.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.7" y="494.0">sc..</text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$8941/1667554720.apply (19 samples, 2.62%)</title><rect x="271.7" y="467.0" width="30.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="274.7" y="478.0">tr..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5$adapted (19 samples, 2.62%)</title><rect x="271.7" y="451.0" width="30.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.7" y="462.0">tr..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5 (19 samples, 2.62%)</title><rect x="271.7" y="435.0" width="30.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.7" y="446.0">tr..</text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (19 samples, 2.62%)</title><rect x="271.7" y="419.0" width="30.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.7" y="430.0">tr..</text>
</g>
<g>
<title>logger/Logger.info (4 samples, 0.55%)</title><rect x="271.7" y="403.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.7" y="414.0"></text>
</g>
<g>
<title>logger/Logger$.logger$Logger$$showMessage (4 samples, 0.55%)</title><rect x="271.7" y="387.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.7" y="398.0"></text>
</g>
<g>
<title>logger/Logger$.testPackageNameMatch (4 samples, 0.55%)</title><rect x="271.7" y="371.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.7" y="382.0"></text>
</g>
<g>
<title>logger/Logger$.state (4 samples, 0.55%)</title><rect x="271.7" y="355.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.7" y="366.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (4 samples, 0.55%)</title><rect x="271.7" y="339.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.7" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.55%)</title><rect x="271.7" y="323.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.7" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (4 samples, 0.55%)</title><rect x="271.7" y="307.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="274.7" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.55%)</title><rect x="271.7" y="291.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.7" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (4 samples, 0.55%)</title><rect x="271.7" y="275.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.7" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (1 samples, 0.14%)</title><rect x="278.2" y="403.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.2" y="414.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (1 samples, 0.14%)</title><rect x="278.2" y="387.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="281.2" y="398.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (1 samples, 0.14%)</title><rect x="278.2" y="371.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.2" y="382.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (1 samples, 0.14%)</title><rect x="278.2" y="355.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="281.2" y="366.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (1 samples, 0.14%)</title><rect x="278.2" y="339.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.2" y="350.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.14%)</title><rect x="278.2" y="323.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.2" y="334.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.14%)</title><rect x="278.2" y="307.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="281.2" y="318.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isNewValue (1 samples, 0.14%)</title><rect x="279.8" y="403.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.8" y="414.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.14%)</title><rect x="279.8" y="387.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="282.8" y="398.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.14%)</title><rect x="279.8" y="371.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.8" y="382.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.14%)</title><rect x="279.8" y="355.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="282.8" y="366.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.14%)</title><rect x="279.8" y="339.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.8" y="350.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.14%)</title><rect x="279.8" y="323.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="282.8" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.14%)</title><rect x="279.8" y="307.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.8" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.14%)</title><rect x="279.8" y="291.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="282.8" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.14%)</title><rect x="279.8" y="275.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="282.8" y="286.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.14%)</title><rect x="279.8" y="259.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.8" y="270.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.14%)</title><rect x="279.8" y="243.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="282.8" y="254.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.14%)</title><rect x="279.8" y="227.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.8" y="238.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isTempWire (1 samples, 0.14%)</title><rect x="281.4" y="403.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.split (1 samples, 0.14%)</title><rect x="281.4" y="387.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.4" y="398.0"></text>
</g>
<g>
<title>java/lang/String.split (1 samples, 0.14%)</title><rect x="281.4" y="371.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="284.4" y="382.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.updateInfo$1 (12 samples, 1.65%)</title><rect x="283.1" y="403.0" width="19.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.1" y="414.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.getOrElseUpdate (4 samples, 0.55%)</title><rect x="283.1" y="387.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.1" y="398.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.14%)</title><rect x="283.1" y="371.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.1" y="382.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.14%)</title><rect x="283.1" y="355.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.1" y="366.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (3 samples, 0.41%)</title><rect x="284.7" y="371.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="287.7" y="382.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.notFound (3 samples, 0.41%)</title><rect x="284.7" y="355.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="287.7" y="366.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (3 samples, 0.41%)</title><rect x="284.7" y="339.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="287.7" y="350.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (3 samples, 0.41%)</title><rect x="284.7" y="323.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="287.7" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (3 samples, 0.41%)</title><rect x="284.7" y="307.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.7" y="318.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (3 samples, 0.41%)</title><rect x="284.7" y="291.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.7" y="302.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (3 samples, 0.41%)</title><rect x="284.7" y="275.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="287.7" y="286.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (3 samples, 0.41%)</title><rect x="284.7" y="259.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="287.7" y="270.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (2 samples, 0.28%)</title><rect x="286.3" y="243.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.3" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.update (4 samples, 0.55%)</title><rect x="289.6" y="387.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="292.6" y="398.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (4 samples, 0.55%)</title><rect x="289.6" y="371.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.6" y="382.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (4 samples, 0.55%)</title><rect x="289.6" y="355.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="292.6" y="366.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (4 samples, 0.55%)</title><rect x="289.6" y="339.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="292.6" y="350.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (4 samples, 0.55%)</title><rect x="289.6" y="323.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="292.6" y="334.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.41%)</title><rect x="289.6" y="307.0" width="4.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="292.6" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.14%)</title><rect x="294.4" y="307.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="297.4" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.14%)</title><rect x="294.4" y="291.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.4" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.14%)</title><rect x="294.4" y="275.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.4" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.14%)</title><rect x="294.4" y="259.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="297.4" y="270.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.14%)</title><rect x="294.4" y="243.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="297.4" y="254.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.14%)</title><rect x="294.4" y="227.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="297.4" y="238.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.14%)</title><rect x="294.4" y="211.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="297.4" y="222.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.14%)</title><rect x="294.4" y="195.0" width="1.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="297.4" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$minus$eq (3 samples, 0.41%)</title><rect x="296.1" y="387.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="299.1" y="398.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.removeElem (3 samples, 0.41%)</title><rect x="296.1" y="371.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="299.1" y="382.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.removeElem$ (3 samples, 0.41%)</title><rect x="296.1" y="355.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="299.1" y="366.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.removeElem (3 samples, 0.41%)</title><rect x="296.1" y="339.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.1" y="350.0"></text>
</g>
<g>
<title>treadle/vcd/Change.&lt;init&gt; (1 samples, 0.14%)</title><rect x="300.9" y="387.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="303.9" y="398.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.14%)</title><rect x="302.6" y="483.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.6" y="494.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$8982/871761655.apply (3 samples, 0.41%)</title><rect x="304.2" y="611.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="307.2" y="622.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$15 (3 samples, 0.41%)</title><rect x="304.2" y="595.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="307.2" y="606.0"></text>
</g>
<g>
<title>treadle/executable/TailBigs.apply (3 samples, 0.41%)</title><rect x="304.2" y="579.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="307.2" y="590.0"></text>
</g>
<g>
<title>scala/math/BigInt.$amp (3 samples, 0.41%)</title><rect x="304.2" y="563.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="307.2" y="574.0"></text>
</g>
<g>
<title>java/math/BigInteger.and (3 samples, 0.41%)</title><rect x="304.2" y="547.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="307.2" y="558.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.14%)</title><rect x="304.2" y="531.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="307.2" y="542.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="304.2" y="515.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="307.2" y="526.0"></text>
</g>
<g>
<title>java/math/BigInteger.valueOf (2 samples, 0.28%)</title><rect x="305.8" y="531.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.8" y="542.0"></text>
</g>
<g>
<title>java/math/BigInteger.&lt;init&gt; (2 samples, 0.28%)</title><rect x="305.8" y="515.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.8" y="526.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$8927/123455058.apply$mcV$sp (3 samples, 0.41%)</title><rect x="309.1" y="659.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="312.1" y="670.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (3 samples, 0.41%)</title><rect x="309.1" y="643.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="312.1" y="654.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (3 samples, 0.41%)</title><rect x="309.1" y="627.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.1" y="638.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (2 samples, 0.28%)</title><rect x="309.1" y="611.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="312.1" y="622.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (2 samples, 0.28%)</title><rect x="309.1" y="595.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="312.1" y="606.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (2 samples, 0.28%)</title><rect x="309.1" y="579.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="312.1" y="590.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (2 samples, 0.28%)</title><rect x="309.1" y="563.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="312.1" y="574.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$8940/1813723654.apply (2 samples, 0.28%)</title><rect x="309.1" y="547.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="312.1" y="558.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (2 samples, 0.28%)</title><rect x="309.1" y="531.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="312.1" y="542.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (2 samples, 0.28%)</title><rect x="309.1" y="515.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="312.1" y="526.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (2 samples, 0.28%)</title><rect x="309.1" y="499.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="312.1" y="510.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.14%)</title><rect x="310.7" y="483.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.7" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.14%)</title><rect x="310.7" y="467.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="313.7" y="478.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.14%)</title><rect x="310.7" y="451.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="313.7" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.14%)</title><rect x="310.7" y="435.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="313.7" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.14%)</title><rect x="310.7" y="419.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="313.7" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.14%)</title><rect x="310.7" y="403.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.7" y="414.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.14%)</title><rect x="310.7" y="387.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="313.7" y="398.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.14%)</title><rect x="310.7" y="371.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="313.7" y="382.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.14%)</title><rect x="310.7" y="355.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.7" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$8874/250100694.apply$mcI$sp (1 samples, 0.14%)</title><rect x="312.3" y="611.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="315.3" y="622.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$1 (1 samples, 0.14%)</title><rect x="312.3" y="595.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="315.3" y="606.0"></text>
</g>
<g>
<title>treadle/executable/EqBigs.apply (1 samples, 0.14%)</title><rect x="312.3" y="579.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.3" y="590.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$8990/825529453.apply (1 samples, 0.14%)</title><rect x="312.3" y="563.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="315.3" y="574.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$81 (1 samples, 0.14%)</title><rect x="312.3" y="547.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="315.3" y="558.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$GetBig.apply (1 samples, 0.14%)</title><rect x="312.3" y="531.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="315.3" y="542.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$GetBig.index (1 samples, 0.14%)</title><rect x="312.3" y="515.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.3" y="526.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setIntValue (9 samples, 1.24%)</title><rect x="313.9" y="723.0" width="14.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.9" y="734.0"></text>
</g>
<g>
<title>scala/Option.foreach (9 samples, 1.24%)</title><rect x="313.9" y="707.0" width="14.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.9" y="718.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$$Lambda$8944/893982664.apply (9 samples, 1.24%)</title><rect x="313.9" y="691.0" width="14.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.9" y="702.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.$anonfun$setIntValue$1$adapted (9 samples, 1.24%)</title><rect x="313.9" y="675.0" width="14.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.9" y="686.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.$anonfun$setIntValue$1 (9 samples, 1.24%)</title><rect x="313.9" y="659.0" width="14.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.9" y="670.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (9 samples, 1.24%)</title><rect x="313.9" y="643.0" width="14.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.9" y="654.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.updateInfo$1 (9 samples, 1.24%)</title><rect x="313.9" y="627.0" width="14.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="316.9" y="638.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (1 samples, 0.14%)</title><rect x="313.9" y="611.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.9" y="622.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.14%)</title><rect x="313.9" y="595.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="316.9" y="606.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.14%)</title><rect x="313.9" y="579.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="316.9" y="590.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.14%)</title><rect x="313.9" y="563.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="316.9" y="574.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.14%)</title><rect x="313.9" y="547.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.9" y="558.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.14%)</title><rect x="313.9" y="531.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.9" y="542.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.14%)</title><rect x="313.9" y="515.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.9" y="526.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.14%)</title><rect x="313.9" y="499.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.9" y="510.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.14%)</title><rect x="313.9" y="483.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.9" y="494.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.14%)</title><rect x="313.9" y="467.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.9" y="478.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.14%)</title><rect x="313.9" y="451.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="316.9" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.getOrElseUpdate (7 samples, 0.96%)</title><rect x="315.6" y="611.0" width="11.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="318.6" y="622.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.addEntry (5 samples, 0.69%)</title><rect x="315.6" y="595.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="318.6" y="606.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.addEntry (5 samples, 0.69%)</title><rect x="315.6" y="579.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.6" y="590.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry$ (5 samples, 0.69%)</title><rect x="315.6" y="563.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.6" y="574.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry (5 samples, 0.69%)</title><rect x="315.6" y="547.0" width="8.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="318.6" y="558.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (5 samples, 0.69%)</title><rect x="315.6" y="531.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="318.6" y="542.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (5 samples, 0.69%)</title><rect x="315.6" y="515.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.6" y="526.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (4 samples, 0.55%)</title><rect x="317.2" y="499.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="320.2" y="510.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (4 samples, 0.55%)</title><rect x="317.2" y="483.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="320.2" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (4 samples, 0.55%)</title><rect x="317.2" y="467.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.2" y="478.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.55%)</title><rect x="317.2" y="451.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="320.2" y="462.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (4 samples, 0.55%)</title><rect x="317.2" y="435.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="320.2" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.28%)</title><rect x="323.7" y="595.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.7" y="606.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.notFound (2 samples, 0.28%)</title><rect x="323.7" y="579.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="326.7" y="590.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (2 samples, 0.28%)</title><rect x="323.7" y="563.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="326.7" y="574.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (2 samples, 0.28%)</title><rect x="323.7" y="547.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.7" y="558.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (2 samples, 0.28%)</title><rect x="323.7" y="531.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.7" y="542.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.28%)</title><rect x="323.7" y="515.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.7" y="526.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.28%)</title><rect x="323.7" y="499.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.7" y="510.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.28%)</title><rect x="323.7" y="483.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="326.7" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$plus$eq (1 samples, 0.14%)</title><rect x="326.9" y="611.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.9" y="622.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (1 samples, 0.14%)</title><rect x="326.9" y="595.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.9" y="606.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (1 samples, 0.14%)</title><rect x="326.9" y="579.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="329.9" y="590.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (1 samples, 0.14%)</title><rect x="326.9" y="563.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.9" y="574.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (1 samples, 0.14%)</title><rect x="326.9" y="547.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.9" y="558.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (1 samples, 0.14%)</title><rect x="326.9" y="531.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.9" y="542.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (1 samples, 0.14%)</title><rect x="326.9" y="515.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.9" y="526.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.14%)</title><rect x="326.9" y="499.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.9" y="510.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.14%)</title><rect x="326.9" y="483.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="329.9" y="494.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsCharObject (1 samples, 0.14%)</title><rect x="326.9" y="467.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.9" y="478.0"></text>
</g>
<g>
<title>treadle/vcd/Change.hashCode (1 samples, 0.14%)</title><rect x="326.9" y="451.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.9" y="462.0"></text>
</g>
<g>
<title>treadle/TreadleTester$.apply (2 samples, 0.28%)</title><rect x="328.6" y="1011.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="331.6" y="1022.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$.transform (2 samples, 0.28%)</title><rect x="328.6" y="995.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.6" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (2 samples, 0.28%)</title><rect x="328.6" y="979.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.6" y="990.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (2 samples, 0.28%)</title><rect x="328.6" y="963.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="331.6" y="974.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (2 samples, 0.28%)</title><rect x="328.6" y="947.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="331.6" y="958.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$$$Lambda$8044/481714411.apply (2 samples, 0.28%)</title><rect x="328.6" y="931.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.6" y="942.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$.$anonfun$transform$2 (2 samples, 0.28%)</title><rect x="328.6" y="915.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.6" y="926.0"></text>
</g>
<g>
<title>treadle/stage/phases/CreateTester$.transform (1 samples, 0.14%)</title><rect x="328.6" y="899.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="331.6" y="910.0"></text>
</g>
<g>
<title>treadle/stage/phases/CreateTester$.transform (1 samples, 0.14%)</title><rect x="328.6" y="883.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="331.6" y="894.0"></text>
</g>
<g>
<title>treadle/TreadleTester.&lt;init&gt; (1 samples, 0.14%)</title><rect x="328.6" y="867.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="331.6" y="878.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$.apply (1 samples, 0.14%)</title><rect x="328.6" y="851.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.6" y="862.0"></text>
</g>
<g>
<title>treadle/chronometry/Timer.apply (1 samples, 0.14%)</title><rect x="328.6" y="835.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="331.6" y="846.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (1 samples, 0.14%)</title><rect x="328.6" y="819.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.6" y="830.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$$$Lambda$8857/1863736908.apply$mcV$sp (1 samples, 0.14%)</title><rect x="328.6" y="803.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.6" y="814.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$.$anonfun$apply$8 (1 samples, 0.14%)</title><rect x="328.6" y="787.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="331.6" y="798.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.compile (1 samples, 0.14%)</title><rect x="328.6" y="771.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.6" y="782.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processModule (1 samples, 0.14%)</title><rect x="328.6" y="755.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="331.6" y="766.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processStatements (1 samples, 0.14%)</title><rect x="328.6" y="739.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.6" y="750.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processStatements (1 samples, 0.14%)</title><rect x="328.6" y="723.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.6" y="734.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processMux$1 (1 samples, 0.14%)</title><rect x="328.6" y="707.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.14%)</title><rect x="328.6" y="691.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="331.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.14%)</title><rect x="328.6" y="675.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="331.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.14%)</title><rect x="328.6" y="659.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="331.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1428842036.invoke_MT (1 samples, 0.14%)</title><rect x="328.6" y="643.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="331.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$BMH/260508424.reinvoke (1 samples, 0.14%)</title><rect x="328.6" y="627.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/22069592.invokeStatic_L4_L (1 samples, 0.14%)</title><rect x="328.6" y="611.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.14%)</title><rect x="328.6" y="595.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.14%)</title><rect x="328.6" y="579.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="331.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.14%)</title><rect x="328.6" y="563.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="331.6" y="574.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.defineAnonymousClass (1 samples, 0.14%)</title><rect x="328.6" y="547.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="331.6" y="558.0"></text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass (1 samples, 0.14%)</title><rect x="328.6" y="531.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="331.6" y="542.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, KlassHandle, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.14%)</title><rect x="328.6" y="515.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="331.6" y="526.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.14%)</title><rect x="328.6" y="499.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="331.6" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.14%)</title><rect x="328.6" y="483.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="331.6" y="494.0"></text>
</g>
<g>
<title>InstanceKlass::rewrite_class(Thread*) (1 samples, 0.14%)</title><rect x="328.6" y="467.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="331.6" y="478.0"></text>
</g>
<g>
<title>Rewriter::rewrite(instanceKlassHandle, Thread*) (1 samples, 0.14%)</title><rect x="328.6" y="451.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="331.6" y="462.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(instanceKlassHandle, constantPoolHandle, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.14%)</title><rect x="328.6" y="435.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="331.6" y="446.0"></text>
</g>
<g>
<title>treadle/stage/phases/PrepareAst$.transform (1 samples, 0.14%)</title><rect x="330.2" y="899.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="333.2" y="910.0"></text>
</g>
<g>
<title>treadle/stage/phases/PrepareAst$.transform (1 samples, 0.14%)</title><rect x="330.2" y="883.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="333.2" y="894.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.transform$ (1 samples, 0.14%)</title><rect x="330.2" y="867.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.2" y="878.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.transform (1 samples, 0.14%)</title><rect x="330.2" y="851.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.2" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.flatMap (1 samples, 0.14%)</title><rect x="330.2" y="835.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="333.2" y="846.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap$ (1 samples, 0.14%)</title><rect x="330.2" y="819.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.2" y="830.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap (1 samples, 0.14%)</title><rect x="330.2" y="803.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.2" y="814.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.14%)</title><rect x="330.2" y="787.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.2" y="798.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$96/1907431275.apply (1 samples, 0.14%)</title><rect x="330.2" y="771.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="333.2" y="782.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$flatMap$1 (1 samples, 0.14%)</title><rect x="330.2" y="755.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="333.2" y="766.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase$$Lambda$8061/523030429.apply (1 samples, 0.14%)</title><rect x="330.2" y="739.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.2" y="750.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.$anonfun$transform$2 (1 samples, 0.14%)</title><rect x="330.2" y="723.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.2" y="734.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (1 samples, 0.14%)</title><rect x="330.2" y="707.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="333.2" y="718.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (1 samples, 0.14%)</title><rect x="330.2" y="691.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.2" y="702.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (1 samples, 0.14%)</title><rect x="330.2" y="675.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.2" y="686.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase$$Lambda$8062/1321378778.apply (1 samples, 0.14%)</title><rect x="330.2" y="659.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.2" y="670.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.$anonfun$transform$3 (1 samples, 0.14%)</title><rect x="330.2" y="643.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="333.2" y="654.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (1 samples, 0.14%)</title><rect x="330.2" y="627.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.2" y="638.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (1 samples, 0.14%)</title><rect x="330.2" y="611.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="333.2" y="622.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8064/1578276822.apply (1 samples, 0.14%)</title><rect x="330.2" y="595.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.2" y="606.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (1 samples, 0.14%)</title><rect x="330.2" y="579.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.2" y="590.0"></text>
</g>
<g>
<title>treadle/stage/phases/ChirrtlToLow.execute (1 samples, 0.14%)</title><rect x="330.2" y="563.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="333.2" y="574.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (1 samples, 0.14%)</title><rect x="330.2" y="547.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.2" y="558.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (1 samples, 0.14%)</title><rect x="330.2" y="531.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="333.2" y="542.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (1 samples, 0.14%)</title><rect x="330.2" y="515.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.2" y="526.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (1 samples, 0.14%)</title><rect x="330.2" y="499.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.2" y="510.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (1 samples, 0.14%)</title><rect x="330.2" y="483.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="333.2" y="494.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (1 samples, 0.14%)</title><rect x="330.2" y="467.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.2" y="478.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (1 samples, 0.14%)</title><rect x="330.2" y="451.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.2" y="462.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$8065/93758636.apply (1 samples, 0.14%)</title><rect x="330.2" y="435.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.2" y="446.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (1 samples, 0.14%)</title><rect x="330.2" y="419.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.2" y="430.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (1 samples, 0.14%)</title><rect x="330.2" y="403.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="333.2" y="414.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (1 samples, 0.14%)</title><rect x="330.2" y="387.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="333.2" y="398.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8064/1578276822.apply (1 samples, 0.14%)</title><rect x="330.2" y="371.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.2" y="382.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (1 samples, 0.14%)</title><rect x="330.2" y="355.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.2" y="366.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (1 samples, 0.14%)</title><rect x="330.2" y="339.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="333.2" y="350.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (1 samples, 0.14%)</title><rect x="330.2" y="323.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.2" y="334.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (1 samples, 0.14%)</title><rect x="330.2" y="307.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.2" y="318.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (1 samples, 0.14%)</title><rect x="330.2" y="291.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="333.2" y="302.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (1 samples, 0.14%)</title><rect x="330.2" y="275.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="333.2" y="286.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (1 samples, 0.14%)</title><rect x="330.2" y="259.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.2" y="270.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (1 samples, 0.14%)</title><rect x="330.2" y="243.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.2" y="254.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$8065/93758636.apply (1 samples, 0.14%)</title><rect x="330.2" y="227.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.2" y="238.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (1 samples, 0.14%)</title><rect x="330.2" y="211.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.2" y="222.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (1 samples, 0.14%)</title><rect x="330.2" y="195.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="333.2" y="206.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (1 samples, 0.14%)</title><rect x="330.2" y="179.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="333.2" y="190.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8064/1578276822.apply (1 samples, 0.14%)</title><rect x="330.2" y="163.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="333.2" y="174.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (1 samples, 0.14%)</title><rect x="330.2" y="147.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.2" y="158.0"></text>
</g>
<g>
<title>firrtl/passes/ConvertFixedToSInt$.execute (1 samples, 0.14%)</title><rect x="330.2" y="131.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.2" y="142.0"></text>
</g>
<g>
<title>firrtl/passes/Pass.execute$ (1 samples, 0.14%)</title><rect x="330.2" y="115.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="333.2" y="126.0"></text>
</g>
<g>
<title>firrtl/passes/Pass.execute (1 samples, 0.14%)</title><rect x="330.2" y="99.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.2" y="110.0"></text>
</g>
<g>
<title>firrtl/passes/ConvertFixedToSInt$.outputForm (1 samples, 0.14%)</title><rect x="330.2" y="83.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.2" y="94.0"></text>
</g>
<g>
<title>firrtl/passes/Pass.outputForm$ (1 samples, 0.14%)</title><rect x="330.2" y="67.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.2" y="78.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.14%)</title><rect x="330.2" y="51.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="333.2" y="62.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle, int, Bytecodes::Code, Thread*) (1 samples, 0.14%)</title><rect x="330.2" y="35.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="333.2" y="46.0"></text>
</g>
<g>
<title>treadle/TreadleTester.report (145 samples, 19.97%)</title><rect x="331.8" y="1011.0" width="235.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="334.8" y="1022.0">treadle/TreadleTester.report</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.writeVCD (145 samples, 19.97%)</title><rect x="331.8" y="995.0" width="235.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.8" y="1006.0">treadle/executable/ExecutionEng..</text>
</g>
<g>
<title>scala/Option.foreach (145 samples, 19.97%)</title><rect x="331.8" y="979.0" width="235.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.8" y="990.0">scala/Option.foreach</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$$Lambda$8946/1980087394.apply (145 samples, 19.97%)</title><rect x="331.8" y="963.0" width="235.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.8" y="974.0">treadle/executable/ExecutionEng..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.$anonfun$writeVCD$1$adapted (145 samples, 19.97%)</title><rect x="331.8" y="947.0" width="235.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.8" y="958.0">treadle/executable/ExecutionEng..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.$anonfun$writeVCD$1 (145 samples, 19.97%)</title><rect x="331.8" y="931.0" width="235.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="334.8" y="942.0">treadle/executable/ExecutionEng..</text>
</g>
<g>
<title>treadle/vcd/VCD.write (145 samples, 19.97%)</title><rect x="331.8" y="915.0" width="235.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="334.8" y="926.0">treadle/vcd/VCD.write</text>
</g>
<g>
<title>treadle/vcd/VCD.serialize (145 samples, 19.97%)</title><rect x="331.8" y="899.0" width="235.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="334.8" y="910.0">treadle/vcd/VCD.serialize</text>
</g>
<g>
<title>treadle/vcd/VCD.serializeChanges (145 samples, 19.97%)</title><rect x="331.8" y="883.0" width="235.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="334.8" y="894.0">treadle/vcd/VCD.serializeChanges</text>
</g>
<g>
<title>scala/collection/AbstractSeq.sorted (9 samples, 1.24%)</title><rect x="331.8" y="867.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.8" y="878.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.sorted$ (9 samples, 1.24%)</title><rect x="331.8" y="851.0" width="14.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="334.8" y="862.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.sorted (9 samples, 1.24%)</title><rect x="331.8" y="835.0" width="14.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.8" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (9 samples, 1.24%)</title><rect x="331.8" y="819.0" width="14.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="334.8" y="830.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (9 samples, 1.24%)</title><rect x="331.8" y="803.0" width="14.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="334.8" y="814.0"></text>
</g>
<g>
<title>java/util/TimSort.binarySort (3 samples, 0.41%)</title><rect x="331.8" y="787.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="334.8" y="798.0"></text>
</g>
<g>
<title>scala/math/Ordering$Long$.compare (3 samples, 0.41%)</title><rect x="331.8" y="771.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="334.8" y="782.0"></text>
</g>
<g>
<title>scala/math/Ordering$Long$.compare (3 samples, 0.41%)</title><rect x="331.8" y="755.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.8" y="766.0"></text>
</g>
<g>
<title>scala/math/Ordering$LongOrdering.compare$ (3 samples, 0.41%)</title><rect x="331.8" y="739.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="334.8" y="750.0"></text>
</g>
<g>
<title>scala/math/Ordering$LongOrdering.compare (3 samples, 0.41%)</title><rect x="331.8" y="723.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="334.8" y="734.0"></text>
</g>
<g>
<title>java/lang/Long.compare (3 samples, 0.41%)</title><rect x="331.8" y="707.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.8" y="718.0"></text>
</g>
<g>
<title>java/util/TimSort.mergeCollapse (4 samples, 0.55%)</title><rect x="336.7" y="787.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="339.7" y="798.0"></text>
</g>
<g>
<title>java/util/TimSort.mergeAt (4 samples, 0.55%)</title><rect x="336.7" y="771.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.7" y="782.0"></text>
</g>
<g>
<title>java/util/TimSort.mergeHi (1 samples, 0.14%)</title><rect x="336.7" y="755.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="339.7" y="766.0"></text>
</g>
<g>
<title>java/util/TimSort.mergeLo (3 samples, 0.41%)</title><rect x="338.3" y="755.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="341.3" y="766.0"></text>
</g>
<g>
<title>java/util/TimSort.mergeForceCollapse (2 samples, 0.28%)</title><rect x="343.2" y="787.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="346.2" y="798.0"></text>
</g>
<g>
<title>java/util/TimSort.mergeAt (2 samples, 0.28%)</title><rect x="343.2" y="771.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="346.2" y="782.0"></text>
</g>
<g>
<title>java/util/TimSort.mergeHi (2 samples, 0.28%)</title><rect x="343.2" y="755.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="346.2" y="766.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.toList (2 samples, 0.28%)</title><rect x="346.4" y="867.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="349.4" y="878.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.toList$ (2 samples, 0.28%)</title><rect x="346.4" y="851.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="349.4" y="862.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.toList (2 samples, 0.28%)</title><rect x="346.4" y="835.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="349.4" y="846.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.to (2 samples, 0.28%)</title><rect x="346.4" y="819.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="349.4" y="830.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.to$ (2 samples, 0.28%)</title><rect x="346.4" y="803.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="349.4" y="814.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.to (2 samples, 0.28%)</title><rect x="346.4" y="787.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="349.4" y="798.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.$plus$plus$eq (2 samples, 0.28%)</title><rect x="346.4" y="771.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="349.4" y="782.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.$plus$plus$eq (2 samples, 0.28%)</title><rect x="346.4" y="755.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="349.4" y="766.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (2 samples, 0.28%)</title><rect x="346.4" y="739.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="349.4" y="750.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (2 samples, 0.28%)</title><rect x="346.4" y="723.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="349.4" y="734.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$$anon$1.foreach (2 samples, 0.28%)</title><rect x="346.4" y="707.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="349.4" y="718.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.foreachEntry (2 samples, 0.28%)</title><rect x="346.4" y="691.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="349.4" y="702.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.foreachEntry$ (2 samples, 0.28%)</title><rect x="346.4" y="675.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="349.4" y="686.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.foreachEntry (2 samples, 0.28%)</title><rect x="346.4" y="659.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.4" y="670.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (134 samples, 18.46%)</title><rect x="349.7" y="867.0" width="217.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="352.7" y="878.0">scala/collection/immutable/Li..</text>
</g>
<g>
<title>scala/runtime/java8/JFunction1$mcVJ$sp.apply (134 samples, 18.46%)</title><rect x="349.7" y="851.0" width="217.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="352.7" y="862.0">scala/runtime/java8/JFunction..</text>
</g>
<g>
<title>treadle/vcd/VCD$$Lambda$8951/93430692.apply$mcVJ$sp (132 samples, 18.18%)</title><rect x="352.9" y="835.0" width="214.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="355.9" y="846.0">treadle/vcd/VCD$$Lambda$8951..</text>
</g>
<g>
<title>treadle/vcd/VCD.$anonfun$serializeChanges$1 (132 samples, 18.18%)</title><rect x="352.9" y="819.0" width="214.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="355.9" y="830.0">treadle/vcd/VCD.$anonfun$ser..</text>
</g>
<g>
<title>scala/Option.foreach (127 samples, 17.49%)</title><rect x="352.9" y="803.0" width="206.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="355.9" y="814.0">scala/Option.foreach</text>
</g>
<g>
<title>treadle/vcd/VCD$$Lambda$8952/1430641685.apply (127 samples, 17.49%)</title><rect x="352.9" y="787.0" width="206.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="355.9" y="798.0">treadle/vcd/VCD$$Lambda$895..</text>
</g>
<g>
<title>treadle/vcd/VCD.$anonfun$serializeChanges$2$adapted (126 samples, 17.36%)</title><rect x="354.6" y="771.0" width="204.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.6" y="782.0">treadle/vcd/VCD.$anonfun$se..</text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.14%)</title><rect x="354.6" y="755.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="357.6" y="766.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.$anonfun$serializeChanges$2 (125 samples, 17.22%)</title><rect x="356.2" y="755.0" width="203.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="359.2" y="766.0">treadle/vcd/VCD.$anonfun$se..</text>
</g>
<g>
<title>scala/collection/mutable/HashSet.foreach (125 samples, 17.22%)</title><rect x="356.2" y="739.0" width="203.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="359.2" y="750.0">scala/collection/mutable/Ha..</text>
</g>
<g>
<title>treadle/vcd/VCD$$Lambda$8953/27933457.apply (125 samples, 17.22%)</title><rect x="356.2" y="723.0" width="203.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.2" y="734.0">treadle/vcd/VCD$$Lambda$895..</text>
</g>
<g>
<title>treadle/vcd/VCD.$anonfun$serializeChanges$3 (125 samples, 17.22%)</title><rect x="356.2" y="707.0" width="203.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="359.2" y="718.0">treadle/vcd/VCD.$anonfun$se..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.28%)</title><rect x="359.4" y="691.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.4" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.28%)</title><rect x="359.4" y="675.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="362.4" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.14%)</title><rect x="359.4" y="659.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="362.4" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.14%)</title><rect x="359.4" y="643.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="362.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.14%)</title><rect x="361.1" y="659.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="364.1" y="670.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.14%)</title><rect x="362.7" y="691.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="365.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.14%)</title><rect x="362.7" y="675.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="365.7" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.14%)</title><rect x="362.7" y="659.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.7" y="670.0"></text>
</g>
<g>
<title>scala/collection/mutable/StringBuilder.append (5 samples, 0.69%)</title><rect x="364.3" y="691.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.69%)</title><rect x="364.3" y="675.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.3" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.55%)</title><rect x="366.0" y="659.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.0" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.55%)</title><rect x="366.0" y="643.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="369.0" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.55%)</title><rect x="366.0" y="627.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.0" y="638.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.28%)</title><rect x="369.2" y="611.0" width="3.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="372.2" y="622.0"></text>
</g>
<g>
<title>treadle/vcd/Change.serialize (115 samples, 15.84%)</title><rect x="372.5" y="691.0" width="186.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.5" y="702.0">treadle/vcd/Change.seria..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.41%)</title><rect x="374.1" y="675.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="377.1" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.41%)</title><rect x="374.1" y="659.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="377.1" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.41%)</title><rect x="374.1" y="643.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="377.1" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.41%)</title><rect x="374.1" y="627.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="377.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.14%)</title><rect x="379.0" y="675.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="382.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.14%)</title><rect x="379.0" y="659.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.14%)</title><rect x="379.0" y="643.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.0" y="654.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (49 samples, 6.75%)</title><rect x="380.6" y="675.0" width="79.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="383.6" y="686.0">scala/col..</text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (49 samples, 6.75%)</title><rect x="380.6" y="659.0" width="79.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="383.6" y="670.0">scala/col..</text>
</g>
<g>
<title>scala/collection/TraversableLike.map (49 samples, 6.75%)</title><rect x="380.6" y="643.0" width="79.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="383.6" y="654.0">scala/col..</text>
</g>
<g>
<title>scala/collection/TraversableLike.builder$1 (4 samples, 0.55%)</title><rect x="382.2" y="627.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="385.2" y="638.0"></text>
</g>
<g>
<title>scala/collection/generic/GenTraversableFactory$GenericCanBuildFrom.apply (4 samples, 0.55%)</title><rect x="382.2" y="611.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="385.2" y="622.0"></text>
</g>
<g>
<title>scala/collection/generic/GenTraversableFactory$GenericCanBuildFrom.apply (2 samples, 0.28%)</title><rect x="385.5" y="595.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.5" y="606.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.genericBuilder (2 samples, 0.28%)</title><rect x="385.5" y="579.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="388.5" y="590.0"></text>
</g>
<g>
<title>scala/collection/generic/GenericTraversableTemplate.genericBuilder$ (2 samples, 0.28%)</title><rect x="385.5" y="563.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="388.5" y="574.0"></text>
</g>
<g>
<title>scala/collection/generic/GenericTraversableTemplate.genericBuilder (2 samples, 0.28%)</title><rect x="385.5" y="547.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.5" y="558.0"></text>
</g>
<g>
<title>scala/collection/immutable/IndexedSeq$.newBuilder (2 samples, 0.28%)</title><rect x="385.5" y="531.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="388.5" y="542.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.newBuilder (2 samples, 0.28%)</title><rect x="385.5" y="515.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.5" y="526.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.&lt;init&gt; (2 samples, 0.28%)</title><rect x="385.5" y="499.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.5" y="510.0"></text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach (38 samples, 5.23%)</title><rect x="388.7" y="627.0" width="61.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.7" y="638.0">scala/..</text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$8/1832580921.apply (28 samples, 3.86%)</title><rect x="395.2" y="611.0" width="45.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="398.2" y="622.0">scal..</text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (28 samples, 3.86%)</title><rect x="395.2" y="595.0" width="45.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.2" y="606.0">scal..</text>
</g>
<g>
<title>itable stub (7 samples, 0.96%)</title><rect x="400.1" y="579.0" width="11.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="403.1" y="590.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.$plus$eq (9 samples, 1.24%)</title><rect x="411.5" y="579.0" width="14.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.5" y="590.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.$plus$eq (4 samples, 0.55%)</title><rect x="419.6" y="563.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="422.6" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.gotoNextBlockStartWritable (2 samples, 0.28%)</title><rect x="422.8" y="547.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="425.8" y="558.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.gotoNextBlockStartWritable$ (2 samples, 0.28%)</title><rect x="422.8" y="531.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="425.8" y="542.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.gotoNextBlockStartWritable (2 samples, 0.28%)</title><rect x="422.8" y="515.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.8" y="526.0"></text>
</g>
<g>
<title>treadle/vcd/Change$$Lambda$8950/727751310.apply (9 samples, 1.24%)</title><rect x="426.1" y="579.0" width="14.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="429.1" y="590.0"></text>
</g>
<g>
<title>treadle/vcd/Change.$anonfun$serialize$3$adapted (5 samples, 0.69%)</title><rect x="432.6" y="563.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="435.6" y="574.0"></text>
</g>
<g>
<title>treadle/vcd/Change.$anonfun$serialize$3 (5 samples, 0.69%)</title><rect x="432.6" y="547.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="435.6" y="558.0"></text>
</g>
<g>
<title>scala/math/BigInt.testBit (5 samples, 0.69%)</title><rect x="432.6" y="531.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="435.6" y="542.0"></text>
</g>
<g>
<title>java/math/BigInteger.testBit (5 samples, 0.69%)</title><rect x="432.6" y="515.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="435.6" y="526.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (5 samples, 0.69%)</title><rect x="432.6" y="499.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="435.6" y="510.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToInteger (6 samples, 0.83%)</title><rect x="440.7" y="611.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.7" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (6 samples, 0.83%)</title><rect x="440.7" y="595.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="443.7" y="606.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.41%)</title><rect x="440.7" y="579.0" width="4.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="443.7" y="590.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$8/1832580921.apply (3 samples, 0.41%)</title><rect x="445.6" y="579.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="448.6" y="590.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.result (6 samples, 0.83%)</title><rect x="450.5" y="627.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="453.5" y="638.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.result (6 samples, 0.83%)</title><rect x="450.5" y="611.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.5" y="622.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.gotoPos (3 samples, 0.41%)</title><rect x="450.5" y="595.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.5" y="606.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.gotoPos$ (1 samples, 0.14%)</title><rect x="453.7" y="579.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="456.7" y="590.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.gotoPos (1 samples, 0.14%)</title><rect x="453.7" y="563.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.7" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.display0_$eq (1 samples, 0.14%)</title><rect x="453.7" y="547.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="456.7" y="558.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.initFrom (3 samples, 0.41%)</title><rect x="455.3" y="595.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="458.3" y="606.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (3 samples, 0.41%)</title><rect x="455.3" y="579.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="458.3" y="590.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (3 samples, 0.41%)</title><rect x="455.3" y="563.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="458.3" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.initFrom (3 samples, 0.41%)</title><rect x="455.3" y="547.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="458.3" y="558.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (3 samples, 0.41%)</title><rect x="455.3" y="531.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="458.3" y="542.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (3 samples, 0.41%)</title><rect x="455.3" y="515.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="458.3" y="526.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.41%)</title><rect x="455.3" y="499.0" width="4.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="458.3" y="510.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.mkString (58 samples, 7.99%)</title><rect x="460.2" y="675.0" width="94.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="463.2" y="686.0">scala/colle..</text>
</g>
<g>
<title>scala/collection/TraversableOnce.mkString$ (58 samples, 7.99%)</title><rect x="460.2" y="659.0" width="94.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.2" y="670.0">scala/colle..</text>
</g>
<g>
<title>scala/collection/TraversableOnce.mkString (58 samples, 7.99%)</title><rect x="460.2" y="643.0" width="94.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.2" y="654.0">scala/colle..</text>
</g>
<g>
<title>scala/collection/AbstractTraversable.mkString (58 samples, 7.99%)</title><rect x="460.2" y="627.0" width="94.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="463.2" y="638.0">scala/colle..</text>
</g>
<g>
<title>scala/collection/TraversableOnce.mkString$ (58 samples, 7.99%)</title><rect x="460.2" y="611.0" width="94.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.2" y="622.0">scala/colle..</text>
</g>
<g>
<title>scala/collection/TraversableOnce.mkString (58 samples, 7.99%)</title><rect x="460.2" y="595.0" width="94.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.2" y="606.0">scala/colle..</text>
</g>
<g>
<title>itable stub (1 samples, 0.14%)</title><rect x="461.8" y="579.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="464.8" y="590.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.addString (56 samples, 7.71%)</title><rect x="463.5" y="579.0" width="91.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.5" y="590.0">scala/colle..</text>
</g>
<g>
<title>scala/collection/TraversableOnce.addString$ (56 samples, 7.71%)</title><rect x="463.5" y="563.0" width="91.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.5" y="574.0">scala/colle..</text>
</g>
<g>
<title>scala/collection/TraversableOnce.addString (56 samples, 7.71%)</title><rect x="463.5" y="547.0" width="91.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.5" y="558.0">scala/colle..</text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (56 samples, 7.71%)</title><rect x="463.5" y="531.0" width="91.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.5" y="542.0">scala/colle..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (56 samples, 7.71%)</title><rect x="463.5" y="515.0" width="91.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.5" y="526.0">scala/colle..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (56 samples, 7.71%)</title><rect x="463.5" y="499.0" width="91.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.5" y="510.0">scala/colle..</text>
</g>
<g>
<title>itable stub (1 samples, 0.14%)</title><rect x="463.5" y="483.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="466.5" y="494.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (54 samples, 7.44%)</title><rect x="465.1" y="483.0" width="87.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="468.1" y="494.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (54 samples, 7.44%)</title><rect x="465.1" y="467.0" width="87.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.1" y="478.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach (54 samples, 7.44%)</title><rect x="465.1" y="451.0" width="87.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.1" y="462.0">scala/coll..</text>
</g>
<g>
<title>itable stub (8 samples, 1.10%)</title><rect x="470.0" y="435.0" width="13.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="473.0" y="446.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce$$Lambda$35/279972832.apply (32 samples, 4.41%)</title><rect x="483.0" y="435.0" width="52.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.0" y="446.0">scala..</text>
</g>
<g>
<title>scala/collection/TraversableOnce.$anonfun$addString$1 (28 samples, 3.86%)</title><rect x="489.5" y="419.0" width="45.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="492.5" y="430.0">scal..</text>
</g>
<g>
<title>scala/collection/mutable/StringBuilder.append (28 samples, 3.86%)</title><rect x="489.5" y="403.0" width="45.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="492.5" y="414.0">scal..</text>
</g>
<g>
<title>java/lang/String.valueOf (28 samples, 3.86%)</title><rect x="489.5" y="387.0" width="45.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="492.5" y="398.0">java..</text>
</g>
<g>
<title>java/lang/String.toString (8 samples, 1.10%)</title><rect x="509.0" y="371.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.0" y="382.0"></text>
</g>
<g>
<title>jshort_arraycopy (3 samples, 0.41%)</title><rect x="522.0" y="371.0" width="4.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="525.0" y="382.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (5 samples, 0.69%)</title><rect x="526.9" y="371.0" width="8.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="529.9" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.hasNext (1 samples, 0.14%)</title><rect x="535.0" y="435.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.0" y="446.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.next (10 samples, 1.38%)</title><rect x="536.6" y="435.0" width="16.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="539.6" y="446.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.gotoNextBlockStart (1 samples, 0.14%)</title><rect x="551.2" y="419.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.2" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.gotoNextBlockStart$ (1 samples, 0.14%)</title><rect x="551.2" y="403.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.2" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.gotoNextBlockStart (1 samples, 0.14%)</title><rect x="551.2" y="387.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.2" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (1 samples, 0.14%)</title><rect x="552.9" y="483.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.9" y="494.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (1 samples, 0.14%)</title><rect x="552.9" y="467.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="555.9" y="478.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.initIterator (1 samples, 0.14%)</title><rect x="552.9" y="451.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="555.9" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.initFrom (1 samples, 0.14%)</title><rect x="552.9" y="435.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.9" y="446.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (1 samples, 0.14%)</title><rect x="552.9" y="419.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="555.9" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (1 samples, 0.14%)</title><rect x="552.9" y="403.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.9" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.initFrom (1 samples, 0.14%)</title><rect x="552.9" y="387.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="555.9" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (1 samples, 0.14%)</title><rect x="552.9" y="371.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.9" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (1 samples, 0.14%)</title><rect x="552.9" y="355.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="555.9" y="366.0"></text>
</g>
<g>
<title>scala/collection/immutable/Range.by (1 samples, 0.14%)</title><rect x="554.5" y="675.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.5" y="686.0"></text>
</g>
<g>
<title>scala/collection/immutable/Range$Inclusive.copy (1 samples, 0.14%)</title><rect x="554.5" y="659.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.5" y="670.0"></text>
</g>
<g>
<title>scala/collection/immutable/Range$Inclusive.&lt;init&gt; (1 samples, 0.14%)</title><rect x="554.5" y="643.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.5" y="654.0"></text>
</g>
<g>
<title>scala/collection/immutable/Range.&lt;init&gt; (1 samples, 0.14%)</title><rect x="554.5" y="627.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="557.5" y="638.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.28%)</title><rect x="556.1" y="675.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.1" y="686.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (2 samples, 0.28%)</title><rect x="556.1" y="659.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.1" y="670.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (2 samples, 0.28%)</title><rect x="556.1" y="643.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="559.1" y="654.0"></text>
</g>
<g>
<title>scala/math/BigInt.isValidLong (1 samples, 0.14%)</title><rect x="556.1" y="627.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.1" y="638.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (1 samples, 0.14%)</title><rect x="556.1" y="611.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="559.1" y="622.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.14%)</title><rect x="556.1" y="595.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="559.1" y="606.0"></text>
</g>
<g>
<title>java/math/BigInteger.valueOf (1 samples, 0.14%)</title><rect x="556.1" y="579.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="559.1" y="590.0"></text>
</g>
<g>
<title>scala/math/BigInt.unifiedPrimitiveEquals (1 samples, 0.14%)</title><rect x="557.7" y="627.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="560.7" y="638.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.unifiedPrimitiveEquals$ (1 samples, 0.14%)</title><rect x="557.7" y="611.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.7" y="622.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.unifiedPrimitiveEquals (1 samples, 0.14%)</title><rect x="557.7" y="595.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="560.7" y="606.0"></text>
</g>
<g>
<title>scala/math/BigInt.isValidInt (1 samples, 0.14%)</title><rect x="557.7" y="579.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="560.7" y="590.0"></text>
</g>
<g>
<title>scala/math/BigInt.$greater$eq (1 samples, 0.14%)</title><rect x="557.7" y="563.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.7" y="574.0"></text>
</g>
<g>
<title>scala/math/Ordered.$greater$eq$ (1 samples, 0.14%)</title><rect x="557.7" y="547.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.7" y="558.0"></text>
</g>
<g>
<title>scala/math/Ordered.$greater$eq (1 samples, 0.14%)</title><rect x="557.7" y="531.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.7" y="542.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (1 samples, 0.14%)</title><rect x="557.7" y="515.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="560.7" y="526.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (1 samples, 0.14%)</title><rect x="557.7" y="499.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.7" y="510.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (1 samples, 0.14%)</title><rect x="557.7" y="483.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="560.7" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (5 samples, 0.69%)</title><rect x="559.4" y="803.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.4" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.14%)</title><rect x="559.4" y="787.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.4" y="798.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (4 samples, 0.55%)</title><rect x="561.0" y="787.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="564.0" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="561.0" y="771.0" width="1.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="564.0" y="782.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (3 samples, 0.41%)</title><rect x="562.6" y="771.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.6" y="782.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (3 samples, 0.41%)</title><rect x="562.6" y="755.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="565.6" y="766.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (3 samples, 0.41%)</title><rect x="562.6" y="739.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.6" y="750.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (3 samples, 0.41%)</title><rect x="562.6" y="723.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.6" y="734.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (3 samples, 0.41%)</title><rect x="562.6" y="707.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.6" y="718.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (3 samples, 0.41%)</title><rect x="562.6" y="691.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="565.6" y="702.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (3 samples, 0.41%)</title><rect x="562.6" y="675.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.6" y="686.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (3 samples, 0.41%)</title><rect x="562.6" y="659.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.6" y="670.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (3 samples, 0.41%)</title><rect x="562.6" y="643.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="565.6" y="654.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress$ProgressThread.run (13 samples, 1.79%)</title><rect x="567.5" y="2211.0" width="21.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.5" y="2222.0">s..</text>
</g>
<g>
<title>java/lang/Thread.sleep (3 samples, 0.41%)</title><rect x="569.1" y="2195.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="572.1" y="2206.0"></text>
</g>
<g>
<title>JVM_Sleep (3 samples, 0.41%)</title><rect x="569.1" y="2179.0" width="4.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="572.1" y="2190.0"></text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (3 samples, 0.41%)</title><rect x="569.1" y="2163.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="572.1" y="2174.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.14%)</title><rect x="569.1" y="2147.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="572.1" y="2158.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.14%)</title><rect x="569.1" y="2131.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="572.1" y="2142.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.14%)</title><rect x="569.1" y="2115.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="572.1" y="2126.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.14%)</title><rect x="569.1" y="2099.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="572.1" y="2110.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.14%)</title><rect x="569.1" y="2083.0" width="1.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="572.1" y="2094.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.14%)</title><rect x="569.1" y="2067.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="572.1" y="2078.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.14%)</title><rect x="569.1" y="2051.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="572.1" y="2062.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.28%)</title><rect x="570.7" y="2147.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="573.7" y="2158.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.28%)</title><rect x="570.7" y="2131.0" width="3.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="573.7" y="2142.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress.sbt$internal$TaskProgress$$report (9 samples, 1.24%)</title><rect x="574.0" y="2195.0" width="14.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.0" y="2206.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress.report0$1 (9 samples, 1.24%)</title><rect x="574.0" y="2179.0" width="14.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="577.0" y="2190.0"></text>
</g>
<g>
<title>java/lang/Class.getClassLoader (1 samples, 0.14%)</title><rect x="574.0" y="2163.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="577.0" y="2174.0"></text>
</g>
<g>
<title>sbt/internal/util/ManagedLogger.logEvent (5 samples, 0.69%)</title><rect x="575.6" y="2163.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="578.6" y="2174.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.apply (4 samples, 0.55%)</title><rect x="577.2" y="2147.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.2" y="2158.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.retry$1 (4 samples, 0.55%)</title><rect x="577.2" y="2131.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="580.2" y="2142.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.doApply$1 (4 samples, 0.55%)</title><rect x="577.2" y="2115.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="580.2" y="2126.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.typeToString (4 samples, 0.55%)</title><rect x="577.2" y="2099.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.2" y="2110.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$Type.toString (4 samples, 0.55%)</title><rect x="577.2" y="2083.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="580.2" y="2094.0"></text>
</g>
<g>
<title>scala/reflect/internal/SymbolTable.typeToString (3 samples, 0.41%)</title><rect x="578.9" y="2067.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.9" y="2078.0"></text>
</g>
<g>
<title>scala/reflect/internal/tpe/TypeToStrings.typeToString$ (3 samples, 0.41%)</title><rect x="578.9" y="2051.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="581.9" y="2062.0"></text>
</g>
<g>
<title>scala/reflect/internal/tpe/TypeToStrings.typeToString (3 samples, 0.41%)</title><rect x="578.9" y="2035.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="581.9" y="2046.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$TypeRef.safeToString (3 samples, 0.41%)</title><rect x="578.9" y="2019.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="581.9" y="2030.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$TypeRef.customToString (1 samples, 0.14%)</title><rect x="578.9" y="2003.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.9" y="2014.0"></text>
</g>
<g>
<title>scala/reflect/internal/SymbolTable.definitions (1 samples, 0.14%)</title><rect x="578.9" y="1987.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.9" y="1998.0"></text>
</g>
<g>
<title>scala/reflect/internal/SymbolTable.definitions$lzycompute$1 (1 samples, 0.14%)</title><rect x="578.9" y="1971.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="581.9" y="1982.0"></text>
</g>
<g>
<title>scala/reflect/internal/Definitions$definitions$.&lt;init&gt; (1 samples, 0.14%)</title><rect x="578.9" y="1955.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="581.9" y="1966.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$TypeRef.preString (2 samples, 0.28%)</title><rect x="580.5" y="2003.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="583.5" y="2014.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$ThisType.prefixString (2 samples, 0.28%)</title><rect x="580.5" y="1987.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="583.5" y="1998.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.fullNameString (1 samples, 0.14%)</title><rect x="580.5" y="1971.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.5" y="1982.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.recur$1 (1 samples, 0.14%)</title><rect x="580.5" y="1955.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="583.5" y="1966.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.nameString (1 samples, 0.14%)</title><rect x="580.5" y="1939.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="583.5" y="1950.0"></text>
</g>
<g>
<title>scala/reflect/internal/Names$Name.decode (1 samples, 0.14%)</title><rect x="580.5" y="1923.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="583.5" y="1934.0"></text>
</g>
<g>
<title>scala/reflect/internal/Names$Name.toString (1 samples, 0.14%)</title><rect x="580.5" y="1907.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.5" y="1918.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.14%)</title><rect x="580.5" y="1891.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="583.5" y="1902.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.isOmittablePrefix (1 samples, 0.14%)</title><rect x="582.1" y="1971.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.1" y="1982.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (1 samples, 0.14%)</title><rect x="582.1" y="1955.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.1" y="1966.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.exists$ (1 samples, 0.14%)</title><rect x="582.1" y="1939.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.1" y="1950.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.exists (1 samples, 0.14%)</title><rect x="582.1" y="1923.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.1" y="1934.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.exists (1 samples, 0.14%)</title><rect x="582.1" y="1907.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.1" y="1918.0"></text>
</g>
<g>
<title>scala/collection/Iterator.exists$ (1 samples, 0.14%)</title><rect x="582.1" y="1891.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="585.1" y="1902.0"></text>
</g>
<g>
<title>scala/collection/Iterator.exists (1 samples, 0.14%)</title><rect x="582.1" y="1875.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.1" y="1886.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol$$Lambda$2274/1886898221.apply (1 samples, 0.14%)</title><rect x="582.1" y="1859.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.1" y="1870.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.$anonfun$isOmittablePrefix$1$adapted (1 samples, 0.14%)</title><rect x="582.1" y="1843.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.1" y="1854.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.$anonfun$isOmittablePrefix$1 (1 samples, 0.14%)</title><rect x="582.1" y="1827.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.1" y="1838.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.matches$1 (1 samples, 0.14%)</title><rect x="582.1" y="1811.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="585.1" y="1822.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.hasPackageFlag (1 samples, 0.14%)</title><rect x="582.1" y="1795.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="585.1" y="1806.0"></text>
</g>
<g>
<title>scala/reflect/internal/HasFlags.hasPackageFlag$ (1 samples, 0.14%)</title><rect x="582.1" y="1779.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.1" y="1790.0"></text>
</g>
<g>
<title>scala/reflect/internal/HasFlags.hasPackageFlag (1 samples, 0.14%)</title><rect x="582.1" y="1763.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.1" y="1774.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.hasFlag (1 samples, 0.14%)</title><rect x="582.1" y="1747.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="585.1" y="1758.0"></text>
</g>
<g>
<title>scala/reflect/api/TypeTags$TypeTag$.apply (2 samples, 0.28%)</title><rect x="583.7" y="2163.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.7" y="2174.0"></text>
</g>
<g>
<title>java/lang/String.contains (1 samples, 0.14%)</title><rect x="583.7" y="2147.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.7" y="2158.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="583.7" y="2131.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="586.7" y="2142.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="583.7" y="2115.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.7" y="2126.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors$JavaMirror.typeTag (1 samples, 0.14%)</title><rect x="585.4" y="2147.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.4" y="2158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (1 samples, 0.14%)</title><rect x="585.4" y="2131.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="588.4" y="2142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$200 (1 samples, 0.14%)</title><rect x="585.4" y="2115.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.4" y="2126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (1 samples, 0.14%)</title><rect x="585.4" y="2099.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="588.4" y="2110.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaUniverse.runtimeMirror (1 samples, 0.14%)</title><rect x="587.0" y="2163.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="590.0" y="2174.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaUniverse.runtimeMirror (1 samples, 0.14%)</title><rect x="587.0" y="2147.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="590.0" y="2158.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors.runtimeMirror$ (1 samples, 0.14%)</title><rect x="587.0" y="2131.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="590.0" y="2142.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors.runtimeMirror (1 samples, 0.14%)</title><rect x="587.0" y="2115.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="590.0" y="2126.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors.$anonfun$runtimeMirror$1 (1 samples, 0.14%)</title><rect x="587.0" y="2099.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.0" y="2110.0"></text>
</g>
<g>
<title>thread_start (370 samples, 50.96%)</title><rect x="588.6" y="2211.0" width="601.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="591.6" y="2222.0">thread_start</text>
</g>
<g>
<title>_pthread_start (370 samples, 50.96%)</title><rect x="588.6" y="2195.0" width="601.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="591.6" y="2206.0">_pthread_start</text>
</g>
<g>
<title>_pthread_body (370 samples, 50.96%)</title><rect x="588.6" y="2179.0" width="601.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="591.6" y="2190.0">_pthread_body</text>
</g>
<g>
<title>java_start(Thread*) (370 samples, 50.96%)</title><rect x="588.6" y="2163.0" width="601.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="591.6" y="2174.0">java_start(Thread*)</text>
</g>
<g>
<title>GCTaskThread::run() (319 samples, 43.94%)</title><rect x="588.6" y="2147.0" width="518.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="591.6" y="2158.0">GCTaskThread::run()</text>
</g>
<g>
<title>DrainStacksCompactionTask::do_it(GCTaskManager*, unsigned int) (66 samples, 9.09%)</title><rect x="588.6" y="2131.0" width="107.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="591.6" y="2142.0">DrainStacksCo..</text>
</g>
<g>
<title>ParCompactionManager::drain_region_stacks() (66 samples, 9.09%)</title><rect x="588.6" y="2115.0" width="107.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="591.6" y="2126.0">ParCompaction..</text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (66 samples, 9.09%)</title><rect x="588.6" y="2099.0" width="107.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="591.6" y="2110.0">PSParallelCom..</text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (1 samples, 0.14%)</title><rect x="588.6" y="2083.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="591.6" y="2094.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.14%)</title><rect x="588.6" y="2067.0" width="1.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="591.6" y="2078.0"></text>
</g>
<g>
<title>PSParallelCompact::skip_live_words(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.14%)</title><rect x="590.2" y="2083.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="593.2" y="2094.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (64 samples, 8.82%)</title><rect x="591.9" y="2083.0" width="104.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="594.9" y="2094.0">ParMarkBitMa..</text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (60 samples, 8.26%)</title><rect x="598.4" y="2067.0" width="97.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="601.4" y="2078.0">MoveAndUpda..</text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (38 samples, 5.23%)</title><rect x="601.6" y="2051.0" width="61.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="604.6" y="2062.0">Instan..</text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (37 samples, 5.10%)</title><rect x="603.3" y="2035.0" width="60.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="606.3" y="2046.0">Parall..</text>
</g>
<g>
<title>PSParallelCompact::fill_blocks(unsigned long) (1 samples, 0.14%)</title><rect x="604.9" y="2019.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="607.9" y="2030.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (35 samples, 4.82%)</title><rect x="606.5" y="2019.0" width="56.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="609.5" y="2030.0">ParMar..</text>
</g>
<g>
<title>InstanceKlass::vtable_length() const (1 samples, 0.14%)</title><rect x="663.4" y="2051.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="666.4" y="2062.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (16 samples, 2.20%)</title><rect x="665.0" y="2051.0" width="26.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="668.0" y="2062.0">O..</text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (15 samples, 2.07%)</title><rect x="666.6" y="2035.0" width="24.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="669.6" y="2046.0">P..</text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (15 samples, 2.07%)</title><rect x="666.6" y="2019.0" width="24.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="669.6" y="2030.0">P..</text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (3 samples, 0.41%)</title><rect x="691.0" y="2051.0" width="4.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="694.0" y="2062.0"></text>
</g>
<g>
<title>GCTaskManager::get_task(unsigned int) (4 samples, 0.55%)</title><rect x="695.9" y="2131.0" width="6.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="698.9" y="2142.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.14%)</title><rect x="695.9" y="2115.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="698.9" y="2126.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.14%)</title><rect x="695.9" y="2099.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="698.9" y="2110.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.14%)</title><rect x="695.9" y="2083.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="698.9" y="2094.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.14%)</title><rect x="695.9" y="2067.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="698.9" y="2078.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.14%)</title><rect x="695.9" y="2051.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="698.9" y="2062.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 0.41%)</title><rect x="697.5" y="2115.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="700.5" y="2126.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (3 samples, 0.41%)</title><rect x="697.5" y="2099.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="700.5" y="2110.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (2 samples, 0.28%)</title><rect x="697.5" y="2083.0" width="3.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="700.5" y="2094.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (2 samples, 0.28%)</title><rect x="697.5" y="2067.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="700.5" y="2078.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.28%)</title><rect x="697.5" y="2051.0" width="3.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="700.5" y="2062.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.14%)</title><rect x="700.8" y="2083.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="703.8" y="2094.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.14%)</title><rect x="700.8" y="2067.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="703.8" y="2078.0"></text>
</g>
<g>
<title>MarkFromRootsTask::do_it(GCTaskManager*, unsigned int) (1 samples, 0.14%)</title><rect x="702.4" y="2131.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="705.4" y="2142.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (1 samples, 0.14%)</title><rect x="702.4" y="2115.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="705.4" y="2126.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.14%)</title><rect x="702.4" y="2099.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="705.4" y="2110.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.14%)</title><rect x="702.4" y="2083.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="705.4" y="2094.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (1 samples, 0.14%)</title><rect x="702.4" y="2067.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="705.4" y="2078.0"></text>
</g>
<g>
<title>OldToYoungRootsTask::do_it(GCTaskManager*, unsigned int) (11 samples, 1.52%)</title><rect x="704.0" y="2131.0" width="17.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="707.0" y="2142.0"></text>
</g>
<g>
<title>CardTableExtension::scavenge_contents_parallel(ObjectStartArray*, MutableSpace*, HeapWord*, PSPromotionManager*, unsigned int, unsigned int) (10 samples, 1.38%)</title><rect x="704.0" y="2115.0" width="16.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="707.0" y="2126.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (1 samples, 0.14%)</title><rect x="705.6" y="2099.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="708.6" y="2110.0"></text>
</g>
<g>
<title>ObjectStartArray::object_start(HeapWord*) const (2 samples, 0.28%)</title><rect x="707.3" y="2099.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="710.3" y="2110.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.28%)</title><rect x="707.3" y="2083.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="710.3" y="2094.0"></text>
</g>
<g>
<title>ObjectStartArray::offset_addr_for_block(signed char*) const (1 samples, 0.14%)</title><rect x="710.5" y="2099.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="713.5" y="2110.0"></text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (4 samples, 0.55%)</title><rect x="712.1" y="2099.0" width="6.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="715.1" y="2110.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (3 samples, 0.41%)</title><rect x="713.8" y="2083.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="716.8" y="2094.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (3 samples, 0.41%)</title><rect x="713.8" y="2067.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="716.8" y="2078.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (2 samples, 0.28%)</title><rect x="715.4" y="2051.0" width="3.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="718.4" y="2062.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.14%)</title><rect x="718.7" y="2099.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="721.7" y="2110.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.14%)</title><rect x="720.3" y="2115.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="723.3" y="2126.0"></text>
</g>
<g>
<title>PSParallelCompact::update_and_deadwood_in_dense_prefix(ParCompactionManager*, PSParallelCompact::SpaceId, unsigned long, unsigned long) (6 samples, 0.83%)</title><rect x="721.9" y="2131.0" width="9.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="724.9" y="2142.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, ParMarkBitMapClosure*, unsigned long, unsigned long, unsigned long) const (6 samples, 0.83%)</title><rect x="721.9" y="2115.0" width="9.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="724.9" y="2126.0"></text>
</g>
<g>
<title>UpdateOnlyClosure::do_addr(HeapWord*, unsigned long) (3 samples, 0.41%)</title><rect x="726.8" y="2099.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="729.8" y="2110.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (2 samples, 0.28%)</title><rect x="726.8" y="2083.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="729.8" y="2094.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.14%)</title><rect x="728.4" y="2067.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="731.4" y="2078.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.14%)</title><rect x="730.0" y="2083.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="733.0" y="2094.0"></text>
</g>
<g>
<title>ScavengeRootsTask::do_it(GCTaskManager*, unsigned int) (6 samples, 0.83%)</title><rect x="731.7" y="2131.0" width="9.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="734.7" y="2142.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::oops_do(OopClosure*, KlassClosure*, bool) (6 samples, 0.83%)</title><rect x="731.7" y="2115.0" width="9.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="734.7" y="2126.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (5 samples, 0.69%)</title><rect x="731.7" y="2099.0" width="8.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="734.7" y="2110.0"></text>
</g>
<g>
<title>PSScavengeKlassClosure::do_klass(Klass*) (5 samples, 0.69%)</title><rect x="731.7" y="2083.0" width="8.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="734.7" y="2094.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (1 samples, 0.14%)</title><rect x="739.8" y="2099.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="742.8" y="2110.0"></text>
</g>
<g>
<title>void PSRootsClosure&lt;false&gt;::do_oop_work&lt;oopDesc*&gt;(oopDesc**) (1 samples, 0.14%)</title><rect x="739.8" y="2083.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="742.8" y="2094.0"></text>
</g>
<g>
<title>StealMarkingTask::do_it(GCTaskManager*, unsigned int) (86 samples, 11.85%)</title><rect x="741.4" y="2131.0" width="139.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="744.4" y="2142.0">StealMarkingTask:..</text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (20 samples, 2.75%)</title><rect x="741.4" y="2115.0" width="32.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="744.4" y="2126.0">Pa..</text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (15 samples, 2.07%)</title><rect x="743.0" y="2099.0" width="24.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="746.0" y="2110.0">I..</text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;oopDesc*&gt;(ParCompactionManager*, oopDesc**) (2 samples, 0.28%)</title><rect x="744.7" y="2083.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="747.7" y="2094.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (12 samples, 1.65%)</title><rect x="747.9" y="2083.0" width="19.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="750.9" y="2094.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (5 samples, 0.69%)</title><rect x="757.7" y="2067.0" width="8.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="760.7" y="2078.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.14%)</title><rect x="765.8" y="2067.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="768.8" y="2078.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (3 samples, 0.41%)</title><rect x="767.4" y="2099.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="770.4" y="2110.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (3 samples, 0.41%)</title><rect x="767.4" y="2083.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="770.4" y="2094.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (3 samples, 0.41%)</title><rect x="767.4" y="2067.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="770.4" y="2078.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (1 samples, 0.14%)</title><rect x="767.4" y="2051.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="770.4" y="2062.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.28%)</title><rect x="769.0" y="2051.0" width="3.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="772.0" y="2062.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (1 samples, 0.14%)</title><rect x="772.3" y="2099.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="775.3" y="2110.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.14%)</title><rect x="772.3" y="2083.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="775.3" y="2094.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.14%)</title><rect x="772.3" y="2067.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="775.3" y="2078.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (5 samples, 0.69%)</title><rect x="773.9" y="2115.0" width="8.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="776.9" y="2126.0"></text>
</g>
<g>
<title>xdrmem_ops_aligned (2 samples, 0.28%)</title><rect x="778.8" y="2099.0" width="3.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="781.8" y="2110.0"></text>
</g>
<g>
<title>SpinPause (61 samples, 8.40%)</title><rect x="782.0" y="2115.0" width="99.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="785.0" y="2126.0">SpinPause</text>
</g>
<g>
<title>StealTask::do_it(GCTaskManager*, unsigned int) (138 samples, 19.01%)</title><rect x="881.2" y="2131.0" width="224.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="884.2" y="2142.0">StealTask::do_it(GCTaskManager..</text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)1, 131072u&gt;, (MemoryType)1&gt;::steal(unsigned int, int*, StarTask&amp;) (1 samples, 0.14%)</title><rect x="881.2" y="2115.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="884.2" y="2126.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)1, 131072u&gt;, (MemoryType)1&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (1 samples, 0.14%)</title><rect x="881.2" y="2099.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="884.2" y="2110.0"></text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (57 samples, 7.85%)</title><rect x="882.8" y="2115.0" width="92.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="885.8" y="2126.0">PSPromotion..</text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (53 samples, 7.30%)</title><rect x="889.3" y="2099.0" width="86.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="892.3" y="2110.0">PSPromotio..</text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.14%)</title><rect x="895.8" y="2083.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="898.8" y="2094.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (2 samples, 0.28%)</title><rect x="897.4" y="2083.0" width="3.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="900.4" y="2094.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (46 samples, 6.34%)</title><rect x="900.7" y="2083.0" width="74.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="903.7" y="2094.0">oopDesc*..</text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (6 samples, 0.83%)</title><rect x="918.6" y="2067.0" width="9.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="921.6" y="2078.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.28%)</title><rect x="925.1" y="2051.0" width="3.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="928.1" y="2062.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (12 samples, 1.65%)</title><rect x="928.3" y="2067.0" width="19.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="931.3" y="2078.0"></text>
</g>
<g>
<title>void PSPromotionManager::push_depth&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.14%)</title><rect x="946.2" y="2051.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="949.2" y="2062.0"></text>
</g>
<g>
<title>InstanceKlass::vtable_length() const (2 samples, 0.28%)</title><rect x="947.8" y="2067.0" width="3.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="950.8" y="2078.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (13 samples, 1.79%)</title><rect x="951.1" y="2067.0" width="21.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="954.1" y="2078.0">O..</text>
</g>
<g>
<title>void PSPromotionManager::push_depth&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.14%)</title><rect x="970.6" y="2051.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="973.6" y="2062.0"></text>
</g>
<g>
<title>PSOldPromotionLAB::allocate(unsigned long) (1 samples, 0.14%)</title><rect x="972.2" y="2067.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="975.2" y="2078.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.14%)</title><rect x="973.8" y="2067.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="976.8" y="2078.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (12 samples, 1.65%)</title><rect x="975.5" y="2115.0" width="19.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="978.5" y="2126.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (10 samples, 1.38%)</title><rect x="978.7" y="2099.0" width="16.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="981.7" y="2110.0"></text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (8 samples, 1.10%)</title><rect x="980.3" y="2083.0" width="13.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="983.3" y="2094.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (8 samples, 1.10%)</title><rect x="980.3" y="2067.0" width="13.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="983.3" y="2078.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (1 samples, 0.14%)</title><rect x="993.3" y="2083.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="996.3" y="2094.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (13 samples, 1.79%)</title><rect x="995.0" y="2115.0" width="21.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="998.0" y="2126.0">P..</text>
</g>
<g>
<title>xdrmem_ops_aligned (8 samples, 1.10%)</title><rect x="1003.1" y="2099.0" width="13.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1006.1" y="2110.0"></text>
</g>
<g>
<title>SpinPause (50 samples, 6.89%)</title><rect x="1016.1" y="2115.0" width="81.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1019.1" y="2126.0">SpinPause</text>
</g>
<g>
<title>void PSPromotionManager::process_array_chunk_work&lt;unsigned int&gt;(oopDesc*, int, int) (5 samples, 0.69%)</title><rect x="1097.4" y="2115.0" width="8.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1100.4" y="2126.0"></text>
</g>
<g>
<title>ThreadRootsMarkingTask::do_it(GCTaskManager*, unsigned int) (1 samples, 0.14%)</title><rect x="1105.5" y="2131.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1108.5" y="2142.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (1 samples, 0.14%)</title><rect x="1105.5" y="2115.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1108.5" y="2126.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.14%)</title><rect x="1105.5" y="2099.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1108.5" y="2110.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.14%)</title><rect x="1105.5" y="2083.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1108.5" y="2094.0"></text>
</g>
<g>
<title>JavaThread::run() (39 samples, 5.37%)</title><rect x="1107.1" y="2147.0" width="63.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1110.1" y="2158.0">JavaThr..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (39 samples, 5.37%)</title><rect x="1107.1" y="2131.0" width="63.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1110.1" y="2142.0">JavaThr..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (36 samples, 4.96%)</title><rect x="1107.1" y="2115.0" width="58.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1110.1" y="2126.0">Compil..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (33 samples, 4.55%)</title><rect x="1107.1" y="2099.0" width="53.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1110.1" y="2110.0">Compi..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (29 samples, 3.99%)</title><rect x="1107.1" y="2083.0" width="47.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1110.1" y="2094.0">C2Co..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (29 samples, 3.99%)</title><rect x="1107.1" y="2067.0" width="47.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1110.1" y="2078.0">Comp..</text>
</g>
<g>
<title>Compile::Code_Gen() (17 samples, 2.34%)</title><rect x="1107.1" y="2051.0" width="27.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1110.1" y="2062.0">C..</text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.28%)</title><rect x="1107.1" y="2035.0" width="3.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1110.1" y="2046.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (2 samples, 0.28%)</title><rect x="1107.1" y="2019.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1110.1" y="2030.0"></text>
</g>
<g>
<title>CodeBuffer::initialize(int, int) (1 samples, 0.14%)</title><rect x="1107.1" y="2003.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1110.1" y="2014.0"></text>
</g>
<g>
<title>BufferBlob::create(char const*, int) (1 samples, 0.14%)</title><rect x="1107.1" y="1987.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1110.1" y="1998.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (1 samples, 0.14%)</title><rect x="1107.1" y="1971.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1110.1" y="1982.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long, bool) (1 samples, 0.14%)</title><rect x="1107.1" y="1955.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1110.1" y="1966.0"></text>
</g>
<g>
<title>CodeHeap::search_freelist(unsigned long, bool) (1 samples, 0.14%)</title><rect x="1107.1" y="1939.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1110.1" y="1950.0"></text>
</g>
<g>
<title>Compile::init_scratch_buffer_blob(int) (1 samples, 0.14%)</title><rect x="1108.7" y="2003.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1111.7" y="2014.0"></text>
</g>
<g>
<title>BufferBlob::create(char const*, int) (1 samples, 0.14%)</title><rect x="1108.7" y="1987.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1111.7" y="1998.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (1 samples, 0.14%)</title><rect x="1108.7" y="1971.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1111.7" y="1982.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long, bool) (1 samples, 0.14%)</title><rect x="1108.7" y="1955.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1111.7" y="1966.0"></text>
</g>
<g>
<title>CodeHeap::search_freelist(unsigned long, bool) (1 samples, 0.14%)</title><rect x="1108.7" y="1939.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1111.7" y="1950.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (3 samples, 0.41%)</title><rect x="1110.4" y="2035.0" width="4.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1113.4" y="2046.0"></text>
</g>
<g>
<title>JVMState::same_calls_as(JVMState const*) const (1 samples, 0.14%)</title><rect x="1112.0" y="2019.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1115.0" y="2030.0"></text>
</g>
<g>
<title>NonSafepointEmitter::observe_instruction(Node*, int) (1 samples, 0.14%)</title><rect x="1113.6" y="2019.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1116.6" y="2030.0"></text>
</g>
<g>
<title>DebugInformationRecorder::end_scopes(int, bool) (1 samples, 0.14%)</title><rect x="1113.6" y="2003.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1116.6" y="2014.0"></text>
</g>
<g>
<title>DebugInformationRecorder::prev_pc() (1 samples, 0.14%)</title><rect x="1113.6" y="1987.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1116.6" y="1998.0"></text>
</g>
<g>
<title>Matcher::match() (3 samples, 0.41%)</title><rect x="1115.2" y="2035.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1118.2" y="2046.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.14%)</title><rect x="1115.2" y="2019.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1118.2" y="2030.0"></text>
</g>
<g>
<title>Matcher::is_visited(Node*) (1 samples, 0.14%)</title><rect x="1115.2" y="2003.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1118.2" y="2014.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.14%)</title><rect x="1116.9" y="2019.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1119.9" y="2030.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.14%)</title><rect x="1116.9" y="2003.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1119.9" y="2014.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.14%)</title><rect x="1116.9" y="1987.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1119.9" y="1998.0"></text>
</g>
<g>
<title>State::MachNodeGenerator(int, Compile*) (1 samples, 0.14%)</title><rect x="1116.9" y="1971.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1119.9" y="1982.0"></text>
</g>
<g>
<title>ProjNode::Opcode() const (1 samples, 0.14%)</title><rect x="1118.5" y="2019.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1121.5" y="2030.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (9 samples, 1.24%)</title><rect x="1120.1" y="2035.0" width="14.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1123.1" y="2046.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.14%)</title><rect x="1120.1" y="2019.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1123.1" y="2030.0"></text>
</g>
<g>
<title>IndexSetIterator::next() (1 samples, 0.14%)</title><rect x="1120.1" y="2003.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1123.1" y="2014.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1 samples, 0.14%)</title><rect x="1121.7" y="2019.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1124.7" y="2030.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.14%)</title><rect x="1123.4" y="2019.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1126.4" y="2030.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.28%)</title><rect x="1125.0" y="2019.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1128.0" y="2030.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.14%)</title><rect x="1128.2" y="2019.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1131.2" y="2030.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.28%)</title><rect x="1129.9" y="2019.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1132.9" y="2030.0"></text>
</g>
<g>
<title>RegMask::is_bound(unsigned int) const (1 samples, 0.14%)</title><rect x="1129.9" y="2003.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1132.9" y="2014.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.14%)</title><rect x="1129.9" y="1987.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1132.9" y="1998.0"></text>
</g>
<g>
<title>rRegNOper::type() const (1 samples, 0.14%)</title><rect x="1131.5" y="2003.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1134.5" y="2014.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.14%)</title><rect x="1133.1" y="2019.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1136.1" y="2030.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.14%)</title><rect x="1133.1" y="2003.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1136.1" y="2014.0"></text>
</g>
<g>
<title>Compile::Optimize() (6 samples, 0.83%)</title><rect x="1134.7" y="2051.0" width="9.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1137.7" y="2062.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (2 samples, 0.28%)</title><rect x="1134.7" y="2035.0" width="3.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1137.7" y="2046.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseTransform*) const (1 samples, 0.14%)</title><rect x="1134.7" y="2019.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1137.7" y="2030.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.14%)</title><rect x="1134.7" y="2003.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1137.7" y="2014.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.14%)</title><rect x="1134.7" y="1987.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1137.7" y="1998.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.14%)</title><rect x="1134.7" y="1971.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1137.7" y="1982.0"></text>
</g>
<g>
<title>TypeNarrowPtr::eq(Type const*) const (1 samples, 0.14%)</title><rect x="1134.7" y="1955.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1137.7" y="1966.0"></text>
</g>
<g>
<title>TypeInstPtr::eq(Type const*) const (1 samples, 0.14%)</title><rect x="1134.7" y="1939.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1137.7" y="1950.0"></text>
</g>
<g>
<title>TypeOopPtr::eq(Type const*) const (1 samples, 0.14%)</title><rect x="1134.7" y="1923.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1137.7" y="1934.0"></text>
</g>
<g>
<title>Unique_Node_List::pop() (1 samples, 0.14%)</title><rect x="1136.4" y="2019.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1139.4" y="2030.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (2 samples, 0.28%)</title><rect x="1138.0" y="2035.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1141.0" y="2046.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.14%)</title><rect x="1138.0" y="2019.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1141.0" y="2030.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.14%)</title><rect x="1138.0" y="2003.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.0" y="2014.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.14%)</title><rect x="1139.6" y="2019.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1142.6" y="2030.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.28%)</title><rect x="1141.2" y="2035.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1144.2" y="2046.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.14%)</title><rect x="1141.2" y="2019.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.2" y="2030.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.14%)</title><rect x="1141.2" y="2003.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1144.2" y="2014.0"></text>
</g>
<g>
<title>ProjNode::Value(PhaseTransform*) const (1 samples, 0.14%)</title><rect x="1142.9" y="2019.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1145.9" y="2030.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.69%)</title><rect x="1144.5" y="2051.0" width="8.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1147.5" y="2062.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.69%)</title><rect x="1144.5" y="2035.0" width="8.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1147.5" y="2046.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.69%)</title><rect x="1144.5" y="2019.0" width="8.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1147.5" y="2030.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.69%)</title><rect x="1144.5" y="2003.0" width="8.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1147.5" y="2014.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.69%)</title><rect x="1144.5" y="1987.0" width="8.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1147.5" y="1998.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.69%)</title><rect x="1144.5" y="1971.0" width="8.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1147.5" y="1982.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1144.5" y="1955.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1147.5" y="1966.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (1 samples, 0.14%)</title><rect x="1144.5" y="1939.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1147.5" y="1950.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_native_getClass() (1 samples, 0.14%)</title><rect x="1144.5" y="1923.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1147.5" y="1934.0"></text>
</g>
<g>
<title>GraphKit::load_object_klass(Node*) (1 samples, 0.14%)</title><rect x="1144.5" y="1907.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1147.5" y="1918.0"></text>
</g>
<g>
<title>LoadKlassNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*) (1 samples, 0.14%)</title><rect x="1144.5" y="1891.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1147.5" y="1902.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.14%)</title><rect x="1144.5" y="1875.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1147.5" y="1886.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.14%)</title><rect x="1144.5" y="1859.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1147.5" y="1870.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.14%)</title><rect x="1144.5" y="1843.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1147.5" y="1854.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.41%)</title><rect x="1146.1" y="1955.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1149.1" y="1966.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.41%)</title><rect x="1146.1" y="1939.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.1" y="1950.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.41%)</title><rect x="1146.1" y="1923.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1149.1" y="1934.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.41%)</title><rect x="1146.1" y="1907.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1149.1" y="1918.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.28%)</title><rect x="1147.7" y="1891.0" width="3.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1150.7" y="1902.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.28%)</title><rect x="1147.7" y="1875.0" width="3.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1150.7" y="1886.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1147.7" y="1859.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1150.7" y="1870.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1147.7" y="1843.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1150.7" y="1854.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1147.7" y="1827.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1150.7" y="1838.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1147.7" y="1811.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1150.7" y="1822.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1147.7" y="1795.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1150.7" y="1806.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1147.7" y="1779.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1150.7" y="1790.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1147.7" y="1763.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1150.7" y="1774.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1147.7" y="1747.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.7" y="1758.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1147.7" y="1731.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1150.7" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1147.7" y="1715.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1150.7" y="1726.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1147.7" y="1699.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1150.7" y="1710.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1147.7" y="1683.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1150.7" y="1694.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1147.7" y="1667.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1150.7" y="1678.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1147.7" y="1651.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1150.7" y="1662.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1147.7" y="1635.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1150.7" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1147.7" y="1619.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1150.7" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1147.7" y="1603.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1150.7" y="1614.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1147.7" y="1587.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1150.7" y="1598.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1147.7" y="1571.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1150.7" y="1582.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1147.7" y="1555.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1150.7" y="1566.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1147.7" y="1539.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1150.7" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1147.7" y="1523.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1150.7" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1147.7" y="1507.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1150.7" y="1518.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1147.7" y="1491.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1150.7" y="1502.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1147.7" y="1475.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1150.7" y="1486.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1147.7" y="1459.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1150.7" y="1470.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1147.7" y="1443.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1150.7" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1147.7" y="1427.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1150.7" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1147.7" y="1411.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1150.7" y="1422.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1147.7" y="1395.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1150.7" y="1406.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.14%)</title><rect x="1147.7" y="1379.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1150.7" y="1390.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.14%)</title><rect x="1147.7" y="1363.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1150.7" y="1374.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.14%)</title><rect x="1147.7" y="1347.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1150.7" y="1358.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.14%)</title><rect x="1147.7" y="1331.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1150.7" y="1342.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.14%)</title><rect x="1147.7" y="1315.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1150.7" y="1326.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.14%)</title><rect x="1147.7" y="1299.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1150.7" y="1310.0"></text>
</g>
<g>
<title>GrowableArray&lt;ciTypeFlow::JsrRecord*&gt;::GrowableArray(int, int, ciTypeFlow::JsrRecord* const&amp;, bool, MemoryType) (1 samples, 0.14%)</title><rect x="1147.7" y="1283.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1150.7" y="1294.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1149.4" y="1859.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1152.4" y="1870.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1149.4" y="1843.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1152.4" y="1854.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1149.4" y="1827.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1152.4" y="1838.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1149.4" y="1811.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.4" y="1822.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1149.4" y="1795.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1152.4" y="1806.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1149.4" y="1779.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1152.4" y="1790.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1149.4" y="1763.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.4" y="1774.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1149.4" y="1747.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.4" y="1758.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1149.4" y="1731.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1152.4" y="1742.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1149.4" y="1715.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1152.4" y="1726.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1149.4" y="1699.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1152.4" y="1710.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1149.4" y="1683.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1152.4" y="1694.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1149.4" y="1667.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1152.4" y="1678.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1149.4" y="1651.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1152.4" y="1662.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1149.4" y="1635.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.4" y="1646.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1149.4" y="1619.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.4" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1149.4" y="1603.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.4" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1149.4" y="1587.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.4" y="1598.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1149.4" y="1571.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.4" y="1582.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1149.4" y="1555.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.4" y="1566.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1149.4" y="1539.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.4" y="1550.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1149.4" y="1523.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.4" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1149.4" y="1507.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1152.4" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1149.4" y="1491.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1152.4" y="1502.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1149.4" y="1475.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1152.4" y="1486.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1149.4" y="1459.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.4" y="1470.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1149.4" y="1443.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.4" y="1454.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1149.4" y="1427.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1152.4" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1149.4" y="1411.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.4" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1149.4" y="1395.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.4" y="1406.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1149.4" y="1379.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.4" y="1390.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1149.4" y="1363.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1152.4" y="1374.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1149.4" y="1347.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.4" y="1358.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1149.4" y="1331.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1152.4" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1149.4" y="1315.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.4" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1149.4" y="1299.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1152.4" y="1310.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.14%)</title><rect x="1149.4" y="1283.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1152.4" y="1294.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.14%)</title><rect x="1149.4" y="1267.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.4" y="1278.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.14%)</title><rect x="1149.4" y="1251.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.4" y="1262.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.14%)</title><rect x="1149.4" y="1235.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.4" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.14%)</title><rect x="1149.4" y="1219.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.4" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.14%)</title><rect x="1149.4" y="1203.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1152.4" y="1214.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.14%)</title><rect x="1149.4" y="1187.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.4" y="1198.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.14%)</title><rect x="1149.4" y="1171.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1152.4" y="1182.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.14%)</title><rect x="1149.4" y="1155.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1152.4" y="1166.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.14%)</title><rect x="1149.4" y="1139.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.4" y="1150.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.14%)</title><rect x="1149.4" y="1123.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1152.4" y="1134.0"></text>
</g>
<g>
<title>ciField::initialize_from(fieldDescriptor*) (1 samples, 0.14%)</title><rect x="1149.4" y="1107.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.4" y="1118.0"></text>
</g>
<g>
<title>ciInstanceKlass::is_in_package(char const*, int) (1 samples, 0.14%)</title><rect x="1149.4" y="1091.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1152.4" y="1102.0"></text>
</g>
<g>
<title>pthread_getspecific (1 samples, 0.14%)</title><rect x="1151.0" y="1955.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1154.0" y="1966.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (1 samples, 0.14%)</title><rect x="1152.6" y="2051.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1155.6" y="2062.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (1 samples, 0.14%)</title><rect x="1152.6" y="2035.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1155.6" y="2046.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (1 samples, 0.14%)</title><rect x="1152.6" y="2019.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.6" y="2030.0"></text>
</g>
<g>
<title>CodeBlob::CodeBlob(char const*, CodeBuffer*, int, int, int, int, OopMapSet*) (1 samples, 0.14%)</title><rect x="1152.6" y="2003.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1155.6" y="2014.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (1 samples, 0.14%)</title><rect x="1152.6" y="1987.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.6" y="1998.0"></text>
</g>
<g>
<title>CodeBuffer::relocate_code_to(CodeBuffer*) const (1 samples, 0.14%)</title><rect x="1152.6" y="1971.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1155.6" y="1982.0"></text>
</g>
<g>
<title>CallRelocation::fix_relocation_after_move(CodeBuffer const*, CodeBuffer*) (1 samples, 0.14%)</title><rect x="1152.6" y="1955.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1155.6" y="1966.0"></text>
</g>
<g>
<title>NativeCall::destination() const (1 samples, 0.14%)</title><rect x="1152.6" y="1939.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.6" y="1950.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (3 samples, 0.41%)</title><rect x="1154.2" y="2083.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.2" y="2094.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (3 samples, 0.41%)</title><rect x="1154.2" y="2067.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1157.2" y="2078.0"></text>
</g>
<g>
<title>Compilation::compile_method() (3 samples, 0.41%)</title><rect x="1154.2" y="2051.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1157.2" y="2062.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (3 samples, 0.41%)</title><rect x="1154.2" y="2035.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.2" y="2046.0"></text>
</g>
<g>
<title>Compilation::build_hir() (2 samples, 0.28%)</title><rect x="1154.2" y="2019.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.2" y="2030.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.14%)</title><rect x="1154.2" y="2003.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1157.2" y="2014.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.14%)</title><rect x="1154.2" y="1987.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1157.2" y="1998.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.14%)</title><rect x="1154.2" y="1971.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1157.2" y="1982.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.14%)</title><rect x="1154.2" y="1955.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.2" y="1966.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.14%)</title><rect x="1154.2" y="1939.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1157.2" y="1950.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.14%)</title><rect x="1154.2" y="1923.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.2" y="1934.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.14%)</title><rect x="1154.2" y="1907.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.2" y="1918.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call_or_null(KlassHandle, KlassHandle, Symbol*, Symbol*, KlassHandle, bool) (1 samples, 0.14%)</title><rect x="1154.2" y="1891.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1157.2" y="1902.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call(CallInfo&amp;, Handle, KlassHandle, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.14%)</title><rect x="1154.2" y="1875.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1157.2" y="1886.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (1 samples, 0.14%)</title><rect x="1155.9" y="2003.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.9" y="2014.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (1 samples, 0.14%)</title><rect x="1155.9" y="1987.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1158.9" y="1998.0"></text>
</g>
<g>
<title>boolArray::initialize(int, bool) (1 samples, 0.14%)</title><rect x="1155.9" y="1971.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.9" y="1982.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.14%)</title><rect x="1157.5" y="2019.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1160.5" y="2030.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.14%)</title><rect x="1157.5" y="2003.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1160.5" y="2014.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.14%)</title><rect x="1157.5" y="1987.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1160.5" y="1998.0"></text>
</g>
<g>
<title>LinearScan::init_compute_oop_maps() (1 samples, 0.14%)</title><rect x="1157.5" y="1971.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1160.5" y="1982.0"></text>
</g>
<g>
<title>ciEnv::~ciEnv() (1 samples, 0.14%)</title><rect x="1159.1" y="2083.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.1" y="2094.0"></text>
</g>
<g>
<title>ciObjectFactory::remove_symbols() (1 samples, 0.14%)</title><rect x="1159.1" y="2067.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1162.1" y="2078.0"></text>
</g>
<g>
<title>Atomic::dec(short volatile*) (1 samples, 0.14%)</title><rect x="1159.1" y="2051.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.1" y="2062.0"></text>
</g>
<g>
<title>CompileQueue::get() (3 samples, 0.41%)</title><rect x="1160.7" y="2099.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.7" y="2110.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (3 samples, 0.41%)</title><rect x="1160.7" y="2083.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.7" y="2094.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.14%)</title><rect x="1160.7" y="2067.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1163.7" y="2078.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (2 samples, 0.28%)</title><rect x="1162.4" y="2067.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.4" y="2078.0"></text>
</g>
<g>
<title>CodeCache::next_nmethod(CodeBlob*) (1 samples, 0.14%)</title><rect x="1162.4" y="2051.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.4" y="2062.0"></text>
</g>
<g>
<title>NMethodSweeper::process_nmethod(nmethod*) (1 samples, 0.14%)</title><rect x="1164.0" y="2051.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1167.0" y="2062.0"></text>
</g>
<g>
<title>nmethod::cleanup_inline_caches() (1 samples, 0.14%)</title><rect x="1164.0" y="2035.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1167.0" y="2046.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (3 samples, 0.41%)</title><rect x="1165.6" y="2115.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.6" y="2126.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (3 samples, 0.41%)</title><rect x="1165.6" y="2099.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1168.6" y="2110.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (3 samples, 0.41%)</title><rect x="1165.6" y="2083.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1168.6" y="2094.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (3 samples, 0.41%)</title><rect x="1165.6" y="2067.0" width="4.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1168.6" y="2078.0"></text>
</g>
<g>
<title>Method::jmethod_id() (1 samples, 0.14%)</title><rect x="1167.2" y="2051.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.2" y="2062.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::remove_at(int) (1 samples, 0.14%)</title><rect x="1167.2" y="2035.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1170.2" y="2046.0"></text>
</g>
<g>
<title>nmethod::scope_desc_at(unsigned char*) (1 samples, 0.14%)</title><rect x="1168.9" y="2051.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.9" y="2062.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.14%)</title><rect x="1168.9" y="2035.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.9" y="2046.0"></text>
</g>
<g>
<title>CompressedReadStream::read_int() (1 samples, 0.14%)</title><rect x="1168.9" y="2019.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1171.9" y="2030.0"></text>
</g>
<g>
<title>VMThread::run() (12 samples, 1.65%)</title><rect x="1170.5" y="2147.0" width="19.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.5" y="2158.0"></text>
</g>
<g>
<title>VMThread::loop() (12 samples, 1.65%)</title><rect x="1170.5" y="2131.0" width="19.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1173.5" y="2142.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.14%)</title><rect x="1170.5" y="2115.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.5" y="2126.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.14%)</title><rect x="1170.5" y="2099.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.5" y="2110.0"></text>
</g>
<g>
<title>Threads::nmethods_do(CodeBlobClosure*) (1 samples, 0.14%)</title><rect x="1170.5" y="2083.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.5" y="2094.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.14%)</title><rect x="1170.5" y="2067.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.5" y="2078.0"></text>
</g>
<g>
<title>StackFrameStream::next() (1 samples, 0.14%)</title><rect x="1170.5" y="2051.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1173.5" y="2062.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.14%)</title><rect x="1170.5" y="2035.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.5" y="2046.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.14%)</title><rect x="1170.5" y="2019.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.5" y="2030.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.14%)</title><rect x="1170.5" y="2003.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.5" y="2014.0"></text>
</g>
<g>
<title>OopMapSet::find_map_at_offset(int) const (1 samples, 0.14%)</title><rect x="1170.5" y="1987.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.5" y="1998.0"></text>
</g>
<g>
<title>SafepointSynchronize::end() (1 samples, 0.14%)</title><rect x="1172.1" y="2115.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.1" y="2126.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.14%)</title><rect x="1172.1" y="2099.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.1" y="2110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.14%)</title><rect x="1172.1" y="2083.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1175.1" y="2094.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (10 samples, 1.38%)</title><rect x="1173.7" y="2115.0" width="16.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.7" y="2126.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (10 samples, 1.38%)</title><rect x="1173.7" y="2099.0" width="16.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.7" y="2110.0"></text>
</g>
<g>
<title>VM_ParallelGCFailedAllocation::doit() (10 samples, 1.38%)</title><rect x="1173.7" y="2083.0" width="16.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.7" y="2094.0"></text>
</g>
<g>
<title>ParallelScavengeHeap::failed_mem_allocate(unsigned long) (10 samples, 1.38%)</title><rect x="1173.7" y="2067.0" width="16.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.7" y="2078.0"></text>
</g>
<g>
<title>PSScavenge::invoke() (10 samples, 1.38%)</title><rect x="1173.7" y="2051.0" width="16.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1176.7" y="2062.0"></text>
</g>
<g>
<title>PSParallelCompact::invoke_no_policy(bool) (8 samples, 1.10%)</title><rect x="1173.7" y="2035.0" width="13.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.7" y="2046.0"></text>
</g>
<g>
<title>PSParallelCompact::adjust_roots() (2 samples, 0.28%)</title><rect x="1173.7" y="2019.0" width="3.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.7" y="2030.0"></text>
</g>
<g>
<title>CodeCache::blobs_do(CodeBlobClosure*) (2 samples, 0.28%)</title><rect x="1173.7" y="2003.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1176.7" y="2014.0"></text>
</g>
<g>
<title>CodeBlobToOopClosure::do_nmethod(nmethod*) (1 samples, 0.14%)</title><rect x="1173.7" y="1987.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1176.7" y="1998.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.14%)</title><rect x="1173.7" y="1971.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1176.7" y="1982.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.14%)</title><rect x="1173.7" y="1955.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.7" y="1966.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 0.14%)</title><rect x="1175.4" y="1987.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.4" y="1998.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.14%)</title><rect x="1175.4" y="1971.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.4" y="1982.0"></text>
</g>
<g>
<title>PSParallelCompact::compact() (2 samples, 0.28%)</title><rect x="1177.0" y="2019.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.0" y="2030.0"></text>
</g>
<g>
<title>PSParallelCompact::update_deferred_objects(ParCompactionManager*, PSParallelCompact::SpaceId) (2 samples, 0.28%)</title><rect x="1177.0" y="2003.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.0" y="2014.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (2 samples, 0.28%)</title><rect x="1177.0" y="1987.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.0" y="1998.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (2 samples, 0.28%)</title><rect x="1177.0" y="1971.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.0" y="1982.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (2 samples, 0.28%)</title><rect x="1177.0" y="1955.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.0" y="1966.0"></text>
</g>
<g>
<title>PSParallelCompact::marking_phase(ParCompactionManager*, bool, ParallelOldTracer*) (3 samples, 0.41%)</title><rect x="1180.2" y="2019.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.2" y="2030.0"></text>
</g>
<g>
<title>CodeCache::do_unloading(BoolObjectClosure*, bool) (1 samples, 0.14%)</title><rect x="1180.2" y="2003.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.2" y="2014.0"></text>
</g>
<g>
<title>nmethod::do_unloading(BoolObjectClosure*, bool) (1 samples, 0.14%)</title><rect x="1180.2" y="1987.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.2" y="1998.0"></text>
</g>
<g>
<title>Klass::clean_weak_klass_links(BoolObjectClosure*, bool) (1 samples, 0.14%)</title><rect x="1181.9" y="2003.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.9" y="2014.0"></text>
</g>
<g>
<title>InstanceKlass::clean_weak_instanceklass_links(BoolObjectClosure*) (1 samples, 0.14%)</title><rect x="1181.9" y="1987.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.9" y="1998.0"></text>
</g>
<g>
<title>InstanceKlass::clean_method_data(BoolObjectClosure*) (1 samples, 0.14%)</title><rect x="1181.9" y="1971.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.9" y="1982.0"></text>
</g>
<g>
<title>SymbolTable::unlink(int*, int*) (1 samples, 0.14%)</title><rect x="1183.5" y="2003.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.5" y="2014.0"></text>
</g>
<g>
<title>SymbolTable::buckets_unlink(int, int, int*, int*, unsigned long*) (1 samples, 0.14%)</title><rect x="1183.5" y="1987.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.5" y="1998.0"></text>
</g>
<g>
<title>PSParallelCompact::post_compact() (1 samples, 0.14%)</title><rect x="1185.1" y="2019.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.1" y="2030.0"></text>
</g>
<g>
<title>CodeCache::gc_epilogue() (1 samples, 0.14%)</title><rect x="1185.1" y="2003.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.1" y="2014.0"></text>
</g>
<g>
<title>CodeCache::alive(CodeBlob*) (1 samples, 0.14%)</title><rect x="1185.1" y="1987.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.1" y="1998.0"></text>
</g>
<g>
<title>PSScavenge::invoke_no_policy() (2 samples, 0.28%)</title><rect x="1186.7" y="2035.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.7" y="2046.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_references(BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*, GCTimer*, GCId) (1 samples, 0.14%)</title><rect x="1186.7" y="2019.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.7" y="2030.0"></text>
</g>
<g>
<title>PSIsAliveClosure::do_object_b(oopDesc*) (1 samples, 0.14%)</title><rect x="1186.7" y="2003.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.7" y="2014.0"></text>
</g>
<g>
<title>nmethod::oops_do_marking_epilogue() (1 samples, 0.14%)</title><rect x="1188.4" y="2019.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.4" y="2030.0"></text>
</g>
</g>
</svg>
