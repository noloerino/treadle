<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1878" onload="init(evt)" viewBox="0 0 1200 1878" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1861"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1861"> </text>
<g id="frames">
<g>
<title>all (1,004 samples, 100.00%)</title><rect x="10.0" y="1827.0" width="1180.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="13.0" y="1838.0">all</text>
</g>
<g>
<title>[unknown_Java] (63 samples, 6.27%)</title><rect x="10.0" y="1811.0" width="74.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="1822.0">[unknown..</text>
</g>
<g>
<title>java/lang/Thread.run (783 samples, 77.99%)</title><rect x="84.0" y="1811.0" width="920.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.0" y="1822.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (783 samples, 77.99%)</title><rect x="84.0" y="1795.0" width="920.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.0" y="1806.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (783 samples, 77.99%)</title><rect x="84.0" y="1779.0" width="920.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.0" y="1790.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (783 samples, 77.99%)</title><rect x="84.0" y="1763.0" width="920.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.0" y="1774.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (783 samples, 77.99%)</title><rect x="84.0" y="1747.0" width="920.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.0" y="1758.0">java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (783 samples, 77.99%)</title><rect x="84.0" y="1731.0" width="920.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.0" y="1742.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>sbt/CompletionService$$anon$2.call (783 samples, 77.99%)</title><rect x="84.0" y="1715.0" width="920.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.0" y="1726.0">sbt/CompletionService$$anon$2.call</text>
</g>
<g>
<title>sbt/ConcurrentRestrictions$$anon$4$$Lambda$2230/1343838143.apply (783 samples, 77.99%)</title><rect x="84.0" y="1699.0" width="920.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.0" y="1710.0">sbt/ConcurrentRestrictions$$anon$4$$Lambda$2230/1343838143.apply</text>
</g>
<g>
<title>sbt/ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1 (783 samples, 77.99%)</title><rect x="84.0" y="1683.0" width="920.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.0" y="1694.0">sbt/ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1</text>
</g>
<g>
<title>sbt/Execute$$Lambda$2223/1250315597.apply (783 samples, 77.99%)</title><rect x="84.0" y="1667.0" width="920.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.0" y="1678.0">sbt/Execute$$Lambda$2223/1250315597.apply</text>
</g>
<g>
<title>sbt/Execute.$anonfun$submit$1 (783 samples, 77.99%)</title><rect x="84.0" y="1651.0" width="920.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.0" y="1662.0">sbt/Execute.$anonfun$submit$1</text>
</g>
<g>
<title>sbt/Execute.work (783 samples, 77.99%)</title><rect x="84.0" y="1635.0" width="920.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.0" y="1646.0">sbt/Execute.work</text>
</g>
<g>
<title>sbt/internal/util/ErrorHandling$.wideConvert (783 samples, 77.99%)</title><rect x="84.0" y="1619.0" width="920.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.0" y="1630.0">sbt/internal/util/ErrorHandling$.wideConvert</text>
</g>
<g>
<title>sbt/Execute$$Lambda$2232/1784767697.apply (783 samples, 77.99%)</title><rect x="84.0" y="1603.0" width="920.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.0" y="1614.0">sbt/Execute$$Lambda$2232/1784767697.apply</text>
</g>
<g>
<title>sbt/Execute.$anonfun$submit$2 (783 samples, 77.99%)</title><rect x="84.0" y="1587.0" width="920.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.0" y="1598.0">sbt/Execute.$anonfun$submit$2</text>
</g>
<g>
<title>sbt/std/Transform$$anon$4.work (783 samples, 77.99%)</title><rect x="84.0" y="1571.0" width="920.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.0" y="1582.0">sbt/std/Transform$$anon$4.work</text>
</g>
<g>
<title>sbt/std/Transform$$anon$3$$Lambda$2221/647111342.apply (783 samples, 77.99%)</title><rect x="84.0" y="1555.0" width="920.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.0" y="1566.0">sbt/std/Transform$$anon$3$$Lambda$2221/647111342.apply</text>
</g>
<g>
<title>sbt/std/Transform$$anon$3.$anonfun$apply$2 (783 samples, 77.99%)</title><rect x="84.0" y="1539.0" width="920.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.0" y="1550.0">sbt/std/Transform$$anon$3.$anonfun$apply$2</text>
</g>
<g>
<title>sbt/Tests$$$Lambda$6956/1974570175.apply (783 samples, 77.99%)</title><rect x="84.0" y="1523.0" width="920.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.0" y="1534.0">sbt/Tests$$$Lambda$6956/1974570175.apply</text>
</g>
<g>
<title>sbt/Tests$.$anonfun$toTask$1 (783 samples, 77.99%)</title><rect x="84.0" y="1507.0" width="920.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.0" y="1518.0">sbt/Tests$.$anonfun$toTask$1</text>
</g>
<g>
<title>sbt/TestFunction.apply (783 samples, 77.99%)</title><rect x="84.0" y="1491.0" width="920.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.0" y="1502.0">sbt/TestFunction.apply</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply (783 samples, 77.99%)</title><rect x="84.0" y="1475.0" width="920.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.0" y="1486.0">sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply (783 samples, 77.99%)</title><rect x="84.0" y="1459.0" width="920.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.0" y="1470.0">sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply</text>
</g>
<g>
<title>sbt/TestFramework$.sbt$TestFramework$$withContextLoader (783 samples, 77.99%)</title><rect x="84.0" y="1443.0" width="920.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.0" y="1454.0">sbt/TestFramework$.sbt$TestFramework$$withContextLoader</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1$$Lambda$6973/110924676.apply (783 samples, 77.99%)</title><rect x="84.0" y="1427.0" width="920.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.0" y="1438.0">sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1$$Lambda$6973/110924676.apply</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1 (783 samples, 77.99%)</title><rect x="84.0" y="1411.0" width="920.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.0" y="1422.0">sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1</text>
</g>
<g>
<title>sbt/TestRunner.run (783 samples, 77.99%)</title><rect x="84.0" y="1395.0" width="920.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.0" y="1406.0">sbt/TestRunner.run</text>
</g>
<g>
<title>sbt/TestRunner.runTest$1 (783 samples, 77.99%)</title><rect x="84.0" y="1379.0" width="920.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.0" y="1390.0">sbt/TestRunner.runTest$1</text>
</g>
<g>
<title>org/scalatest/tools/Framework$ScalaTestTask.execute (783 samples, 77.99%)</title><rect x="84.0" y="1363.0" width="920.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.0" y="1374.0">org/scalatest/tools/Framework$ScalaTestTask.execute</text>
</g>
<g>
<title>org/scalatest/tools/Framework.org$scalatest$tools$Framework$$runSuite (783 samples, 77.99%)</title><rect x="84.0" y="1347.0" width="920.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.0" y="1358.0">org/scalatest/tools/Framework.org$scalatest$tools$Framework$$runSuite</text>
</g>
<g>
<title>org/scalatest/FreeSpec.run (783 samples, 77.99%)</title><rect x="84.0" y="1331.0" width="920.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.0" y="1342.0">org/scalatest/FreeSpec.run</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.run$ (783 samples, 77.99%)</title><rect x="84.0" y="1315.0" width="920.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.0" y="1326.0">org/scalatest/FreeSpecLike.run$</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.run (783 samples, 77.99%)</title><rect x="84.0" y="1299.0" width="920.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.0" y="1310.0">org/scalatest/FreeSpecLike.run</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runImpl (783 samples, 77.99%)</title><rect x="84.0" y="1283.0" width="920.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.0" y="1294.0">org/scalatest/SuperEngine.runImpl</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike$$Lambda$11007/1636658873.apply (783 samples, 77.99%)</title><rect x="84.0" y="1267.0" width="920.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.0" y="1278.0">org/scalatest/FreeSpecLike$$Lambda$11007/1636658873.apply</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.$anonfun$run$1 (783 samples, 77.99%)</title><rect x="84.0" y="1251.0" width="920.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.0" y="1262.0">org/scalatest/FreeSpecLike.$anonfun$run$1</text>
</g>
<g>
<title>org/scalatest/FreeSpec.org$scalatest$FreeSpecLike$$super$run (783 samples, 77.99%)</title><rect x="84.0" y="1235.0" width="920.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.0" y="1246.0">org/scalatest/FreeSpec.org$scalatest$FreeSpecLike$$super$run</text>
</g>
<g>
<title>org/scalatest/Suite.run$ (783 samples, 77.99%)</title><rect x="84.0" y="1219.0" width="920.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.0" y="1230.0">org/scalatest/Suite.run$</text>
</g>
<g>
<title>org/scalatest/Suite.run (783 samples, 77.99%)</title><rect x="84.0" y="1203.0" width="920.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.0" y="1214.0">org/scalatest/Suite.run</text>
</g>
<g>
<title>org/scalatest/FreeSpec.runTests (783 samples, 77.99%)</title><rect x="84.0" y="1187.0" width="920.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.0" y="1198.0">org/scalatest/FreeSpec.runTests</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.runTests$ (783 samples, 77.99%)</title><rect x="84.0" y="1171.0" width="920.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.0" y="1182.0">org/scalatest/FreeSpecLike.runTests$</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.runTests (783 samples, 77.99%)</title><rect x="84.0" y="1155.0" width="920.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.0" y="1166.0">org/scalatest/FreeSpecLike.runTests</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestsImpl (783 samples, 77.99%)</title><rect x="84.0" y="1139.0" width="920.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.0" y="1150.0">org/scalatest/SuperEngine.runTestsImpl</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestsInBranch (783 samples, 77.99%)</title><rect x="84.0" y="1123.0" width="920.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.0" y="1134.0">org/scalatest/SuperEngine.runTestsInBranch</text>
</g>
<g>
<title>org/scalatest/SuperEngine.traverseSubNodes$1 (783 samples, 77.99%)</title><rect x="84.0" y="1107.0" width="920.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.0" y="1118.0">org/scalatest/SuperEngine.traverseSubNodes$1</text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (783 samples, 77.99%)</title><rect x="84.0" y="1091.0" width="920.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="87.0" y="1102.0">scala/collection/immutable/List.foreach</text>
</g>
<g>
<title>org/scalatest/SuperEngine$$Lambda$11015/1901874594.apply (783 samples, 77.99%)</title><rect x="84.0" y="1075.0" width="920.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.0" y="1086.0">org/scalatest/SuperEngine$$Lambda$11015/1901874594.apply</text>
</g>
<g>
<title>org/scalatest/SuperEngine.$anonfun$runTestsInBranch$1 (783 samples, 77.99%)</title><rect x="84.0" y="1059.0" width="920.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.0" y="1070.0">org/scalatest/SuperEngine.$anonfun$runTestsInBranch$1</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike$$Lambda$11014/1752540053.apply (783 samples, 77.99%)</title><rect x="84.0" y="1043.0" width="920.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="87.0" y="1054.0">org/scalatest/FreeSpecLike$$Lambda$11014/1752540053.apply</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.$anonfun$runTests$1 (783 samples, 77.99%)</title><rect x="84.0" y="1027.0" width="920.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.0" y="1038.0">org/scalatest/FreeSpecLike.$anonfun$runTests$1</text>
</g>
<g>
<title>org/scalatest/FreeSpec.runTest (783 samples, 77.99%)</title><rect x="84.0" y="1011.0" width="920.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.0" y="1022.0">org/scalatest/FreeSpec.runTest</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.runTest$ (783 samples, 77.99%)</title><rect x="84.0" y="995.0" width="920.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.0" y="1006.0">org/scalatest/FreeSpecLike.runTest$</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.runTest (783 samples, 77.99%)</title><rect x="84.0" y="979.0" width="920.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.0" y="990.0">org/scalatest/FreeSpecLike.runTest</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestImpl (783 samples, 77.99%)</title><rect x="84.0" y="963.0" width="920.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.0" y="974.0">org/scalatest/SuperEngine.runTestImpl</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike$$Lambda$11029/812742299.apply (783 samples, 77.99%)</title><rect x="84.0" y="947.0" width="920.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.0" y="958.0">org/scalatest/FreeSpecLike$$Lambda$11029/812742299.apply</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.$anonfun$runTest$1 (783 samples, 77.99%)</title><rect x="84.0" y="931.0" width="920.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.0" y="942.0">org/scalatest/FreeSpecLike.$anonfun$runTest$1</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.invokeWithFixture$1 (783 samples, 77.99%)</title><rect x="84.0" y="915.0" width="920.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.0" y="926.0">org/scalatest/FreeSpecLike.invokeWithFixture$1</text>
</g>
<g>
<title>org/scalatest/FreeSpec.withFixture (783 samples, 77.99%)</title><rect x="84.0" y="899.0" width="920.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="87.0" y="910.0">org/scalatest/FreeSpec.withFixture</text>
</g>
<g>
<title>org/scalatest/TestSuite.withFixture$ (783 samples, 77.99%)</title><rect x="84.0" y="883.0" width="920.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.0" y="894.0">org/scalatest/TestSuite.withFixture$</text>
</g>
<g>
<title>org/scalatest/TestSuite.withFixture (783 samples, 77.99%)</title><rect x="84.0" y="867.0" width="920.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="87.0" y="878.0">org/scalatest/TestSuite.withFixture</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike$$anon$1.apply (783 samples, 77.99%)</title><rect x="84.0" y="851.0" width="920.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="87.0" y="862.0">org/scalatest/FreeSpecLike$$anon$1.apply</text>
</g>
<g>
<title>org/scalatest/Transformer.apply (783 samples, 77.99%)</title><rect x="84.0" y="835.0" width="920.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.0" y="846.0">org/scalatest/Transformer.apply</text>
</g>
<g>
<title>org/scalatest/Transformer.apply (783 samples, 77.99%)</title><rect x="84.0" y="819.0" width="920.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.0" y="830.0">org/scalatest/Transformer.apply</text>
</g>
<g>
<title>org/scalatest/OutcomeOf$.outcomeOf (783 samples, 77.99%)</title><rect x="84.0" y="803.0" width="920.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.0" y="814.0">org/scalatest/OutcomeOf$.outcomeOf</text>
</g>
<g>
<title>org/scalatest/OutcomeOf.outcomeOf$ (783 samples, 77.99%)</title><rect x="84.0" y="787.0" width="920.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.0" y="798.0">org/scalatest/OutcomeOf.outcomeOf$</text>
</g>
<g>
<title>org/scalatest/OutcomeOf.outcomeOf (783 samples, 77.99%)</title><rect x="84.0" y="771.0" width="920.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="87.0" y="782.0">org/scalatest/OutcomeOf.outcomeOf</text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (783 samples, 77.99%)</title><rect x="84.0" y="755.0" width="920.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.0" y="766.0">scala/runtime/java8/JFunction0$mcV$sp.apply</text>
</g>
<g>
<title>treadle/wireusage/RVMiniDatapath$$Lambda$10993/332942528.apply$mcV$sp (783 samples, 77.99%)</title><rect x="84.0" y="739.0" width="920.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.0" y="750.0">treadle/wireusage/RVMiniDatapath$$Lambda$10993/332942528.apply$mcV$sp</text>
</g>
<g>
<title>treadle/wireusage/RVMiniDatapath.$anonfun$new$1 (783 samples, 77.99%)</title><rect x="84.0" y="723.0" width="920.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.0" y="734.0">treadle/wireusage/RVMiniDatapath.$anonfun$new$1</text>
</g>
<g>
<title>treadle/TreadleTester.step (783 samples, 77.99%)</title><rect x="84.0" y="707.0" width="920.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.0" y="718.0">treadle/TreadleTester.step</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.run (783 samples, 77.99%)</title><rect x="84.0" y="691.0" width="920.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.0" y="702.0">treadle/executable/SimpleSingleClockStepper.run</text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach$mVc$sp (783 samples, 77.99%)</title><rect x="84.0" y="675.0" width="920.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.0" y="686.0">scala/collection/immutable/Range.foreach$mVc$sp</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper$$Lambda$12197/333743580.apply$mcVI$sp (783 samples, 77.99%)</title><rect x="84.0" y="659.0" width="920.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.0" y="670.0">treadle/executable/SimpleSingleClockStepper$$Lambda$12197/333743580.apply$mcVI$sp</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.$anonfun$run$2 (783 samples, 77.99%)</title><rect x="84.0" y="643.0" width="920.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.0" y="654.0">treadle/executable/SimpleSingleClockStepper.$anonfun$run$2</text>
</g>
<g>
<title>treadle/chronometry/UTC.incrementTime (23 samples, 2.29%)</title><rect x="85.2" y="627.0" width="27.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.2" y="638.0">t..</text>
</g>
<g>
<title>treadle/chronometry/UTC.runUntil (23 samples, 2.29%)</title><rect x="85.2" y="611.0" width="27.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.2" y="622.0">t..</text>
</g>
<g>
<title>scala/collection/AbstractTraversable.nonEmpty (12 samples, 1.20%)</title><rect x="85.2" y="595.0" width="14.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.2" y="606.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.nonEmpty$ (12 samples, 1.20%)</title><rect x="85.2" y="579.0" width="14.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.2" y="590.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.nonEmpty (12 samples, 1.20%)</title><rect x="85.2" y="563.0" width="14.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.2" y="574.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.setTime (11 samples, 1.10%)</title><rect x="99.3" y="595.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.3" y="606.0"></text>
</g>
<g>
<title>treadle/TreadleTester$$Lambda$12171/1591402580.apply$mcV$sp (11 samples, 1.10%)</title><rect x="99.3" y="579.0" width="13.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="102.3" y="590.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$2 (1 samples, 0.10%)</title><rect x="111.1" y="563.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="114.1" y="574.0"></text>
</g>
<g>
<title>scala/Option.foreach (1 samples, 0.10%)</title><rect x="111.1" y="547.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.1" y="558.0"></text>
</g>
<g>
<title>treadle/TreadleTester$$Lambda$12182/873931485.apply (1 samples, 0.10%)</title><rect x="111.1" y="531.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.1" y="542.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$3$adapted (1 samples, 0.10%)</title><rect x="111.1" y="515.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.1" y="526.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$3 (1 samples, 0.10%)</title><rect x="111.1" y="499.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="114.1" y="510.0"></text>
</g>
<g>
<title>treadle/TreadleTester.wallTime (1 samples, 0.10%)</title><rect x="111.1" y="483.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.1" y="494.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (381 samples, 37.95%)</title><rect x="112.3" y="627.0" width="447.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.3" y="638.0">treadle/executable/ExecutionEngine.evaluateCircuit</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (381 samples, 37.95%)</title><rect x="112.3" y="611.0" width="447.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.3" y="622.0">treadle/executable/ExecutionEngine.runAssigns</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (381 samples, 37.95%)</title><rect x="112.3" y="595.0" width="447.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.3" y="606.0">treadle/executable/Scheduler.executeCombinationalAssigns</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (381 samples, 37.95%)</title><rect x="112.3" y="579.0" width="447.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="115.3" y="590.0">treadle/executable/Scheduler.executeAssigners</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.apply (2 samples, 0.20%)</title><rect x="119.3" y="563.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.3" y="574.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply$ (2 samples, 0.20%)</title><rect x="119.3" y="547.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.3" y="558.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply (2 samples, 0.20%)</title><rect x="119.3" y="531.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="122.3" y="542.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$12195/792372459.apply$mcV$sp (2 samples, 0.20%)</title><rect x="121.7" y="563.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.7" y="574.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (2 samples, 0.20%)</title><rect x="121.7" y="547.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.7" y="558.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (2 samples, 0.20%)</title><rect x="121.7" y="531.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.7" y="542.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12126/620255972.apply (1 samples, 0.10%)</title><rect x="122.8" y="515.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.8" y="526.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$15 (1 samples, 0.10%)</title><rect x="122.8" y="499.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.8" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DshlBigs.apply (1 samples, 0.10%)</title><rect x="122.8" y="483.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.8" y="494.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12124/884022639.apply (1 samples, 0.10%)</title><rect x="122.8" y="467.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.8" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$93 (1 samples, 0.10%)</title><rect x="122.8" y="451.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.8" y="462.0"></text>
</g>
<g>
<title>treadle/executable/LongToBig.apply (1 samples, 0.10%)</title><rect x="122.8" y="435.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="125.8" y="446.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$12191/1958178813.apply$mcV$sp (161 samples, 16.04%)</title><rect x="124.0" y="563.0" width="189.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.0" y="574.0">treadle/executable/DataSt..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (161 samples, 16.04%)</title><rect x="124.0" y="547.0" width="189.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="127.0" y="558.0">treadle/executable/DataSt..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (161 samples, 16.04%)</title><rect x="124.0" y="531.0" width="189.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="127.0" y="542.0">treadle/executable/DataSt..</text>
</g>
<g>
<title>itable stub (5 samples, 0.50%)</title><rect x="127.5" y="515.0" width="5.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="130.5" y="526.0"></text>
</g>
<g>
<title>scala/Option.isDefined (1 samples, 0.10%)</title><rect x="133.4" y="515.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.4" y="526.0"></text>
</g>
<g>
<title>treadle/executable/AsSIntInts.apply (1 samples, 0.10%)</title><rect x="134.6" y="515.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="137.6" y="526.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (6 samples, 0.60%)</title><rect x="135.8" y="515.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.8" y="526.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (2 samples, 0.20%)</title><rect x="140.5" y="499.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.5" y="510.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (2 samples, 0.20%)</title><rect x="140.5" y="483.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.5" y="494.0"></text>
</g>
<g>
<title>scala/math/BigInt$.minCached (1 samples, 0.10%)</title><rect x="141.6" y="467.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.6" y="478.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (137 samples, 13.65%)</title><rect x="142.8" y="515.0" width="161.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.8" y="526.0">treadle/executable/Da..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/949673757.linkToTargetMethod (3 samples, 0.30%)</title><rect x="142.8" y="499.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/947305004.invokeStatic_LIL_L (3 samples, 0.30%)</title><rect x="142.8" y="483.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.8" y="494.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$12198/237361739.get$Lambda (3 samples, 0.30%)</title><rect x="142.8" y="467.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.8" y="478.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (134 samples, 13.35%)</title><rect x="146.3" y="499.0" width="157.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.3" y="510.0">scala/collection/mut..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (134 samples, 13.35%)</title><rect x="146.3" y="483.0" width="157.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.3" y="494.0">scala/collection/mut..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (134 samples, 13.35%)</title><rect x="146.3" y="467.0" width="157.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.3" y="478.0">scala/collection/mut..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.array (1 samples, 0.10%)</title><rect x="149.9" y="451.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.9" y="462.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$12198/237361739.apply (130 samples, 12.95%)</title><rect x="151.0" y="451.0" width="152.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.0" y="462.0">treadle/executable/..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (129 samples, 12.85%)</title><rect x="152.2" y="435.0" width="151.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.2" y="446.0">treadle/executable/..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (129 samples, 12.85%)</title><rect x="152.2" y="419.0" width="151.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.2" y="430.0">treadle/executable/..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (45 samples, 4.48%)</title><rect x="152.2" y="403.0" width="52.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.2" y="414.0">tread..</text>
</g>
<g>
<title>scala/Option.foreach (15 samples, 1.49%)</title><rect x="154.6" y="387.0" width="17.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.6" y="398.0"></text>
</g>
<g>
<title>scala/Some.get (2 samples, 0.20%)</title><rect x="154.6" y="371.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.6" y="382.0"></text>
</g>
<g>
<title>scala/Some.value (2 samples, 0.20%)</title><rect x="154.6" y="355.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.6" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$12200/6352317.apply (13 samples, 1.29%)</title><rect x="156.9" y="371.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.9" y="382.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (13 samples, 1.29%)</title><rect x="156.9" y="355.0" width="15.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="159.9" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (13 samples, 1.29%)</title><rect x="156.9" y="339.0" width="15.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="159.9" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.apply (2 samples, 0.20%)</title><rect x="159.3" y="323.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="162.3" y="334.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.apply$ (2 samples, 0.20%)</title><rect x="159.3" y="307.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="162.3" y="318.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.apply (2 samples, 0.20%)</title><rect x="159.3" y="291.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.3" y="302.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.head (1 samples, 0.10%)</title><rect x="159.3" y="275.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.3" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (1 samples, 0.10%)</title><rect x="160.4" y="275.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.4" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (1 samples, 0.10%)</title><rect x="160.4" y="259.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.4" y="270.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.addAntiDependency (8 samples, 0.80%)</title><rect x="161.6" y="323.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="164.6" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.add (1 samples, 0.10%)</title><rect x="162.8" y="307.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.8" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.contains (1 samples, 0.10%)</title><rect x="162.8" y="291.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="165.8" y="302.0"></text>
</g>
<g>
<title>scala/collection/BitSetLike.contains$ (1 samples, 0.10%)</title><rect x="162.8" y="275.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.8" y="286.0"></text>
</g>
<g>
<title>scala/collection/BitSetLike.contains (1 samples, 0.10%)</title><rect x="162.8" y="259.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="165.8" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.getOrElseUpdate (6 samples, 0.60%)</title><rect x="164.0" y="307.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="167.0" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.10%)</title><rect x="164.0" y="291.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.0" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.10%)</title><rect x="164.0" y="275.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.0" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.10%)</title><rect x="164.0" y="259.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="167.0" y="270.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.10%)</title><rect x="164.0" y="243.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.0" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (5 samples, 0.50%)</title><rect x="165.1" y="291.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.1" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.notFound (5 samples, 0.50%)</title><rect x="165.1" y="275.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.1" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (5 samples, 0.50%)</title><rect x="165.1" y="259.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.1" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (5 samples, 0.50%)</title><rect x="165.1" y="243.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.1" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (5 samples, 0.50%)</title><rect x="165.1" y="227.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.1" y="238.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (5 samples, 0.50%)</title><rect x="165.1" y="211.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.1" y="222.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (5 samples, 0.50%)</title><rect x="165.1" y="195.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="168.1" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (5 samples, 0.50%)</title><rect x="165.1" y="179.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="168.1" y="190.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (1 samples, 0.10%)</title><rect x="171.0" y="323.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="174.0" y="334.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.10%)</title><rect x="171.0" y="307.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.0" y="318.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.10%)</title><rect x="171.0" y="291.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.0" y="302.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.10%)</title><rect x="171.0" y="275.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.0" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (25 samples, 2.49%)</title><rect x="172.2" y="387.0" width="29.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="175.2" y="398.0">sc..</text>
</g>
<g>
<title>scala/Some.&lt;init&gt; (1 samples, 0.10%)</title><rect x="172.2" y="371.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.2" y="382.0"></text>
</g>
<g>
<title>scala/Option.&lt;init&gt; (1 samples, 0.10%)</title><rect x="172.2" y="355.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="175.2" y="366.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (24 samples, 2.39%)</title><rect x="173.4" y="371.0" width="28.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.4" y="382.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (24 samples, 2.39%)</title><rect x="173.4" y="355.0" width="28.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.4" y="366.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (24 samples, 2.39%)</title><rect x="173.4" y="339.0" width="28.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="176.4" y="350.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.10%)</title><rect x="173.4" y="323.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.4" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.10%)</title><rect x="173.4" y="307.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.4" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.10%)</title><rect x="173.4" y="291.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.4" y="302.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.10%)</title><rect x="173.4" y="275.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="176.4" y="286.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.10%)</title><rect x="173.4" y="259.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.4" y="270.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.uniqueId (1 samples, 0.10%)</title><rect x="173.4" y="243.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.4" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (23 samples, 2.29%)</title><rect x="174.5" y="323.0" width="27.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.5" y="334.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (21 samples, 2.09%)</title><rect x="176.9" y="307.0" width="24.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.9" y="318.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (21 samples, 2.09%)</title><rect x="176.9" y="291.0" width="24.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.9" y="302.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (21 samples, 2.09%)</title><rect x="176.9" y="275.0" width="24.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="179.9" y="286.0">s..</text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (21 samples, 2.09%)</title><rect x="176.9" y="259.0" width="24.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="179.9" y="270.0">s..</text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (21 samples, 2.09%)</title><rect x="176.9" y="243.0" width="24.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.9" y="254.0">s..</text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (21 samples, 2.09%)</title><rect x="176.9" y="227.0" width="24.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="179.9" y="238.0">s..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (3 samples, 0.30%)</title><rect x="201.6" y="387.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.6" y="398.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (2 samples, 0.20%)</title><rect x="201.6" y="371.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.6" y="382.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.10%)</title><rect x="202.7" y="355.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="205.7" y="366.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.10%)</title><rect x="202.7" y="339.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.7" y="350.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.10%)</title><rect x="203.9" y="371.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="206.9" y="382.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.run (84 samples, 8.37%)</title><rect x="205.1" y="403.0" width="98.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="208.1" y="414.0">treadle/exec..</text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.10%)</title><rect x="205.1" y="387.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.1" y="398.0"></text>
</g>
<g>
<title>scala/Option.foreach (82 samples, 8.17%)</title><rect x="206.3" y="387.0" width="96.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.3" y="398.0">scala/Optio..</text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$12199/2005061618.apply (82 samples, 8.17%)</title><rect x="206.3" y="371.0" width="96.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="209.3" y="382.0">treadle/exe..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5$adapted (82 samples, 8.17%)</title><rect x="206.3" y="355.0" width="96.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="209.3" y="366.0">treadle/exe..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5 (82 samples, 8.17%)</title><rect x="206.3" y="339.0" width="96.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="209.3" y="350.0">treadle/exe..</text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (80 samples, 7.97%)</title><rect x="208.6" y="323.0" width="94.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.6" y="334.0">treadle/vcd..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1003460167.linkToTargetMethod (1 samples, 0.10%)</title><rect x="209.8" y="307.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="212.8" y="318.0"></text>
</g>
<g>
<title>logger/Logger.info (4 samples, 0.40%)</title><rect x="211.0" y="307.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="214.0" y="318.0"></text>
</g>
<g>
<title>logger/Logger$.logger$Logger$$showMessage (4 samples, 0.40%)</title><rect x="211.0" y="291.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.0" y="302.0"></text>
</g>
<g>
<title>logger/Logger$.state (2 samples, 0.20%)</title><rect x="211.0" y="275.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.0" y="286.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (1 samples, 0.10%)</title><rect x="212.2" y="259.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="215.2" y="270.0"></text>
</g>
<g>
<title>logger/Logger$.testPackageNameMatch (1 samples, 0.10%)</title><rect x="213.3" y="275.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.3" y="286.0"></text>
</g>
<g>
<title>logger/Logger$.state (1 samples, 0.10%)</title><rect x="213.3" y="259.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.3" y="270.0"></text>
</g>
<g>
<title>scala/Enumeration$Value.equals (1 samples, 0.10%)</title><rect x="214.5" y="275.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="217.5" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (6 samples, 0.60%)</title><rect x="215.7" y="307.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="218.7" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (6 samples, 0.60%)</title><rect x="215.7" y="291.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.7" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (5 samples, 0.50%)</title><rect x="216.9" y="275.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.9" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (5 samples, 0.50%)</title><rect x="216.9" y="259.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="219.9" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.10%)</title><rect x="216.9" y="243.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="219.9" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.10%)</title><rect x="216.9" y="227.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="219.9" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.10%)</title><rect x="216.9" y="211.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="219.9" y="222.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.10%)</title><rect x="216.9" y="195.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.9" y="206.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.10%)</title><rect x="216.9" y="179.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="219.9" y="190.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="216.9" y="163.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="219.9" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (4 samples, 0.40%)</title><rect x="218.0" y="243.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="221.0" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (4 samples, 0.40%)</title><rect x="218.0" y="227.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="221.0" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (4 samples, 0.40%)</title><rect x="218.0" y="211.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="221.0" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (4 samples, 0.40%)</title><rect x="218.0" y="195.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.0" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (4 samples, 0.40%)</title><rect x="218.0" y="179.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.0" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (4 samples, 0.40%)</title><rect x="218.0" y="163.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.0" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (4 samples, 0.40%)</title><rect x="218.0" y="147.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="221.0" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$plus$eq (3 samples, 0.30%)</title><rect x="222.7" y="307.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.7" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (3 samples, 0.30%)</title><rect x="222.7" y="291.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="225.7" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (24 samples, 2.39%)</title><rect x="226.3" y="307.0" width="28.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="229.3" y="318.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (24 samples, 2.39%)</title><rect x="226.3" y="291.0" width="28.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.3" y="302.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (24 samples, 2.39%)</title><rect x="226.3" y="275.0" width="28.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.3" y="286.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (23 samples, 2.29%)</title><rect x="227.4" y="259.0" width="27.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.4" y="270.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (23 samples, 2.29%)</title><rect x="227.4" y="243.0" width="27.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.4" y="254.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashSet.index (3 samples, 0.30%)</title><rect x="228.6" y="227.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.6" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index$ (3 samples, 0.30%)</title><rect x="228.6" y="211.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.6" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index (3 samples, 0.30%)</title><rect x="228.6" y="195.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="231.6" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.improve (3 samples, 0.30%)</title><rect x="228.6" y="179.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.6" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve$ (3 samples, 0.30%)</title><rect x="228.6" y="163.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.6" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve (3 samples, 0.30%)</title><rect x="228.6" y="147.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="231.6" y="158.0"></text>
</g>
<g>
<title>ThreadSafepointState::handle_polling_page_exception() (1 samples, 0.10%)</title><rect x="228.6" y="131.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="231.6" y="142.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.10%)</title><rect x="228.6" y="115.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="231.6" y="126.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.10%)</title><rect x="228.6" y="99.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="231.6" y="110.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.10%)</title><rect x="228.6" y="83.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="231.6" y="94.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.10%)</title><rect x="228.6" y="67.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="231.6" y="78.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.10%)</title><rect x="228.6" y="51.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="231.6" y="62.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.10%)</title><rect x="228.6" y="35.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="231.6" y="46.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.10%)</title><rect x="229.8" y="131.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="232.8" y="142.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="231.0" y="131.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="234.0" y="142.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (19 samples, 1.89%)</title><rect x="232.1" y="227.0" width="22.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="235.1" y="238.0">s..</text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (19 samples, 1.89%)</title><rect x="232.1" y="211.0" width="22.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.1" y="222.0">s..</text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (19 samples, 1.89%)</title><rect x="232.1" y="195.0" width="22.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="235.1" y="206.0">s..</text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (19 samples, 1.89%)</title><rect x="232.1" y="179.0" width="22.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.1" y="190.0">s..</text>
</g>
<g>
<title>treadle/vcd/VCD.isNewValue (7 samples, 0.70%)</title><rect x="254.5" y="307.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="257.5" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (7 samples, 0.70%)</title><rect x="254.5" y="291.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.5" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (7 samples, 0.70%)</title><rect x="254.5" y="275.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="257.5" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (7 samples, 0.70%)</title><rect x="254.5" y="259.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="257.5" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (7 samples, 0.70%)</title><rect x="254.5" y="243.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="257.5" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (7 samples, 0.70%)</title><rect x="254.5" y="227.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="257.5" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (5 samples, 0.50%)</title><rect x="256.8" y="211.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.8" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (5 samples, 0.50%)</title><rect x="256.8" y="195.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="259.8" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (5 samples, 0.50%)</title><rect x="256.8" y="179.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.8" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (5 samples, 0.50%)</title><rect x="256.8" y="163.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.8" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (5 samples, 0.50%)</title><rect x="256.8" y="147.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.8" y="158.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (5 samples, 0.50%)</title><rect x="256.8" y="131.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.8" y="142.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isTempWire (32 samples, 3.19%)</title><rect x="262.7" y="307.0" width="37.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="265.7" y="318.0">tre..</text>
</g>
<g>
<title>java/lang/String.contains (1 samples, 0.10%)</title><rect x="262.7" y="291.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="265.7" y="302.0"></text>
</g>
<g>
<title>logger/Logger$.state (1 samples, 0.10%)</title><rect x="262.7" y="275.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="265.7" y="286.0"></text>
</g>
<g>
<title>java/lang/String.split (14 samples, 1.39%)</title><rect x="263.9" y="291.0" width="16.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="266.9" y="302.0"></text>
</g>
<g>
<title>java/lang/String.split (14 samples, 1.39%)</title><rect x="263.9" y="275.0" width="16.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.9" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (10 samples, 1.00%)</title><rect x="268.6" y="259.0" width="11.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="271.6" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList$1.next (1 samples, 0.10%)</title><rect x="276.8" y="243.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="279.8" y="254.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.20%)</title><rect x="278.0" y="243.0" width="2.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="281.0" y="254.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.20%)</title><rect x="280.3" y="291.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="283.3" y="302.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.20%)</title><rect x="280.3" y="275.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.3" y="286.0"></text>
</g>
<g>
<title>logger/Logger$.state (1 samples, 0.10%)</title><rect x="282.7" y="291.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.7" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.&lt;init&gt; (3 samples, 0.30%)</title><rect x="283.8" y="291.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="286.8" y="302.0"></text>
</g>
<g>
<title>scala/collection/Parallelizable.$init$ (1 samples, 0.10%)</title><rect x="285.0" y="275.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="288.0" y="286.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.$init$ (1 samples, 0.10%)</title><rect x="286.2" y="275.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="289.2" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.last (11 samples, 1.10%)</title><rect x="287.4" y="291.0" width="12.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="290.4" y="302.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.last$ (11 samples, 1.10%)</title><rect x="287.4" y="275.0" width="12.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.4" y="286.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.last (10 samples, 1.00%)</title><rect x="288.5" y="259.0" width="11.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="291.5" y="270.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.50%)</title><rect x="288.5" y="243.0" width="5.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="291.5" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.apply (4 samples, 0.40%)</title><rect x="294.4" y="243.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="297.4" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply$ (4 samples, 0.40%)</title><rect x="294.4" y="227.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.4" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply (4 samples, 0.40%)</title><rect x="294.4" y="211.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="297.4" y="222.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.40%)</title><rect x="294.4" y="195.0" width="4.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="297.4" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.length (1 samples, 0.10%)</title><rect x="299.1" y="243.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="302.1" y="254.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.wires (2 samples, 0.20%)</title><rect x="300.3" y="307.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="303.3" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (1 samples, 0.10%)</title><rect x="302.6" y="387.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="305.6" y="398.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12017/1651252691.apply$mcI$sp (1 samples, 0.10%)</title><rect x="303.8" y="515.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.8" y="526.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$3 (1 samples, 0.10%)</title><rect x="303.8" y="499.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.8" y="510.0"></text>
</g>
<g>
<title>treadle/executable/ToInt.apply (1 samples, 0.10%)</title><rect x="303.8" y="483.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.8" y="494.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12016/14205696.apply (1 samples, 0.10%)</title><rect x="303.8" y="467.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="306.8" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$2 (1 samples, 0.10%)</title><rect x="303.8" y="451.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="306.8" y="462.0"></text>
</g>
<g>
<title>treadle/executable/BitsLongs.apply (1 samples, 0.10%)</title><rect x="303.8" y="435.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="306.8" y="446.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12015/1407115635.apply$mcJ$sp (1 samples, 0.10%)</title><rect x="303.8" y="419.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="306.8" y="430.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$165 (1 samples, 0.10%)</title><rect x="303.8" y="403.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.8" y="414.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12036/2055006871.apply$mcI$sp (5 samples, 0.50%)</title><rect x="305.0" y="515.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.0" y="526.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$1 (5 samples, 0.50%)</title><rect x="305.0" y="499.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.0" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DshlInts.apply (1 samples, 0.10%)</title><rect x="306.2" y="483.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="309.2" y="494.0"></text>
</g>
<g>
<title>treadle/executable/EqInts.apply (1 samples, 0.10%)</title><rect x="307.4" y="483.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.4" y="494.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12045/1465553254.apply$mcI$sp (1 samples, 0.10%)</title><rect x="307.4" y="467.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.4" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$13 (1 samples, 0.10%)</title><rect x="307.4" y="451.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.4" y="462.0"></text>
</g>
<g>
<title>treadle/executable/MuxInts.apply (1 samples, 0.10%)</title><rect x="308.5" y="483.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="311.5" y="494.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12033/395741247.apply$mcI$sp (1 samples, 0.10%)</title><rect x="308.5" y="467.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.5" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$188 (1 samples, 0.10%)</title><rect x="308.5" y="451.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.5" y="462.0"></text>
</g>
<g>
<title>treadle/executable/TailInts.apply (1 samples, 0.10%)</title><rect x="309.7" y="483.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="312.7" y="494.0"></text>
</g>
<g>
<title>treadle/executable/MuxInts.apply (1 samples, 0.10%)</title><rect x="310.9" y="515.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="313.9" y="526.0"></text>
</g>
<g>
<title>treadle/executable/NotInts.apply (1 samples, 0.10%)</title><rect x="312.1" y="515.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="315.1" y="526.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.run (1 samples, 0.10%)</title><rect x="313.2" y="563.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.2" y="574.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$12192/1485446643.apply$mcV$sp (208 samples, 20.72%)</title><rect x="314.4" y="563.0" width="244.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.4" y="574.0">treadle/executable/DataStore$Ass..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (208 samples, 20.72%)</title><rect x="314.4" y="547.0" width="244.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.4" y="558.0">treadle/executable/DataStore$Ass..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (208 samples, 20.72%)</title><rect x="314.4" y="531.0" width="244.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.4" y="542.0">treadle/executable/DataStore$Ass..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.expression (1 samples, 0.10%)</title><rect x="314.4" y="515.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="317.4" y="526.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (8 samples, 0.80%)</title><rect x="315.6" y="515.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="318.6" y="526.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (4 samples, 0.40%)</title><rect x="320.3" y="499.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.3" y="510.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (4 samples, 0.40%)</title><rect x="320.3" y="483.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="323.3" y="494.0"></text>
</g>
<g>
<title>scala/math/BigInt$.minCached (4 samples, 0.40%)</title><rect x="320.3" y="467.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.3" y="478.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.longData (1 samples, 0.10%)</title><rect x="325.0" y="515.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.0" y="526.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (192 samples, 19.12%)</title><rect x="326.2" y="515.0" width="225.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="329.2" y="526.0">treadle/executable/DataStore.r..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/949673757.linkToTargetMethod (1 samples, 0.10%)</title><rect x="326.2" y="499.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/947305004.invokeStatic_LIL_L (1 samples, 0.10%)</title><rect x="326.2" y="483.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.2" y="494.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$12198/237361739.get$Lambda (1 samples, 0.10%)</title><rect x="326.2" y="467.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.2" y="478.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (191 samples, 19.02%)</title><rect x="327.3" y="499.0" width="224.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.3" y="510.0">scala/collection/mutable/Array..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (191 samples, 19.02%)</title><rect x="327.3" y="483.0" width="224.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="330.3" y="494.0">scala/collection/mutable/Resiz..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (191 samples, 19.02%)</title><rect x="327.3" y="467.0" width="224.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.3" y="478.0">scala/collection/mutable/Resiz..</text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (2 samples, 0.20%)</title><rect x="328.5" y="451.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="331.5" y="462.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.size$ (2 samples, 0.20%)</title><rect x="328.5" y="435.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.5" y="446.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.size (2 samples, 0.20%)</title><rect x="328.5" y="419.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="331.5" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.length (2 samples, 0.20%)</title><rect x="328.5" y="403.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="331.5" y="414.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.length$ (2 samples, 0.20%)</title><rect x="328.5" y="387.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.5" y="398.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$12198/237361739.apply (188 samples, 18.73%)</title><rect x="330.9" y="451.0" width="220.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="333.9" y="462.0">treadle/executable/DataStore$..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (188 samples, 18.73%)</title><rect x="330.9" y="435.0" width="220.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.9" y="446.0">treadle/executable/DataStore...</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (188 samples, 18.73%)</title><rect x="330.9" y="419.0" width="220.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.9" y="430.0">treadle/executable/DataStore...</text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (63 samples, 6.27%)</title><rect x="330.9" y="403.0" width="74.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.9" y="414.0">treadle/..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/956291447.linkToTargetMethod (2 samples, 0.20%)</title><rect x="330.9" y="387.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1370693940.invokeStatic_LLIL_L (2 samples, 0.20%)</title><rect x="330.9" y="371.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.9" y="382.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$12200/6352317.get$Lambda (2 samples, 0.20%)</title><rect x="330.9" y="355.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="333.9" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$12200/6352317.&lt;init&gt; (2 samples, 0.20%)</title><rect x="330.9" y="339.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="333.9" y="350.0"></text>
</g>
<g>
<title>scala/Option.foreach (30 samples, 2.99%)</title><rect x="333.2" y="387.0" width="35.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="336.2" y="398.0">sca..</text>
</g>
<g>
<title>scala/Some.get (2 samples, 0.20%)</title><rect x="333.2" y="371.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.2" y="382.0"></text>
</g>
<g>
<title>scala/Some.value (2 samples, 0.20%)</title><rect x="333.2" y="355.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="336.2" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$12200/6352317.apply (28 samples, 2.79%)</title><rect x="335.6" y="371.0" width="32.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="338.6" y="382.0">tr..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (28 samples, 2.79%)</title><rect x="335.6" y="355.0" width="32.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.6" y="366.0">tr..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (28 samples, 2.79%)</title><rect x="335.6" y="339.0" width="32.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.6" y="350.0">tr..</text>
</g>
<g>
<title>scala/collection/immutable/List.apply (2 samples, 0.20%)</title><rect x="339.1" y="323.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="342.1" y="334.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.apply$ (2 samples, 0.20%)</title><rect x="339.1" y="307.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="342.1" y="318.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.apply (2 samples, 0.20%)</title><rect x="339.1" y="291.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="342.1" y="302.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.head (1 samples, 0.10%)</title><rect x="340.3" y="275.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="343.3" y="286.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.addAntiDependency (19 samples, 1.89%)</title><rect x="341.4" y="323.0" width="22.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="344.4" y="334.0">t..</text>
</g>
<g>
<title>scala/collection/mutable/BitSet.add (4 samples, 0.40%)</title><rect x="341.4" y="307.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.4" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.contains (2 samples, 0.20%)</title><rect x="341.4" y="291.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="344.4" y="302.0"></text>
</g>
<g>
<title>scala/collection/BitSetLike.contains$ (2 samples, 0.20%)</title><rect x="341.4" y="275.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.4" y="286.0"></text>
</g>
<g>
<title>scala/collection/BitSetLike.contains (2 samples, 0.20%)</title><rect x="341.4" y="259.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="344.4" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.updateWord (2 samples, 0.20%)</title><rect x="343.8" y="291.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.8" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.ensureCapacity (1 samples, 0.10%)</title><rect x="345.0" y="275.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="348.0" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.getOrElseUpdate (15 samples, 1.49%)</title><rect x="346.1" y="307.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.1" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.addEntry (1 samples, 0.10%)</title><rect x="346.1" y="291.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="349.1" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.addEntry (1 samples, 0.10%)</title><rect x="346.1" y="275.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.1" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry$ (1 samples, 0.10%)</title><rect x="346.1" y="259.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="349.1" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry (1 samples, 0.10%)</title><rect x="346.1" y="243.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="349.1" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.10%)</title><rect x="346.1" y="227.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="349.1" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.10%)</title><rect x="346.1" y="211.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="349.1" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.10%)</title><rect x="346.1" y="195.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="349.1" y="206.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.10%)</title><rect x="346.1" y="179.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="349.1" y="190.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.10%)</title><rect x="346.1" y="163.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="349.1" y="174.0"></text>
</g>
<g>
<title>java/lang/Integer.hashCode (1 samples, 0.10%)</title><rect x="346.1" y="147.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.1" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.10%)</title><rect x="347.3" y="291.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.3" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.10%)</title><rect x="347.3" y="275.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="350.3" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.10%)</title><rect x="347.3" y="259.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="350.3" y="270.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.10%)</title><rect x="347.3" y="243.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="350.3" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (13 samples, 1.29%)</title><rect x="348.5" y="291.0" width="15.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="351.5" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.notFound (13 samples, 1.29%)</title><rect x="348.5" y="275.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="351.5" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (13 samples, 1.29%)</title><rect x="348.5" y="259.0" width="15.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="351.5" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (13 samples, 1.29%)</title><rect x="348.5" y="243.0" width="15.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="351.5" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (13 samples, 1.29%)</title><rect x="348.5" y="227.0" width="15.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="351.5" y="238.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (13 samples, 1.29%)</title><rect x="348.5" y="211.0" width="15.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="351.5" y="222.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (13 samples, 1.29%)</title><rect x="348.5" y="195.0" width="15.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="351.5" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (13 samples, 1.29%)</title><rect x="348.5" y="179.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="351.5" y="190.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (4 samples, 0.40%)</title><rect x="363.8" y="323.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="366.8" y="334.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (2 samples, 0.20%)</title><rect x="366.1" y="307.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="369.1" y="318.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (2 samples, 0.20%)</title><rect x="366.1" y="291.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.1" y="302.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (2 samples, 0.20%)</title><rect x="366.1" y="275.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.1" y="286.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (2 samples, 0.20%)</title><rect x="366.1" y="259.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.1" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (23 samples, 2.29%)</title><rect x="368.5" y="387.0" width="27.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="371.5" y="398.0">s..</text>
</g>
<g>
<title>scala/Some.&lt;init&gt; (1 samples, 0.10%)</title><rect x="369.6" y="371.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="372.6" y="382.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.last$ (1 samples, 0.10%)</title><rect x="370.8" y="371.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="373.8" y="382.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (20 samples, 1.99%)</title><rect x="372.0" y="371.0" width="23.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.0" y="382.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (20 samples, 1.99%)</title><rect x="372.0" y="355.0" width="23.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.0" y="366.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (20 samples, 1.99%)</title><rect x="372.0" y="339.0" width="23.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="375.0" y="350.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (20 samples, 1.99%)</title><rect x="372.0" y="323.0" width="23.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="375.0" y="334.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (19 samples, 1.89%)</title><rect x="373.2" y="307.0" width="22.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="376.2" y="318.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (19 samples, 1.89%)</title><rect x="373.2" y="291.0" width="22.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="376.2" y="302.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (19 samples, 1.89%)</title><rect x="373.2" y="275.0" width="22.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.2" y="286.0">s..</text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (19 samples, 1.89%)</title><rect x="373.2" y="259.0" width="22.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.2" y="270.0">s..</text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (19 samples, 1.89%)</title><rect x="373.2" y="243.0" width="22.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="376.2" y="254.0">s..</text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (19 samples, 1.89%)</title><rect x="373.2" y="227.0" width="22.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="376.2" y="238.0">s..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (8 samples, 0.80%)</title><rect x="395.5" y="387.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="398.5" y="398.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (4 samples, 0.40%)</title><rect x="395.5" y="371.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.5" y="382.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (3 samples, 0.30%)</title><rect x="396.7" y="355.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="399.7" y="366.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (3 samples, 0.30%)</title><rect x="396.7" y="339.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="399.7" y="350.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (1 samples, 0.10%)</title><rect x="396.7" y="323.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="399.7" y="334.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C_helper(JavaThread*, nmethod*&amp;) (1 samples, 0.10%)</title><rect x="396.7" y="307.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="399.7" y="318.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.10%)</title><rect x="396.7" y="291.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="399.7" y="302.0"></text>
</g>
<g>
<title>SharedRuntime::raw_exception_handler_for_return_address(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="397.8" y="323.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="400.8" y="334.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.10%)</title><rect x="397.8" y="307.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="400.8" y="318.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.10%)</title><rect x="397.8" y="291.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="400.8" y="302.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.10%)</title><rect x="397.8" y="275.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="400.8" y="286.0"></text>
</g>
<g>
<title>nmethod::is_method_handle_return(unsigned char*) (1 samples, 0.10%)</title><rect x="399.0" y="323.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="402.0" y="334.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (4 samples, 0.40%)</title><rect x="400.2" y="371.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="403.2" y="382.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (4 samples, 0.40%)</title><rect x="400.2" y="355.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="403.2" y="366.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (4 samples, 0.40%)</title><rect x="400.2" y="339.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="403.2" y="350.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (4 samples, 0.40%)</title><rect x="400.2" y="323.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="403.2" y="334.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.run (125 samples, 12.45%)</title><rect x="404.9" y="403.0" width="146.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.9" y="414.0">treadle/executable..</text>
</g>
<g>
<title>scala/Option.foreach (121 samples, 12.05%)</title><rect x="404.9" y="387.0" width="142.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="407.9" y="398.0">scala/Option.foreach</text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$12199/2005061618.apply (121 samples, 12.05%)</title><rect x="404.9" y="371.0" width="142.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="407.9" y="382.0">treadle/executable..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5$adapted (121 samples, 12.05%)</title><rect x="404.9" y="355.0" width="142.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.9" y="366.0">treadle/executable..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5 (121 samples, 12.05%)</title><rect x="404.9" y="339.0" width="142.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="407.9" y="350.0">treadle/executable..</text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (118 samples, 11.75%)</title><rect x="408.4" y="323.0" width="138.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="411.4" y="334.0">treadle/vcd/VCD.w..</text>
</g>
<g>
<title>logger/Logger.info (11 samples, 1.10%)</title><rect x="409.6" y="307.0" width="12.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="412.6" y="318.0"></text>
</g>
<g>
<title>logger/Logger$.logger$Logger$$showMessage (10 samples, 1.00%)</title><rect x="410.8" y="291.0" width="11.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.8" y="302.0"></text>
</g>
<g>
<title>logger/Logger$.state (4 samples, 0.40%)</title><rect x="412.0" y="275.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="415.0" y="286.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (3 samples, 0.30%)</title><rect x="413.1" y="259.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.1" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.20%)</title><rect x="413.1" y="243.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="416.1" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (2 samples, 0.20%)</title><rect x="413.1" y="227.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="416.1" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.20%)</title><rect x="413.1" y="211.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="416.1" y="222.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.tl (1 samples, 0.10%)</title><rect x="415.5" y="243.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.5" y="254.0"></text>
</g>
<g>
<title>logger/Logger$.testPackageNameMatch (2 samples, 0.20%)</title><rect x="416.7" y="275.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="419.7" y="286.0"></text>
</g>
<g>
<title>logger/Logger$.state (2 samples, 0.20%)</title><rect x="416.7" y="259.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="419.7" y="270.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (1 samples, 0.10%)</title><rect x="417.8" y="243.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="420.8" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.10%)</title><rect x="417.8" y="227.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="420.8" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.10%)</title><rect x="417.8" y="211.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.8" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.10%)</title><rect x="417.8" y="195.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.8" y="206.0"></text>
</g>
<g>
<title>scala/Enumeration$Value.equals (3 samples, 0.30%)</title><rect x="419.0" y="275.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.0" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (13 samples, 1.29%)</title><rect x="422.5" y="307.0" width="15.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="425.5" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (13 samples, 1.29%)</title><rect x="422.5" y="291.0" width="15.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.5" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (13 samples, 1.29%)</title><rect x="422.5" y="275.0" width="15.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.5" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (13 samples, 1.29%)</title><rect x="422.5" y="259.0" width="15.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.5" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (13 samples, 1.29%)</title><rect x="422.5" y="243.0" width="15.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="425.5" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (13 samples, 1.29%)</title><rect x="422.5" y="227.0" width="15.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.5" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (13 samples, 1.29%)</title><rect x="422.5" y="211.0" width="15.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.5" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (13 samples, 1.29%)</title><rect x="422.5" y="195.0" width="15.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="425.5" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (13 samples, 1.29%)</title><rect x="422.5" y="179.0" width="15.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="425.5" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (13 samples, 1.29%)</title><rect x="422.5" y="163.0" width="15.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.5" y="174.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.10%)</title><rect x="422.5" y="147.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="425.5" y="158.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (12 samples, 1.20%)</title><rect x="423.7" y="147.0" width="14.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="426.7" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$plus$eq (1 samples, 0.10%)</title><rect x="437.8" y="307.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="440.8" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (1 samples, 0.10%)</title><rect x="437.8" y="291.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="440.8" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (12 samples, 1.20%)</title><rect x="439.0" y="307.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="442.0" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (12 samples, 1.20%)</title><rect x="439.0" y="291.0" width="14.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.0" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (12 samples, 1.20%)</title><rect x="439.0" y="275.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="442.0" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (11 samples, 1.10%)</title><rect x="440.2" y="259.0" width="12.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="443.2" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (11 samples, 1.10%)</title><rect x="440.2" y="243.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="443.2" y="254.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (10 samples, 1.00%)</title><rect x="441.3" y="227.0" width="11.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="444.3" y="238.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (10 samples, 1.00%)</title><rect x="441.3" y="211.0" width="11.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="444.3" y="222.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (10 samples, 1.00%)</title><rect x="441.3" y="195.0" width="11.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="444.3" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (10 samples, 1.00%)</title><rect x="441.3" y="179.0" width="11.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="444.3" y="190.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isNewValue (17 samples, 1.69%)</title><rect x="453.1" y="307.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.1" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (12 samples, 1.20%)</title><rect x="453.1" y="291.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="456.1" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (12 samples, 1.20%)</title><rect x="453.1" y="275.0" width="14.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="456.1" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (12 samples, 1.20%)</title><rect x="453.1" y="259.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.1" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (12 samples, 1.20%)</title><rect x="453.1" y="243.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.1" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (12 samples, 1.20%)</title><rect x="453.1" y="227.0" width="14.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.1" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (9 samples, 0.90%)</title><rect x="456.6" y="211.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="459.6" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (9 samples, 0.90%)</title><rect x="456.6" y="195.0" width="10.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="459.6" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (9 samples, 0.90%)</title><rect x="456.6" y="179.0" width="10.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="459.6" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (9 samples, 0.90%)</title><rect x="456.6" y="163.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.6" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (9 samples, 0.90%)</title><rect x="456.6" y="147.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="459.6" y="158.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (9 samples, 0.90%)</title><rect x="456.6" y="131.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="459.6" y="142.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (5 samples, 0.50%)</title><rect x="467.2" y="291.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.2" y="302.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (5 samples, 0.50%)</title><rect x="467.2" y="275.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.2" y="286.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (5 samples, 0.50%)</title><rect x="467.2" y="259.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="470.2" y="270.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (5 samples, 0.50%)</title><rect x="467.2" y="243.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.2" y="254.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isTempWire (63 samples, 6.27%)</title><rect x="473.1" y="307.0" width="74.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="476.1" y="318.0">treadle/..</text>
</g>
<g>
<title>java/lang/String.contains (1 samples, 0.10%)</title><rect x="476.6" y="291.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="479.6" y="302.0"></text>
</g>
<g>
<title>logger/Logger$.state (1 samples, 0.10%)</title><rect x="476.6" y="275.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="479.6" y="286.0"></text>
</g>
<g>
<title>java/lang/String.split (39 samples, 3.88%)</title><rect x="477.8" y="291.0" width="45.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.8" y="302.0">java..</text>
</g>
<g>
<title>java/lang/String.split (39 samples, 3.88%)</title><rect x="477.8" y="275.0" width="45.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.8" y="286.0">java..</text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (14 samples, 1.39%)</title><rect x="497.7" y="259.0" width="16.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="500.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList$1.hasNext (3 samples, 0.30%)</title><rect x="509.5" y="243.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="512.5" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList$1.next (1 samples, 0.10%)</title><rect x="513.0" y="243.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.0" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.40%)</title><rect x="514.2" y="259.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.2" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (4 samples, 0.40%)</title><rect x="514.2" y="243.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.2" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (4 samples, 0.40%)</title><rect x="514.2" y="227.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="517.2" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.40%)</title><rect x="514.2" y="211.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="517.2" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.40%)</title><rect x="514.2" y="195.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.2" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.compile (2 samples, 0.20%)</title><rect x="518.9" y="259.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.9" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.&lt;init&gt; (2 samples, 0.20%)</title><rect x="518.9" y="243.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.9" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList$1.hasNext (2 samples, 0.20%)</title><rect x="518.9" y="227.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.9" y="238.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.10%)</title><rect x="521.3" y="259.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="524.3" y="270.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.10%)</title><rect x="522.4" y="259.0" width="1.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="525.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.20%)</title><rect x="523.6" y="291.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="526.6" y="302.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.20%)</title><rect x="523.6" y="275.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="526.6" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.&lt;init&gt; (5 samples, 0.50%)</title><rect x="526.0" y="291.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="529.0" y="302.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqLike.$init$ (1 samples, 0.10%)</title><rect x="529.5" y="275.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.5" y="286.0"></text>
</g>
<g>
<title>scala/collection/Parallelizable.$init$ (1 samples, 0.10%)</title><rect x="530.7" y="275.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="533.7" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.last (13 samples, 1.29%)</title><rect x="531.8" y="291.0" width="15.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.8" y="302.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.last$ (13 samples, 1.29%)</title><rect x="531.8" y="275.0" width="15.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.8" y="286.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.last (12 samples, 1.20%)</title><rect x="533.0" y="259.0" width="14.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.0" y="270.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.60%)</title><rect x="534.2" y="243.0" width="7.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="537.2" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.apply (3 samples, 0.30%)</title><rect x="541.2" y="243.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.2" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply$ (3 samples, 0.30%)</title><rect x="541.2" y="227.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.2" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply (3 samples, 0.30%)</title><rect x="541.2" y="211.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.2" y="222.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.20%)</title><rect x="541.2" y="195.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="544.2" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.apply (1 samples, 0.10%)</title><rect x="543.6" y="195.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.6" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.length (2 samples, 0.20%)</title><rect x="544.8" y="243.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="547.8" y="254.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (4 samples, 0.40%)</title><rect x="547.1" y="387.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.1" y="398.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (2 samples, 0.20%)</title><rect x="549.5" y="371.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.5" y="382.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (2 samples, 0.20%)</title><rect x="549.5" y="355.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.5" y="366.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (2 samples, 0.20%)</title><rect x="549.5" y="339.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.5" y="350.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12030/708899360.apply$mcJ$sp (6 samples, 0.60%)</title><rect x="551.8" y="515.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="554.8" y="526.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$8 (6 samples, 0.60%)</title><rect x="551.8" y="499.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.8" y="510.0"></text>
</g>
<g>
<title>treadle/executable/AsUIntLongs.apply (1 samples, 0.10%)</title><rect x="551.8" y="483.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.8" y="494.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12121/1439648635.apply$mcJ$sp (1 samples, 0.10%)</title><rect x="551.8" y="467.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.8" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$174 (1 samples, 0.10%)</title><rect x="551.8" y="451.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.8" y="462.0"></text>
</g>
<g>
<title>treadle/executable/CatLongs.apply (1 samples, 0.10%)</title><rect x="553.0" y="483.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.0" y="494.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12043/498272757.apply$mcJ$sp (1 samples, 0.10%)</title><rect x="553.0" y="467.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.0" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$70 (1 samples, 0.10%)</title><rect x="553.0" y="451.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.0" y="462.0"></text>
</g>
<g>
<title>treadle/executable/ToLong.apply (1 samples, 0.10%)</title><rect x="553.0" y="435.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="556.0" y="446.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12041/729280368.apply$mcI$sp (1 samples, 0.10%)</title><rect x="553.0" y="419.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="556.0" y="430.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$112 (1 samples, 0.10%)</title><rect x="553.0" y="403.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.0" y="414.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$GetInt.apply (1 samples, 0.10%)</title><rect x="553.0" y="387.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="556.0" y="398.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$GetInt.index (1 samples, 0.10%)</title><rect x="553.0" y="371.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="556.0" y="382.0"></text>
</g>
<g>
<title>treadle/executable/MuxLongs.apply (3 samples, 0.30%)</title><rect x="554.2" y="483.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="557.2" y="494.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="554.2" y="467.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="557.2" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12027/245609922.apply$mcI$sp (1 samples, 0.10%)</title><rect x="555.3" y="467.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.3" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$203 (1 samples, 0.10%)</title><rect x="555.3" y="451.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="558.3" y="462.0"></text>
</g>
<g>
<title>treadle/executable/MuxLongs.condition (1 samples, 0.10%)</title><rect x="556.5" y="467.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="559.5" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ShlLongs.apply (1 samples, 0.10%)</title><rect x="557.7" y="483.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="560.7" y="494.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$GetLong.apply (1 samples, 0.10%)</title><rect x="557.7" y="467.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.7" y="478.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.run (1 samples, 0.10%)</title><rect x="558.9" y="563.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.9" y="574.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.cycleCount (1 samples, 0.10%)</title><rect x="560.0" y="627.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.0" y="638.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="560.0" y="611.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="563.0" y="622.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="560.0" y="595.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="563.0" y="606.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="560.0" y="579.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="563.0" y="590.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="560.0" y="563.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="563.0" y="574.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::call_event(Method*, CompLevel) (1 samples, 0.10%)</title><rect x="560.0" y="547.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="563.0" y="558.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::common(bool (AdvancedThresholdPolicy::*)(int, int, CompLevel), Method*, CompLevel, bool) (1 samples, 0.10%)</title><rect x="560.0" y="531.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="563.0" y="542.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::call_predicate(int, int, CompLevel) (1 samples, 0.10%)</title><rect x="560.0" y="515.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="563.0" y="526.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.lowerClock$1 (6 samples, 0.60%)</title><rect x="561.2" y="627.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.2" y="638.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setIntValue (6 samples, 0.60%)</title><rect x="561.2" y="611.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.2" y="622.0"></text>
</g>
<g>
<title>scala/Option.foreach (5 samples, 0.50%)</title><rect x="562.4" y="595.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="565.4" y="606.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$$Lambda$12206/1272097776.apply (5 samples, 0.50%)</title><rect x="562.4" y="579.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="565.4" y="590.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.$anonfun$setIntValue$1$adapted (5 samples, 0.50%)</title><rect x="562.4" y="563.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="565.4" y="574.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.$anonfun$setIntValue$1 (5 samples, 0.50%)</title><rect x="562.4" y="547.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.4" y="558.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (5 samples, 0.50%)</title><rect x="562.4" y="531.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="565.4" y="542.0"></text>
</g>
<g>
<title>logger/Logger.info (1 samples, 0.10%)</title><rect x="562.4" y="515.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.4" y="526.0"></text>
</g>
<g>
<title>logger/Logger$.logger$Logger$$showMessage (1 samples, 0.10%)</title><rect x="562.4" y="499.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.4" y="510.0"></text>
</g>
<g>
<title>logger/Logger$.state (1 samples, 0.10%)</title><rect x="562.4" y="483.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.4" y="494.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (1 samples, 0.10%)</title><rect x="562.4" y="467.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.4" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.10%)</title><rect x="562.4" y="451.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.4" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.10%)</title><rect x="562.4" y="435.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="565.4" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.10%)</title><rect x="562.4" y="419.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.4" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.10%)</title><rect x="562.4" y="403.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.4" y="414.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.updateInfo$1 (4 samples, 0.40%)</title><rect x="563.6" y="515.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.6" y="526.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.getOrElseUpdate (4 samples, 0.40%)</title><rect x="563.6" y="499.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="566.6" y="510.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.addEntry (2 samples, 0.20%)</title><rect x="563.6" y="483.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="566.6" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.addEntry (2 samples, 0.20%)</title><rect x="563.6" y="467.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="566.6" y="478.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry$ (2 samples, 0.20%)</title><rect x="563.6" y="451.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="566.6" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry (2 samples, 0.20%)</title><rect x="563.6" y="435.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="566.6" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (2 samples, 0.20%)</title><rect x="563.6" y="419.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="566.6" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (2 samples, 0.20%)</title><rect x="563.6" y="403.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.6" y="414.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.20%)</title><rect x="565.9" y="483.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.9" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.notFound (2 samples, 0.20%)</title><rect x="565.9" y="467.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="568.9" y="478.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (2 samples, 0.20%)</title><rect x="565.9" y="451.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="568.9" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (2 samples, 0.20%)</title><rect x="565.9" y="435.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="568.9" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (2 samples, 0.20%)</title><rect x="565.9" y="419.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="568.9" y="430.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.20%)</title><rect x="565.9" y="403.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.9" y="414.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.20%)</title><rect x="565.9" y="387.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.9" y="398.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.20%)</title><rect x="565.9" y="371.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.9" y="382.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.raiseClock$1 (371 samples, 36.95%)</title><rect x="568.3" y="627.0" width="436.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="571.3" y="638.0">treadle/executable/SimpleSingleClockStepper.raiseClock$1</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (369 samples, 36.75%)</title><rect x="568.3" y="611.0" width="433.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.3" y="622.0">treadle/executable/ExecutionEngine.evaluateCircuit</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (369 samples, 36.75%)</title><rect x="568.3" y="595.0" width="433.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="571.3" y="606.0">treadle/executable/ExecutionEngine.runAssigns</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.wallTime (1 samples, 0.10%)</title><rect x="569.4" y="579.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.4" y="590.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (367 samples, 36.55%)</title><rect x="570.6" y="579.0" width="431.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.6" y="590.0">treadle/executable/Scheduler.executeCombinationalAssigns</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (367 samples, 36.55%)</title><rect x="570.6" y="563.0" width="431.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.6" y="574.0">treadle/executable/Scheduler.executeAssigners</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.apply (1 samples, 0.10%)</title><rect x="574.1" y="547.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="577.1" y="558.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply$ (1 samples, 0.10%)</title><rect x="574.1" y="531.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="577.1" y="542.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply (1 samples, 0.10%)</title><rect x="574.1" y="515.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.1" y="526.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner$$Lambda$12193/1534287110.apply$mcV$sp (18 samples, 1.79%)</title><rect x="575.3" y="547.0" width="21.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.3" y="558.0">t..</text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.$anonfun$setLeanMode$2 (18 samples, 1.79%)</title><rect x="575.3" y="531.0" width="21.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.3" y="542.0">t..</text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.runFull (18 samples, 1.79%)</title><rect x="575.3" y="515.0" width="21.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.3" y="526.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$12191/1958178813.apply$mcV$sp (6 samples, 0.60%)</title><rect x="575.3" y="499.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.3" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (6 samples, 0.60%)</title><rect x="575.3" y="483.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.3" y="494.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (6 samples, 0.60%)</title><rect x="575.3" y="467.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="578.3" y="478.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (6 samples, 0.60%)</title><rect x="575.3" y="451.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.3" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (6 samples, 0.60%)</title><rect x="575.3" y="435.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="578.3" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (6 samples, 0.60%)</title><rect x="575.3" y="419.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="578.3" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (6 samples, 0.60%)</title><rect x="575.3" y="403.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.3" y="414.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$12198/237361739.apply (6 samples, 0.60%)</title><rect x="575.3" y="387.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.3" y="398.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (6 samples, 0.60%)</title><rect x="575.3" y="371.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.3" y="382.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (6 samples, 0.60%)</title><rect x="575.3" y="355.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="578.3" y="366.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.run (6 samples, 0.60%)</title><rect x="575.3" y="339.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.3" y="350.0"></text>
</g>
<g>
<title>scala/Option.foreach (5 samples, 0.50%)</title><rect x="576.5" y="323.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="579.5" y="334.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$12199/2005061618.apply (5 samples, 0.50%)</title><rect x="576.5" y="307.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="579.5" y="318.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5$adapted (5 samples, 0.50%)</title><rect x="576.5" y="291.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="579.5" y="302.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5 (5 samples, 0.50%)</title><rect x="576.5" y="275.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="579.5" y="286.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (5 samples, 0.50%)</title><rect x="576.5" y="259.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="579.5" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (2 samples, 0.20%)</title><rect x="576.5" y="243.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="579.5" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (2 samples, 0.20%)</title><rect x="576.5" y="227.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="579.5" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (2 samples, 0.20%)</title><rect x="576.5" y="211.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="579.5" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (2 samples, 0.20%)</title><rect x="576.5" y="195.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="579.5" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (2 samples, 0.20%)</title><rect x="576.5" y="179.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="579.5" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.index (1 samples, 0.10%)</title><rect x="576.5" y="163.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="579.5" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index$ (1 samples, 0.10%)</title><rect x="576.5" y="147.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="579.5" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index (1 samples, 0.10%)</title><rect x="576.5" y="131.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="579.5" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.improve (1 samples, 0.10%)</title><rect x="576.5" y="115.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="579.5" y="126.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve$ (1 samples, 0.10%)</title><rect x="576.5" y="99.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="579.5" y="110.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve (1 samples, 0.10%)</title><rect x="576.5" y="83.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="579.5" y="94.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.10%)</title><rect x="577.7" y="163.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.7" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.10%)</title><rect x="577.7" y="147.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="580.7" y="158.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.10%)</title><rect x="577.7" y="131.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="580.7" y="142.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.10%)</title><rect x="577.7" y="115.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.7" y="126.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isNewValue (1 samples, 0.10%)</title><rect x="578.8" y="243.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="581.8" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.10%)</title><rect x="578.8" y="227.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.8" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.10%)</title><rect x="578.8" y="211.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.8" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.10%)</title><rect x="578.8" y="195.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="581.8" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.10%)</title><rect x="578.8" y="179.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.8" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.10%)</title><rect x="578.8" y="163.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="581.8" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.10%)</title><rect x="578.8" y="147.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.8" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.10%)</title><rect x="578.8" y="131.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="581.8" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.10%)</title><rect x="578.8" y="115.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="581.8" y="126.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.10%)</title><rect x="578.8" y="99.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.8" y="110.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.10%)</title><rect x="578.8" y="83.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="581.8" y="94.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.10%)</title><rect x="578.8" y="67.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="581.8" y="78.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isTempWire (2 samples, 0.20%)</title><rect x="580.0" y="243.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="583.0" y="254.0"></text>
</g>
<g>
<title>logger/Logger$.state (1 samples, 0.10%)</title><rect x="580.0" y="227.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="583.0" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.last (1 samples, 0.10%)</title><rect x="581.2" y="227.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.2" y="238.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.last$ (1 samples, 0.10%)</title><rect x="581.2" y="211.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="584.2" y="222.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.last (1 samples, 0.10%)</title><rect x="581.2" y="195.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="584.2" y="206.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="581.2" y="179.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="584.2" y="190.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$12192/1485446643.apply$mcV$sp (12 samples, 1.20%)</title><rect x="582.4" y="499.0" width="14.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.4" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (12 samples, 1.20%)</title><rect x="582.4" y="483.0" width="14.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="585.4" y="494.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (12 samples, 1.20%)</title><rect x="582.4" y="467.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="585.4" y="478.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (12 samples, 1.20%)</title><rect x="582.4" y="451.0" width="14.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.4" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (12 samples, 1.20%)</title><rect x="582.4" y="435.0" width="14.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.4" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (12 samples, 1.20%)</title><rect x="582.4" y="419.0" width="14.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.4" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (12 samples, 1.20%)</title><rect x="582.4" y="403.0" width="14.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.4" y="414.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (1 samples, 0.10%)</title><rect x="582.4" y="387.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.4" y="398.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.size$ (1 samples, 0.10%)</title><rect x="582.4" y="371.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="585.4" y="382.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.length (1 samples, 0.10%)</title><rect x="582.4" y="355.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.4" y="366.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$12198/237361739.apply (11 samples, 1.10%)</title><rect x="583.5" y="387.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.5" y="398.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (11 samples, 1.10%)</title><rect x="583.5" y="371.0" width="13.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.5" y="382.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (11 samples, 1.10%)</title><rect x="583.5" y="355.0" width="13.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.5" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (2 samples, 0.20%)</title><rect x="583.5" y="339.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.5" y="350.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (2 samples, 0.20%)</title><rect x="583.5" y="323.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="586.5" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.20%)</title><rect x="583.5" y="307.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.5" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.20%)</title><rect x="583.5" y="291.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.5" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.20%)</title><rect x="583.5" y="275.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.5" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.20%)</title><rect x="583.5" y="259.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="586.5" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (2 samples, 0.20%)</title><rect x="583.5" y="243.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="586.5" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (2 samples, 0.20%)</title><rect x="583.5" y="227.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="586.5" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (2 samples, 0.20%)</title><rect x="583.5" y="211.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.5" y="222.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.20%)</title><rect x="583.5" y="195.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="586.5" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.20%)</title><rect x="583.5" y="179.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.5" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.20%)</title><rect x="583.5" y="163.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="586.5" y="174.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.run (9 samples, 0.90%)</title><rect x="585.9" y="339.0" width="10.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="588.9" y="350.0"></text>
</g>
<g>
<title>scala/Option.foreach (9 samples, 0.90%)</title><rect x="585.9" y="323.0" width="10.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.9" y="334.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$12199/2005061618.apply (9 samples, 0.90%)</title><rect x="585.9" y="307.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.9" y="318.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5$adapted (9 samples, 0.90%)</title><rect x="585.9" y="291.0" width="10.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="588.9" y="302.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5 (9 samples, 0.90%)</title><rect x="585.9" y="275.0" width="10.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="588.9" y="286.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (9 samples, 0.90%)</title><rect x="585.9" y="259.0" width="10.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="588.9" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (3 samples, 0.30%)</title><rect x="585.9" y="243.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.9" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (3 samples, 0.30%)</title><rect x="585.9" y="227.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="588.9" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (3 samples, 0.30%)</title><rect x="585.9" y="211.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="588.9" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (3 samples, 0.30%)</title><rect x="585.9" y="195.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="588.9" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (3 samples, 0.30%)</title><rect x="585.9" y="179.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.9" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.index (1 samples, 0.10%)</title><rect x="585.9" y="163.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="588.9" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index$ (1 samples, 0.10%)</title><rect x="585.9" y="147.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.9" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index (1 samples, 0.10%)</title><rect x="585.9" y="131.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="588.9" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.improve (1 samples, 0.10%)</title><rect x="585.9" y="115.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="588.9" y="126.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve$ (1 samples, 0.10%)</title><rect x="585.9" y="99.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.9" y="110.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve (1 samples, 0.10%)</title><rect x="585.9" y="83.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="588.9" y="94.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.20%)</title><rect x="587.1" y="163.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="590.1" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.20%)</title><rect x="587.1" y="147.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="590.1" y="158.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.20%)</title><rect x="587.1" y="131.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.1" y="142.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (2 samples, 0.20%)</title><rect x="587.1" y="115.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="590.1" y="126.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isTempWire (5 samples, 0.50%)</title><rect x="589.4" y="243.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="592.4" y="254.0"></text>
</g>
<g>
<title>java/lang/String.split (3 samples, 0.30%)</title><rect x="589.4" y="227.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="592.4" y="238.0"></text>
</g>
<g>
<title>java/lang/String.split (3 samples, 0.30%)</title><rect x="589.4" y="211.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="592.4" y="222.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.10%)</title><rect x="590.6" y="195.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.6" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.10%)</title><rect x="591.8" y="195.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="594.8" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (1 samples, 0.10%)</title><rect x="591.8" y="179.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="594.8" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (1 samples, 0.10%)</title><rect x="591.8" y="163.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.8" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.10%)</title><rect x="591.8" y="147.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.8" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.10%)</title><rect x="591.8" y="131.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="594.8" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.&lt;init&gt; (2 samples, 0.20%)</title><rect x="592.9" y="227.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.9" y="238.0"></text>
</g>
<g>
<title>scala/collection/GenTraversableOnce.$init$ (1 samples, 0.10%)</title><rect x="594.1" y="211.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.1" y="222.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.updateInfo$1 (1 samples, 0.10%)</title><rect x="595.3" y="243.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.3" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$minus$eq (1 samples, 0.10%)</title><rect x="595.3" y="227.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="598.3" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.removeElem (1 samples, 0.10%)</title><rect x="595.3" y="211.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="598.3" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.removeElem$ (1 samples, 0.10%)</title><rect x="595.3" y="195.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="598.3" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.removeElem (1 samples, 0.10%)</title><rect x="595.3" y="179.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="598.3" y="190.0"></text>
</g>
<g>
<title>treadle/vcd/Change.hashCode (1 samples, 0.10%)</title><rect x="595.3" y="163.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.3" y="174.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.10%)</title><rect x="595.3" y="147.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="598.3" y="158.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$12191/1958178813.apply$mcV$sp (147 samples, 14.64%)</title><rect x="596.5" y="547.0" width="172.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.5" y="558.0">treadle/executable/Dat..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (147 samples, 14.64%)</title><rect x="596.5" y="531.0" width="172.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.5" y="542.0">treadle/executable/Dat..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (147 samples, 14.64%)</title><rect x="596.5" y="515.0" width="172.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.5" y="526.0">treadle/executable/Dat..</text>
</g>
<g>
<title>scala/Option.isDefined (1 samples, 0.10%)</title><rect x="598.8" y="499.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.8" y="510.0"></text>
</g>
<g>
<title>treadle/executable/AsSIntInts.apply (1 samples, 0.10%)</title><rect x="600.0" y="499.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.0" y="510.0"></text>
</g>
<g>
<title>treadle/executable/BitsInts.apply (1 samples, 0.10%)</title><rect x="601.2" y="499.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.2" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.symbol (2 samples, 0.20%)</title><rect x="602.4" y="499.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.4" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (9 samples, 0.90%)</title><rect x="604.7" y="499.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.7" y="510.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (3 samples, 0.30%)</title><rect x="610.6" y="483.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.6" y="494.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (3 samples, 0.30%)</title><rect x="610.6" y="467.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="613.6" y="478.0"></text>
</g>
<g>
<title>scala/math/BigInt$.cache (1 samples, 0.10%)</title><rect x="610.6" y="451.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="613.6" y="462.0"></text>
</g>
<g>
<title>scala/math/BigInt$.minCached (2 samples, 0.20%)</title><rect x="611.8" y="451.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.8" y="462.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.index (1 samples, 0.10%)</title><rect x="614.1" y="483.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="617.1" y="494.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (125 samples, 12.45%)</title><rect x="615.3" y="499.0" width="146.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.3" y="510.0">treadle/executable..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/949673757.linkToTargetMethod (2 samples, 0.20%)</title><rect x="616.5" y="483.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="619.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/947305004.invokeStatic_LIL_L (2 samples, 0.20%)</title><rect x="616.5" y="467.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="619.5" y="478.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$12198/237361739.get$Lambda (2 samples, 0.20%)</title><rect x="616.5" y="451.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.5" y="462.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$12198/237361739.&lt;init&gt; (1 samples, 0.10%)</title><rect x="617.6" y="435.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.6" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (122 samples, 12.15%)</title><rect x="618.8" y="483.0" width="143.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="621.8" y="494.0">scala/collection/m..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (122 samples, 12.15%)</title><rect x="618.8" y="467.0" width="143.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="621.8" y="478.0">scala/collection/m..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (122 samples, 12.15%)</title><rect x="618.8" y="451.0" width="143.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.8" y="462.0">scala/collection/m..</text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$12198/237361739.apply (122 samples, 12.15%)</title><rect x="618.8" y="435.0" width="143.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="621.8" y="446.0">treadle/executable..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (122 samples, 12.15%)</title><rect x="618.8" y="419.0" width="143.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.8" y="430.0">treadle/executable..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (122 samples, 12.15%)</title><rect x="618.8" y="403.0" width="143.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.8" y="414.0">treadle/executable..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (58 samples, 5.78%)</title><rect x="618.8" y="387.0" width="68.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="621.8" y="398.0">treadle..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/956291447.linkToTargetMethod (2 samples, 0.20%)</title><rect x="618.8" y="371.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1370693940.invokeStatic_LLIL_L (1 samples, 0.10%)</title><rect x="620.0" y="355.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.0" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$12200/6352317.get$Lambda (1 samples, 0.10%)</title><rect x="620.0" y="339.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.0" y="350.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$12200/6352317.&lt;init&gt; (1 samples, 0.10%)</title><rect x="620.0" y="323.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.0" y="334.0"></text>
</g>
<g>
<title>scala/Option.foreach (15 samples, 1.49%)</title><rect x="621.2" y="371.0" width="17.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.2" y="382.0"></text>
</g>
<g>
<title>scala/Some.get (1 samples, 0.10%)</title><rect x="621.2" y="355.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="624.2" y="366.0"></text>
</g>
<g>
<title>scala/Some.value (1 samples, 0.10%)</title><rect x="621.2" y="339.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.2" y="350.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$12200/6352317.apply (14 samples, 1.39%)</title><rect x="622.3" y="355.0" width="16.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.3" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (14 samples, 1.39%)</title><rect x="622.3" y="339.0" width="16.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.3" y="350.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (14 samples, 1.39%)</title><rect x="622.3" y="323.0" width="16.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.3" y="334.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.apply (3 samples, 0.30%)</title><rect x="622.3" y="307.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.3" y="318.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.apply$ (3 samples, 0.30%)</title><rect x="622.3" y="291.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="625.3" y="302.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.apply (3 samples, 0.30%)</title><rect x="622.3" y="275.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.3" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.head (1 samples, 0.10%)</title><rect x="623.5" y="259.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.5" y="270.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (1 samples, 0.10%)</title><rect x="624.7" y="259.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.7" y="270.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (1 samples, 0.10%)</title><rect x="624.7" y="243.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="627.7" y="254.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.addAntiDependency (8 samples, 0.80%)</title><rect x="625.9" y="307.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.9" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.add (1 samples, 0.10%)</title><rect x="627.0" y="291.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.0" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.getOrElseUpdate (6 samples, 0.60%)</title><rect x="628.2" y="291.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.2" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.10%)</title><rect x="628.2" y="275.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="631.2" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.10%)</title><rect x="628.2" y="259.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="631.2" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.10%)</title><rect x="628.2" y="243.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.2" y="254.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.10%)</title><rect x="628.2" y="227.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.2" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (5 samples, 0.50%)</title><rect x="629.4" y="275.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.4" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.notFound (4 samples, 0.40%)</title><rect x="629.4" y="259.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.4" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (4 samples, 0.40%)</title><rect x="629.4" y="243.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.4" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (4 samples, 0.40%)</title><rect x="629.4" y="227.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="632.4" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (4 samples, 0.40%)</title><rect x="629.4" y="211.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.4" y="222.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (4 samples, 0.40%)</title><rect x="629.4" y="195.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.4" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (4 samples, 0.40%)</title><rect x="629.4" y="179.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.4" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (4 samples, 0.40%)</title><rect x="629.4" y="163.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.4" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.10%)</title><rect x="632.9" y="147.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="635.9" y="158.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.10%)</title><rect x="634.1" y="259.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.1" y="270.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (3 samples, 0.30%)</title><rect x="635.3" y="307.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.3" y="318.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (3 samples, 0.30%)</title><rect x="635.3" y="291.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.3" y="302.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.10%)</title><rect x="637.6" y="275.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.6" y="286.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.10%)</title><rect x="637.6" y="259.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="640.6" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (35 samples, 3.49%)</title><rect x="638.8" y="371.0" width="41.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="641.8" y="382.0">sca..</text>
</g>
<g>
<title>scala/Some.&lt;init&gt; (1 samples, 0.10%)</title><rect x="641.1" y="355.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.1" y="366.0"></text>
</g>
<g>
<title>scala/Option.&lt;init&gt; (1 samples, 0.10%)</title><rect x="641.1" y="339.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.1" y="350.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (32 samples, 3.19%)</title><rect x="642.3" y="355.0" width="37.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.3" y="366.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (32 samples, 3.19%)</title><rect x="642.3" y="339.0" width="37.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.3" y="350.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (32 samples, 3.19%)</title><rect x="642.3" y="323.0" width="37.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.3" y="334.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.10%)</title><rect x="642.3" y="307.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.3" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.10%)</title><rect x="642.3" y="291.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.3" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.10%)</title><rect x="642.3" y="275.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.3" y="286.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.10%)</title><rect x="642.3" y="259.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.3" y="270.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.10%)</title><rect x="642.3" y="243.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.3" y="254.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.uniqueId (1 samples, 0.10%)</title><rect x="642.3" y="227.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.3" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (31 samples, 3.09%)</title><rect x="643.5" y="307.0" width="36.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="646.5" y="318.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (29 samples, 2.89%)</title><rect x="645.8" y="291.0" width="34.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.8" y="302.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (29 samples, 2.89%)</title><rect x="645.8" y="275.0" width="34.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.8" y="286.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (29 samples, 2.89%)</title><rect x="645.8" y="259.0" width="34.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.8" y="270.0">sc..</text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (29 samples, 2.89%)</title><rect x="645.8" y="243.0" width="34.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="648.8" y="254.0">sc..</text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (29 samples, 2.89%)</title><rect x="645.8" y="227.0" width="34.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.8" y="238.0">sc..</text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsCharObject (1 samples, 0.10%)</title><rect x="647.0" y="211.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="650.0" y="222.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (27 samples, 2.69%)</title><rect x="648.2" y="211.0" width="31.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="651.2" y="222.0">sc..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (6 samples, 0.60%)</title><rect x="679.9" y="371.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.9" y="382.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (4 samples, 0.40%)</title><rect x="679.9" y="355.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.9" y="366.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (2 samples, 0.20%)</title><rect x="684.6" y="355.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.6" y="366.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.10%)</title><rect x="685.8" y="339.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="688.8" y="350.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.10%)</title><rect x="685.8" y="323.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.8" y="334.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.run (64 samples, 6.37%)</title><rect x="687.0" y="387.0" width="75.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.0" y="398.0">treadle/..</text>
</g>
<g>
<title>scala/Option.foreach (63 samples, 6.27%)</title><rect x="687.0" y="371.0" width="74.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.0" y="382.0">scala/Op..</text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$12199/2005061618.apply (63 samples, 6.27%)</title><rect x="687.0" y="355.0" width="74.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.0" y="366.0">treadle/..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5$adapted (63 samples, 6.27%)</title><rect x="687.0" y="339.0" width="74.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.0" y="350.0">treadle/..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5 (63 samples, 6.27%)</title><rect x="687.0" y="323.0" width="74.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.0" y="334.0">treadle/..</text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (63 samples, 6.27%)</title><rect x="687.0" y="307.0" width="74.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.0" y="318.0">treadle/..</text>
</g>
<g>
<title>logger/Logger.info (5 samples, 0.50%)</title><rect x="687.0" y="291.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.0" y="302.0"></text>
</g>
<g>
<title>logger/Logger$.logger$Logger$$showMessage (5 samples, 0.50%)</title><rect x="687.0" y="275.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.0" y="286.0"></text>
</g>
<g>
<title>logger/Logger$.state (1 samples, 0.10%)</title><rect x="687.0" y="259.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.0" y="270.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (1 samples, 0.10%)</title><rect x="687.0" y="243.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.0" y="254.0"></text>
</g>
<g>
<title>logger/Logger$.testPackageNameMatch (2 samples, 0.20%)</title><rect x="688.1" y="259.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.1" y="270.0"></text>
</g>
<g>
<title>logger/Logger$.state (2 samples, 0.20%)</title><rect x="688.1" y="243.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="691.1" y="254.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (2 samples, 0.20%)</title><rect x="688.1" y="227.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="691.1" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.20%)</title><rect x="688.1" y="211.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.1" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (2 samples, 0.20%)</title><rect x="688.1" y="195.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.1" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.20%)</title><rect x="688.1" y="179.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.1" y="190.0"></text>
</g>
<g>
<title>scala/Enumeration$Value.$greater$eq (1 samples, 0.10%)</title><rect x="690.5" y="259.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.5" y="270.0"></text>
</g>
<g>
<title>scala/math/Ordered.$greater$eq$ (1 samples, 0.10%)</title><rect x="690.5" y="243.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.5" y="254.0"></text>
</g>
<g>
<title>scala/math/Ordered.$greater$eq (1 samples, 0.10%)</title><rect x="690.5" y="227.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.5" y="238.0"></text>
</g>
<g>
<title>scala/Enumeration$Value.compare (1 samples, 0.10%)</title><rect x="690.5" y="211.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.5" y="222.0"></text>
</g>
<g>
<title>scala/Enumeration$Value.compare (1 samples, 0.10%)</title><rect x="690.5" y="195.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.5" y="206.0"></text>
</g>
<g>
<title>scala/Enumeration$Value.equals (1 samples, 0.10%)</title><rect x="691.7" y="259.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.7" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (5 samples, 0.50%)</title><rect x="692.8" y="291.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.8" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (5 samples, 0.50%)</title><rect x="692.8" y="275.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.8" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (5 samples, 0.50%)</title><rect x="692.8" y="259.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.8" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (5 samples, 0.50%)</title><rect x="692.8" y="243.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.8" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (5 samples, 0.50%)</title><rect x="692.8" y="227.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.8" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (5 samples, 0.50%)</title><rect x="692.8" y="211.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.8" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (5 samples, 0.50%)</title><rect x="692.8" y="195.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.8" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (5 samples, 0.50%)</title><rect x="692.8" y="179.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.8" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (5 samples, 0.50%)</title><rect x="692.8" y="163.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.8" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (5 samples, 0.50%)</title><rect x="692.8" y="147.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.8" y="158.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsCharObject (1 samples, 0.10%)</title><rect x="694.0" y="131.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="697.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.10%)</title><rect x="694.0" y="115.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.0" y="126.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (3 samples, 0.30%)</title><rect x="695.2" y="131.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.2" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$plus$eq (3 samples, 0.30%)</title><rect x="698.7" y="291.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.7" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (3 samples, 0.30%)</title><rect x="698.7" y="275.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="701.7" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (19 samples, 1.89%)</title><rect x="702.3" y="291.0" width="22.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="705.3" y="302.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (19 samples, 1.89%)</title><rect x="702.3" y="275.0" width="22.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.3" y="286.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (19 samples, 1.89%)</title><rect x="702.3" y="259.0" width="22.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.3" y="270.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (18 samples, 1.79%)</title><rect x="703.4" y="243.0" width="21.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.4" y="254.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (18 samples, 1.79%)</title><rect x="703.4" y="227.0" width="21.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="706.4" y="238.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashSet.index (1 samples, 0.10%)</title><rect x="703.4" y="211.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="706.4" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index$ (1 samples, 0.10%)</title><rect x="703.4" y="195.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.4" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index (1 samples, 0.10%)</title><rect x="703.4" y="179.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.4" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.improve (1 samples, 0.10%)</title><rect x="703.4" y="163.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="706.4" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve$ (1 samples, 0.10%)</title><rect x="703.4" y="147.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="706.4" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve (1 samples, 0.10%)</title><rect x="703.4" y="131.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.10%)</title><rect x="703.4" y="115.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="706.4" y="126.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (17 samples, 1.69%)</title><rect x="704.6" y="211.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.6" y="222.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (17 samples, 1.69%)</title><rect x="704.6" y="195.0" width="20.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.20%)</title><rect x="704.6" y="179.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="707.6" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (15 samples, 1.49%)</title><rect x="707.0" y="179.0" width="17.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.0" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (15 samples, 1.49%)</title><rect x="707.0" y="163.0" width="17.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.0" y="174.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.addWire (2 samples, 0.20%)</title><rect x="724.6" y="291.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="727.6" y="302.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isNewValue (1 samples, 0.10%)</title><rect x="726.9" y="291.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="729.9" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.10%)</title><rect x="726.9" y="275.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="729.9" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.10%)</title><rect x="726.9" y="259.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.9" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.10%)</title><rect x="726.9" y="243.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.9" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.10%)</title><rect x="726.9" y="227.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.9" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.10%)</title><rect x="726.9" y="211.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.9" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.10%)</title><rect x="726.9" y="195.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="729.9" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.10%)</title><rect x="726.9" y="179.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="729.9" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.10%)</title><rect x="726.9" y="163.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="729.9" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.10%)</title><rect x="726.9" y="147.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="729.9" y="158.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.10%)</title><rect x="726.9" y="131.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="729.9" y="142.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.10%)</title><rect x="726.9" y="115.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="729.9" y="126.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isTempWire (28 samples, 2.79%)</title><rect x="728.1" y="291.0" width="32.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="731.1" y="302.0">tr..</text>
</g>
<g>
<title>java/lang/String.contains (1 samples, 0.10%)</title><rect x="728.1" y="275.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String.split (13 samples, 1.29%)</title><rect x="729.3" y="275.0" width="15.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="732.3" y="286.0"></text>
</g>
<g>
<title>java/lang/String.split (13 samples, 1.29%)</title><rect x="729.3" y="259.0" width="15.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.3" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (6 samples, 0.60%)</title><rect x="736.3" y="243.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.3" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList$1.hasNext (1 samples, 0.10%)</title><rect x="741.0" y="227.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.0" y="238.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.10%)</title><rect x="742.2" y="227.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="745.2" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.10%)</title><rect x="743.4" y="243.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.4" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (1 samples, 0.10%)</title><rect x="743.4" y="227.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.4" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (1 samples, 0.10%)</title><rect x="743.4" y="211.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.4" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.10%)</title><rect x="743.4" y="195.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="746.4" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.10%)</title><rect x="743.4" y="179.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.4" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.&lt;init&gt; (11 samples, 1.10%)</title><rect x="744.6" y="275.0" width="12.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.6" y="286.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.10%)</title><rect x="748.1" y="259.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.1" y="270.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.10%)</title><rect x="748.1" y="243.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="751.1" y="254.0"></text>
</g>
<g>
<title>scala/collection/CustomParallelizable.$init$ (1 samples, 0.10%)</title><rect x="749.3" y="259.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.3" y="270.0"></text>
</g>
<g>
<title>scala/collection/Parallelizable.$init$ (2 samples, 0.20%)</title><rect x="750.4" y="259.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.4" y="270.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.$init$ (1 samples, 0.10%)</title><rect x="752.8" y="259.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="755.8" y="270.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$init$ (1 samples, 0.10%)</title><rect x="754.0" y="259.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="757.0" y="270.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.$init$ (1 samples, 0.10%)</title><rect x="755.1" y="259.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="758.1" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayLike.$init$ (1 samples, 0.10%)</title><rect x="756.3" y="259.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.3" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.last (3 samples, 0.30%)</title><rect x="757.5" y="275.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="760.5" y="286.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.last$ (3 samples, 0.30%)</title><rect x="757.5" y="259.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.5" y="270.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.last (3 samples, 0.30%)</title><rect x="757.5" y="243.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.5" y="254.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.20%)</title><rect x="757.5" y="227.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="760.5" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.apply (1 samples, 0.10%)</title><rect x="759.8" y="227.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="762.8" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply$ (1 samples, 0.10%)</title><rect x="759.8" y="211.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="762.8" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply (1 samples, 0.10%)</title><rect x="759.8" y="195.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="762.8" y="206.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="759.8" y="179.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="762.8" y="190.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.10%)</title><rect x="761.0" y="371.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="764.0" y="382.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.dataSize (1 samples, 0.10%)</title><rect x="761.0" y="355.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.0" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12017/1651252691.apply$mcI$sp (2 samples, 0.20%)</title><rect x="762.2" y="499.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="765.2" y="510.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$3 (2 samples, 0.20%)</title><rect x="762.2" y="483.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="765.2" y="494.0"></text>
</g>
<g>
<title>treadle/executable/ToInt.apply (2 samples, 0.20%)</title><rect x="762.2" y="467.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.2" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12036/2055006871.apply$mcI$sp (4 samples, 0.40%)</title><rect x="764.5" y="499.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="767.5" y="510.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$1 (4 samples, 0.40%)</title><rect x="764.5" y="483.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="767.5" y="494.0"></text>
</g>
<g>
<title>treadle/executable/CatInts.apply (1 samples, 0.10%)</title><rect x="764.5" y="467.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="767.5" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12038/1978214869.apply$mcI$sp (1 samples, 0.10%)</title><rect x="764.5" y="451.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="767.5" y="462.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$36 (1 samples, 0.10%)</title><rect x="764.5" y="435.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="767.5" y="446.0"></text>
</g>
<g>
<title>treadle/executable/GetIntConstant.apply (1 samples, 0.10%)</title><rect x="764.5" y="419.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="767.5" y="430.0"></text>
</g>
<g>
<title>treadle/executable/GetIntConstant.n (1 samples, 0.10%)</title><rect x="764.5" y="403.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="767.5" y="414.0"></text>
</g>
<g>
<title>treadle/executable/LeqInts.apply (1 samples, 0.10%)</title><rect x="765.7" y="467.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="768.7" y="478.0"></text>
</g>
<g>
<title>treadle/executable/LeqInts.f2 (1 samples, 0.10%)</title><rect x="765.7" y="451.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="768.7" y="462.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.10%)</title><rect x="765.7" y="435.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="768.7" y="446.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.10%)</title><rect x="765.7" y="419.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="768.7" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.10%)</title><rect x="765.7" y="403.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="768.7" y="414.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.10%)</title><rect x="765.7" y="387.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="768.7" y="398.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.10%)</title><rect x="765.7" y="371.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="768.7" y="382.0"></text>
</g>
<g>
<title>treadle/executable/MuxInts.apply (1 samples, 0.10%)</title><rect x="766.9" y="467.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.9" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12035/2056505359.apply$mcI$sp (1 samples, 0.10%)</title><rect x="766.9" y="451.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="769.9" y="462.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$190 (1 samples, 0.10%)</title><rect x="766.9" y="435.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.9" y="446.0"></text>
</g>
<g>
<title>treadle/executable/OrInts.apply (1 samples, 0.10%)</title><rect x="768.1" y="467.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.1" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12058/1333620785.apply$mcI$sp (1 samples, 0.10%)</title><rect x="768.1" y="451.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="771.1" y="462.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$32 (1 samples, 0.10%)</title><rect x="768.1" y="435.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.1" y="446.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.run (4 samples, 0.40%)</title><rect x="769.2" y="547.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="772.2" y="558.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$12192/1485446643.apply$mcV$sp (194 samples, 19.32%)</title><rect x="773.9" y="547.0" width="228.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.9" y="558.0">treadle/executable/DataStore$A..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (194 samples, 19.32%)</title><rect x="773.9" y="531.0" width="228.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="776.9" y="542.0">treadle/executable/DataStore$A..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (194 samples, 19.32%)</title><rect x="773.9" y="515.0" width="228.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.9" y="526.0">treadle/executable/DataStore$A..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.expression (1 samples, 0.10%)</title><rect x="773.9" y="499.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.9" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (12 samples, 1.20%)</title><rect x="775.1" y="499.0" width="14.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.1" y="510.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (5 samples, 0.50%)</title><rect x="782.2" y="483.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="785.2" y="494.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (5 samples, 0.50%)</title><rect x="782.2" y="467.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="785.2" y="478.0"></text>
</g>
<g>
<title>java/math/BigInteger.valueOf (2 samples, 0.20%)</title><rect x="782.2" y="451.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.2" y="462.0"></text>
</g>
<g>
<title>java/math/BigInteger.&lt;init&gt; (1 samples, 0.10%)</title><rect x="783.3" y="435.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.3" y="446.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.10%)</title><rect x="784.5" y="451.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="787.5" y="462.0"></text>
</g>
<g>
<title>scala/math/BigInt$.minCached (2 samples, 0.20%)</title><rect x="785.7" y="451.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="788.7" y="462.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.index (1 samples, 0.10%)</title><rect x="788.0" y="483.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="791.0" y="494.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (176 samples, 17.53%)</title><rect x="789.2" y="499.0" width="206.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.2" y="510.0">treadle/executable/DataStor..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/949673757.linkToTargetMethod (1 samples, 0.10%)</title><rect x="789.2" y="483.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="792.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/947305004.invokeStatic_LIL_L (1 samples, 0.10%)</title><rect x="789.2" y="467.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="792.2" y="478.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$12198/237361739.get$Lambda (1 samples, 0.10%)</title><rect x="789.2" y="451.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="792.2" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (175 samples, 17.43%)</title><rect x="790.4" y="483.0" width="205.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.4" y="494.0">scala/collection/mutable/Ar..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (175 samples, 17.43%)</title><rect x="790.4" y="467.0" width="205.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="793.4" y="478.0">scala/collection/mutable/Re..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (175 samples, 17.43%)</title><rect x="790.4" y="451.0" width="205.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="793.4" y="462.0">scala/collection/mutable/Re..</text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$12198/237361739.apply (173 samples, 17.23%)</title><rect x="792.7" y="435.0" width="203.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.7" y="446.0">treadle/executable/DataStor..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (173 samples, 17.23%)</title><rect x="792.7" y="419.0" width="203.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="795.7" y="430.0">treadle/executable/DataStor..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (173 samples, 17.23%)</title><rect x="792.7" y="403.0" width="203.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.7" y="414.0">treadle/executable/DataStor..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (67 samples, 6.67%)</title><rect x="792.7" y="387.0" width="78.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.7" y="398.0">treadle/e..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/956291447.linkToTargetMethod (4 samples, 0.40%)</title><rect x="793.9" y="371.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="796.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1370693940.invokeStatic_LLIL_L (3 samples, 0.30%)</title><rect x="795.1" y="355.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.1" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$12200/6352317.get$Lambda (3 samples, 0.30%)</title><rect x="795.1" y="339.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.1" y="350.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$12200/6352317.&lt;init&gt; (3 samples, 0.30%)</title><rect x="795.1" y="323.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.1" y="334.0"></text>
</g>
<g>
<title>scala/Option.foreach (27 samples, 2.69%)</title><rect x="798.6" y="371.0" width="31.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="801.6" y="382.0">sc..</text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$12200/6352317.apply (27 samples, 2.69%)</title><rect x="798.6" y="355.0" width="31.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="801.6" y="366.0">tr..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (27 samples, 2.69%)</title><rect x="798.6" y="339.0" width="31.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="801.6" y="350.0">tr..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (27 samples, 2.69%)</title><rect x="798.6" y="323.0" width="31.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="801.6" y="334.0">tr..</text>
</g>
<g>
<title>scala/collection/immutable/List.apply (4 samples, 0.40%)</title><rect x="802.2" y="307.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.2" y="318.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.apply$ (4 samples, 0.40%)</title><rect x="802.2" y="291.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="805.2" y="302.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.apply (4 samples, 0.40%)</title><rect x="802.2" y="275.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="805.2" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.head (1 samples, 0.10%)</title><rect x="804.5" y="259.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.5" y="270.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (1 samples, 0.10%)</title><rect x="805.7" y="259.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.7" y="270.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (1 samples, 0.10%)</title><rect x="805.7" y="243.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="808.7" y="254.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.addAntiDependency (17 samples, 1.69%)</title><rect x="806.9" y="307.0" width="19.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.9" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.add (3 samples, 0.30%)</title><rect x="808.0" y="291.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="811.0" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.contains (2 samples, 0.20%)</title><rect x="808.0" y="275.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="811.0" y="286.0"></text>
</g>
<g>
<title>scala/collection/BitSetLike.contains$ (2 samples, 0.20%)</title><rect x="808.0" y="259.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.0" y="270.0"></text>
</g>
<g>
<title>scala/collection/BitSetLike.contains (2 samples, 0.20%)</title><rect x="808.0" y="243.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="811.0" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.updateWord (1 samples, 0.10%)</title><rect x="810.4" y="275.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.4" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.ensureCapacity (1 samples, 0.10%)</title><rect x="810.4" y="259.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="813.4" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.nwords (1 samples, 0.10%)</title><rect x="810.4" y="243.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.4" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.getOrElseUpdate (13 samples, 1.29%)</title><rect x="811.6" y="291.0" width="15.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="814.6" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (13 samples, 1.29%)</title><rect x="811.6" y="275.0" width="15.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="814.6" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.notFound (13 samples, 1.29%)</title><rect x="811.6" y="259.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="814.6" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (13 samples, 1.29%)</title><rect x="811.6" y="243.0" width="15.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="814.6" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (13 samples, 1.29%)</title><rect x="811.6" y="227.0" width="15.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="814.6" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (13 samples, 1.29%)</title><rect x="811.6" y="211.0" width="15.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.6" y="222.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (13 samples, 1.29%)</title><rect x="811.6" y="195.0" width="15.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.6" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (13 samples, 1.29%)</title><rect x="811.6" y="179.0" width="15.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="814.6" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (13 samples, 1.29%)</title><rect x="811.6" y="163.0" width="15.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.6" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.10%)</title><rect x="825.7" y="147.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.7" y="158.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (3 samples, 0.30%)</title><rect x="826.8" y="307.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="829.8" y="318.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (3 samples, 0.30%)</title><rect x="826.8" y="291.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.8" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (26 samples, 2.59%)</title><rect x="830.4" y="371.0" width="30.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="833.4" y="382.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (25 samples, 2.49%)</title><rect x="831.5" y="355.0" width="29.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="834.5" y="366.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (25 samples, 2.49%)</title><rect x="831.5" y="339.0" width="29.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.5" y="350.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (25 samples, 2.49%)</title><rect x="831.5" y="323.0" width="29.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="834.5" y="334.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.10%)</title><rect x="831.5" y="307.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="834.5" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.10%)</title><rect x="831.5" y="291.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="834.5" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.10%)</title><rect x="831.5" y="275.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.5" y="286.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.10%)</title><rect x="831.5" y="259.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.5" y="270.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.10%)</title><rect x="831.5" y="243.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.5" y="254.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.10%)</title><rect x="831.5" y="227.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.5" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (24 samples, 2.39%)</title><rect x="832.7" y="307.0" width="28.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.7" y="318.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (23 samples, 2.29%)</title><rect x="833.9" y="291.0" width="27.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="836.9" y="302.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (23 samples, 2.29%)</title><rect x="833.9" y="275.0" width="27.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.9" y="286.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (23 samples, 2.29%)</title><rect x="833.9" y="259.0" width="27.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="836.9" y="270.0">s..</text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (23 samples, 2.29%)</title><rect x="833.9" y="243.0" width="27.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="836.9" y="254.0">s..</text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (23 samples, 2.29%)</title><rect x="833.9" y="227.0" width="27.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="836.9" y="238.0">s..</text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (23 samples, 2.29%)</title><rect x="833.9" y="211.0" width="27.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.9" y="222.0">s..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (9 samples, 0.90%)</title><rect x="860.9" y="371.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="863.9" y="382.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (7 samples, 0.70%)</title><rect x="860.9" y="355.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="863.9" y="366.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (6 samples, 0.60%)</title><rect x="862.1" y="339.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="865.1" y="350.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (6 samples, 0.60%)</title><rect x="862.1" y="323.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="865.1" y="334.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (2 samples, 0.20%)</title><rect x="865.6" y="307.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="868.6" y="318.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.10%)</title><rect x="865.6" y="291.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="868.6" y="302.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.10%)</title><rect x="865.6" y="275.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="868.6" y="286.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C_helper(JavaThread*, nmethod*&amp;) (1 samples, 0.10%)</title><rect x="866.8" y="291.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="869.8" y="302.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.10%)</title><rect x="866.8" y="275.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="869.8" y="286.0"></text>
</g>
<g>
<title>SharedRuntime::raw_exception_handler_for_return_address(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="868.0" y="307.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="871.0" y="318.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.10%)</title><rect x="868.0" y="291.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="871.0" y="302.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (2 samples, 0.20%)</title><rect x="869.1" y="355.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="872.1" y="366.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (2 samples, 0.20%)</title><rect x="869.1" y="339.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="872.1" y="350.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (2 samples, 0.20%)</title><rect x="869.1" y="323.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="872.1" y="334.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.10%)</title><rect x="869.1" y="307.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="872.1" y="318.0"></text>
</g>
<g>
<title>scala/math/BigInt$.minCached (1 samples, 0.10%)</title><rect x="870.3" y="307.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="873.3" y="318.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.run (106 samples, 10.56%)</title><rect x="871.5" y="387.0" width="124.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="874.5" y="398.0">treadle/executa..</text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.10%)</title><rect x="872.7" y="371.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="875.7" y="382.0"></text>
</g>
<g>
<title>scala/Option.foreach (100 samples, 9.96%)</title><rect x="873.8" y="371.0" width="117.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="876.8" y="382.0">scala/Option.f..</text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$12199/2005061618.apply (100 samples, 9.96%)</title><rect x="873.8" y="355.0" width="117.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.8" y="366.0">treadle/execut..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5$adapted (100 samples, 9.96%)</title><rect x="873.8" y="339.0" width="117.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="876.8" y="350.0">treadle/execut..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5 (100 samples, 9.96%)</title><rect x="873.8" y="323.0" width="117.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="876.8" y="334.0">treadle/execut..</text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (97 samples, 9.66%)</title><rect x="877.4" y="307.0" width="114.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="880.4" y="318.0">treadle/vcd/VC..</text>
</g>
<g>
<title>logger/Logger.info (7 samples, 0.70%)</title><rect x="878.5" y="291.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="881.5" y="302.0"></text>
</g>
<g>
<title>logger/Logger$.logger$Logger$$showMessage (7 samples, 0.70%)</title><rect x="878.5" y="275.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="881.5" y="286.0"></text>
</g>
<g>
<title>logger/Logger$.state (1 samples, 0.10%)</title><rect x="880.9" y="259.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="883.9" y="270.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (1 samples, 0.10%)</title><rect x="880.9" y="243.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="883.9" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.10%)</title><rect x="880.9" y="227.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="883.9" y="238.0"></text>
</g>
<g>
<title>logger/Logger$.testPackageNameMatch (2 samples, 0.20%)</title><rect x="882.1" y="259.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="885.1" y="270.0"></text>
</g>
<g>
<title>logger/Logger$.state (1 samples, 0.10%)</title><rect x="883.2" y="243.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="886.2" y="254.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (1 samples, 0.10%)</title><rect x="883.2" y="227.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="886.2" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.10%)</title><rect x="883.2" y="211.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="886.2" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.10%)</title><rect x="883.2" y="195.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="886.2" y="206.0"></text>
</g>
<g>
<title>scala/Enumeration$Value.equals (2 samples, 0.20%)</title><rect x="884.4" y="259.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.4" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (8 samples, 0.80%)</title><rect x="886.8" y="291.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="889.8" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (8 samples, 0.80%)</title><rect x="886.8" y="275.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.8" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (8 samples, 0.80%)</title><rect x="886.8" y="259.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.8" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (8 samples, 0.80%)</title><rect x="886.8" y="243.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="889.8" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.10%)</title><rect x="886.8" y="227.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.8" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.10%)</title><rect x="886.8" y="211.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="889.8" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.10%)</title><rect x="886.8" y="195.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="889.8" y="206.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.10%)</title><rect x="886.8" y="179.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.8" y="190.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.10%)</title><rect x="886.8" y="163.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="889.8" y="174.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="886.8" y="147.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="889.8" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (7 samples, 0.70%)</title><rect x="887.9" y="227.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.9" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (5 samples, 0.50%)</title><rect x="890.3" y="211.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="893.3" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (5 samples, 0.50%)</title><rect x="890.3" y="195.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="893.3" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (5 samples, 0.50%)</title><rect x="890.3" y="179.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="893.3" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (5 samples, 0.50%)</title><rect x="890.3" y="163.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="893.3" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (5 samples, 0.50%)</title><rect x="890.3" y="147.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="893.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.10%)</title><rect x="890.3" y="131.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="893.3" y="142.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (4 samples, 0.40%)</title><rect x="891.5" y="131.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="894.5" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (25 samples, 2.49%)</title><rect x="896.2" y="291.0" width="29.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="899.2" y="302.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (25 samples, 2.49%)</title><rect x="896.2" y="275.0" width="29.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="899.2" y="286.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (25 samples, 2.49%)</title><rect x="896.2" y="259.0" width="29.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.2" y="270.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (23 samples, 2.29%)</title><rect x="898.5" y="243.0" width="27.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.5" y="254.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (23 samples, 2.29%)</title><rect x="898.5" y="227.0" width="27.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.5" y="238.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashSet.index (4 samples, 0.40%)</title><rect x="899.7" y="211.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="902.7" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index$ (4 samples, 0.40%)</title><rect x="899.7" y="195.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.7" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index (4 samples, 0.40%)</title><rect x="899.7" y="179.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.7" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.improve (4 samples, 0.40%)</title><rect x="899.7" y="163.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.7" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve$ (4 samples, 0.40%)</title><rect x="899.7" y="147.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.7" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve (4 samples, 0.40%)</title><rect x="899.7" y="131.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="902.7" y="142.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.20%)</title><rect x="902.1" y="115.0" width="2.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="905.1" y="126.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (18 samples, 1.79%)</title><rect x="904.4" y="211.0" width="21.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="907.4" y="222.0">s..</text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (18 samples, 1.79%)</title><rect x="904.4" y="195.0" width="21.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="907.4" y="206.0">s..</text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsCharObject (3 samples, 0.30%)</title><rect x="904.4" y="179.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="907.4" y="190.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.30%)</title><rect x="904.4" y="163.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.4" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (15 samples, 1.49%)</title><rect x="907.9" y="179.0" width="17.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="910.9" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (15 samples, 1.49%)</title><rect x="907.9" y="163.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="910.9" y="174.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.addWire (1 samples, 0.10%)</title><rect x="925.6" y="291.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="928.6" y="302.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isNewValue (14 samples, 1.39%)</title><rect x="926.7" y="291.0" width="16.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="929.7" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (11 samples, 1.10%)</title><rect x="926.7" y="275.0" width="13.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="929.7" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (11 samples, 1.10%)</title><rect x="926.7" y="259.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="929.7" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (11 samples, 1.10%)</title><rect x="926.7" y="243.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="929.7" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (11 samples, 1.10%)</title><rect x="926.7" y="227.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="929.7" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (11 samples, 1.10%)</title><rect x="926.7" y="211.0" width="13.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="929.7" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (10 samples, 1.00%)</title><rect x="927.9" y="195.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="930.9" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (10 samples, 1.00%)</title><rect x="927.9" y="179.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="930.9" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (10 samples, 1.00%)</title><rect x="927.9" y="163.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="930.9" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (10 samples, 1.00%)</title><rect x="927.9" y="147.0" width="11.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="930.9" y="158.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (10 samples, 1.00%)</title><rect x="927.9" y="131.0" width="11.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="930.9" y="142.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsCharObject (1 samples, 0.10%)</title><rect x="927.9" y="115.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="930.9" y="126.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.10%)</title><rect x="927.9" y="99.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.9" y="110.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (9 samples, 0.90%)</title><rect x="929.1" y="115.0" width="10.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="932.1" y="126.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (3 samples, 0.30%)</title><rect x="939.7" y="275.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="942.7" y="286.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (3 samples, 0.30%)</title><rect x="939.7" y="259.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="942.7" y="270.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (3 samples, 0.30%)</title><rect x="939.7" y="243.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="942.7" y="254.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (3 samples, 0.30%)</title><rect x="939.7" y="227.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="942.7" y="238.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isTempWire (36 samples, 3.59%)</title><rect x="943.2" y="291.0" width="42.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="946.2" y="302.0">trea..</text>
</g>
<g>
<title>java/lang/String.split (21 samples, 2.09%)</title><rect x="944.4" y="275.0" width="24.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="947.4" y="286.0">j..</text>
</g>
<g>
<title>java/lang/String.split (21 samples, 2.09%)</title><rect x="944.4" y="259.0" width="24.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="947.4" y="270.0">j..</text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (7 samples, 0.70%)</title><rect x="957.3" y="243.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="960.3" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList$1.hasNext (2 samples, 0.20%)</title><rect x="963.2" y="227.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="966.2" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.20%)</title><rect x="965.5" y="243.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="968.5" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (2 samples, 0.20%)</title><rect x="965.5" y="227.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.5" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (2 samples, 0.20%)</title><rect x="965.5" y="211.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.5" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.20%)</title><rect x="965.5" y="195.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="968.5" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.20%)</title><rect x="965.5" y="179.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.5" y="190.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.10%)</title><rect x="967.9" y="243.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="970.9" y="254.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.20%)</title><rect x="969.0" y="275.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.0" y="286.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.20%)</title><rect x="969.0" y="259.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="972.0" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.&lt;init&gt; (6 samples, 0.60%)</title><rect x="971.4" y="275.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.4" y="286.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.$init$ (1 samples, 0.10%)</title><rect x="974.9" y="259.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="977.9" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.update (1 samples, 0.10%)</title><rect x="976.1" y="259.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="979.1" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/IndexedSeqLike.$init$ (1 samples, 0.10%)</title><rect x="977.3" y="259.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="980.3" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.last (6 samples, 0.60%)</title><rect x="978.4" y="275.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.4" y="286.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.last$ (6 samples, 0.60%)</title><rect x="978.4" y="259.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="981.4" y="270.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.last (6 samples, 0.60%)</title><rect x="978.4" y="243.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.4" y="254.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.20%)</title><rect x="978.4" y="227.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="981.4" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.apply (3 samples, 0.30%)</title><rect x="980.8" y="227.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="983.8" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply$ (3 samples, 0.30%)</title><rect x="980.8" y="211.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="983.8" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply (3 samples, 0.30%)</title><rect x="980.8" y="195.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="983.8" y="206.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.30%)</title><rect x="980.8" y="179.0" width="3.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="983.8" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.length (1 samples, 0.10%)</title><rect x="984.3" y="227.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="987.3" y="238.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.updateInfo$1 (5 samples, 0.50%)</title><rect x="985.5" y="291.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.5" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$minus$eq (4 samples, 0.40%)</title><rect x="985.5" y="275.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="988.5" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.removeElem (4 samples, 0.40%)</title><rect x="985.5" y="259.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="988.5" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.removeElem$ (4 samples, 0.40%)</title><rect x="985.5" y="243.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="988.5" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.removeElem (4 samples, 0.40%)</title><rect x="985.5" y="227.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="988.5" y="238.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.10%)</title><rect x="986.7" y="211.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="989.7" y="222.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.10%)</title><rect x="986.7" y="195.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="989.7" y="206.0"></text>
</g>
<g>
<title>treadle/vcd/Change.equals (1 samples, 0.10%)</title><rect x="986.7" y="179.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.7" y="190.0"></text>
</g>
<g>
<title>treadle/vcd/Change.hashCode (2 samples, 0.20%)</title><rect x="987.8" y="211.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="990.8" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$plus$eq (1 samples, 0.10%)</title><rect x="990.2" y="275.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="993.2" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (1 samples, 0.10%)</title><rect x="990.2" y="259.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="993.2" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (1 samples, 0.10%)</title><rect x="990.2" y="243.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="993.2" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (1 samples, 0.10%)</title><rect x="990.2" y="227.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="993.2" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (1 samples, 0.10%)</title><rect x="990.2" y="211.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="993.2" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (1 samples, 0.10%)</title><rect x="990.2" y="195.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="993.2" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (1 samples, 0.10%)</title><rect x="990.2" y="179.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="993.2" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.10%)</title><rect x="990.2" y="163.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="993.2" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.10%)</title><rect x="990.2" y="147.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="993.2" y="158.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsCharObject (1 samples, 0.10%)</title><rect x="990.2" y="131.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="993.2" y="142.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="990.2" y="115.0" width="1.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="993.2" y="126.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (1 samples, 0.10%)</title><rect x="991.4" y="371.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="994.4" y="382.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (3 samples, 0.30%)</title><rect x="992.5" y="371.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="995.5" y="382.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (1 samples, 0.10%)</title><rect x="994.9" y="355.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="997.9" y="366.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.10%)</title><rect x="994.9" y="339.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="997.9" y="350.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.10%)</title><rect x="994.9" y="323.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="997.9" y="334.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12030/708899360.apply$mcJ$sp (3 samples, 0.30%)</title><rect x="996.1" y="499.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="999.1" y="510.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$8 (3 samples, 0.30%)</title><rect x="996.1" y="483.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="999.1" y="494.0"></text>
</g>
<g>
<title>treadle/executable/AsSIntLongs.apply (1 samples, 0.10%)</title><rect x="996.1" y="467.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="999.1" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12115/1172010970.apply$mcJ$sp (1 samples, 0.10%)</title><rect x="996.1" y="451.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="999.1" y="462.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$175 (1 samples, 0.10%)</title><rect x="996.1" y="435.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="999.1" y="446.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.10%)</title><rect x="996.1" y="419.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="999.1" y="430.0"></text>
</g>
<g>
<title>treadle/executable/MuxLongs.apply (2 samples, 0.20%)</title><rect x="997.3" y="467.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1000.3" y="478.0"></text>
</g>
<g>
<title>treadle/executable/MuxLongs.condition (1 samples, 0.10%)</title><rect x="998.4" y="451.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1001.4" y="462.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12132/997044916.apply$mcJ$sp (2 samples, 0.20%)</title><rect x="999.6" y="499.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1002.6" y="510.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$10 (2 samples, 0.20%)</title><rect x="999.6" y="483.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1002.6" y="494.0"></text>
</g>
<g>
<title>treadle/executable/BigToLong.apply (2 samples, 0.20%)</title><rect x="999.6" y="467.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1002.6" y="478.0"></text>
</g>
<g>
<title>scala/math/BigInt.toLong (1 samples, 0.10%)</title><rect x="999.6" y="451.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1002.6" y="462.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toLong$ (1 samples, 0.10%)</title><rect x="999.6" y="435.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1002.6" y="446.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toLong (1 samples, 0.10%)</title><rect x="999.6" y="419.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1002.6" y="430.0"></text>
</g>
<g>
<title>scala/math/BigInt.longValue (1 samples, 0.10%)</title><rect x="999.6" y="403.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1002.6" y="414.0"></text>
</g>
<g>
<title>java/math/BigInteger.longValue (1 samples, 0.10%)</title><rect x="999.6" y="387.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1002.6" y="398.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$12131/400059299.apply (1 samples, 0.10%)</title><rect x="1000.8" y="451.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1003.8" y="462.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$9 (1 samples, 0.10%)</title><rect x="1000.8" y="435.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.8" y="446.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setIntValue (2 samples, 0.20%)</title><rect x="1002.0" y="611.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1005.0" y="622.0"></text>
</g>
<g>
<title>scala/Option.foreach (2 samples, 0.20%)</title><rect x="1002.0" y="595.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1005.0" y="606.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$$Lambda$12206/1272097776.apply (2 samples, 0.20%)</title><rect x="1002.0" y="579.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.0" y="590.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.$anonfun$setIntValue$1$adapted (2 samples, 0.20%)</title><rect x="1002.0" y="563.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1005.0" y="574.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.$anonfun$setIntValue$1 (2 samples, 0.20%)</title><rect x="1002.0" y="547.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1005.0" y="558.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (2 samples, 0.20%)</title><rect x="1002.0" y="531.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1005.0" y="542.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.addWire (2 samples, 0.20%)</title><rect x="1002.0" y="515.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1005.0" y="526.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.reverse (2 samples, 0.20%)</title><rect x="1002.0" y="499.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1005.0" y="510.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.reverse$ (2 samples, 0.20%)</title><rect x="1002.0" y="483.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1005.0" y="494.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.reverse (2 samples, 0.20%)</title><rect x="1002.0" y="467.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1005.0" y="478.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.$plus$eq (1 samples, 0.10%)</title><rect x="1003.1" y="451.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1006.1" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.$plus$eq (1 samples, 0.10%)</title><rect x="1003.1" y="435.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1006.1" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.ensureSize (1 samples, 0.10%)</title><rect x="1003.1" y="419.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1006.1" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.ensureSize$ (1 samples, 0.10%)</title><rect x="1003.1" y="403.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1006.1" y="414.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.ensureSize (1 samples, 0.10%)</title><rect x="1003.1" y="387.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1006.1" y="398.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress$ProgressThread.run (22 samples, 2.19%)</title><rect x="1004.3" y="1811.0" width="25.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1007.3" y="1822.0">s..</text>
</g>
<g>
<title>sbt/internal/TaskProgress.sbt$internal$TaskProgress$$report (21 samples, 2.09%)</title><rect x="1005.5" y="1795.0" width="24.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1008.5" y="1806.0">s..</text>
</g>
<g>
<title>sbt/internal/TaskProgress.containsSkipTasks (1 samples, 0.10%)</title><rect x="1005.5" y="1779.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1008.5" y="1790.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (1 samples, 0.10%)</title><rect x="1005.5" y="1763.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1008.5" y="1774.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.exists$ (1 samples, 0.10%)</title><rect x="1005.5" y="1747.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1008.5" y="1758.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.exists (1 samples, 0.10%)</title><rect x="1005.5" y="1731.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1008.5" y="1742.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (1 samples, 0.10%)</title><rect x="1005.5" y="1715.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1008.5" y="1726.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (1 samples, 0.10%)</title><rect x="1005.5" y="1699.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1008.5" y="1710.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.&lt;init&gt; (1 samples, 0.10%)</title><rect x="1005.5" y="1683.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1008.5" y="1694.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.10%)</title><rect x="1005.5" y="1667.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1008.5" y="1678.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress.report0$1 (20 samples, 1.99%)</title><rect x="1006.7" y="1779.0" width="23.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1009.7" y="1790.0">s..</text>
</g>
<g>
<title>sbt/internal/util/ManagedLogger.logEvent (19 samples, 1.89%)</title><rect x="1007.8" y="1763.0" width="22.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.8" y="1774.0">s..</text>
</g>
<g>
<title>org/apache/logging/log4j/spi/AbstractLogger.log (8 samples, 0.80%)</title><rect x="1007.8" y="1747.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1010.8" y="1758.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/spi/AbstractLogger.logIfEnabled (8 samples, 0.80%)</title><rect x="1007.8" y="1731.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1010.8" y="1742.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/spi/AbstractLogger.logMessageSafely (8 samples, 0.80%)</title><rect x="1007.8" y="1715.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1010.8" y="1726.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/spi/AbstractLogger.logMessageTrackRecursion (8 samples, 0.80%)</title><rect x="1007.8" y="1699.0" width="9.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1010.8" y="1710.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/spi/AbstractLogger.tryLogMessage (8 samples, 0.80%)</title><rect x="1007.8" y="1683.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1010.8" y="1694.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/Logger.logMessage (8 samples, 0.80%)</title><rect x="1007.8" y="1667.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.8" y="1678.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/AwaitCompletionReliabilityStrategy.log (8 samples, 0.80%)</title><rect x="1007.8" y="1651.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1010.8" y="1662.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/LoggerConfig.log (8 samples, 0.80%)</title><rect x="1007.8" y="1635.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1010.8" y="1646.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/LoggerConfig.log (4 samples, 0.40%)</title><rect x="1007.8" y="1619.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1010.8" y="1630.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/LoggerConfig.processLogEvent (4 samples, 0.40%)</title><rect x="1007.8" y="1603.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1010.8" y="1614.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/LoggerConfig.callAppenders (4 samples, 0.40%)</title><rect x="1007.8" y="1587.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1010.8" y="1598.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/AppenderControl.callAppender (4 samples, 0.40%)</title><rect x="1007.8" y="1571.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1010.8" y="1582.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/AppenderControl.callAppenderPreventRecursion (4 samples, 0.40%)</title><rect x="1007.8" y="1555.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.8" y="1566.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/AppenderControl.callAppender0 (4 samples, 0.40%)</title><rect x="1007.8" y="1539.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1010.8" y="1550.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/AppenderControl.tryCallAppender (4 samples, 0.40%)</title><rect x="1007.8" y="1523.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1010.8" y="1534.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender.append (4 samples, 0.40%)</title><rect x="1007.8" y="1507.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1010.8" y="1518.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender$.toLevel (1 samples, 0.10%)</title><rect x="1007.8" y="1491.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1010.8" y="1502.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender.appendMessage (3 samples, 0.30%)</title><rect x="1009.0" y="1491.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1012.0" y="1502.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender.appendMessageContent (3 samples, 0.30%)</title><rect x="1009.0" y="1475.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1012.0" y="1486.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender.appendEvent$1 (3 samples, 0.30%)</title><rect x="1009.0" y="1459.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1012.0" y="1470.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender.appendProgressEvent (3 samples, 0.30%)</title><rect x="1009.0" y="1443.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1012.0" y="1454.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender.updateProgressState (3 samples, 0.30%)</title><rect x="1009.0" y="1427.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1012.0" y="1438.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender.deleteConsoleLines (1 samples, 0.10%)</title><rect x="1009.0" y="1411.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1012.0" y="1422.0"></text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach$mVc$sp (1 samples, 0.10%)</title><rect x="1009.0" y="1395.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1012.0" y="1406.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender$$Lambda$2309/1080549042.apply$mcVI$sp (1 samples, 0.10%)</title><rect x="1009.0" y="1379.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1012.0" y="1390.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender.$anonfun$deleteConsoleLines$1 (1 samples, 0.10%)</title><rect x="1009.0" y="1363.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1012.0" y="1374.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleOut$$anon$1.println (1 samples, 0.10%)</title><rect x="1009.0" y="1347.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1012.0" y="1358.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleOut$$anon$1.println (1 samples, 0.10%)</title><rect x="1009.0" y="1331.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1012.0" y="1342.0"></text>
</g>
<g>
<title>java/io/PrintStream.println (1 samples, 0.10%)</title><rect x="1009.0" y="1315.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1012.0" y="1326.0"></text>
</g>
<g>
<title>java/io/PrintStream.newLine (1 samples, 0.10%)</title><rect x="1009.0" y="1299.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1012.0" y="1310.0"></text>
</g>
<g>
<title>java/io/BufferedWriter.newLine (1 samples, 0.10%)</title><rect x="1009.0" y="1283.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1012.0" y="1294.0"></text>
</g>
<g>
<title>java/io/Writer.write (1 samples, 0.10%)</title><rect x="1009.0" y="1267.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1012.0" y="1278.0"></text>
</g>
<g>
<title>java/io/BufferedWriter.write (1 samples, 0.10%)</title><rect x="1009.0" y="1251.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1012.0" y="1262.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.10%)</title><rect x="1009.0" y="1235.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1012.0" y="1246.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (2 samples, 0.20%)</title><rect x="1010.2" y="1411.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1013.2" y="1422.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (2 samples, 0.20%)</title><rect x="1010.2" y="1395.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1013.2" y="1406.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (2 samples, 0.20%)</title><rect x="1010.2" y="1379.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1013.2" y="1390.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.builder$1 (2 samples, 0.20%)</title><rect x="1010.2" y="1363.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1013.2" y="1374.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.20%)</title><rect x="1010.2" y="1347.0" width="2.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1013.2" y="1358.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/impl/ReusableLogEventFactory.createEvent (4 samples, 0.40%)</title><rect x="1012.5" y="1619.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1015.5" y="1630.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.10%)</title><rect x="1012.5" y="1603.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1015.5" y="1614.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/impl/MutableLogEvent.setMessage (3 samples, 0.30%)</title><rect x="1013.7" y="1603.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1016.7" y="1614.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/async/InternalAsyncUtil.makeMessageImmutable (3 samples, 0.30%)</title><rect x="1013.7" y="1587.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1016.7" y="1598.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/message/ObjectMessage.getFormattedMessage (3 samples, 0.30%)</title><rect x="1013.7" y="1571.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1016.7" y="1582.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (3 samples, 0.30%)</title><rect x="1013.7" y="1555.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1016.7" y="1566.0"></text>
</g>
<g>
<title>sbt/internal/util/ObjectEvent.toString (3 samples, 0.30%)</title><rect x="1013.7" y="1539.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1016.7" y="1550.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.30%)</title><rect x="1013.7" y="1523.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1016.7" y="1534.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (3 samples, 0.30%)</title><rect x="1013.7" y="1507.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1016.7" y="1518.0"></text>
</g>
<g>
<title>sbt/internal/util/ProgressEvent.toString (3 samples, 0.30%)</title><rect x="1013.7" y="1491.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1016.7" y="1502.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.30%)</title><rect x="1013.7" y="1475.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1016.7" y="1486.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.10%)</title><rect x="1014.9" y="1459.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1017.9" y="1470.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.toString (1 samples, 0.10%)</title><rect x="1014.9" y="1443.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1017.9" y="1454.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.toString$ (1 samples, 0.10%)</title><rect x="1014.9" y="1427.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1017.9" y="1438.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.toString (1 samples, 0.10%)</title><rect x="1014.9" y="1411.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1017.9" y="1422.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.toString$ (1 samples, 0.10%)</title><rect x="1014.9" y="1395.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1017.9" y="1406.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.toString (1 samples, 0.10%)</title><rect x="1014.9" y="1379.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1017.9" y="1390.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.mkString (1 samples, 0.10%)</title><rect x="1014.9" y="1363.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1017.9" y="1374.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.mkString$ (1 samples, 0.10%)</title><rect x="1014.9" y="1347.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1017.9" y="1358.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.mkString (1 samples, 0.10%)</title><rect x="1014.9" y="1331.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1017.9" y="1342.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.addString (1 samples, 0.10%)</title><rect x="1014.9" y="1315.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1017.9" y="1326.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.addString$ (1 samples, 0.10%)</title><rect x="1014.9" y="1299.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1017.9" y="1310.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.addString (1 samples, 0.10%)</title><rect x="1014.9" y="1283.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1017.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (1 samples, 0.10%)</title><rect x="1014.9" y="1267.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1017.9" y="1278.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (1 samples, 0.10%)</title><rect x="1014.9" y="1251.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1017.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (1 samples, 0.10%)</title><rect x="1014.9" y="1235.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1017.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (1 samples, 0.10%)</title><rect x="1014.9" y="1219.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1017.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (1 samples, 0.10%)</title><rect x="1014.9" y="1203.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1017.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/Iterator.foreach (1 samples, 0.10%)</title><rect x="1014.9" y="1187.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1017.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce$$Lambda$35/977944580.apply (1 samples, 0.10%)</title><rect x="1014.9" y="1171.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1017.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.$anonfun$addString$1 (1 samples, 0.10%)</title><rect x="1014.9" y="1155.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1017.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/StringBuilder.append (1 samples, 0.10%)</title><rect x="1014.9" y="1139.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1017.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.10%)</title><rect x="1014.9" y="1123.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1017.9" y="1134.0"></text>
</g>
<g>
<title>sbt/internal/util/ProgressItem.toString (1 samples, 0.10%)</title><rect x="1014.9" y="1107.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1017.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.10%)</title><rect x="1014.9" y="1091.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1017.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.10%)</title><rect x="1014.9" y="1075.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1017.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.10%)</title><rect x="1014.9" y="1059.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1017.9" y="1070.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.10%)</title><rect x="1014.9" y="1043.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1017.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.10%)</title><rect x="1016.1" y="1459.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1019.1" y="1470.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.10%)</title><rect x="1016.1" y="1443.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1019.1" y="1454.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.10%)</title><rect x="1016.1" y="1427.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1019.1" y="1438.0"></text>
</g>
<g>
<title>sbt/internal/util/ObjectEvent$.apply (4 samples, 0.40%)</title><rect x="1017.2" y="1747.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1020.2" y="1758.0"></text>
</g>
<g>
<title>sjsonnew/support/scalajson/unsafe/Converter$.toJsonUnsafe (4 samples, 0.40%)</title><rect x="1017.2" y="1731.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1020.2" y="1742.0"></text>
</g>
<g>
<title>sjsonnew/SupportConverter.toJsonUnsafe$ (4 samples, 0.40%)</title><rect x="1017.2" y="1715.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1020.2" y="1726.0"></text>
</g>
<g>
<title>sjsonnew/SupportConverter.toJsonUnsafe (4 samples, 0.40%)</title><rect x="1017.2" y="1699.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1020.2" y="1710.0"></text>
</g>
<g>
<title>sbt/internal/util/codec/ProgressEventFormats$$anon$1.write (4 samples, 0.40%)</title><rect x="1017.2" y="1683.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1020.2" y="1694.0"></text>
</g>
<g>
<title>sbt/internal/util/codec/ProgressEventFormats$$anon$1.write (4 samples, 0.40%)</title><rect x="1017.2" y="1667.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1020.2" y="1678.0"></text>
</g>
<g>
<title>sjsonnew/Builder.addField (3 samples, 0.30%)</title><rect x="1017.2" y="1651.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1020.2" y="1662.0"></text>
</g>
<g>
<title>sjsonnew/CollectionFormats$$anon$2.addField (1 samples, 0.10%)</title><rect x="1017.2" y="1635.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1020.2" y="1646.0"></text>
</g>
<g>
<title>sjsonnew/JsonWriter.addField$ (1 samples, 0.10%)</title><rect x="1017.2" y="1619.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1020.2" y="1630.0"></text>
</g>
<g>
<title>sjsonnew/JsonWriter.addField (1 samples, 0.10%)</title><rect x="1017.2" y="1603.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1020.2" y="1614.0"></text>
</g>
<g>
<title>sjsonnew/CollectionFormats$$anon$2.write (1 samples, 0.10%)</title><rect x="1017.2" y="1587.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1020.2" y="1598.0"></text>
</g>
<g>
<title>sjsonnew/CollectionFormats$$anon$2.write (1 samples, 0.10%)</title><rect x="1017.2" y="1571.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1020.2" y="1582.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (1 samples, 0.10%)</title><rect x="1017.2" y="1555.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1020.2" y="1566.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (1 samples, 0.10%)</title><rect x="1017.2" y="1539.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1020.2" y="1550.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (1 samples, 0.10%)</title><rect x="1017.2" y="1523.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1020.2" y="1534.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (1 samples, 0.10%)</title><rect x="1017.2" y="1507.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1020.2" y="1518.0"></text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (1 samples, 0.10%)</title><rect x="1017.2" y="1491.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1020.2" y="1502.0"></text>
</g>
<g>
<title>scala/collection/Iterator.foreach (1 samples, 0.10%)</title><rect x="1017.2" y="1475.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1020.2" y="1486.0"></text>
</g>
<g>
<title>sjsonnew/CollectionFormats$$anon$2$$Lambda$2303/822516696.apply (1 samples, 0.10%)</title><rect x="1017.2" y="1459.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1020.2" y="1470.0"></text>
</g>
<g>
<title>sjsonnew/CollectionFormats$$anon$2.$anonfun$write$2$adapted (1 samples, 0.10%)</title><rect x="1017.2" y="1443.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1020.2" y="1454.0"></text>
</g>
<g>
<title>sjsonnew/CollectionFormats$$anon$2.$anonfun$write$2 (1 samples, 0.10%)</title><rect x="1017.2" y="1427.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1020.2" y="1438.0"></text>
</g>
<g>
<title>sbt/internal/util/codec/ProgressItemFormats$$anon$1.write (1 samples, 0.10%)</title><rect x="1017.2" y="1411.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1020.2" y="1422.0"></text>
</g>
<g>
<title>sbt/internal/util/codec/ProgressItemFormats$$anon$1.write (1 samples, 0.10%)</title><rect x="1017.2" y="1395.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1020.2" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToLong (1 samples, 0.10%)</title><rect x="1017.2" y="1379.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1020.2" y="1390.0"></text>
</g>
<g>
<title>sjsonnew/PrimitiveFormats$StringJsonFormat$.addField (1 samples, 0.10%)</title><rect x="1018.4" y="1635.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1021.4" y="1646.0"></text>
</g>
<g>
<title>sjsonnew/JsonWriter.addField$ (1 samples, 0.10%)</title><rect x="1018.4" y="1619.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1021.4" y="1630.0"></text>
</g>
<g>
<title>sjsonnew/JsonWriter.addField (1 samples, 0.10%)</title><rect x="1018.4" y="1603.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1021.4" y="1614.0"></text>
</g>
<g>
<title>sjsonnew/PrimitiveFormats$StringJsonFormat$.write (1 samples, 0.10%)</title><rect x="1018.4" y="1587.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1021.4" y="1598.0"></text>
</g>
<g>
<title>sjsonnew/PrimitiveFormats$StringJsonFormat$.write (1 samples, 0.10%)</title><rect x="1018.4" y="1571.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1021.4" y="1582.0"></text>
</g>
<g>
<title>sjsonnew/Builder.writeString (1 samples, 0.10%)</title><rect x="1018.4" y="1555.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1021.4" y="1566.0"></text>
</g>
<g>
<title>sjsonnew/support/scalajson/unsafe/Converter$FacadeImpl$.jstring (1 samples, 0.10%)</title><rect x="1018.4" y="1539.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1021.4" y="1550.0"></text>
</g>
<g>
<title>sjsonnew/support/scalajson/unsafe/Converter$FacadeImpl$.jstring (1 samples, 0.10%)</title><rect x="1018.4" y="1523.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1021.4" y="1534.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.10%)</title><rect x="1018.4" y="1507.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1021.4" y="1518.0"></text>
</g>
<g>
<title>sjsonnew/StandardFormats$OptionFormat.addField (1 samples, 0.10%)</title><rect x="1019.6" y="1635.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1022.6" y="1646.0"></text>
</g>
<g>
<title>sjsonnew/StandardFormats$OptionFormat.addField (1 samples, 0.10%)</title><rect x="1019.6" y="1619.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1022.6" y="1630.0"></text>
</g>
<g>
<title>sjsonnew/StandardFormats$OptionFormat.write (1 samples, 0.10%)</title><rect x="1019.6" y="1603.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1022.6" y="1614.0"></text>
</g>
<g>
<title>sjsonnew/StandardFormats$OptionFormat.elemFormat (1 samples, 0.10%)</title><rect x="1019.6" y="1587.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1022.6" y="1598.0"></text>
</g>
<g>
<title>sjsonnew/Builder.beginObject (1 samples, 0.10%)</title><rect x="1020.8" y="1651.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1023.8" y="1662.0"></text>
</g>
<g>
<title>sjsonnew/support/scalajson/unsafe/Converter$FacadeImpl$.objectContext (1 samples, 0.10%)</title><rect x="1020.8" y="1635.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1023.8" y="1646.0"></text>
</g>
<g>
<title>sjsonnew/support/scalajson/unsafe/Converter$FacadeImpl$$anon$3.&lt;init&gt; (1 samples, 0.10%)</title><rect x="1020.8" y="1619.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1023.8" y="1630.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.10%)</title><rect x="1020.8" y="1603.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1023.8" y="1614.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method(JavaThread*) (1 samples, 0.10%)</title><rect x="1020.8" y="1587.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1023.8" y="1598.0"></text>
</g>
<g>
<title>SharedRuntime::reresolve_call_site(JavaThread*, Thread*) (1 samples, 0.10%)</title><rect x="1020.8" y="1571.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1023.8" y="1582.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_method(JavaThread*, Thread*) (1 samples, 0.10%)</title><rect x="1020.8" y="1555.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1023.8" y="1566.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.10%)</title><rect x="1020.8" y="1539.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1023.8" y="1550.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.apply (7 samples, 0.70%)</title><rect x="1021.9" y="1747.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1024.9" y="1758.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.retry$1 (7 samples, 0.70%)</title><rect x="1021.9" y="1731.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1024.9" y="1742.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.doApply$1 (7 samples, 0.70%)</title><rect x="1021.9" y="1715.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1024.9" y="1726.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.typeToString (7 samples, 0.70%)</title><rect x="1021.9" y="1699.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1024.9" y="1710.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$Type.toString (7 samples, 0.70%)</title><rect x="1021.9" y="1683.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1024.9" y="1694.0"></text>
</g>
<g>
<title>scala/reflect/internal/SymbolTable.typeToString (7 samples, 0.70%)</title><rect x="1021.9" y="1667.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1024.9" y="1678.0"></text>
</g>
<g>
<title>scala/reflect/internal/tpe/TypeToStrings.typeToString$ (7 samples, 0.70%)</title><rect x="1021.9" y="1651.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1024.9" y="1662.0"></text>
</g>
<g>
<title>scala/reflect/internal/tpe/TypeToStrings.typeToString (7 samples, 0.70%)</title><rect x="1021.9" y="1635.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1024.9" y="1646.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$TypeRef.safeToString (7 samples, 0.70%)</title><rect x="1021.9" y="1619.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1024.9" y="1630.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$TypeRef.preString (6 samples, 0.60%)</title><rect x="1021.9" y="1603.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1024.9" y="1614.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$ThisType.prefixString (4 samples, 0.40%)</title><rect x="1021.9" y="1587.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1024.9" y="1598.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.fullNameString (2 samples, 0.20%)</title><rect x="1021.9" y="1571.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1024.9" y="1582.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.recur$1 (2 samples, 0.20%)</title><rect x="1021.9" y="1555.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1024.9" y="1566.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.recur$1 (2 samples, 0.20%)</title><rect x="1021.9" y="1539.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1024.9" y="1550.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.recur$1 (2 samples, 0.20%)</title><rect x="1021.9" y="1523.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1024.9" y="1534.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.nameString (2 samples, 0.20%)</title><rect x="1021.9" y="1507.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1024.9" y="1518.0"></text>
</g>
<g>
<title>scala/reflect/internal/Names$Name.decode (1 samples, 0.10%)</title><rect x="1021.9" y="1491.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1024.9" y="1502.0"></text>
</g>
<g>
<title>scala/reflect/internal/Names$NameOps.dropLocal (1 samples, 0.10%)</title><rect x="1023.1" y="1491.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1026.1" y="1502.0"></text>
</g>
<g>
<title>scala/reflect/internal/Names$TypeName.toTermName (1 samples, 0.10%)</title><rect x="1023.1" y="1475.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1026.1" y="1486.0"></text>
</g>
<g>
<title>scala/reflect/internal/Names$TypeName.body$3 (1 samples, 0.10%)</title><rect x="1023.1" y="1459.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1026.1" y="1470.0"></text>
</g>
<g>
<title>scala/reflect/internal/SymbolTable.scala$reflect$internal$Names$$termHashtable (1 samples, 0.10%)</title><rect x="1023.1" y="1443.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1026.1" y="1454.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.isOmittablePrefix (2 samples, 0.20%)</title><rect x="1024.3" y="1571.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1027.3" y="1582.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.isEmptyPrefix (2 samples, 0.20%)</title><rect x="1024.3" y="1555.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1027.3" y="1566.0"></text>
</g>
<g>
<title>scala/reflect/internal/StdNames$TermNames.isReplWrapperName (2 samples, 0.20%)</title><rect x="1024.3" y="1539.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1027.3" y="1550.0"></text>
</g>
<g>
<title>scala/reflect/internal/Names$Name.containsName (2 samples, 0.20%)</title><rect x="1024.3" y="1523.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1027.3" y="1534.0"></text>
</g>
<g>
<title>scala/reflect/internal/Names$Name.containsName (1 samples, 0.10%)</title><rect x="1024.3" y="1507.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1027.3" y="1518.0"></text>
</g>
<g>
<title>scala/reflect/internal/Names$Name.startsWith (1 samples, 0.10%)</title><rect x="1024.3" y="1491.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1027.3" y="1502.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="1024.3" y="1475.0" width="1.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1027.3" y="1486.0"></text>
</g>
<g>
<title>scala/reflect/internal/SymbolTable.newTermName (1 samples, 0.10%)</title><rect x="1025.5" y="1507.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1028.5" y="1518.0"></text>
</g>
<g>
<title>scala/reflect/internal/Names.newTermName$ (1 samples, 0.10%)</title><rect x="1025.5" y="1491.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1028.5" y="1502.0"></text>
</g>
<g>
<title>scala/reflect/internal/Names.newTermName (1 samples, 0.10%)</title><rect x="1025.5" y="1475.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1028.5" y="1486.0"></text>
</g>
<g>
<title>scala/reflect/internal/SymbolTable.newTermName (1 samples, 0.10%)</title><rect x="1025.5" y="1459.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1028.5" y="1470.0"></text>
</g>
<g>
<title>scala/reflect/internal/Names.newTermName$ (1 samples, 0.10%)</title><rect x="1025.5" y="1443.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1028.5" y="1454.0"></text>
</g>
<g>
<title>scala/reflect/internal/Names.newTermName (1 samples, 0.10%)</title><rect x="1025.5" y="1427.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1028.5" y="1438.0"></text>
</g>
<g>
<title>scala/reflect/internal/Names.body$1 (1 samples, 0.10%)</title><rect x="1025.5" y="1411.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1028.5" y="1422.0"></text>
</g>
<g>
<title>scala/reflect/internal/Names.enterChars (1 samples, 0.10%)</title><rect x="1025.5" y="1395.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1028.5" y="1406.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="1025.5" y="1379.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1028.5" y="1390.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$TypeRef.needsPreString (2 samples, 0.20%)</title><rect x="1026.6" y="1587.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1029.6" y="1598.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.fullName (2 samples, 0.20%)</title><rect x="1026.6" y="1571.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1029.6" y="1582.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.fullName (2 samples, 0.20%)</title><rect x="1026.6" y="1555.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1029.6" y="1566.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.fullName (2 samples, 0.20%)</title><rect x="1026.6" y="1539.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1029.6" y="1550.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.loop$2 (2 samples, 0.20%)</title><rect x="1026.6" y="1523.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1029.6" y="1534.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.effectiveOwner (1 samples, 0.10%)</title><rect x="1026.6" y="1507.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1029.6" y="1518.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="1026.6" y="1491.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1029.6" y="1502.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.loop$2 (1 samples, 0.10%)</title><rect x="1027.8" y="1507.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1030.8" y="1518.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.name (1 samples, 0.10%)</title><rect x="1027.8" y="1491.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.8" y="1502.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.needsFlatClasses (1 samples, 0.10%)</title><rect x="1027.8" y="1475.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1030.8" y="1486.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.skipPackageObject (1 samples, 0.10%)</title><rect x="1027.8" y="1459.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.8" y="1470.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaUniverse.settings (1 samples, 0.10%)</title><rect x="1029.0" y="1603.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1032.0" y="1614.0"></text>
</g>
<g>
<title>thread_start (136 samples, 13.55%)</title><rect x="1030.2" y="1811.0" width="159.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1033.2" y="1822.0">thread_start</text>
</g>
<g>
<title>_pthread_start (136 samples, 13.55%)</title><rect x="1030.2" y="1795.0" width="159.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1033.2" y="1806.0">_pthread_start</text>
</g>
<g>
<title>_pthread_body (136 samples, 13.55%)</title><rect x="1030.2" y="1779.0" width="159.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1033.2" y="1790.0">_pthread_body</text>
</g>
<g>
<title>java_start(Thread*) (136 samples, 13.55%)</title><rect x="1030.2" y="1763.0" width="159.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1033.2" y="1774.0">java_start(Thread*)</text>
</g>
<g>
<title>GCTaskThread::run() (31 samples, 3.09%)</title><rect x="1030.2" y="1747.0" width="36.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1033.2" y="1758.0">GCT..</text>
</g>
<g>
<title>GCTaskManager::get_task(unsigned int) (5 samples, 0.50%)</title><rect x="1030.2" y="1731.0" width="5.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1033.2" y="1742.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (5 samples, 0.50%)</title><rect x="1030.2" y="1715.0" width="5.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1033.2" y="1726.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (5 samples, 0.50%)</title><rect x="1030.2" y="1699.0" width="5.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1033.2" y="1710.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (4 samples, 0.40%)</title><rect x="1030.2" y="1683.0" width="4.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1033.2" y="1694.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (4 samples, 0.40%)</title><rect x="1030.2" y="1667.0" width="4.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1033.2" y="1678.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 0.40%)</title><rect x="1030.2" y="1651.0" width="4.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1033.2" y="1662.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.10%)</title><rect x="1034.9" y="1683.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1037.9" y="1694.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.10%)</title><rect x="1034.9" y="1667.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1037.9" y="1678.0"></text>
</g>
<g>
<title>GCTaskManager::note_completion(unsigned int) (1 samples, 0.10%)</title><rect x="1036.0" y="1731.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1039.0" y="1742.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.10%)</title><rect x="1036.0" y="1715.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1039.0" y="1726.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="1036.0" y="1699.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1039.0" y="1710.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="1036.0" y="1683.0" width="1.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1039.0" y="1694.0"></text>
</g>
<g>
<title>OldToYoungRootsTask::do_it(GCTaskManager*, unsigned int) (1 samples, 0.10%)</title><rect x="1037.2" y="1731.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1040.2" y="1742.0"></text>
</g>
<g>
<title>CardTableExtension::scavenge_contents_parallel(ObjectStartArray*, MutableSpace*, HeapWord*, PSPromotionManager*, unsigned int, unsigned int) (1 samples, 0.10%)</title><rect x="1037.2" y="1715.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1040.2" y="1726.0"></text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (1 samples, 0.10%)</title><rect x="1037.2" y="1699.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1040.2" y="1710.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (1 samples, 0.10%)</title><rect x="1037.2" y="1683.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1040.2" y="1694.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (1 samples, 0.10%)</title><rect x="1037.2" y="1667.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1040.2" y="1678.0"></text>
</g>
<g>
<title>ScavengeRootsTask::do_it(GCTaskManager*, unsigned int) (1 samples, 0.10%)</title><rect x="1038.4" y="1731.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1041.4" y="1742.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::oops_do(OopClosure*, KlassClosure*, bool) (1 samples, 0.10%)</title><rect x="1038.4" y="1715.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1041.4" y="1726.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (1 samples, 0.10%)</title><rect x="1038.4" y="1699.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1041.4" y="1710.0"></text>
</g>
<g>
<title>JNIHandleBlock::oops_do(OopClosure*) (1 samples, 0.10%)</title><rect x="1038.4" y="1683.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1041.4" y="1694.0"></text>
</g>
<g>
<title>StealTask::do_it(GCTaskManager*, unsigned int) (23 samples, 2.29%)</title><rect x="1039.6" y="1731.0" width="27.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1042.6" y="1742.0">S..</text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (12 samples, 1.20%)</title><rect x="1039.6" y="1715.0" width="14.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1042.6" y="1726.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (7 samples, 0.70%)</title><rect x="1045.4" y="1699.0" width="8.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1048.4" y="1710.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (7 samples, 0.70%)</title><rect x="1045.4" y="1683.0" width="8.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1048.4" y="1694.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (4 samples, 0.40%)</title><rect x="1046.6" y="1667.0" width="4.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1049.6" y="1678.0"></text>
</g>
<g>
<title>void PSPromotionManager::push_depth&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.10%)</title><rect x="1050.1" y="1651.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1053.1" y="1662.0"></text>
</g>
<g>
<title>PSOldGen::cas_allocate(unsigned long) (1 samples, 0.10%)</title><rect x="1051.3" y="1667.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1054.3" y="1678.0"></text>
</g>
<g>
<title>PSOldGen::cas_allocate_noexpand(unsigned long) (1 samples, 0.10%)</title><rect x="1051.3" y="1651.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1054.3" y="1662.0"></text>
</g>
<g>
<title>MutableSpace::cas_allocate(unsigned long) (1 samples, 0.10%)</title><rect x="1051.3" y="1635.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1054.3" y="1646.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.10%)</title><rect x="1052.5" y="1667.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1055.5" y="1678.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (3 samples, 0.30%)</title><rect x="1053.7" y="1715.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1056.7" y="1726.0"></text>
</g>
<g>
<title>xdrmem_ops_aligned (3 samples, 0.30%)</title><rect x="1053.7" y="1699.0" width="3.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1056.7" y="1710.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.80%)</title><rect x="1057.2" y="1715.0" width="9.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1060.2" y="1726.0"></text>
</g>
<g>
<title>JavaThread::run() (98 samples, 9.76%)</title><rect x="1066.6" y="1747.0" width="115.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1069.6" y="1758.0">JavaThread::ru..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (98 samples, 9.76%)</title><rect x="1066.6" y="1731.0" width="115.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1069.6" y="1742.0">JavaThread::th..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (94 samples, 9.36%)</title><rect x="1066.6" y="1715.0" width="110.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1069.6" y="1726.0">CompileBroker..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (81 samples, 8.07%)</title><rect x="1066.6" y="1699.0" width="95.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1069.6" y="1710.0">CompileBrok..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (79 samples, 7.87%)</title><rect x="1066.6" y="1683.0" width="92.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1069.6" y="1694.0">C2Compiler:..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (78 samples, 7.77%)</title><rect x="1066.6" y="1667.0" width="91.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1069.6" y="1678.0">Compile::Co..</text>
</g>
<g>
<title>Compile::Code_Gen() (32 samples, 3.19%)</title><rect x="1066.6" y="1651.0" width="37.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1069.6" y="1662.0">Com..</text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.20%)</title><rect x="1066.6" y="1635.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1069.6" y="1646.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (2 samples, 0.20%)</title><rect x="1066.6" y="1619.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1069.6" y="1630.0"></text>
</g>
<g>
<title>Compile::init_scratch_buffer_blob(int) (1 samples, 0.10%)</title><rect x="1066.6" y="1603.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1069.6" y="1614.0"></text>
</g>
<g>
<title>BufferBlob::create(char const*, int) (1 samples, 0.10%)</title><rect x="1066.6" y="1587.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1069.6" y="1598.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (1 samples, 0.10%)</title><rect x="1066.6" y="1571.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1069.6" y="1582.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long, bool) (1 samples, 0.10%)</title><rect x="1066.6" y="1555.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1069.6" y="1566.0"></text>
</g>
<g>
<title>CodeHeap::search_freelist(unsigned long, bool) (1 samples, 0.10%)</title><rect x="1066.6" y="1539.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1069.6" y="1550.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.10%)</title><rect x="1067.8" y="1603.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1070.8" y="1614.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (2 samples, 0.20%)</title><rect x="1068.9" y="1635.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1071.9" y="1646.0"></text>
</g>
<g>
<title>Compile::valid_bundle_info(Node const*) (1 samples, 0.10%)</title><rect x="1068.9" y="1619.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1071.9" y="1630.0"></text>
</g>
<g>
<title>NonSafepointEmitter::observe_instruction(Node*, int) (1 samples, 0.10%)</title><rect x="1070.1" y="1619.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1073.1" y="1630.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.10%)</title><rect x="1070.1" y="1603.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1073.1" y="1614.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, ciMethod*, int, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.10%)</title><rect x="1070.1" y="1587.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1073.1" y="1598.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.10%)</title><rect x="1070.1" y="1571.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1073.1" y="1582.0"></text>
</g>
<g>
<title>YieldingFlexibleGangWorker::~YieldingFlexibleGangWorker() (1 samples, 0.10%)</title><rect x="1070.1" y="1555.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1073.1" y="1566.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.20%)</title><rect x="1071.3" y="1635.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1074.3" y="1646.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.20%)</title><rect x="1071.3" y="1619.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1074.3" y="1630.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.10%)</title><rect x="1071.3" y="1603.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1074.3" y="1614.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.10%)</title><rect x="1072.5" y="1603.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1075.5" y="1614.0"></text>
</g>
<g>
<title>Node::del_out(Node*) (1 samples, 0.10%)</title><rect x="1072.5" y="1587.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1075.5" y="1598.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.20%)</title><rect x="1073.6" y="1635.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1076.6" y="1646.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.20%)</title><rect x="1073.6" y="1619.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1076.6" y="1630.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_List&amp;) (1 samples, 0.10%)</title><rect x="1073.6" y="1603.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1076.6" y="1614.0"></text>
</g>
<g>
<title>Node_Stack::Node_Stack(int) (1 samples, 0.10%)</title><rect x="1073.6" y="1587.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1076.6" y="1598.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.10%)</title><rect x="1073.6" y="1571.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1076.6" y="1582.0"></text>
</g>
<g>
<title>Chunk::operator new(unsigned long, AllocFailStrategy::AllocFailEnum, unsigned long) (1 samples, 0.10%)</title><rect x="1073.6" y="1555.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1076.6" y="1566.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.10%)</title><rect x="1073.6" y="1539.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1076.6" y="1550.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.10%)</title><rect x="1073.6" y="1523.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1076.6" y="1534.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.10%)</title><rect x="1073.6" y="1507.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1076.6" y="1518.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (1 samples, 0.10%)</title><rect x="1073.6" y="1491.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1076.6" y="1502.0"></text>
</g>
<g>
<title>large_malloc (1 samples, 0.10%)</title><rect x="1073.6" y="1475.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1076.6" y="1486.0"></text>
</g>
<g>
<title>mvm_allocate_pages (1 samples, 0.10%)</title><rect x="1073.6" y="1459.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1076.6" y="1470.0"></text>
</g>
<g>
<title>si_module_static_search.search_vtable (1 samples, 0.10%)</title><rect x="1073.6" y="1443.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1076.6" y="1454.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;) (1 samples, 0.10%)</title><rect x="1074.8" y="1603.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1077.8" y="1614.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (1 samples, 0.10%)</title><rect x="1074.8" y="1587.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1077.8" y="1598.0"></text>
</g>
<g>
<title>add_call_kills(MachProjNode*, RegMask&amp;, char const*, bool) (1 samples, 0.10%)</title><rect x="1074.8" y="1571.0" width="1.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1077.8" y="1582.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (24 samples, 2.39%)</title><rect x="1076.0" y="1635.0" width="28.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1079.0" y="1646.0">Ph..</text>
</g>
<g>
<title>Compile::check_node_count(unsigned int, char const*) (1 samples, 0.10%)</title><rect x="1076.0" y="1619.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1079.0" y="1630.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.10%)</title><rect x="1077.2" y="1619.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1080.2" y="1630.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (4 samples, 0.40%)</title><rect x="1078.3" y="1619.0" width="4.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1081.3" y="1630.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.10%)</title><rect x="1079.5" y="1603.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1082.5" y="1614.0"></text>
</g>
<g>
<title>IndexSetIterator::next() (1 samples, 0.10%)</title><rect x="1080.7" y="1603.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1083.7" y="1614.0"></text>
</g>
<g>
<title>RegMask::SUBTRACT(RegMask const&amp;) (1 samples, 0.10%)</title><rect x="1081.9" y="1603.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1084.9" y="1614.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (3 samples, 0.30%)</title><rect x="1083.0" y="1619.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1086.0" y="1630.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.10%)</title><rect x="1084.2" y="1603.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1087.2" y="1614.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.10%)</title><rect x="1084.2" y="1587.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1087.2" y="1598.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.10%)</title><rect x="1085.4" y="1603.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1088.4" y="1614.0"></text>
</g>
<g>
<title>Block::find_node(Node const*) const (1 samples, 0.10%)</title><rect x="1085.4" y="1587.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1088.4" y="1598.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (6 samples, 0.60%)</title><rect x="1086.6" y="1619.0" width="7.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1089.6" y="1630.0"></text>
</g>
<g>
<title>IndexSet::remove(unsigned int) (1 samples, 0.10%)</title><rect x="1088.9" y="1603.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1091.9" y="1614.0"></text>
</g>
<g>
<title>JVMState::debug_start() const (1 samples, 0.10%)</title><rect x="1090.1" y="1603.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1093.1" y="1614.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.20%)</title><rect x="1091.3" y="1603.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1094.3" y="1614.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.10%)</title><rect x="1091.3" y="1587.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1094.3" y="1598.0"></text>
</g>
<g>
<title>RegMask::overlap(RegMask const&amp;) const (1 samples, 0.10%)</title><rect x="1092.5" y="1587.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1095.5" y="1598.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.10%)</title><rect x="1093.6" y="1619.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1096.6" y="1630.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.10%)</title><rect x="1093.6" y="1603.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1096.6" y="1614.0"></text>
</g>
<g>
<title>IndexSetIterator::next() (1 samples, 0.10%)</title><rect x="1093.6" y="1587.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1096.6" y="1598.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (3 samples, 0.30%)</title><rect x="1094.8" y="1619.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1097.8" y="1630.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.10%)</title><rect x="1096.0" y="1603.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1099.0" y="1614.0"></text>
</g>
<g>
<title>RegMask::is_misaligned_pair() const (1 samples, 0.10%)</title><rect x="1097.2" y="1603.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1100.2" y="1614.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.10%)</title><rect x="1097.2" y="1587.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1100.2" y="1598.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.10%)</title><rect x="1098.3" y="1619.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1101.3" y="1630.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.10%)</title><rect x="1099.5" y="1619.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1102.5" y="1630.0"></text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (1 samples, 0.10%)</title><rect x="1099.5" y="1603.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1102.5" y="1614.0"></text>
</g>
<g>
<title>IndexSetIterator::next() (1 samples, 0.10%)</title><rect x="1099.5" y="1587.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1102.5" y="1598.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.10%)</title><rect x="1100.7" y="1619.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1103.7" y="1630.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.10%)</title><rect x="1100.7" y="1603.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1103.7" y="1614.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.20%)</title><rect x="1101.9" y="1619.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1104.9" y="1630.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.10%)</title><rect x="1103.0" y="1603.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1106.0" y="1614.0"></text>
</g>
<g>
<title>Compile::Optimize() (32 samples, 3.19%)</title><rect x="1104.2" y="1651.0" width="37.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1107.2" y="1662.0">Com..</text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) (1 samples, 0.10%)</title><rect x="1104.2" y="1635.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1107.2" y="1646.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_speculative_types() (1 samples, 0.10%)</title><rect x="1104.2" y="1619.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1107.2" y="1630.0"></text>
</g>
<g>
<title>TypeInstPtr::remove_speculative() const (1 samples, 0.10%)</title><rect x="1104.2" y="1603.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1107.2" y="1614.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.10%)</title><rect x="1104.2" y="1587.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1107.2" y="1598.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.10%)</title><rect x="1104.2" y="1571.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1107.2" y="1582.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.10%)</title><rect x="1104.2" y="1555.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1107.2" y="1566.0"></text>
</g>
<g>
<title>Type::uhash(Type const*) (1 samples, 0.10%)</title><rect x="1104.2" y="1539.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1107.2" y="1550.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (2 samples, 0.20%)</title><rect x="1105.4" y="1635.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1108.4" y="1646.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (2 samples, 0.20%)</title><rect x="1105.4" y="1619.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1108.4" y="1630.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;) (1 samples, 0.10%)</title><rect x="1105.4" y="1603.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1108.4" y="1614.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.10%)</title><rect x="1105.4" y="1587.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1108.4" y="1598.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.10%)</title><rect x="1105.4" y="1571.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1108.4" y="1582.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.10%)</title><rect x="1105.4" y="1555.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1108.4" y="1566.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.10%)</title><rect x="1105.4" y="1539.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1108.4" y="1550.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.10%)</title><rect x="1105.4" y="1523.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1108.4" y="1534.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.10%)</title><rect x="1105.4" y="1507.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1108.4" y="1518.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.10%)</title><rect x="1105.4" y="1491.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1108.4" y="1502.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.10%)</title><rect x="1105.4" y="1475.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1108.4" y="1486.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.10%)</title><rect x="1105.4" y="1459.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1108.4" y="1470.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.10%)</title><rect x="1105.4" y="1443.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1108.4" y="1454.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.10%)</title><rect x="1105.4" y="1427.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1108.4" y="1438.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.10%)</title><rect x="1105.4" y="1411.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1108.4" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.10%)</title><rect x="1105.4" y="1395.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1108.4" y="1406.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.10%)</title><rect x="1105.4" y="1379.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1108.4" y="1390.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.10%)</title><rect x="1105.4" y="1363.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1108.4" y="1374.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.10%)</title><rect x="1105.4" y="1347.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1108.4" y="1358.0"></text>
</g>
<g>
<title>PhiNode::adr_type() const (1 samples, 0.10%)</title><rect x="1105.4" y="1331.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1108.4" y="1342.0"></text>
</g>
<g>
<title>Unique_Node_List::push(Node*) (1 samples, 0.10%)</title><rect x="1106.6" y="1603.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1109.6" y="1614.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (24 samples, 2.39%)</title><rect x="1107.7" y="1635.0" width="28.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1110.7" y="1646.0">Ph..</text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.10%)</title><rect x="1107.7" y="1619.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1110.7" y="1630.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.10%)</title><rect x="1107.7" y="1603.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1110.7" y="1614.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.10%)</title><rect x="1107.7" y="1587.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1110.7" y="1598.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.10%)</title><rect x="1107.7" y="1571.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1110.7" y="1582.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) (1 samples, 0.10%)</title><rect x="1107.7" y="1555.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1110.7" y="1566.0"></text>
</g>
<g>
<title>Invariance::clone(Node*, Node*) (1 samples, 0.10%)</title><rect x="1107.7" y="1539.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1110.7" y="1550.0"></text>
</g>
<g>
<title>Invariance::clone_nodes(Node*, Node*) (1 samples, 0.10%)</title><rect x="1107.7" y="1523.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1110.7" y="1534.0"></text>
</g>
<g>
<title>Invariance::clone_visit(Node*) (1 samples, 0.10%)</title><rect x="1107.7" y="1507.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1110.7" y="1518.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.10%)</title><rect x="1107.7" y="1491.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1110.7" y="1502.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.10%)</title><rect x="1107.7" y="1475.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1110.7" y="1486.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (4 samples, 0.40%)</title><rect x="1108.9" y="1619.0" width="4.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1111.9" y="1630.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.10%)</title><rect x="1110.1" y="1603.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1113.1" y="1614.0"></text>
</g>
<g>
<title>Chunk::operator new(unsigned long, AllocFailStrategy::AllocFailEnum, unsigned long) (1 samples, 0.10%)</title><rect x="1110.1" y="1587.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1113.1" y="1598.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.10%)</title><rect x="1110.1" y="1571.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1113.1" y="1582.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.10%)</title><rect x="1110.1" y="1555.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1113.1" y="1566.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.10%)</title><rect x="1110.1" y="1539.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1113.1" y="1550.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.10%)</title><rect x="1110.1" y="1523.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1113.1" y="1534.0"></text>
</g>
<g>
<title>default_zone_malloc (1 samples, 0.10%)</title><rect x="1110.1" y="1507.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1113.1" y="1518.0"></text>
</g>
<g>
<title>NTarjan::LINK(NTarjan*, NTarjan*) (1 samples, 0.10%)</title><rect x="1111.3" y="1603.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1114.3" y="1614.0"></text>
</g>
<g>
<title>NTarjan::setdepth(unsigned int, unsigned int*) (1 samples, 0.10%)</title><rect x="1112.4" y="1603.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1115.4" y="1614.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.10%)</title><rect x="1113.6" y="1619.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1116.6" y="1630.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (14 samples, 1.39%)</title><rect x="1114.8" y="1619.0" width="16.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1117.8" y="1630.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (14 samples, 1.39%)</title><rect x="1114.8" y="1603.0" width="16.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1117.8" y="1614.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (13 samples, 1.29%)</title><rect x="1114.8" y="1587.0" width="15.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1117.8" y="1598.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (12 samples, 1.20%)</title><rect x="1116.0" y="1571.0" width="14.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1119.0" y="1582.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const (5 samples, 0.50%)</title><rect x="1116.0" y="1555.0" width="5.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1119.0" y="1566.0"></text>
</g>
<g>
<title>PhaseIdealLoop::idom_no_update(Node*) const (7 samples, 0.70%)</title><rect x="1121.8" y="1555.0" width="8.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1124.8" y="1566.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.10%)</title><rect x="1130.1" y="1587.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1133.1" y="1598.0"></text>
</g>
<g>
<title>PhaseIdealLoop::init_dom_lca_tags() (1 samples, 0.10%)</title><rect x="1131.2" y="1619.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1134.2" y="1630.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.10%)</title><rect x="1131.2" y="1603.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1134.2" y="1614.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.10%)</title><rect x="1131.2" y="1587.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1134.2" y="1598.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.10%)</title><rect x="1131.2" y="1571.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1134.2" y="1582.0"></text>
</g>
<g>
<title>Chunk::operator new(unsigned long, AllocFailStrategy::AllocFailEnum, unsigned long) (1 samples, 0.10%)</title><rect x="1131.2" y="1555.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1134.2" y="1566.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.10%)</title><rect x="1131.2" y="1539.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1134.2" y="1550.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.10%)</title><rect x="1131.2" y="1523.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1134.2" y="1534.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.10%)</title><rect x="1131.2" y="1507.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1134.2" y="1518.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (1 samples, 0.10%)</title><rect x="1131.2" y="1491.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1134.2" y="1502.0"></text>
</g>
<g>
<title>large_malloc (1 samples, 0.10%)</title><rect x="1131.2" y="1475.0" width="1.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1134.2" y="1486.0"></text>
</g>
<g>
<title>mvm_allocate_pages (1 samples, 0.10%)</title><rect x="1131.2" y="1459.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1134.2" y="1470.0"></text>
</g>
<g>
<title>si_module_static_search.search_vtable (1 samples, 0.10%)</title><rect x="1131.2" y="1443.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1134.2" y="1454.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.10%)</title><rect x="1132.4" y="1619.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1135.4" y="1630.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.20%)</title><rect x="1133.6" y="1619.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1136.6" y="1630.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.20%)</title><rect x="1133.6" y="1603.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1136.6" y="1614.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.10%)</title><rect x="1133.6" y="1587.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.6" y="1598.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist0(Node*) (1 samples, 0.10%)</title><rect x="1133.6" y="1571.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1136.6" y="1582.0"></text>
</g>
<g>
<title>Unique_Node_List::push(Node*) (1 samples, 0.10%)</title><rect x="1133.6" y="1555.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1136.6" y="1566.0"></text>
</g>
<g>
<title>VectorSet::test_set(unsigned int) (1 samples, 0.10%)</title><rect x="1133.6" y="1539.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1136.6" y="1550.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.10%)</title><rect x="1134.8" y="1587.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1137.8" y="1598.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.10%)</title><rect x="1134.8" y="1571.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1137.8" y="1582.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 0.50%)</title><rect x="1135.9" y="1635.0" width="5.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1138.9" y="1646.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.50%)</title><rect x="1135.9" y="1619.0" width="5.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1138.9" y="1630.0"></text>
</g>
<g>
<title>CallNode::Ideal(PhaseGVN*, bool) (1 samples, 0.10%)</title><rect x="1135.9" y="1603.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1138.9" y="1614.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.10%)</title><rect x="1135.9" y="1587.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1138.9" y="1598.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.10%)</title><rect x="1135.9" y="1571.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1138.9" y="1582.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.10%)</title><rect x="1137.1" y="1603.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1140.1" y="1614.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (1 samples, 0.10%)</title><rect x="1137.1" y="1587.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1140.1" y="1598.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (3 samples, 0.30%)</title><rect x="1138.3" y="1603.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1141.3" y="1614.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) (3 samples, 0.30%)</title><rect x="1138.3" y="1587.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1141.3" y="1598.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.30%)</title><rect x="1138.3" y="1571.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1141.3" y="1582.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.30%)</title><rect x="1138.3" y="1555.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1141.3" y="1566.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.30%)</title><rect x="1138.3" y="1539.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1141.3" y="1550.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.30%)</title><rect x="1138.3" y="1523.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1141.3" y="1534.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.30%)</title><rect x="1138.3" y="1507.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1141.3" y="1518.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.30%)</title><rect x="1138.3" y="1491.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1141.3" y="1502.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.30%)</title><rect x="1138.3" y="1475.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1141.3" y="1486.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.30%)</title><rect x="1138.3" y="1459.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1141.3" y="1470.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.30%)</title><rect x="1138.3" y="1443.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1141.3" y="1454.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.30%)</title><rect x="1138.3" y="1427.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1141.3" y="1438.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.30%)</title><rect x="1138.3" y="1411.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.3" y="1422.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.20%)</title><rect x="1138.3" y="1395.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1141.3" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.20%)</title><rect x="1138.3" y="1379.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1141.3" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1138.3" y="1363.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1141.3" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1138.3" y="1347.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1141.3" y="1358.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.10%)</title><rect x="1138.3" y="1331.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1141.3" y="1342.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.10%)</title><rect x="1138.3" y="1315.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1141.3" y="1326.0"></text>
</g>
<g>
<title>Node::find_exact_control(Node*) (1 samples, 0.10%)</title><rect x="1138.3" y="1299.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.3" y="1310.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.10%)</title><rect x="1139.5" y="1363.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1142.5" y="1374.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.10%)</title><rect x="1139.5" y="1347.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1142.5" y="1358.0"></text>
</g>
<g>
<title>Node::find_exact_control(Node*) (1 samples, 0.10%)</title><rect x="1139.5" y="1331.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1142.5" y="1342.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.10%)</title><rect x="1140.6" y="1395.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1143.6" y="1406.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.10%)</title><rect x="1140.6" y="1379.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1143.6" y="1390.0"></text>
</g>
<g>
<title>Node::find_exact_control(Node*) (1 samples, 0.10%)</title><rect x="1140.6" y="1363.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1143.6" y="1374.0"></text>
</g>
<g>
<title>Compile::return_values(JVMState*) (1 samples, 0.10%)</title><rect x="1141.8" y="1651.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.8" y="1662.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (1 samples, 0.10%)</title><rect x="1143.0" y="1651.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1146.0" y="1662.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (1 samples, 0.10%)</title><rect x="1143.0" y="1635.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1146.0" y="1646.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.10%)</title><rect x="1143.0" y="1619.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1146.0" y="1630.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.10%)</title><rect x="1143.0" y="1603.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1146.0" y="1614.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 1.00%)</title><rect x="1144.2" y="1651.0" width="11.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1147.2" y="1662.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 1.00%)</title><rect x="1144.2" y="1635.0" width="11.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1147.2" y="1646.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 1.00%)</title><rect x="1144.2" y="1619.0" width="11.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1147.2" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 1.00%)</title><rect x="1144.2" y="1603.0" width="11.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1147.2" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 1.00%)</title><rect x="1144.2" y="1587.0" width="11.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1147.2" y="1598.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 1.00%)</title><rect x="1144.2" y="1571.0" width="11.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1147.2" y="1582.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.70%)</title><rect x="1144.2" y="1555.0" width="8.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1147.2" y="1566.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.70%)</title><rect x="1144.2" y="1539.0" width="8.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1147.2" y="1550.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.70%)</title><rect x="1144.2" y="1523.0" width="8.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1147.2" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.70%)</title><rect x="1144.2" y="1507.0" width="8.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1147.2" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.70%)</title><rect x="1144.2" y="1491.0" width="8.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1147.2" y="1502.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.70%)</title><rect x="1144.2" y="1475.0" width="8.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1147.2" y="1486.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.60%)</title><rect x="1144.2" y="1459.0" width="7.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1147.2" y="1470.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.60%)</title><rect x="1144.2" y="1443.0" width="7.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1147.2" y="1454.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.60%)</title><rect x="1144.2" y="1427.0" width="7.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1147.2" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.60%)</title><rect x="1144.2" y="1411.0" width="7.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1147.2" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.60%)</title><rect x="1144.2" y="1395.0" width="7.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1147.2" y="1406.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.60%)</title><rect x="1144.2" y="1379.0" width="7.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1147.2" y="1390.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.10%)</title><rect x="1144.2" y="1363.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1147.2" y="1374.0"></text>
</g>
<g>
<title>CallGenerator::for_method_handle_call(JVMState*, ciMethod*, ciMethod*, bool) (1 samples, 0.10%)</title><rect x="1144.2" y="1347.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1147.2" y="1358.0"></text>
</g>
<g>
<title>CallGenerator::for_method_handle_inline(JVMState*, ciMethod*, ciMethod*, bool&amp;) (1 samples, 0.10%)</title><rect x="1144.2" y="1331.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1147.2" y="1342.0"></text>
</g>
<g>
<title>ciMethodHandle::get_vmtarget() const (1 samples, 0.10%)</title><rect x="1144.2" y="1315.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1147.2" y="1326.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.10%)</title><rect x="1144.2" y="1299.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1147.2" y="1310.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.10%)</title><rect x="1144.2" y="1283.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1147.2" y="1294.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle, ciInstanceKlass*) (1 samples, 0.10%)</title><rect x="1144.2" y="1267.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1147.2" y="1278.0"></text>
</g>
<g>
<title>Method::invocation_count() (1 samples, 0.10%)</title><rect x="1144.2" y="1251.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1147.2" y="1262.0"></text>
</g>
<g>
<title>GraphKit::record_profiled_arguments_for_speculation(ciMethod*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="1145.3" y="1363.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1148.3" y="1374.0"></text>
</g>
<g>
<title>VirtualCallTypeData::is_VirtualCallTypeData() const (1 samples, 0.10%)</title><rect x="1145.3" y="1347.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1148.3" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.30%)</title><rect x="1146.5" y="1363.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1149.5" y="1374.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.30%)</title><rect x="1146.5" y="1347.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1149.5" y="1358.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.20%)</title><rect x="1146.5" y="1331.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1149.5" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.20%)</title><rect x="1146.5" y="1315.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1149.5" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.20%)</title><rect x="1146.5" y="1299.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1149.5" y="1310.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.20%)</title><rect x="1146.5" y="1283.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1149.5" y="1294.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1146.5" y="1267.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1149.5" y="1278.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1146.5" y="1251.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1149.5" y="1262.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1146.5" y="1235.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1149.5" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1146.5" y="1219.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.5" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1146.5" y="1203.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1149.5" y="1214.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1146.5" y="1187.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.5" y="1198.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1146.5" y="1171.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1149.5" y="1182.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1146.5" y="1155.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1149.5" y="1166.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1146.5" y="1139.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1149.5" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1146.5" y="1123.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.5" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1146.5" y="1107.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1149.5" y="1118.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1146.5" y="1091.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1149.5" y="1102.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1146.5" y="1075.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1149.5" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1146.5" y="1059.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.5" y="1070.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1146.5" y="1043.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1149.5" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1146.5" y="1027.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.5" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1146.5" y="1011.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1149.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1146.5" y="995.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1149.5" y="1006.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1146.5" y="979.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1149.5" y="990.0"></text>
</g>
<g>
<title>GraphKit::null_check_receiver_before_call(ciMethod*) (1 samples, 0.10%)</title><rect x="1146.5" y="963.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1149.5" y="974.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**) (1 samples, 0.10%)</title><rect x="1146.5" y="947.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1149.5" y="958.0"></text>
</g>
<g>
<title>BuildCutout::BuildCutout(GraphKit*, Node*, float, float) (1 samples, 0.10%)</title><rect x="1146.5" y="931.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1149.5" y="942.0"></text>
</g>
<g>
<title>ProjNode::ProjNode(Node*, unsigned int, bool) (1 samples, 0.10%)</title><rect x="1146.5" y="915.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1149.5" y="926.0"></text>
</g>
<g>
<title>Node::add_out(Node*) (1 samples, 0.10%)</title><rect x="1146.5" y="899.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1149.5" y="910.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.10%)</title><rect x="1146.5" y="883.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.5" y="894.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.10%)</title><rect x="1146.5" y="867.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.5" y="878.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.10%)</title><rect x="1147.7" y="1267.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1150.7" y="1278.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.10%)</title><rect x="1147.7" y="1251.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1150.7" y="1262.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.10%)</title><rect x="1147.7" y="1235.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1150.7" y="1246.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.10%)</title><rect x="1147.7" y="1219.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1150.7" y="1230.0"></text>
</g>
<g>
<title>ciObjectFactory::get_unloaded_klass(ciKlass*, ciSymbol*, bool) (1 samples, 0.10%)</title><rect x="1147.7" y="1203.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1150.7" y="1214.0"></text>
</g>
<g>
<title>ciInstanceKlass::loader() (1 samples, 0.10%)</title><rect x="1147.7" y="1187.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1150.7" y="1198.0"></text>
</g>
<g>
<title>SafePointNode::next_exception() const (1 samples, 0.10%)</title><rect x="1148.9" y="1331.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.9" y="1342.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1150.0" y="1363.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1153.0" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1150.0" y="1347.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1153.0" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1150.0" y="1331.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.0" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1150.0" y="1315.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1153.0" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1150.0" y="1299.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1153.0" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1150.0" y="1283.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1153.0" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1150.0" y="1267.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1153.0" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1150.0" y="1251.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1153.0" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1150.0" y="1235.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.0" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1150.0" y="1219.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.0" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1150.0" y="1203.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1153.0" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1150.0" y="1187.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1153.0" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1150.0" y="1171.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1153.0" y="1182.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1150.0" y="1155.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1153.0" y="1166.0"></text>
</g>
<g>
<title>GraphKit::set_results_for_java_call(CallJavaNode*, bool) (1 samples, 0.10%)</title><rect x="1150.0" y="1139.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1153.0" y="1150.0"></text>
</g>
<g>
<title>GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool) (1 samples, 0.10%)</title><rect x="1150.0" y="1123.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.0" y="1134.0"></text>
</g>
<g>
<title>TypeInstPtr::cast_to_ptr_type(TypePtr::PTR) const (1 samples, 0.10%)</title><rect x="1150.0" y="1107.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.0" y="1118.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.10%)</title><rect x="1150.0" y="1091.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.0" y="1102.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.10%)</title><rect x="1150.0" y="1075.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.0" y="1086.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1151.2" y="1459.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1154.2" y="1470.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1151.2" y="1443.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1154.2" y="1454.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1151.2" y="1427.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1154.2" y="1438.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1151.2" y="1411.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1154.2" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1151.2" y="1395.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1154.2" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1151.2" y="1379.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.2" y="1390.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1151.2" y="1363.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.2" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1151.2" y="1347.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1154.2" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1151.2" y="1331.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.2" y="1342.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.10%)</title><rect x="1151.2" y="1315.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.2" y="1326.0"></text>
</g>
<g>
<title>GraphKit::null_check_receiver_before_call(ciMethod*) (1 samples, 0.10%)</title><rect x="1151.2" y="1299.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1154.2" y="1310.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**) (1 samples, 0.10%)</title><rect x="1151.2" y="1283.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1154.2" y="1294.0"></text>
</g>
<g>
<title>GraphKit::cast_not_null(Node*, bool) (1 samples, 0.10%)</title><rect x="1151.2" y="1267.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.2" y="1278.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.10%)</title><rect x="1151.2" y="1251.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1154.2" y="1262.0"></text>
</g>
<g>
<title>TypeOopPtr::xmeet(Type const*) const (1 samples, 0.10%)</title><rect x="1151.2" y="1235.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1154.2" y="1246.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.10%)</title><rect x="1151.2" y="1219.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1154.2" y="1230.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.30%)</title><rect x="1152.4" y="1555.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.4" y="1566.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.30%)</title><rect x="1152.4" y="1539.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1155.4" y="1550.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.30%)</title><rect x="1152.4" y="1523.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.4" y="1534.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.30%)</title><rect x="1152.4" y="1507.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.4" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.30%)</title><rect x="1152.4" y="1491.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.4" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.30%)</title><rect x="1152.4" y="1475.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1155.4" y="1486.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.30%)</title><rect x="1152.4" y="1459.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.4" y="1470.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.20%)</title><rect x="1152.4" y="1443.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.4" y="1454.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.20%)</title><rect x="1152.4" y="1427.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1155.4" y="1438.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.20%)</title><rect x="1152.4" y="1411.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1155.4" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.20%)</title><rect x="1152.4" y="1395.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.4" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.20%)</title><rect x="1152.4" y="1379.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1155.4" y="1390.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.20%)</title><rect x="1152.4" y="1363.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.4" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1152.4" y="1347.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1155.4" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1152.4" y="1331.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.4" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1152.4" y="1315.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1155.4" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1152.4" y="1299.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.4" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1152.4" y="1283.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.4" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1152.4" y="1267.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.4" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1152.4" y="1251.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1155.4" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1152.4" y="1235.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1155.4" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1152.4" y="1219.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.4" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1152.4" y="1203.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.4" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1152.4" y="1187.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1155.4" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1152.4" y="1171.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1155.4" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1152.4" y="1155.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.4" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1152.4" y="1139.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.4" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1152.4" y="1123.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.4" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1152.4" y="1107.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.4" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1152.4" y="1091.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1155.4" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1152.4" y="1075.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1155.4" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1152.4" y="1059.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1155.4" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1152.4" y="1043.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.4" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1152.4" y="1027.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.4" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1152.4" y="1011.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.4" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1152.4" y="995.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.4" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1152.4" y="979.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1155.4" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1152.4" y="963.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1155.4" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1152.4" y="947.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.4" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1152.4" y="931.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.4" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1152.4" y="915.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1155.4" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1152.4" y="899.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.4" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1152.4" y="883.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.4" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1152.4" y="867.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.4" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1152.4" y="851.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1155.4" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1152.4" y="835.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.4" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1152.4" y="819.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.4" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1152.4" y="803.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.4" y="814.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.10%)</title><rect x="1152.4" y="787.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.4" y="798.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.10%)</title><rect x="1152.4" y="771.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1155.4" y="782.0"></text>
</g>
<g>
<title>GraphKit::store_oop(Node*, Node*, Node*, TypePtr const*, Node*, TypeOopPtr const*, BasicType, bool, MemNode::MemOrd) (1 samples, 0.10%)</title><rect x="1152.4" y="755.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1155.4" y="766.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool) (1 samples, 0.10%)</title><rect x="1152.4" y="739.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.4" y="750.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.10%)</title><rect x="1152.4" y="723.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.4" y="734.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.10%)</title><rect x="1152.4" y="707.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.4" y="718.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) (1 samples, 0.10%)</title><rect x="1152.4" y="691.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1155.4" y="702.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="675.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.4" y="686.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="659.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.4" y="670.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="643.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.4" y="654.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="627.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.4" y="638.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="611.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.4" y="622.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="595.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.4" y="606.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="579.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1155.4" y="590.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="563.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.4" y="574.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="547.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.4" y="558.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="531.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.4" y="542.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="515.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1155.4" y="526.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="499.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.4" y="510.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="483.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1155.4" y="494.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="467.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1155.4" y="478.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="451.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.4" y="462.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="435.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.4" y="446.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="419.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.4" y="430.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.10%)</title><rect x="1152.4" y="403.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.4" y="414.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.10%)</title><rect x="1152.4" y="387.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.4" y="398.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1153.6" y="1347.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1156.6" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1153.6" y="1331.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.6" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1153.6" y="1315.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.6" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1153.6" y="1299.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1156.6" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1153.6" y="1283.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1156.6" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1153.6" y="1267.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.6" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1153.6" y="1251.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1156.6" y="1262.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1153.6" y="1235.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.6" y="1246.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1153.6" y="1219.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.6" y="1230.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1153.6" y="1203.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1156.6" y="1214.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1153.6" y="1187.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.6" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1153.6" y="1171.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.6" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1153.6" y="1155.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1156.6" y="1166.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1153.6" y="1139.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.6" y="1150.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1153.6" y="1123.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.6" y="1134.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1153.6" y="1107.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.6" y="1118.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1153.6" y="1091.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1156.6" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1153.6" y="1075.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.6" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1153.6" y="1059.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.6" y="1070.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1153.6" y="1043.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1156.6" y="1054.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1153.6" y="1027.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1156.6" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1153.6" y="1011.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1156.6" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1153.6" y="995.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1156.6" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1153.6" y="979.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.6" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1153.6" y="963.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1156.6" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1153.6" y="947.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.6" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1153.6" y="931.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.6" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1153.6" y="915.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.6" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1153.6" y="899.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.6" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1153.6" y="883.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1156.6" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1153.6" y="867.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.6" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1153.6" y="851.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1153.6" y="835.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1156.6" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1153.6" y="819.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.6" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1153.6" y="803.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.6" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1153.6" y="787.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.6" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1153.6" y="771.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.6" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1153.6" y="755.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1156.6" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1153.6" y="739.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1156.6" y="750.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.10%)</title><rect x="1153.6" y="723.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.6" y="734.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.10%)</title><rect x="1153.6" y="707.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1156.6" y="718.0"></text>
</g>
<g>
<title>TypeTuple::make_range(ciSignature*) (1 samples, 0.10%)</title><rect x="1153.6" y="691.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.6" y="702.0"></text>
</g>
<g>
<title>ciMetadata::is_instance_klass() const (1 samples, 0.10%)</title><rect x="1153.6" y="675.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.6" y="686.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1154.7" y="1443.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1157.7" y="1454.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.10%)</title><rect x="1154.7" y="1427.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1157.7" y="1438.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.10%)</title><rect x="1154.7" y="1411.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1157.7" y="1422.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.10%)</title><rect x="1154.7" y="1395.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.7" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.10%)</title><rect x="1154.7" y="1379.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1157.7" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.10%)</title><rect x="1154.7" y="1363.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.7" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.10%)</title><rect x="1154.7" y="1347.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1157.7" y="1358.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.10%)</title><rect x="1154.7" y="1331.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1157.7" y="1342.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.10%)</title><rect x="1154.7" y="1315.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.7" y="1326.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.10%)</title><rect x="1154.7" y="1299.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.7" y="1310.0"></text>
</g>
<g>
<title>ConstantPool::impl_name_ref_at(int, bool) (1 samples, 0.10%)</title><rect x="1154.7" y="1283.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.7" y="1294.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (2 samples, 0.20%)</title><rect x="1155.9" y="1651.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1158.9" y="1662.0"></text>
</g>
<g>
<title>Dependencies::encode_content_bytes() (1 samples, 0.10%)</title><rect x="1155.9" y="1635.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1158.9" y="1646.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (1 samples, 0.10%)</title><rect x="1157.1" y="1635.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1160.1" y="1646.0"></text>
</g>
<g>
<title>Dependencies::DepStream::next() (1 samples, 0.10%)</title><rect x="1157.1" y="1619.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1160.1" y="1630.0"></text>
</g>
<g>
<title>Compile::~Compile() (1 samples, 0.10%)</title><rect x="1158.3" y="1667.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1161.3" y="1678.0"></text>
</g>
<g>
<title>Arena::~Arena() (1 samples, 0.10%)</title><rect x="1158.3" y="1651.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.3" y="1662.0"></text>
</g>
<g>
<title>Arena::destruct_contents() (1 samples, 0.10%)</title><rect x="1158.3" y="1635.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.3" y="1646.0"></text>
</g>
<g>
<title>Chunk::operator delete(void*) (1 samples, 0.10%)</title><rect x="1158.3" y="1619.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1161.3" y="1630.0"></text>
</g>
<g>
<title>free_large (1 samples, 0.10%)</title><rect x="1158.3" y="1603.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1161.3" y="1614.0"></text>
</g>
<g>
<title>mvm_deallocate_pages (1 samples, 0.10%)</title><rect x="1158.3" y="1587.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1161.3" y="1598.0"></text>
</g>
<g>
<title>si_module_static_search.search_vtable (1 samples, 0.10%)</title><rect x="1158.3" y="1571.0" width="1.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1161.3" y="1582.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (2 samples, 0.20%)</title><rect x="1159.4" y="1683.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1162.4" y="1694.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (2 samples, 0.20%)</title><rect x="1159.4" y="1667.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.4" y="1678.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 0.20%)</title><rect x="1159.4" y="1651.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.4" y="1662.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.10%)</title><rect x="1159.4" y="1635.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.4" y="1646.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.10%)</title><rect x="1159.4" y="1619.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1162.4" y="1630.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.10%)</title><rect x="1159.4" y="1603.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1162.4" y="1614.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (1 samples, 0.10%)</title><rect x="1159.4" y="1587.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.4" y="1598.0"></text>
</g>
<g>
<title>LinearScan::use_kind_of_input_operand(LIR_Op*, LIR_OprDesc*) (1 samples, 0.10%)</title><rect x="1159.4" y="1571.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1162.4" y="1582.0"></text>
</g>
<g>
<title>Compilation::install_code(int) (1 samples, 0.10%)</title><rect x="1160.6" y="1635.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1163.6" y="1646.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (1 samples, 0.10%)</title><rect x="1160.6" y="1619.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.6" y="1630.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (1 samples, 0.10%)</title><rect x="1160.6" y="1603.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.6" y="1614.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (1 samples, 0.10%)</title><rect x="1160.6" y="1587.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1163.6" y="1598.0"></text>
</g>
<g>
<title>OopRecorder::copy_values_to(nmethod*) (1 samples, 0.10%)</title><rect x="1160.6" y="1571.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.6" y="1582.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 0.10%)</title><rect x="1160.6" y="1555.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.6" y="1566.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.10%)</title><rect x="1160.6" y="1539.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1163.6" y="1550.0"></text>
</g>
<g>
<title>RelocIterator::advance_over_prefix() (1 samples, 0.10%)</title><rect x="1160.6" y="1523.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.6" y="1534.0"></text>
</g>
<g>
<title>CompileQueue::get() (13 samples, 1.29%)</title><rect x="1161.8" y="1699.0" width="15.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1164.8" y="1710.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.20%)</title><rect x="1161.8" y="1683.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1164.8" y="1694.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.20%)</title><rect x="1161.8" y="1667.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1164.8" y="1678.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.20%)</title><rect x="1161.8" y="1651.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1164.8" y="1662.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.20%)</title><rect x="1161.8" y="1635.0" width="2.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1164.8" y="1646.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (11 samples, 1.10%)</title><rect x="1164.1" y="1683.0" width="13.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1167.1" y="1694.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (11 samples, 1.10%)</title><rect x="1164.1" y="1667.0" width="13.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1167.1" y="1678.0"></text>
</g>
<g>
<title>CodeCache::next_nmethod(CodeBlob*) (1 samples, 0.10%)</title><rect x="1164.1" y="1651.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1167.1" y="1662.0"></text>
</g>
<g>
<title>NMethodSweeper::process_nmethod(nmethod*) (10 samples, 1.00%)</title><rect x="1165.3" y="1651.0" width="11.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1168.3" y="1662.0"></text>
</g>
<g>
<title>CodeCache::reverse_free_ratio() (1 samples, 0.10%)</title><rect x="1167.7" y="1635.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.7" y="1646.0"></text>
</g>
<g>
<title>nmethod::cleanup_inline_caches() (7 samples, 0.70%)</title><rect x="1168.8" y="1635.0" width="8.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1171.8" y="1646.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (3 samples, 0.30%)</title><rect x="1171.2" y="1619.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1174.2" y="1630.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (3 samples, 0.30%)</title><rect x="1171.2" y="1603.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1174.2" y="1614.0"></text>
</g>
<g>
<title>CompiledIC::initialize_from_iter(RelocIterator*) (1 samples, 0.10%)</title><rect x="1174.7" y="1619.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.7" y="1630.0"></text>
</g>
<g>
<title>virtual_call_Relocation::unpack_data() (1 samples, 0.10%)</title><rect x="1174.7" y="1603.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1177.7" y="1614.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.10%)</title><rect x="1175.9" y="1619.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1178.9" y="1630.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (3 samples, 0.30%)</title><rect x="1177.1" y="1715.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.1" y="1726.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (3 samples, 0.30%)</title><rect x="1177.1" y="1699.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.1" y="1710.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (2 samples, 0.20%)</title><rect x="1177.1" y="1683.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.1" y="1694.0"></text>
</g>
<g>
<title>JvmtiCompiledMethodLoadEventMark::JvmtiCompiledMethodLoadEventMark(JavaThread*, nmethod*, void*) (1 samples, 0.10%)</title><rect x="1177.1" y="1667.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.1" y="1678.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (1 samples, 0.10%)</title><rect x="1177.1" y="1651.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.1" y="1662.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.10%)</title><rect x="1177.1" y="1635.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.1" y="1646.0"></text>
</g>
<g>
<title>CompressedReadStream::read_int() (1 samples, 0.10%)</title><rect x="1177.1" y="1619.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.1" y="1630.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (1 samples, 0.10%)</title><rect x="1178.2" y="1667.0" width="1.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1181.2" y="1678.0"></text>
</g>
<g>
<title>Method::jmethod_id() (1 samples, 0.10%)</title><rect x="1178.2" y="1651.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.2" y="1662.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(instanceKlassHandle, methodHandle) (1 samples, 0.10%)</title><rect x="1178.2" y="1635.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.2" y="1646.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_unload(_jmethodID*, void const*) (1 samples, 0.10%)</title><rect x="1179.4" y="1683.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.4" y="1694.0"></text>
</g>
<g>
<title>Profiler::removeJavaMethod(void const*, _jmethodID*) (1 samples, 0.10%)</title><rect x="1179.4" y="1667.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1182.4" y="1678.0"></text>
</g>
<g>
<title>CodeCache::remove(void const*, _jmethodID*) (1 samples, 0.10%)</title><rect x="1179.4" y="1651.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.4" y="1662.0"></text>
</g>
<g>
<title>attach_listener_thread_entry(JavaThread*, Thread*) (1 samples, 0.10%)</title><rect x="1180.6" y="1715.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1183.6" y="1726.0"></text>
</g>
<g>
<title>JvmtiExport::load_agent_library(AttachOperation*, outputStream*) (1 samples, 0.10%)</title><rect x="1180.6" y="1699.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.6" y="1710.0"></text>
</g>
<g>
<title>os::dll_load(char const*, char*, int) (1 samples, 0.10%)</title><rect x="1180.6" y="1683.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.6" y="1694.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (1 samples, 0.10%)</title><rect x="1180.6" y="1667.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1183.6" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.10%)</title><rect x="1180.6" y="1651.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1183.6" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.10%)</title><rect x="1180.6" y="1635.0" width="1.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1183.6" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.10%)</title><rect x="1180.6" y="1619.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1183.6" y="1630.0"></text>
</g>
<g>
<title>VMThread::run() (5 samples, 0.50%)</title><rect x="1181.8" y="1747.0" width="5.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.8" y="1758.0"></text>
</g>
<g>
<title>VMThread::loop() (5 samples, 0.50%)</title><rect x="1181.8" y="1731.0" width="5.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.8" y="1742.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (2 samples, 0.20%)</title><rect x="1181.8" y="1715.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.8" y="1726.0"></text>
</g>
<g>
<title>os::NakedYield() (2 samples, 0.20%)</title><rect x="1181.8" y="1699.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.8" y="1710.0"></text>
</g>
<g>
<title>xdrmem_ops_aligned (2 samples, 0.20%)</title><rect x="1181.8" y="1683.0" width="2.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1184.8" y="1694.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (3 samples, 0.30%)</title><rect x="1184.1" y="1715.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.1" y="1726.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (3 samples, 0.30%)</title><rect x="1184.1" y="1699.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.1" y="1710.0"></text>
</g>
<g>
<title>VM_ParallelGCFailedAllocation::doit() (3 samples, 0.30%)</title><rect x="1184.1" y="1683.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.1" y="1694.0"></text>
</g>
<g>
<title>ParallelScavengeHeap::failed_mem_allocate(unsigned long) (3 samples, 0.30%)</title><rect x="1184.1" y="1667.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.1" y="1678.0"></text>
</g>
<g>
<title>PSScavenge::invoke() (3 samples, 0.30%)</title><rect x="1184.1" y="1651.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.1" y="1662.0"></text>
</g>
<g>
<title>PSScavenge::invoke_no_policy() (3 samples, 0.30%)</title><rect x="1184.1" y="1635.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.1" y="1646.0"></text>
</g>
<g>
<title>MemoryService::gc_begin(bool, bool, bool, bool, bool) (1 samples, 0.10%)</title><rect x="1184.1" y="1619.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.1" y="1630.0"></text>
</g>
<g>
<title>GCMemoryManager::gc_begin(bool, bool, bool) (1 samples, 0.10%)</title><rect x="1184.1" y="1603.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.1" y="1614.0"></text>
</g>
<g>
<title>CodeHeapPool::get_memory_usage() (1 samples, 0.10%)</title><rect x="1184.1" y="1587.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.1" y="1598.0"></text>
</g>
<g>
<title>CodeHeap::allocated_capacity() const (1 samples, 0.10%)</title><rect x="1184.1" y="1571.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.1" y="1582.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_references(BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*, GCTimer*, GCId) (1 samples, 0.10%)</title><rect x="1185.3" y="1619.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.3" y="1630.0"></text>
</g>
<g>
<title>JNIHandleBlock::weak_oops_do(BoolObjectClosure*, OopClosure*) (1 samples, 0.10%)</title><rect x="1185.3" y="1603.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.3" y="1614.0"></text>
</g>
<g>
<title>void PSKeepAliveClosure::do_oop_work&lt;oopDesc*&gt;(oopDesc**) (1 samples, 0.10%)</title><rect x="1185.3" y="1587.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.3" y="1598.0"></text>
</g>
<g>
<title>nmethod::oops_do_marking_epilogue() (1 samples, 0.10%)</title><rect x="1186.5" y="1619.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.5" y="1630.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.20%)</title><rect x="1187.6" y="1747.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.6" y="1758.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.20%)</title><rect x="1187.6" y="1731.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.6" y="1742.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.20%)</title><rect x="1187.6" y="1715.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.6" y="1726.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.20%)</title><rect x="1187.6" y="1699.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.6" y="1710.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.20%)</title><rect x="1187.6" y="1683.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.6" y="1694.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.20%)</title><rect x="1187.6" y="1667.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1190.6" y="1678.0"></text>
</g>
</g>
</svg>
