<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2998" onload="init(evt)" viewBox="0 0 1200 2998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="2981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="2981"> </text>
<g id="frames">
<g>
<title>all (1,620 samples, 100.00%)</title><rect x="10.0" y="2947.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="2958.0">all</text>
</g>
<g>
<title>[unknown_Java] (69 samples, 4.26%)</title><rect x="10.0" y="2931.0" width="50.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="2942.0">[unkn..</text>
</g>
<g>
<title>java/lang/Thread.run (536 samples, 33.09%)</title><rect x="60.3" y="2931.0" width="390.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.3" y="2942.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (536 samples, 33.09%)</title><rect x="60.3" y="2915.0" width="390.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.3" y="2926.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (536 samples, 33.09%)</title><rect x="60.3" y="2899.0" width="390.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.3" y="2910.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (536 samples, 33.09%)</title><rect x="60.3" y="2883.0" width="390.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.3" y="2894.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (536 samples, 33.09%)</title><rect x="60.3" y="2867.0" width="390.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.3" y="2878.0">java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (536 samples, 33.09%)</title><rect x="60.3" y="2851.0" width="390.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.3" y="2862.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>sbt/CompletionService$$anon$2.call (536 samples, 33.09%)</title><rect x="60.3" y="2835.0" width="390.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.3" y="2846.0">sbt/CompletionService$$anon$2.call</text>
</g>
<g>
<title>sbt/ConcurrentRestrictions$$anon$4$$Lambda$2282/2130242983.apply (536 samples, 33.09%)</title><rect x="60.3" y="2819.0" width="390.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="63.3" y="2830.0">sbt/ConcurrentRestrictions$$anon$4$$Lambda$2282/21302..</text>
</g>
<g>
<title>sbt/ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1 (536 samples, 33.09%)</title><rect x="60.3" y="2803.0" width="390.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.3" y="2814.0">sbt/ConcurrentRestrictions$$anon$4.$anonfun$submitVal..</text>
</g>
<g>
<title>sbt/Execute$$Lambda$2275/2074687317.apply (536 samples, 33.09%)</title><rect x="60.3" y="2787.0" width="390.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.3" y="2798.0">sbt/Execute$$Lambda$2275/2074687317.apply</text>
</g>
<g>
<title>sbt/Execute.$anonfun$submit$1 (536 samples, 33.09%)</title><rect x="60.3" y="2771.0" width="390.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.3" y="2782.0">sbt/Execute.$anonfun$submit$1</text>
</g>
<g>
<title>sbt/Execute.work (536 samples, 33.09%)</title><rect x="60.3" y="2755.0" width="390.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.3" y="2766.0">sbt/Execute.work</text>
</g>
<g>
<title>sbt/internal/util/ErrorHandling$.wideConvert (536 samples, 33.09%)</title><rect x="60.3" y="2739.0" width="390.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.3" y="2750.0">sbt/internal/util/ErrorHandling$.wideConvert</text>
</g>
<g>
<title>sbt/Execute$$Lambda$2285/1693420777.apply (536 samples, 33.09%)</title><rect x="60.3" y="2723.0" width="390.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.3" y="2734.0">sbt/Execute$$Lambda$2285/1693420777.apply</text>
</g>
<g>
<title>sbt/Execute.$anonfun$submit$2 (536 samples, 33.09%)</title><rect x="60.3" y="2707.0" width="390.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.3" y="2718.0">sbt/Execute.$anonfun$submit$2</text>
</g>
<g>
<title>sbt/std/Transform$$anon$4.work (536 samples, 33.09%)</title><rect x="60.3" y="2691.0" width="390.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.3" y="2702.0">sbt/std/Transform$$anon$4.work</text>
</g>
<g>
<title>sbt/std/Transform$$anon$3$$Lambda$2273/1283634655.apply (536 samples, 33.09%)</title><rect x="60.3" y="2675.0" width="390.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.3" y="2686.0">sbt/std/Transform$$anon$3$$Lambda$2273/1283634655.apply</text>
</g>
<g>
<title>sbt/std/Transform$$anon$3.$anonfun$apply$2 (536 samples, 33.09%)</title><rect x="60.3" y="2659.0" width="390.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.3" y="2670.0">sbt/std/Transform$$anon$3.$anonfun$apply$2</text>
</g>
<g>
<title>sbt/Tests$$$Lambda$5742/907749971.apply (536 samples, 33.09%)</title><rect x="60.3" y="2643.0" width="390.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.3" y="2654.0">sbt/Tests$$$Lambda$5742/907749971.apply</text>
</g>
<g>
<title>sbt/Tests$.$anonfun$toTask$1 (536 samples, 33.09%)</title><rect x="60.3" y="2627.0" width="390.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.3" y="2638.0">sbt/Tests$.$anonfun$toTask$1</text>
</g>
<g>
<title>sbt/TestFunction.apply (536 samples, 33.09%)</title><rect x="60.3" y="2611.0" width="390.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.3" y="2622.0">sbt/TestFunction.apply</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply (536 samples, 33.09%)</title><rect x="60.3" y="2595.0" width="390.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.3" y="2606.0">sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$..</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply (536 samples, 33.09%)</title><rect x="60.3" y="2579.0" width="390.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.3" y="2590.0">sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$..</text>
</g>
<g>
<title>sbt/TestFramework$.sbt$TestFramework$$withContextLoader (536 samples, 33.09%)</title><rect x="60.3" y="2563.0" width="390.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.3" y="2574.0">sbt/TestFramework$.sbt$TestFramework$$withContextLoader</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1$$Lambda$5759/166493860.apply (536 samples, 33.09%)</title><rect x="60.3" y="2547.0" width="390.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.3" y="2558.0">sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$..</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1 (536 samples, 33.09%)</title><rect x="60.3" y="2531.0" width="390.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.3" y="2542.0">sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$..</text>
</g>
<g>
<title>sbt/TestRunner.run (536 samples, 33.09%)</title><rect x="60.3" y="2515.0" width="390.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.3" y="2526.0">sbt/TestRunner.run</text>
</g>
<g>
<title>sbt/TestRunner.runTest$1 (536 samples, 33.09%)</title><rect x="60.3" y="2499.0" width="390.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.3" y="2510.0">sbt/TestRunner.runTest$1</text>
</g>
<g>
<title>org/scalatest/tools/Framework$ScalaTestTask.execute (536 samples, 33.09%)</title><rect x="60.3" y="2483.0" width="390.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.3" y="2494.0">org/scalatest/tools/Framework$ScalaTestTask.execute</text>
</g>
<g>
<title>org/scalatest/tools/Framework.org$scalatest$tools$Framework$$runSuite (536 samples, 33.09%)</title><rect x="60.3" y="2467.0" width="390.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.3" y="2478.0">org/scalatest/tools/Framework.org$scalatest$tools$Fra..</text>
</g>
<g>
<title>org/scalatest/FlatSpec.run (536 samples, 33.09%)</title><rect x="60.3" y="2451.0" width="390.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.3" y="2462.0">org/scalatest/FlatSpec.run</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.run$ (536 samples, 33.09%)</title><rect x="60.3" y="2435.0" width="390.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.3" y="2446.0">org/scalatest/FlatSpecLike.run$</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.run (536 samples, 33.09%)</title><rect x="60.3" y="2419.0" width="390.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.3" y="2430.0">org/scalatest/FlatSpecLike.run</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runImpl (536 samples, 33.09%)</title><rect x="60.3" y="2403.0" width="390.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.3" y="2414.0">org/scalatest/SuperEngine.runImpl</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike$$Lambda$8389/164530132.apply (536 samples, 33.09%)</title><rect x="60.3" y="2387.0" width="390.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.3" y="2398.0">org/scalatest/FlatSpecLike$$Lambda$8389/164530132.apply</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.$anonfun$run$1 (536 samples, 33.09%)</title><rect x="60.3" y="2371.0" width="390.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.3" y="2382.0">org/scalatest/FlatSpecLike.$anonfun$run$1</text>
</g>
<g>
<title>org/scalatest/FlatSpec.org$scalatest$FlatSpecLike$$super$run (536 samples, 33.09%)</title><rect x="60.3" y="2355.0" width="390.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.3" y="2366.0">org/scalatest/FlatSpec.org$scalatest$FlatSpecLike$$su..</text>
</g>
<g>
<title>org/scalatest/Suite.run$ (536 samples, 33.09%)</title><rect x="60.3" y="2339.0" width="390.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="63.3" y="2350.0">org/scalatest/Suite.run$</text>
</g>
<g>
<title>org/scalatest/Suite.run (536 samples, 33.09%)</title><rect x="60.3" y="2323.0" width="390.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.3" y="2334.0">org/scalatest/Suite.run</text>
</g>
<g>
<title>org/scalatest/FlatSpec.runTests (536 samples, 33.09%)</title><rect x="60.3" y="2307.0" width="390.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.3" y="2318.0">org/scalatest/FlatSpec.runTests</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.runTests$ (536 samples, 33.09%)</title><rect x="60.3" y="2291.0" width="390.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.3" y="2302.0">org/scalatest/FlatSpecLike.runTests$</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.runTests (536 samples, 33.09%)</title><rect x="60.3" y="2275.0" width="390.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.3" y="2286.0">org/scalatest/FlatSpecLike.runTests</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestsImpl (536 samples, 33.09%)</title><rect x="60.3" y="2259.0" width="390.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.3" y="2270.0">org/scalatest/SuperEngine.runTestsImpl</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestsInBranch (536 samples, 33.09%)</title><rect x="60.3" y="2243.0" width="390.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.3" y="2254.0">org/scalatest/SuperEngine.runTestsInBranch</text>
</g>
<g>
<title>org/scalatest/SuperEngine.traverseSubNodes$1 (536 samples, 33.09%)</title><rect x="60.3" y="2227.0" width="390.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.3" y="2238.0">org/scalatest/SuperEngine.traverseSubNodes$1</text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (536 samples, 33.09%)</title><rect x="60.3" y="2211.0" width="390.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.3" y="2222.0">scala/collection/immutable/List.foreach</text>
</g>
<g>
<title>org/scalatest/SuperEngine$$Lambda$8397/901443256.apply (536 samples, 33.09%)</title><rect x="60.3" y="2195.0" width="390.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.3" y="2206.0">org/scalatest/SuperEngine$$Lambda$8397/901443256.apply</text>
</g>
<g>
<title>org/scalatest/SuperEngine.$anonfun$runTestsInBranch$1 (536 samples, 33.09%)</title><rect x="60.3" y="2179.0" width="390.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.3" y="2190.0">org/scalatest/SuperEngine.$anonfun$runTestsInBranch$1</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestsInBranch (536 samples, 33.09%)</title><rect x="60.3" y="2163.0" width="390.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.3" y="2174.0">org/scalatest/SuperEngine.runTestsInBranch</text>
</g>
<g>
<title>org/scalatest/SuperEngine.traverseSubNodes$1 (536 samples, 33.09%)</title><rect x="60.3" y="2147.0" width="390.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.3" y="2158.0">org/scalatest/SuperEngine.traverseSubNodes$1</text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (536 samples, 33.09%)</title><rect x="60.3" y="2131.0" width="390.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.3" y="2142.0">scala/collection/immutable/List.foreach</text>
</g>
<g>
<title>org/scalatest/SuperEngine$$Lambda$8397/901443256.apply (536 samples, 33.09%)</title><rect x="60.3" y="2115.0" width="390.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.3" y="2126.0">org/scalatest/SuperEngine$$Lambda$8397/901443256.apply</text>
</g>
<g>
<title>org/scalatest/SuperEngine.$anonfun$runTestsInBranch$1 (536 samples, 33.09%)</title><rect x="60.3" y="2099.0" width="390.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="63.3" y="2110.0">org/scalatest/SuperEngine.$anonfun$runTestsInBranch$1</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike$$Lambda$8396/1396293837.apply (536 samples, 33.09%)</title><rect x="60.3" y="2083.0" width="390.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.3" y="2094.0">org/scalatest/FlatSpecLike$$Lambda$8396/1396293837.ap..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.$anonfun$runTests$1 (536 samples, 33.09%)</title><rect x="60.3" y="2067.0" width="390.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.3" y="2078.0">org/scalatest/FlatSpecLike.$anonfun$runTests$1</text>
</g>
<g>
<title>org/scalatest/FlatSpec.runTest (536 samples, 33.09%)</title><rect x="60.3" y="2051.0" width="390.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.3" y="2062.0">org/scalatest/FlatSpec.runTest</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.runTest$ (536 samples, 33.09%)</title><rect x="60.3" y="2035.0" width="390.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.3" y="2046.0">org/scalatest/FlatSpecLike.runTest$</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.runTest (536 samples, 33.09%)</title><rect x="60.3" y="2019.0" width="390.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.3" y="2030.0">org/scalatest/FlatSpecLike.runTest</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestImpl (536 samples, 33.09%)</title><rect x="60.3" y="2003.0" width="390.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.3" y="2014.0">org/scalatest/SuperEngine.runTestImpl</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike$$Lambda$8412/1701894363.apply (536 samples, 33.09%)</title><rect x="60.3" y="1987.0" width="390.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.3" y="1998.0">org/scalatest/FlatSpecLike$$Lambda$8412/1701894363.ap..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.$anonfun$runTest$1 (536 samples, 33.09%)</title><rect x="60.3" y="1971.0" width="390.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.3" y="1982.0">org/scalatest/FlatSpecLike.$anonfun$runTest$1</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.invokeWithFixture$1 (536 samples, 33.09%)</title><rect x="60.3" y="1955.0" width="390.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.3" y="1966.0">org/scalatest/FlatSpecLike.invokeWithFixture$1</text>
</g>
<g>
<title>org/scalatest/FlatSpec.withFixture (536 samples, 33.09%)</title><rect x="60.3" y="1939.0" width="390.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.3" y="1950.0">org/scalatest/FlatSpec.withFixture</text>
</g>
<g>
<title>org/scalatest/TestSuite.withFixture$ (536 samples, 33.09%)</title><rect x="60.3" y="1923.0" width="390.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.3" y="1934.0">org/scalatest/TestSuite.withFixture$</text>
</g>
<g>
<title>org/scalatest/TestSuite.withFixture (536 samples, 33.09%)</title><rect x="60.3" y="1907.0" width="390.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.3" y="1918.0">org/scalatest/TestSuite.withFixture</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike$$anon$5.apply (536 samples, 33.09%)</title><rect x="60.3" y="1891.0" width="390.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.3" y="1902.0">org/scalatest/FlatSpecLike$$anon$5.apply</text>
</g>
<g>
<title>org/scalatest/Transformer.apply (536 samples, 33.09%)</title><rect x="60.3" y="1875.0" width="390.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="63.3" y="1886.0">org/scalatest/Transformer.apply</text>
</g>
<g>
<title>org/scalatest/Transformer.apply (536 samples, 33.09%)</title><rect x="60.3" y="1859.0" width="390.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.3" y="1870.0">org/scalatest/Transformer.apply</text>
</g>
<g>
<title>org/scalatest/OutcomeOf$.outcomeOf (536 samples, 33.09%)</title><rect x="60.3" y="1843.0" width="390.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.3" y="1854.0">org/scalatest/OutcomeOf$.outcomeOf</text>
</g>
<g>
<title>org/scalatest/OutcomeOf.outcomeOf$ (536 samples, 33.09%)</title><rect x="60.3" y="1827.0" width="390.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.3" y="1838.0">org/scalatest/OutcomeOf.outcomeOf$</text>
</g>
<g>
<title>org/scalatest/OutcomeOf.outcomeOf (536 samples, 33.09%)</title><rect x="60.3" y="1811.0" width="390.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.3" y="1822.0">org/scalatest/OutcomeOf.outcomeOf</text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (536 samples, 33.09%)</title><rect x="60.3" y="1795.0" width="390.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.3" y="1806.0">scala/runtime/java8/JFunction0$mcV$sp.apply</text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$8376/1365403525.apply$mcV$sp (110 samples, 6.79%)</title><rect x="60.3" y="1779.0" width="80.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.3" y="1790.0">treadle/G..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$new$2 (110 samples, 6.79%)</title><rect x="60.3" y="1763.0" width="80.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.3" y="1774.0">treadle/G..</text>
</g>
<g>
<title>treadle/GCDTester.sizableTest (110 samples, 6.79%)</title><rect x="60.3" y="1747.0" width="80.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="63.3" y="1758.0">treadle/G..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.foreach (110 samples, 6.79%)</title><rect x="60.3" y="1731.0" width="80.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.3" y="1742.0">scala/col..</text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (110 samples, 6.79%)</title><rect x="60.3" y="1715.0" width="80.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.3" y="1726.0">scala/col..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (110 samples, 6.79%)</title><rect x="60.3" y="1699.0" width="80.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.3" y="1710.0">scala/col..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (110 samples, 6.79%)</title><rect x="60.3" y="1683.0" width="80.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.3" y="1694.0">scala/col..</text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (110 samples, 6.79%)</title><rect x="60.3" y="1667.0" width="80.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.3" y="1678.0">scala/col..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (110 samples, 6.79%)</title><rect x="60.3" y="1651.0" width="80.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.3" y="1662.0">scala/col..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach (110 samples, 6.79%)</title><rect x="60.3" y="1635.0" width="80.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.3" y="1646.0">scala/col..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter$$Lambda$3740/6454130.apply (110 samples, 6.79%)</title><rect x="60.3" y="1619.0" width="80.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.3" y="1630.0">scala/col..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.$anonfun$foreach$1 (110 samples, 6.79%)</title><rect x="60.3" y="1603.0" width="80.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.3" y="1614.0">scala/col..</text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$9316/1861732412.apply (110 samples, 6.79%)</title><rect x="60.3" y="1587.0" width="80.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.3" y="1598.0">treadle/G..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$sizableTest$4$adapted (110 samples, 6.79%)</title><rect x="60.3" y="1571.0" width="80.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.3" y="1582.0">treadle/G..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$sizableTest$4 (110 samples, 6.79%)</title><rect x="60.3" y="1555.0" width="80.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.3" y="1566.0">treadle/G..</text>
</g>
<g>
<title>treadle/TreadleTester.peek (42 samples, 2.59%)</title><rect x="60.3" y="1539.0" width="30.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.3" y="1550.0">tr..</text>
</g>
<g>
<title>treadle/TreadleTester.engine (1 samples, 0.06%)</title><rect x="60.3" y="1523.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.3" y="1534.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (40 samples, 2.47%)</title><rect x="61.0" y="1523.0" width="29.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.0" y="1534.0">tr..</text>
</g>
<g>
<title>scala/collection/mutable/HashSet.clear (1 samples, 0.06%)</title><rect x="61.0" y="1507.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.0" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.clearTable (1 samples, 0.06%)</title><rect x="61.0" y="1491.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.0" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.clearTable$ (1 samples, 0.06%)</title><rect x="61.0" y="1475.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.0" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.clearTable (1 samples, 0.06%)</title><rect x="61.0" y="1459.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.0" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (39 samples, 2.41%)</title><rect x="61.7" y="1507.0" width="28.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.7" y="1518.0">tr..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (39 samples, 2.41%)</title><rect x="61.7" y="1491.0" width="28.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.7" y="1502.0">tr..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (39 samples, 2.41%)</title><rect x="61.7" y="1475.0" width="28.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.7" y="1486.0">tr..</text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="61.7" y="1459.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="64.7" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$9310/742057590.apply$mcV$sp (3 samples, 0.19%)</title><rect x="62.4" y="1459.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.4" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (3 samples, 0.19%)</title><rect x="62.4" y="1443.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.4" y="1454.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (3 samples, 0.19%)</title><rect x="62.4" y="1427.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.4" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.treadle$executable$DataStore$AssignInt$$$outer (1 samples, 0.06%)</title><rect x="62.4" y="1411.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.4" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/EqInts.apply (1 samples, 0.06%)</title><rect x="62.4" y="1395.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.4" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (2 samples, 0.12%)</title><rect x="63.2" y="1411.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.2" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (2 samples, 0.12%)</title><rect x="63.2" y="1395.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="66.2" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (2 samples, 0.12%)</title><rect x="63.2" y="1379.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.2" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (2 samples, 0.12%)</title><rect x="63.2" y="1363.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="66.2" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (2 samples, 0.12%)</title><rect x="63.2" y="1347.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.2" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (2 samples, 0.12%)</title><rect x="63.2" y="1331.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.2" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (2 samples, 0.12%)</title><rect x="63.2" y="1315.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.2" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (2 samples, 0.12%)</title><rect x="63.2" y="1299.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="66.2" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.06%)</title><rect x="63.2" y="1283.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.2" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.06%)</title><rect x="63.2" y="1267.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="66.2" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.06%)</title><rect x="63.2" y="1251.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="66.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.06%)</title><rect x="63.2" y="1235.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.06%)</title><rect x="63.2" y="1219.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.2" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.06%)</title><rect x="63.2" y="1203.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.06%)</title><rect x="63.2" y="1187.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.2" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="63.2" y="1171.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.2" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="63.2" y="1155.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.2" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="63.2" y="1139.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.2" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (1 samples, 0.06%)</title><rect x="63.9" y="1283.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.06%)</title><rect x="63.9" y="1267.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.9" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$9319/759737291.apply (1 samples, 0.06%)</title><rect x="63.9" y="1251.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.9" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (1 samples, 0.06%)</title><rect x="63.9" y="1235.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.06%)</title><rect x="63.9" y="1219.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.06%)</title><rect x="63.9" y="1203.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.06%)</title><rect x="63.9" y="1187.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.06%)</title><rect x="63.9" y="1171.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.06%)</title><rect x="63.9" y="1155.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.06%)</title><rect x="63.9" y="1139.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.06%)</title><rect x="63.9" y="1123.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.9" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="63.9" y="1107.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="66.9" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="63.9" y="1091.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="66.9" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="63.9" y="1075.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="63.9" y="1059.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.9" y="1070.0"></text>
</g>
<g>
<title>firrtl/ir/NoInfo$.hashCode (1 samples, 0.06%)</title><rect x="63.9" y="1043.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.9" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$9348/1130099780.apply$mcV$sp (35 samples, 2.16%)</title><rect x="64.6" y="1459.0" width="25.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.6" y="1470.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (35 samples, 2.16%)</title><rect x="64.6" y="1443.0" width="25.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.6" y="1454.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (35 samples, 2.16%)</title><rect x="64.6" y="1427.0" width="25.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.6" y="1438.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.expression (1 samples, 0.06%)</title><rect x="64.6" y="1411.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="67.6" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.treadle$executable$DataStore$AssignLong$$$outer (1 samples, 0.06%)</title><rect x="65.4" y="1411.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.4" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/TailLongs.apply (1 samples, 0.06%)</title><rect x="65.4" y="1395.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.4" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.06%)</title><rect x="66.1" y="1411.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.1" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (30 samples, 1.85%)</title><rect x="66.8" y="1411.0" width="21.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.8" y="1422.0">t..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (30 samples, 1.85%)</title><rect x="66.8" y="1395.0" width="21.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.8" y="1406.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (30 samples, 1.85%)</title><rect x="66.8" y="1379.0" width="21.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.8" y="1390.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (30 samples, 1.85%)</title><rect x="66.8" y="1363.0" width="21.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.8" y="1374.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.length$ (1 samples, 0.06%)</title><rect x="66.8" y="1347.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.8" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (29 samples, 1.79%)</title><rect x="67.5" y="1347.0" width="21.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="70.5" y="1358.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (29 samples, 1.79%)</title><rect x="67.5" y="1331.0" width="21.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.5" y="1342.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (29 samples, 1.79%)</title><rect x="67.5" y="1315.0" width="21.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="70.5" y="1326.0">t..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (29 samples, 1.79%)</title><rect x="67.5" y="1299.0" width="21.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.5" y="1310.0">t..</text>
</g>
<g>
<title>scala/LowPriorityImplicits.wrapRefArray (1 samples, 0.06%)</title><rect x="68.3" y="1283.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.3" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.&lt;init&gt; (1 samples, 0.06%)</title><rect x="68.3" y="1267.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.3" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.&lt;init&gt; (1 samples, 0.06%)</title><rect x="68.3" y="1251.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.3" y="1262.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (1 samples, 0.06%)</title><rect x="69.0" y="1283.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.0" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (1 samples, 0.06%)</title><rect x="69.0" y="1267.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="72.0" y="1278.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (1 samples, 0.06%)</title><rect x="69.0" y="1251.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (1 samples, 0.06%)</title><rect x="69.0" y="1235.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.0" y="1246.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.loop$1 (1 samples, 0.06%)</title><rect x="69.0" y="1219.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (3 samples, 0.19%)</title><rect x="69.7" y="1283.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.7" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (3 samples, 0.19%)</title><rect x="69.7" y="1267.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.7" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (3 samples, 0.19%)</title><rect x="69.7" y="1251.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (3 samples, 0.19%)</title><rect x="69.7" y="1235.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (3 samples, 0.19%)</title><rect x="69.7" y="1219.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (3 samples, 0.19%)</title><rect x="69.7" y="1203.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (3 samples, 0.19%)</title><rect x="69.7" y="1187.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.7" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.19%)</title><rect x="69.7" y="1171.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.7" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (3 samples, 0.19%)</title><rect x="69.7" y="1155.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.7" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="69.7" y="1139.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.7" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="70.5" y="1139.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.06%)</title><rect x="70.5" y="1123.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.5" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.dataType (1 samples, 0.06%)</title><rect x="71.2" y="1139.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (11 samples, 0.68%)</title><rect x="71.9" y="1283.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (11 samples, 0.68%)</title><rect x="71.9" y="1267.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.9" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (11 samples, 0.68%)</title><rect x="71.9" y="1251.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (11 samples, 0.68%)</title><rect x="71.9" y="1235.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.9" y="1246.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.12%)</title><rect x="71.9" y="1219.0" width="1.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="74.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.06%)</title><rect x="73.4" y="1219.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.4" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (5 samples, 0.31%)</title><rect x="74.1" y="1219.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (5 samples, 0.31%)</title><rect x="74.1" y="1203.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (5 samples, 0.31%)</title><rect x="74.1" y="1187.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.1" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (5 samples, 0.31%)</title><rect x="74.1" y="1171.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="77.1" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (5 samples, 0.31%)</title><rect x="74.1" y="1155.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.1" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.25%)</title><rect x="74.1" y="1139.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.1" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (2 samples, 0.12%)</title><rect x="74.8" y="1123.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.8" y="1134.0"></text>
</g>
<g>
<title>firrtl/NodeKind$.hashCode (1 samples, 0.06%)</title><rect x="74.8" y="1107.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.8" y="1118.0"></text>
</g>
<g>
<title>firrtl/PortKind$.hashCode (1 samples, 0.06%)</title><rect x="75.6" y="1107.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.6" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/LongSize$.hashCode (1 samples, 0.06%)</title><rect x="76.3" y="1123.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.3" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="77.0" y="1139.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.06%)</title><rect x="77.0" y="1123.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.06%)</title><rect x="77.7" y="1219.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.12%)</title><rect x="78.5" y="1219.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (2 samples, 0.12%)</title><rect x="78.5" y="1203.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="81.5" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (2 samples, 0.12%)</title><rect x="78.5" y="1187.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (2 samples, 0.12%)</title><rect x="78.5" y="1171.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.5" y="1182.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.12%)</title><rect x="78.5" y="1155.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.5" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.12%)</title><rect x="78.5" y="1139.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.5" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.12%)</title><rect x="78.5" y="1123.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.5" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (7 samples, 0.43%)</title><rect x="79.9" y="1283.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (7 samples, 0.43%)</title><rect x="79.9" y="1267.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.9" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$9319/759737291.apply (7 samples, 0.43%)</title><rect x="79.9" y="1251.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.9" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (7 samples, 0.43%)</title><rect x="79.9" y="1235.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (7 samples, 0.43%)</title><rect x="79.9" y="1219.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="82.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (7 samples, 0.43%)</title><rect x="79.9" y="1203.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (7 samples, 0.43%)</title><rect x="79.9" y="1187.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="82.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (7 samples, 0.43%)</title><rect x="79.9" y="1171.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.9" y="1182.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="80.7" y="1155.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="83.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.06%)</title><rect x="81.4" y="1155.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.06%)</title><rect x="81.4" y="1139.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (4 samples, 0.25%)</title><rect x="82.1" y="1155.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (4 samples, 0.25%)</title><rect x="82.1" y="1139.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (4 samples, 0.25%)</title><rect x="82.1" y="1123.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.1" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.25%)</title><rect x="82.1" y="1107.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.1" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (4 samples, 0.25%)</title><rect x="82.1" y="1091.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.1" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="82.1" y="1075.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.1" y="1086.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.06%)</title><rect x="82.1" y="1059.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.1" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.06%)</title><rect x="82.1" y="1043.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.1" y="1054.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.06%)</title><rect x="82.1" y="1027.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.1" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.06%)</title><rect x="82.1" y="1011.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.1" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="82.1" y="995.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="85.1" y="1006.0"></text>
</g>
<g>
<title>firrtl/ir/IntWidth.hashCode (1 samples, 0.06%)</title><rect x="82.1" y="979.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.1" y="990.0"></text>
</g>
<g>
<title>scala/math/BigInt.toInt (1 samples, 0.06%)</title><rect x="82.1" y="963.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.1" y="974.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt$ (1 samples, 0.06%)</title><rect x="82.1" y="947.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.1" y="958.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt (1 samples, 0.06%)</title><rect x="82.1" y="931.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.1" y="942.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.06%)</title><rect x="82.1" y="915.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.1" y="926.0"></text>
</g>
<g>
<title>scala/math/BigInt.bigInteger (1 samples, 0.06%)</title><rect x="82.1" y="899.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="85.1" y="910.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.06%)</title><rect x="82.8" y="1059.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.8" y="1070.0"></text>
</g>
<g>
<title>firrtl/NodeKind$.hashCode (1 samples, 0.06%)</title><rect x="82.8" y="1043.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.8" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="83.6" y="1075.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.6" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.06%)</title><rect x="83.6" y="1059.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.6" y="1070.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.dataKind (1 samples, 0.06%)</title><rect x="84.3" y="1075.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.3" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.apply (3 samples, 0.19%)</title><rect x="85.0" y="1283.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.0" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (3 samples, 0.19%)</title><rect x="85.0" y="1267.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.0" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (3 samples, 0.19%)</title><rect x="85.0" y="1251.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="88.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (3 samples, 0.19%)</title><rect x="85.0" y="1235.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.0" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.06%)</title><rect x="86.5" y="1219.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.06%)</title><rect x="86.5" y="1203.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="89.5" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (2 samples, 0.12%)</title><rect x="87.2" y="1283.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.2" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (2 samples, 0.12%)</title><rect x="87.2" y="1267.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.2" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.12%)</title><rect x="87.2" y="1251.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.12%)</title><rect x="87.2" y="1235.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.12%)</title><rect x="87.2" y="1219.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.2" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.12%)</title><rect x="87.2" y="1203.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="90.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (2 samples, 0.12%)</title><rect x="87.2" y="1187.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (2 samples, 0.12%)</title><rect x="87.2" y="1171.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (2 samples, 0.12%)</title><rect x="87.2" y="1155.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.2" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.12%)</title><rect x="87.2" y="1139.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.2" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.12%)</title><rect x="87.2" y="1123.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.2" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.12%)</title><rect x="87.2" y="1107.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="87.2" y="1091.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.2" y="1102.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="87.9" y="1091.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="90.9" y="1102.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$9337/1652281757.apply$mcJ$sp (2 samples, 0.12%)</title><rect x="88.7" y="1411.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.7" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$8 (2 samples, 0.12%)</title><rect x="88.7" y="1395.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.7" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/MuxLongs.apply (1 samples, 0.06%)</title><rect x="88.7" y="1379.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.7" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$9334/1328769736.apply$mcI$sp (1 samples, 0.06%)</title><rect x="88.7" y="1363.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.7" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$203 (1 samples, 0.06%)</title><rect x="88.7" y="1347.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="91.7" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/TailLongs.apply (1 samples, 0.06%)</title><rect x="89.4" y="1379.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.4" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.combinationalBump (1 samples, 0.06%)</title><rect x="90.1" y="1523.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.1" y="1534.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.incrementTime (1 samples, 0.06%)</title><rect x="90.1" y="1507.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="93.1" y="1518.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.runUntil (1 samples, 0.06%)</title><rect x="90.1" y="1491.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="93.1" y="1502.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.setTime (1 samples, 0.06%)</title><rect x="90.1" y="1475.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="93.1" y="1486.0"></text>
</g>
<g>
<title>treadle/TreadleTester$$Lambda$9296/1771936790.apply$mcV$sp (1 samples, 0.06%)</title><rect x="90.1" y="1459.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.1" y="1470.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$2 (1 samples, 0.06%)</title><rect x="90.1" y="1443.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.1" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/770911223.linkToTargetMethod (1 samples, 0.06%)</title><rect x="90.1" y="1427.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.1" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$9348/1130099780.apply$mcV$sp (1 samples, 0.06%)</title><rect x="90.1" y="1411.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="93.1" y="1422.0"></text>
</g>
<g>
<title>treadle/TreadleTester.step (68 samples, 4.20%)</title><rect x="90.9" y="1539.0" width="49.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.9" y="1550.0">tread..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.run (68 samples, 4.20%)</title><rect x="90.9" y="1523.0" width="49.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="93.9" y="1534.0">tread..</text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach$mVc$sp (68 samples, 4.20%)</title><rect x="90.9" y="1507.0" width="49.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="93.9" y="1518.0">scala..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper$$Lambda$9317/206114504.apply$mcVI$sp (68 samples, 4.20%)</title><rect x="90.9" y="1491.0" width="49.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.9" y="1502.0">tread..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.$anonfun$run$2 (68 samples, 4.20%)</title><rect x="90.9" y="1475.0" width="49.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.9" y="1486.0">tread..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (10 samples, 0.62%)</title><rect x="90.9" y="1459.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.9" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (10 samples, 0.62%)</title><rect x="90.9" y="1443.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.9" y="1454.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (10 samples, 0.62%)</title><rect x="90.9" y="1427.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.9" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (10 samples, 0.62%)</title><rect x="90.9" y="1411.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.9" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$9310/742057590.apply$mcV$sp (1 samples, 0.06%)</title><rect x="90.9" y="1395.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.9" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (1 samples, 0.06%)</title><rect x="90.9" y="1379.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.9" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (1 samples, 0.06%)</title><rect x="90.9" y="1363.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.9" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (1 samples, 0.06%)</title><rect x="90.9" y="1347.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.9" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.06%)</title><rect x="90.9" y="1331.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.9" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.06%)</title><rect x="90.9" y="1315.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.9" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.06%)</title><rect x="90.9" y="1299.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.9" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (1 samples, 0.06%)</title><rect x="90.9" y="1283.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.9" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (1 samples, 0.06%)</title><rect x="90.9" y="1267.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.9" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (1 samples, 0.06%)</title><rect x="90.9" y="1251.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.9" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (1 samples, 0.06%)</title><rect x="90.9" y="1235.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.9" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (1 samples, 0.06%)</title><rect x="90.9" y="1219.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.06%)</title><rect x="90.9" y="1203.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.9" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$9319/759737291.apply (1 samples, 0.06%)</title><rect x="90.9" y="1187.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.9" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (1 samples, 0.06%)</title><rect x="90.9" y="1171.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.06%)</title><rect x="90.9" y="1155.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.06%)</title><rect x="90.9" y="1139.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.06%)</title><rect x="90.9" y="1123.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.06%)</title><rect x="90.9" y="1107.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.9" y="1118.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="90.9" y="1091.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="93.9" y="1102.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$9348/1130099780.apply$mcV$sp (9 samples, 0.56%)</title><rect x="91.6" y="1395.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.6" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (9 samples, 0.56%)</title><rect x="91.6" y="1379.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.6" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (9 samples, 0.56%)</title><rect x="91.6" y="1363.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.6" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (9 samples, 0.56%)</title><rect x="91.6" y="1347.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.6" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (9 samples, 0.56%)</title><rect x="91.6" y="1331.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.6" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (9 samples, 0.56%)</title><rect x="91.6" y="1315.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.6" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (9 samples, 0.56%)</title><rect x="91.6" y="1299.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="94.6" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (9 samples, 0.56%)</title><rect x="91.6" y="1283.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.6" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (9 samples, 0.56%)</title><rect x="91.6" y="1267.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.6" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (9 samples, 0.56%)</title><rect x="91.6" y="1251.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.6" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (9 samples, 0.56%)</title><rect x="91.6" y="1235.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (2 samples, 0.12%)</title><rect x="91.6" y="1219.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.12%)</title><rect x="91.6" y="1203.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.12%)</title><rect x="91.6" y="1187.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="94.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.12%)</title><rect x="91.6" y="1171.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.06%)</title><rect x="91.6" y="1155.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.06%)</title><rect x="91.6" y="1139.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.06%)</title><rect x="91.6" y="1123.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="94.6" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="91.6" y="1107.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.6" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="91.6" y="1091.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.6" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="91.6" y="1075.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.6" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/UnsignedInt$.hashCode (1 samples, 0.06%)</title><rect x="91.6" y="1059.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.6" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.06%)</title><rect x="92.3" y="1155.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="95.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.06%)</title><rect x="92.3" y="1139.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.06%)</title><rect x="92.3" y="1123.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.06%)</title><rect x="92.3" y="1107.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="95.3" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.06%)</title><rect x="92.3" y="1091.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.3" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.06%)</title><rect x="92.3" y="1075.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="95.3" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.equals (1 samples, 0.06%)</title><rect x="92.3" y="1059.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="95.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (5 samples, 0.31%)</title><rect x="93.0" y="1219.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (5 samples, 0.31%)</title><rect x="93.0" y="1203.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="96.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (5 samples, 0.31%)</title><rect x="93.0" y="1187.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (5 samples, 0.31%)</title><rect x="93.0" y="1171.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.0" y="1182.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.19%)</title><rect x="93.0" y="1155.0" width="2.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="96.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (2 samples, 0.12%)</title><rect x="95.2" y="1155.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (2 samples, 0.12%)</title><rect x="95.2" y="1139.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (2 samples, 0.12%)</title><rect x="95.2" y="1123.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.2" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="95.2" y="1107.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.2" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (2 samples, 0.12%)</title><rect x="95.2" y="1091.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="98.2" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="95.2" y="1075.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="98.2" y="1086.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.06%)</title><rect x="95.2" y="1059.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.2" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.06%)</title><rect x="95.2" y="1043.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.2" y="1054.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.06%)</title><rect x="95.2" y="1027.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="98.2" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.06%)</title><rect x="95.2" y="1011.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="98.2" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="95.2" y="995.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="98.2" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.06%)</title><rect x="96.0" y="1059.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.0" y="1070.0"></text>
</g>
<g>
<title>firrtl/PortKind$.hashCode (1 samples, 0.06%)</title><rect x="96.0" y="1043.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.0" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (2 samples, 0.12%)</title><rect x="96.7" y="1219.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (2 samples, 0.12%)</title><rect x="96.7" y="1203.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.7" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$9319/759737291.apply (2 samples, 0.12%)</title><rect x="96.7" y="1187.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.7" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (2 samples, 0.12%)</title><rect x="96.7" y="1171.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (2 samples, 0.12%)</title><rect x="96.7" y="1155.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (2 samples, 0.12%)</title><rect x="96.7" y="1139.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="99.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (2 samples, 0.12%)</title><rect x="96.7" y="1123.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (2 samples, 0.12%)</title><rect x="96.7" y="1107.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="99.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.06%)</title><rect x="97.4" y="1091.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.4" y="1102.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.raiseClock$1 (58 samples, 3.58%)</title><rect x="98.1" y="1459.0" width="42.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.1" y="1470.0">trea..</text>
</g>
<g>
<title>treadle/chronometry/UTC.incrementTime (4 samples, 0.25%)</title><rect x="98.1" y="1443.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="101.1" y="1454.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.runUntil (4 samples, 0.25%)</title><rect x="98.1" y="1427.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.1" y="1438.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.setTime (4 samples, 0.25%)</title><rect x="98.1" y="1411.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.1" y="1422.0"></text>
</g>
<g>
<title>treadle/TreadleTester$$Lambda$9296/1771936790.apply$mcV$sp (4 samples, 0.25%)</title><rect x="98.1" y="1395.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.1" y="1406.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$2 (4 samples, 0.25%)</title><rect x="98.1" y="1379.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.1" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$9348/1130099780.apply$mcV$sp (1 samples, 0.06%)</title><rect x="99.6" y="1363.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.6" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.run (1 samples, 0.06%)</title><rect x="100.3" y="1363.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.3" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (54 samples, 3.33%)</title><rect x="101.0" y="1443.0" width="39.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.0" y="1454.0">tre..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (54 samples, 3.33%)</title><rect x="101.0" y="1427.0" width="39.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.0" y="1438.0">tre..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (54 samples, 3.33%)</title><rect x="101.0" y="1411.0" width="39.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.0" y="1422.0">tre..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (54 samples, 3.33%)</title><rect x="101.0" y="1395.0" width="39.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.0" y="1406.0">tre..</text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner$$Lambda$9311/2037028822.apply$mcV$sp (6 samples, 0.37%)</title><rect x="101.0" y="1379.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.0" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.$anonfun$setLeanMode$2 (6 samples, 0.37%)</title><rect x="101.0" y="1363.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.0" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.runFull (6 samples, 0.37%)</title><rect x="101.0" y="1347.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.0" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$9348/1130099780.apply$mcV$sp (6 samples, 0.37%)</title><rect x="101.0" y="1331.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.0" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (6 samples, 0.37%)</title><rect x="101.0" y="1315.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.0" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (6 samples, 0.37%)</title><rect x="101.0" y="1299.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.0" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (6 samples, 0.37%)</title><rect x="101.0" y="1283.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.0" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (6 samples, 0.37%)</title><rect x="101.0" y="1267.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.0" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (6 samples, 0.37%)</title><rect x="101.0" y="1251.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="104.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (6 samples, 0.37%)</title><rect x="101.0" y="1235.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.0" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (6 samples, 0.37%)</title><rect x="101.0" y="1219.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.0" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (6 samples, 0.37%)</title><rect x="101.0" y="1203.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.0" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (6 samples, 0.37%)</title><rect x="101.0" y="1187.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.0" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (6 samples, 0.37%)</title><rect x="101.0" y="1171.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (2 samples, 0.12%)</title><rect x="101.0" y="1155.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (1 samples, 0.06%)</title><rect x="101.0" y="1139.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.06%)</title><rect x="101.0" y="1123.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.06%)</title><rect x="101.0" y="1107.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="101.0" y="1091.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="101.0" y="1075.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.0" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="101.0" y="1059.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="101.0" y="1043.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.0" y="1054.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="101.0" y="1027.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="104.0" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="101.0" y="1011.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/generic/GenericTraversableTemplate.$init$ (1 samples, 0.06%)</title><rect x="101.0" y="995.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.0" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (1 samples, 0.06%)</title><rect x="101.8" y="1139.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (1 samples, 0.06%)</title><rect x="101.8" y="1123.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (1 samples, 0.06%)</title><rect x="101.8" y="1107.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.foreach (1 samples, 0.06%)</title><rect x="101.8" y="1091.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach$ (1 samples, 0.06%)</title><rect x="101.8" y="1075.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach (1 samples, 0.06%)</title><rect x="101.8" y="1059.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.8" y="1070.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable$$Lambda$3535/1093185857.apply (1 samples, 0.06%)</title><rect x="101.8" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.8" y="1054.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$anonfun$$plus$plus$eq$1 (1 samples, 0.06%)</title><rect x="101.8" y="1027.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.8" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (1 samples, 0.06%)</title><rect x="101.8" y="1011.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.8" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (1 samples, 0.06%)</title><rect x="101.8" y="995.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.8" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.06%)</title><rect x="101.8" y="979.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.8" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.06%)</title><rect x="101.8" y="963.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.8" y="974.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.06%)</title><rect x="101.8" y="947.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.8" y="958.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.06%)</title><rect x="101.8" y="931.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.8" y="942.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.06%)</title><rect x="101.8" y="915.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.8" y="926.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.06%)</title><rect x="101.8" y="899.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.8" y="910.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="101.8" y="883.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.8" y="894.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="101.8" y="867.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.8" y="878.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="101.8" y="851.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.8" y="862.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.06%)</title><rect x="102.5" y="1155.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.06%)</title><rect x="102.5" y="1139.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.5" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.06%)</title><rect x="102.5" y="1123.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.06%)</title><rect x="102.5" y="1107.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="105.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.06%)</title><rect x="102.5" y="1091.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.06%)</title><rect x="102.5" y="1075.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.06%)</title><rect x="102.5" y="1059.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.5" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="102.5" y="1043.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.5" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="102.5" y="1027.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.5" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="102.5" y="1011.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.5" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.06%)</title><rect x="102.5" y="995.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.5" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (1 samples, 0.06%)</title><rect x="103.2" y="1155.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.2" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.06%)</title><rect x="103.2" y="1139.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.2" y="1150.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.06%)</title><rect x="103.2" y="1123.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.2" y="1134.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.06%)</title><rect x="103.2" y="1107.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.2" y="1118.0"></text>
</g>
<g>
<title>java/math/BigInteger.valueOf (1 samples, 0.06%)</title><rect x="103.2" y="1091.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.2" y="1102.0"></text>
</g>
<g>
<title>java/math/BigInteger.&lt;init&gt; (1 samples, 0.06%)</title><rect x="103.2" y="1075.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="106.2" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.apply (2 samples, 0.12%)</title><rect x="104.0" y="1155.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (2 samples, 0.12%)</title><rect x="104.0" y="1139.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.12%)</title><rect x="104.0" y="1123.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.12%)</title><rect x="104.0" y="1107.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.12%)</title><rect x="104.0" y="1091.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="107.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.12%)</title><rect x="104.0" y="1075.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="107.0" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.06%)</title><rect x="104.7" y="1059.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.06%)</title><rect x="104.7" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="107.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.06%)</title><rect x="104.7" y="1027.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.7" y="1038.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$9310/742057590.apply$mcV$sp (17 samples, 1.05%)</title><rect x="105.4" y="1379.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.4" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (17 samples, 1.05%)</title><rect x="105.4" y="1363.0" width="12.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="108.4" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (17 samples, 1.05%)</title><rect x="105.4" y="1347.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.4" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (17 samples, 1.05%)</title><rect x="105.4" y="1331.0" width="12.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.4" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (17 samples, 1.05%)</title><rect x="105.4" y="1315.0" width="12.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.4" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (17 samples, 1.05%)</title><rect x="105.4" y="1299.0" width="12.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.4" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (17 samples, 1.05%)</title><rect x="105.4" y="1283.0" width="12.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.4" y="1294.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (1 samples, 0.06%)</title><rect x="105.4" y="1267.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="108.4" y="1278.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.size$ (1 samples, 0.06%)</title><rect x="105.4" y="1251.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="108.4" y="1262.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.size (1 samples, 0.06%)</title><rect x="105.4" y="1235.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.4" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.length (1 samples, 0.06%)</title><rect x="105.4" y="1219.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.4" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.length$ (1 samples, 0.06%)</title><rect x="105.4" y="1203.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.4" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (16 samples, 0.99%)</title><rect x="106.1" y="1267.0" width="11.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="109.1" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (16 samples, 0.99%)</title><rect x="106.1" y="1251.0" width="11.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.1" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (16 samples, 0.99%)</title><rect x="106.1" y="1235.0" width="11.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.1" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (16 samples, 0.99%)</title><rect x="106.1" y="1219.0" width="11.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (2 samples, 0.12%)</title><rect x="106.9" y="1203.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (2 samples, 0.12%)</title><rect x="106.9" y="1187.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="109.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (2 samples, 0.12%)</title><rect x="106.9" y="1171.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="109.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (2 samples, 0.12%)</title><rect x="106.9" y="1155.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="109.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (2 samples, 0.12%)</title><rect x="106.9" y="1139.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (2 samples, 0.12%)</title><rect x="106.9" y="1123.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.initWithContents (1 samples, 0.06%)</title><rect x="106.9" y="1107.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initWithContents$ (1 samples, 0.06%)</title><rect x="106.9" y="1091.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="109.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initWithContents (1 samples, 0.06%)</title><rect x="106.9" y="1075.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="109.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.alwaysInitSizeMap (1 samples, 0.06%)</title><rect x="106.9" y="1059.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="109.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.alwaysInitSizeMap$ (1 samples, 0.06%)</title><rect x="106.9" y="1043.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.9" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.$init$ (1 samples, 0.06%)</title><rect x="107.6" y="1107.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialThreshold (1 samples, 0.06%)</title><rect x="107.6" y="1091.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialCapacity (1 samples, 0.06%)</title><rect x="107.6" y="1075.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.06%)</title><rect x="108.3" y="1203.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.3" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.06%)</title><rect x="108.3" y="1187.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.06%)</title><rect x="108.3" y="1171.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.06%)</title><rect x="108.3" y="1155.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.06%)</title><rect x="108.3" y="1139.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.06%)</title><rect x="108.3" y="1123.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.06%)</title><rect x="108.3" y="1107.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="111.3" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="108.3" y="1091.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="111.3" y="1102.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="108.3" y="1075.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.3" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="108.3" y="1059.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="111.3" y="1070.0"></text>
</g>
<g>
<title>treadle/executable/IntSize$.hashCode (1 samples, 0.06%)</title><rect x="108.3" y="1043.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="111.3" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (2 samples, 0.12%)</title><rect x="109.1" y="1203.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.1" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (2 samples, 0.12%)</title><rect x="109.1" y="1187.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.1" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.dataSize (1 samples, 0.06%)</title><rect x="109.8" y="1171.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="112.8" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (9 samples, 0.56%)</title><rect x="110.5" y="1203.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.5" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (9 samples, 0.56%)</title><rect x="110.5" y="1187.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.5" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$9319/759737291.apply (9 samples, 0.56%)</title><rect x="110.5" y="1171.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.5" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (9 samples, 0.56%)</title><rect x="110.5" y="1155.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (9 samples, 0.56%)</title><rect x="110.5" y="1139.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.5" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (9 samples, 0.56%)</title><rect x="110.5" y="1123.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (9 samples, 0.56%)</title><rect x="110.5" y="1107.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="113.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (9 samples, 0.56%)</title><rect x="110.5" y="1091.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.5" y="1102.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.19%)</title><rect x="111.2" y="1075.0" width="2.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="114.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (5 samples, 0.31%)</title><rect x="113.4" y="1075.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.4" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (4 samples, 0.25%)</title><rect x="114.2" y="1059.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="117.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (4 samples, 0.25%)</title><rect x="114.2" y="1043.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.2" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.25%)</title><rect x="114.2" y="1027.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.2" y="1038.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (4 samples, 0.25%)</title><rect x="114.2" y="1011.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.2" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.19%)</title><rect x="114.2" y="995.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.2" y="1006.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.06%)</title><rect x="115.6" y="979.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.6" y="990.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.06%)</title><rect x="115.6" y="963.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="118.6" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.06%)</title><rect x="115.6" y="947.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="118.6" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.06%)</title><rect x="115.6" y="931.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.6" y="942.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mix (1 samples, 0.06%)</title><rect x="115.6" y="915.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.6" y="926.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mixLast (1 samples, 0.06%)</title><rect x="115.6" y="899.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="118.6" y="910.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="116.3" y="995.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="119.3" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.06%)</title><rect x="116.3" y="979.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.3" y="990.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.apply (1 samples, 0.06%)</title><rect x="117.1" y="1203.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (1 samples, 0.06%)</title><rect x="117.1" y="1187.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.06%)</title><rect x="117.1" y="1171.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="120.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.06%)</title><rect x="117.1" y="1155.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="120.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.06%)</title><rect x="117.1" y="1139.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="120.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.06%)</title><rect x="117.1" y="1123.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="120.1" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$9348/1130099780.apply$mcV$sp (31 samples, 1.91%)</title><rect x="117.8" y="1379.0" width="22.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.8" y="1390.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (31 samples, 1.91%)</title><rect x="117.8" y="1363.0" width="22.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="120.8" y="1374.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (31 samples, 1.91%)</title><rect x="117.8" y="1347.0" width="22.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.8" y="1358.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.06%)</title><rect x="117.8" y="1331.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.8" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (30 samples, 1.85%)</title><rect x="118.5" y="1331.0" width="21.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.5" y="1342.0">t..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (30 samples, 1.85%)</title><rect x="118.5" y="1315.0" width="21.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.5" y="1326.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (30 samples, 1.85%)</title><rect x="118.5" y="1299.0" width="21.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.5" y="1310.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (30 samples, 1.85%)</title><rect x="118.5" y="1283.0" width="21.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.5" y="1294.0">s..</text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (30 samples, 1.85%)</title><rect x="118.5" y="1267.0" width="21.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.5" y="1278.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (29 samples, 1.79%)</title><rect x="119.3" y="1251.0" width="21.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.3" y="1262.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (29 samples, 1.79%)</title><rect x="119.3" y="1235.0" width="21.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="122.3" y="1246.0">t..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (29 samples, 1.79%)</title><rect x="119.3" y="1219.0" width="21.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.3" y="1230.0">t..</text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (1 samples, 0.06%)</title><rect x="120.0" y="1203.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (1 samples, 0.06%)</title><rect x="120.0" y="1187.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.06%)</title><rect x="120.0" y="1171.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="123.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.06%)</title><rect x="120.0" y="1155.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="120.0" y="1139.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="120.0" y="1123.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.$init$ (1 samples, 0.06%)</title><rect x="120.0" y="1107.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="123.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialThreshold (1 samples, 0.06%)</title><rect x="120.0" y="1091.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialCapacity (1 samples, 0.06%)</title><rect x="120.0" y="1075.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.0" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.initialSize (1 samples, 0.06%)</title><rect x="120.0" y="1059.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialSize$ (1 samples, 0.06%)</title><rect x="120.0" y="1043.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.0" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (5 samples, 0.31%)</title><rect x="120.7" y="1203.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="123.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (5 samples, 0.31%)</title><rect x="120.7" y="1187.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="123.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (5 samples, 0.31%)</title><rect x="120.7" y="1171.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="123.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (5 samples, 0.31%)</title><rect x="120.7" y="1155.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (5 samples, 0.31%)</title><rect x="120.7" y="1139.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (5 samples, 0.31%)</title><rect x="120.7" y="1123.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (5 samples, 0.31%)</title><rect x="120.7" y="1107.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.7" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (5 samples, 0.31%)</title><rect x="120.7" y="1091.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="123.7" y="1102.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (5 samples, 0.31%)</title><rect x="120.7" y="1075.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.7" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (5 samples, 0.31%)</title><rect x="120.7" y="1059.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.7" y="1070.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.12%)</title><rect x="121.4" y="1043.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.4" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.12%)</title><rect x="121.4" y="1027.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.4" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.12%)</title><rect x="121.4" y="1011.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.4" y="1022.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.12%)</title><rect x="121.4" y="995.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.4" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="121.4" y="979.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.4" y="990.0"></text>
</g>
<g>
<title>firrtl/ir/IntWidth.hashCode (1 samples, 0.06%)</title><rect x="121.4" y="963.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.4" y="974.0"></text>
</g>
<g>
<title>scala/math/BigInt.toInt (1 samples, 0.06%)</title><rect x="121.4" y="947.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.4" y="958.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt$ (1 samples, 0.06%)</title><rect x="121.4" y="931.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.4" y="942.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt (1 samples, 0.06%)</title><rect x="121.4" y="915.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.4" y="926.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.06%)</title><rect x="121.4" y="899.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.4" y="910.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.06%)</title><rect x="121.4" y="883.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.4" y="894.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.06%)</title><rect x="121.4" y="867.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.4" y="878.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (1 samples, 0.06%)</title><rect x="122.2" y="979.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.2" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (1 samples, 0.06%)</title><rect x="122.2" y="963.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.2" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.06%)</title><rect x="122.9" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.9" y="1054.0"></text>
</g>
<g>
<title>firrtl/RegKind$.hashCode (1 samples, 0.06%)</title><rect x="122.9" y="1027.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.9" y="1038.0"></text>
</g>
<g>
<title>treadle/executable/LongSize$.hashCode (1 samples, 0.06%)</title><rect x="123.6" y="1043.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="126.6" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (14 samples, 0.86%)</title><rect x="124.4" y="1203.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.4" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (14 samples, 0.86%)</title><rect x="124.4" y="1187.0" width="10.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="127.4" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (14 samples, 0.86%)</title><rect x="124.4" y="1171.0" width="10.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="127.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (14 samples, 0.86%)</title><rect x="124.4" y="1155.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.4" y="1166.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.37%)</title><rect x="124.4" y="1139.0" width="4.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="127.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (3 samples, 0.19%)</title><rect x="128.7" y="1139.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (3 samples, 0.19%)</title><rect x="128.7" y="1123.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (3 samples, 0.19%)</title><rect x="128.7" y="1107.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="131.7" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.19%)</title><rect x="128.7" y="1091.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.7" y="1102.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (3 samples, 0.19%)</title><rect x="128.7" y="1075.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.7" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (1 samples, 0.06%)</title><rect x="129.5" y="1059.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.5" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (1 samples, 0.06%)</title><rect x="129.5" y="1043.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="132.5" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="130.2" y="1059.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (4 samples, 0.25%)</title><rect x="130.9" y="1139.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (2 samples, 0.12%)</title><rect x="132.4" y="1123.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="135.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.06%)</title><rect x="133.1" y="1107.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.06%)</title><rect x="133.1" y="1091.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.06%)</title><rect x="133.1" y="1075.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.1" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="133.1" y="1059.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.1" y="1070.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="133.1" y="1043.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.1" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="133.1" y="1027.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.1" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.06%)</title><rect x="133.1" y="1011.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.1" y="1022.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="133.1" y="995.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="136.1" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.06%)</title><rect x="133.8" y="1139.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.06%)</title><rect x="133.8" y="1123.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.06%)</title><rect x="133.8" y="1107.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.06%)</title><rect x="133.8" y="1091.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.8" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.06%)</title><rect x="133.8" y="1075.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.8" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.06%)</title><rect x="133.8" y="1059.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.8" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.06%)</title><rect x="133.8" y="1043.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.8" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (1 samples, 0.06%)</title><rect x="134.6" y="1203.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="137.6" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.06%)</title><rect x="134.6" y="1187.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.6" y="1198.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (1 samples, 0.06%)</title><rect x="134.6" y="1171.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="137.6" y="1182.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.06%)</title><rect x="134.6" y="1155.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="137.6" y="1166.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.06%)</title><rect x="134.6" y="1139.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.6" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (6 samples, 0.37%)</title><rect x="135.3" y="1203.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.3" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (6 samples, 0.37%)</title><rect x="135.3" y="1187.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.3" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$9319/759737291.apply (6 samples, 0.37%)</title><rect x="135.3" y="1171.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.3" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (6 samples, 0.37%)</title><rect x="135.3" y="1155.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (6 samples, 0.37%)</title><rect x="135.3" y="1139.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (6 samples, 0.37%)</title><rect x="135.3" y="1123.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (6 samples, 0.37%)</title><rect x="135.3" y="1107.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (6 samples, 0.37%)</title><rect x="135.3" y="1091.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.3" y="1102.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.12%)</title><rect x="135.3" y="1075.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="138.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (4 samples, 0.25%)</title><rect x="136.7" y="1075.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="139.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (4 samples, 0.25%)</title><rect x="136.7" y="1059.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (4 samples, 0.25%)</title><rect x="136.7" y="1043.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.7" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.25%)</title><rect x="136.7" y="1027.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.7" y="1038.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (4 samples, 0.25%)</title><rect x="136.7" y="1011.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.7" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="136.7" y="995.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.7" y="1006.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.12%)</title><rect x="136.7" y="979.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.7" y="990.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.12%)</title><rect x="136.7" y="963.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.7" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.12%)</title><rect x="136.7" y="947.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.7" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.12%)</title><rect x="136.7" y="931.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.7" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="136.7" y="915.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="139.7" y="926.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (1 samples, 0.06%)</title><rect x="137.5" y="915.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="140.5" y="926.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (1 samples, 0.06%)</title><rect x="137.5" y="899.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.5" y="910.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="138.2" y="995.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="141.2" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.dataKind (1 samples, 0.06%)</title><rect x="138.9" y="995.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="141.9" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.apply (1 samples, 0.06%)</title><rect x="139.7" y="1203.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (1 samples, 0.06%)</title><rect x="139.7" y="1187.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.06%)</title><rect x="139.7" y="1171.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.06%)</title><rect x="139.7" y="1155.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="142.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.06%)</title><rect x="139.7" y="1139.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.06%)</title><rect x="139.7" y="1123.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="142.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialSize$ (1 samples, 0.06%)</title><rect x="139.7" y="1107.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.7" y="1118.0"></text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$8377/1585093402.apply$mcV$sp (203 samples, 12.53%)</title><rect x="140.4" y="1779.0" width="147.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.4" y="1790.0">treadle/GCDTester$$..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$new$3 (203 samples, 12.53%)</title><rect x="140.4" y="1763.0" width="147.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="143.4" y="1774.0">treadle/GCDTester.$..</text>
</g>
<g>
<title>treadle/GCDTester.sizableTest (203 samples, 12.53%)</title><rect x="140.4" y="1747.0" width="147.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.4" y="1758.0">treadle/GCDTester.s..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.foreach (199 samples, 12.28%)</title><rect x="140.4" y="1731.0" width="144.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.4" y="1742.0">scala/collection/T..</text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (199 samples, 12.28%)</title><rect x="140.4" y="1715.0" width="144.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.4" y="1726.0">scala/collection/A..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (199 samples, 12.28%)</title><rect x="140.4" y="1699.0" width="144.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="143.4" y="1710.0">scala/collection/I..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (199 samples, 12.28%)</title><rect x="140.4" y="1683.0" width="144.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.4" y="1694.0">scala/collection/I..</text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (199 samples, 12.28%)</title><rect x="140.4" y="1667.0" width="144.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.4" y="1678.0">scala/collection/A..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (199 samples, 12.28%)</title><rect x="140.4" y="1651.0" width="144.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.4" y="1662.0">scala/collection/I..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach (199 samples, 12.28%)</title><rect x="140.4" y="1635.0" width="144.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.4" y="1646.0">scala/collection/I..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter$$Lambda$3740/6454130.apply (198 samples, 12.22%)</title><rect x="140.4" y="1619.0" width="144.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.4" y="1630.0">scala/collection/T..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.$anonfun$foreach$1 (198 samples, 12.22%)</title><rect x="140.4" y="1603.0" width="144.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="143.4" y="1614.0">scala/collection/T..</text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$9316/1861732412.apply (198 samples, 12.22%)</title><rect x="140.4" y="1587.0" width="144.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.4" y="1598.0">treadle/GCDTester$..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$sizableTest$4$adapted (198 samples, 12.22%)</title><rect x="140.4" y="1571.0" width="144.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.4" y="1582.0">treadle/GCDTester...</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$sizableTest$4 (198 samples, 12.22%)</title><rect x="140.4" y="1555.0" width="144.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.4" y="1566.0">treadle/GCDTester...</text>
</g>
<g>
<title>treadle/TreadleTester.peek (74 samples, 4.57%)</title><rect x="140.4" y="1539.0" width="53.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.4" y="1550.0">tread..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (74 samples, 4.57%)</title><rect x="140.4" y="1523.0" width="53.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="143.4" y="1534.0">tread..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (74 samples, 4.57%)</title><rect x="140.4" y="1507.0" width="53.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.4" y="1518.0">tread..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (74 samples, 4.57%)</title><rect x="140.4" y="1491.0" width="53.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.4" y="1502.0">tread..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (74 samples, 4.57%)</title><rect x="140.4" y="1475.0" width="53.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.4" y="1486.0">tread..</text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="142.6" y="1459.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="145.6" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$9363/422913791.apply$mcV$sp (51 samples, 3.15%)</title><rect x="143.3" y="1459.0" width="37.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.3" y="1470.0">tre..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (51 samples, 3.15%)</title><rect x="143.3" y="1443.0" width="37.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.3" y="1454.0">tre..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (51 samples, 3.15%)</title><rect x="143.3" y="1427.0" width="37.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.3" y="1438.0">tre..</text>
</g>
<g>
<title>treadle/executable/DataStore.bigData (1 samples, 0.06%)</title><rect x="143.3" y="1411.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.3" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (44 samples, 2.72%)</title><rect x="144.0" y="1411.0" width="32.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.0" y="1422.0">tr..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (44 samples, 2.72%)</title><rect x="144.0" y="1395.0" width="32.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="147.0" y="1406.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (44 samples, 2.72%)</title><rect x="144.0" y="1379.0" width="32.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.0" y="1390.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (44 samples, 2.72%)</title><rect x="144.0" y="1363.0" width="32.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.0" y="1374.0">sc..</text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (43 samples, 2.65%)</title><rect x="144.8" y="1347.0" width="31.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="147.8" y="1358.0">tr..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (43 samples, 2.65%)</title><rect x="144.8" y="1331.0" width="31.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.8" y="1342.0">tr..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (43 samples, 2.65%)</title><rect x="144.8" y="1315.0" width="31.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.8" y="1326.0">tr..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (43 samples, 2.65%)</title><rect x="144.8" y="1299.0" width="31.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.8" y="1310.0">tr..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="146.2" y="1283.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.2" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1824524646.linkToTargetMethod (1 samples, 0.06%)</title><rect x="146.9" y="1283.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.9" y="1294.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (1 samples, 0.06%)</title><rect x="147.7" y="1283.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.7" y="1294.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (2 samples, 0.12%)</title><rect x="148.4" y="1283.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.4" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (1 samples, 0.06%)</title><rect x="149.1" y="1267.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.1" y="1278.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (1 samples, 0.06%)</title><rect x="149.1" y="1251.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (1 samples, 0.06%)</title><rect x="149.1" y="1235.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.foreach (1 samples, 0.06%)</title><rect x="149.1" y="1219.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="152.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach$ (1 samples, 0.06%)</title><rect x="149.1" y="1203.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach (1 samples, 0.06%)</title><rect x="149.1" y="1187.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.apply (1 samples, 0.06%)</title><rect x="149.1" y="1171.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.1" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="149.1" y="1155.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (7 samples, 0.43%)</title><rect x="149.9" y="1283.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="152.9" y="1294.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="149.9" y="1267.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="152.9" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (6 samples, 0.37%)</title><rect x="150.6" y="1267.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.6" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (6 samples, 0.37%)</title><rect x="150.6" y="1251.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (6 samples, 0.37%)</title><rect x="150.6" y="1235.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (6 samples, 0.37%)</title><rect x="150.6" y="1219.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (6 samples, 0.37%)</title><rect x="150.6" y="1203.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (6 samples, 0.37%)</title><rect x="150.6" y="1187.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.6" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (6 samples, 0.37%)</title><rect x="150.6" y="1171.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="153.6" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (6 samples, 0.37%)</title><rect x="150.6" y="1155.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.6" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (5 samples, 0.31%)</title><rect x="150.6" y="1139.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.6" y="1150.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.12%)</title><rect x="151.3" y="1123.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.3" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.12%)</title><rect x="151.3" y="1107.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.3" y="1118.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.12%)</title><rect x="151.3" y="1091.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="154.3" y="1102.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.12%)</title><rect x="151.3" y="1075.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.3" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="151.3" y="1059.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.3" y="1070.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (1 samples, 0.06%)</title><rect x="152.0" y="1059.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.0" y="1070.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (1 samples, 0.06%)</title><rect x="152.0" y="1043.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.0" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (2 samples, 0.12%)</title><rect x="152.8" y="1123.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.8" y="1134.0"></text>
</g>
<g>
<title>firrtl/RegKind$.hashCode (1 samples, 0.06%)</title><rect x="152.8" y="1107.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.8" y="1118.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="153.5" y="1107.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="156.5" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.dataKind (1 samples, 0.06%)</title><rect x="154.2" y="1139.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (19 samples, 1.17%)</title><rect x="155.0" y="1283.0" width="13.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.0" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (19 samples, 1.17%)</title><rect x="155.0" y="1267.0" width="13.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.0" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (19 samples, 1.17%)</title><rect x="155.0" y="1251.0" width="13.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (18 samples, 1.11%)</title><rect x="155.7" y="1235.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.7" y="1246.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.37%)</title><rect x="157.1" y="1219.0" width="4.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="160.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (7 samples, 0.43%)</title><rect x="161.5" y="1219.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (6 samples, 0.37%)</title><rect x="162.2" y="1203.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (6 samples, 0.37%)</title><rect x="162.2" y="1187.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.2" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (6 samples, 0.37%)</title><rect x="162.2" y="1171.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="165.2" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (6 samples, 0.37%)</title><rect x="162.2" y="1155.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="165.2" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="162.2" y="1139.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.2" y="1150.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.06%)</title><rect x="162.2" y="1123.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.2" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.06%)</title><rect x="162.2" y="1107.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.2" y="1118.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.06%)</title><rect x="162.2" y="1091.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.2" y="1102.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.06%)</title><rect x="162.2" y="1075.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.2" y="1086.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (1 samples, 0.06%)</title><rect x="162.2" y="1059.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.2" y="1070.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (1 samples, 0.06%)</title><rect x="162.2" y="1043.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="165.2" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.06%)</title><rect x="163.0" y="1123.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.0" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (3 samples, 0.19%)</title><rect x="163.7" y="1139.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="166.7" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (3 samples, 0.19%)</title><rect x="163.7" y="1123.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.7" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.dataType (1 samples, 0.06%)</title><rect x="165.9" y="1139.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (2 samples, 0.12%)</title><rect x="166.6" y="1219.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.06%)</title><rect x="167.3" y="1203.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="170.3" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.06%)</title><rect x="167.3" y="1187.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.improve (1 samples, 0.06%)</title><rect x="167.3" y="1171.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve$ (1 samples, 0.06%)</title><rect x="167.3" y="1155.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve (1 samples, 0.06%)</title><rect x="167.3" y="1139.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.06%)</title><rect x="168.1" y="1219.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="171.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.06%)</title><rect x="168.1" y="1203.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="171.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.06%)</title><rect x="168.1" y="1187.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="171.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.06%)</title><rect x="168.1" y="1171.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.1" y="1182.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.06%)</title><rect x="168.1" y="1155.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.1" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.06%)</title><rect x="168.1" y="1139.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.1" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.06%)</title><rect x="168.1" y="1123.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.1" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.currentMap (1 samples, 0.06%)</title><rect x="168.8" y="1283.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="171.8" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (1 samples, 0.06%)</title><rect x="169.5" y="1283.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.5" y="1294.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.06%)</title><rect x="169.5" y="1267.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.5" y="1278.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.06%)</title><rect x="169.5" y="1251.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="172.5" y="1262.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.06%)</title><rect x="169.5" y="1235.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="172.5" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (6 samples, 0.37%)</title><rect x="170.2" y="1283.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.2" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (6 samples, 0.37%)</title><rect x="170.2" y="1267.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.2" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$9319/759737291.apply (6 samples, 0.37%)</title><rect x="170.2" y="1251.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.2" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (6 samples, 0.37%)</title><rect x="170.2" y="1235.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="173.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (6 samples, 0.37%)</title><rect x="170.2" y="1219.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.2" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (6 samples, 0.37%)</title><rect x="170.2" y="1203.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (6 samples, 0.37%)</title><rect x="170.2" y="1187.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="173.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (6 samples, 0.37%)</title><rect x="170.2" y="1171.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="173.2" y="1182.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.19%)</title><rect x="170.2" y="1155.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="173.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.06%)</title><rect x="172.4" y="1155.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.06%)</title><rect x="172.4" y="1139.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.06%)</title><rect x="173.2" y="1155.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="176.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.06%)</title><rect x="173.2" y="1139.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.06%)</title><rect x="173.2" y="1123.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.2" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="173.2" y="1107.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="176.2" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="173.2" y="1091.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.2" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="173.2" y="1075.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="176.2" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.06%)</title><rect x="173.2" y="1059.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.06%)</title><rect x="173.9" y="1155.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.9" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.apply (2 samples, 0.12%)</title><rect x="174.6" y="1283.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="177.6" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (2 samples, 0.12%)</title><rect x="174.6" y="1267.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="177.6" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.12%)</title><rect x="174.6" y="1251.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="177.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.12%)</title><rect x="174.6" y="1235.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="177.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.12%)</title><rect x="174.6" y="1219.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="177.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.12%)</title><rect x="174.6" y="1203.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="177.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialSize$ (1 samples, 0.06%)</title><rect x="175.3" y="1187.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.3" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$9352/756250296.apply (6 samples, 0.37%)</title><rect x="176.1" y="1411.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="179.1" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$15 (6 samples, 0.37%)</title><rect x="176.1" y="1395.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="179.1" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/MuxBigs.apply (2 samples, 0.12%)</title><rect x="176.1" y="1379.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.1" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/MuxBigs.falseClause (1 samples, 0.06%)</title><rect x="176.8" y="1363.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="179.8" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/SubBigs.apply (2 samples, 0.12%)</title><rect x="177.5" y="1379.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="180.5" y="1390.0"></text>
</g>
<g>
<title>scala/math/BigInt.$minus (2 samples, 0.12%)</title><rect x="177.5" y="1363.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="180.5" y="1374.0"></text>
</g>
<g>
<title>java/math/BigInteger.subtract (2 samples, 0.12%)</title><rect x="177.5" y="1347.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="180.5" y="1358.0"></text>
</g>
<g>
<title>java/math/BigInteger.subtract (2 samples, 0.12%)</title><rect x="177.5" y="1331.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.5" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/TailBigs.apply (2 samples, 0.12%)</title><rect x="179.0" y="1379.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="182.0" y="1390.0"></text>
</g>
<g>
<title>scala/math/BigInt.$amp (2 samples, 0.12%)</title><rect x="179.0" y="1363.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.0" y="1374.0"></text>
</g>
<g>
<title>java/math/BigInteger.and (2 samples, 0.12%)</title><rect x="179.0" y="1347.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.0" y="1358.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (2 samples, 0.12%)</title><rect x="179.0" y="1331.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="182.0" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.run (2 samples, 0.12%)</title><rect x="180.4" y="1459.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.4" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$9310/742057590.apply$mcV$sp (17 samples, 1.05%)</title><rect x="181.9" y="1459.0" width="12.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="184.9" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (16 samples, 0.99%)</title><rect x="182.6" y="1443.0" width="11.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.6" y="1454.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (16 samples, 0.99%)</title><rect x="182.6" y="1427.0" width="11.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="185.6" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (16 samples, 0.99%)</title><rect x="182.6" y="1411.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="185.6" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (16 samples, 0.99%)</title><rect x="182.6" y="1395.0" width="11.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="185.6" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (16 samples, 0.99%)</title><rect x="182.6" y="1379.0" width="11.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="185.6" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (16 samples, 0.99%)</title><rect x="182.6" y="1363.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.6" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (16 samples, 0.99%)</title><rect x="182.6" y="1347.0" width="11.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="185.6" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (16 samples, 0.99%)</title><rect x="182.6" y="1331.0" width="11.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="185.6" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (16 samples, 0.99%)</title><rect x="182.6" y="1315.0" width="11.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.6" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (16 samples, 0.99%)</title><rect x="182.6" y="1299.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="185.6" y="1310.0"></text>
</g>
<g>
<title>scala/LowPriorityImplicits.wrapRefArray (1 samples, 0.06%)</title><rect x="182.6" y="1283.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="185.6" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.&lt;init&gt; (1 samples, 0.06%)</title><rect x="182.6" y="1267.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.6" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.&lt;init&gt; (1 samples, 0.06%)</title><rect x="182.6" y="1251.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="185.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSeq.&lt;init&gt; (1 samples, 0.06%)</title><rect x="182.6" y="1235.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="185.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.&lt;init&gt; (1 samples, 0.06%)</title><rect x="182.6" y="1219.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="185.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="182.6" y="1203.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.6" y="1214.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (1 samples, 0.06%)</title><rect x="183.4" y="1283.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.4" y="1294.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (2 samples, 0.12%)</title><rect x="184.1" y="1283.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="187.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (2 samples, 0.12%)</title><rect x="184.1" y="1267.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.1" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (2 samples, 0.12%)</title><rect x="184.1" y="1251.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (2 samples, 0.12%)</title><rect x="184.1" y="1235.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="187.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (2 samples, 0.12%)</title><rect x="184.1" y="1219.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="187.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (2 samples, 0.12%)</title><rect x="184.1" y="1203.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="187.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="184.1" y="1187.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="184.1" y="1171.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="184.1" y="1155.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="184.1" y="1139.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/Parallelizable.$init$ (1 samples, 0.06%)</title><rect x="184.1" y="1123.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="187.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.initWithContents (1 samples, 0.06%)</title><rect x="184.8" y="1187.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initWithContents$ (1 samples, 0.06%)</title><rect x="184.8" y="1171.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="187.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initWithContents (1 samples, 0.06%)</title><rect x="184.8" y="1155.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.alwaysInitSizeMap (1 samples, 0.06%)</title><rect x="184.8" y="1139.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.alwaysInitSizeMap$ (1 samples, 0.06%)</title><rect x="184.8" y="1123.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.06%)</title><rect x="185.5" y="1283.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="188.5" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.06%)</title><rect x="185.5" y="1267.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="188.5" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.06%)</title><rect x="185.5" y="1251.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="188.5" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.06%)</title><rect x="185.5" y="1235.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.5" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.06%)</title><rect x="185.5" y="1219.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.06%)</title><rect x="185.5" y="1203.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="188.5" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.06%)</title><rect x="185.5" y="1187.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="188.5" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="185.5" y="1171.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="188.5" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="185.5" y="1155.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="188.5" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="185.5" y="1139.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="188.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.06%)</title><rect x="185.5" y="1123.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="188.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (7 samples, 0.43%)</title><rect x="186.3" y="1283.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.3" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (7 samples, 0.43%)</title><rect x="186.3" y="1267.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="189.3" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (7 samples, 0.43%)</title><rect x="186.3" y="1251.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="189.3" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (7 samples, 0.43%)</title><rect x="186.3" y="1235.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.3" y="1246.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.12%)</title><rect x="187.0" y="1219.0" width="1.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="190.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (2 samples, 0.12%)</title><rect x="188.5" y="1219.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (2 samples, 0.12%)</title><rect x="188.5" y="1203.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.5" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (2 samples, 0.12%)</title><rect x="188.5" y="1187.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.5" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="188.5" y="1171.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.5" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="189.2" y="1155.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.2" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="189.2" y="1139.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.2" y="1150.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.06%)</title><rect x="189.2" y="1123.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.2" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.06%)</title><rect x="189.2" y="1107.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.2" y="1118.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.06%)</title><rect x="189.2" y="1091.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.2" y="1102.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.06%)</title><rect x="189.2" y="1075.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.2" y="1086.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mix (1 samples, 0.06%)</title><rect x="189.2" y="1059.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.2" y="1070.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mixLast (1 samples, 0.06%)</title><rect x="189.2" y="1043.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="192.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.06%)</title><rect x="189.9" y="1219.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.06%)</title><rect x="190.6" y="1219.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.06%)</title><rect x="190.6" y="1203.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.06%)</title><rect x="190.6" y="1187.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="193.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.06%)</title><rect x="190.6" y="1171.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="193.6" y="1182.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.06%)</title><rect x="190.6" y="1155.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.6" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.06%)</title><rect x="190.6" y="1139.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.6" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.06%)</title><rect x="190.6" y="1123.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.6" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (1 samples, 0.06%)</title><rect x="191.4" y="1283.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.4" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (3 samples, 0.19%)</title><rect x="192.1" y="1283.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (3 samples, 0.19%)</title><rect x="192.1" y="1267.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="195.1" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$9319/759737291.apply (3 samples, 0.19%)</title><rect x="192.1" y="1251.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.1" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (3 samples, 0.19%)</title><rect x="192.1" y="1235.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (3 samples, 0.19%)</title><rect x="192.1" y="1219.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (3 samples, 0.19%)</title><rect x="192.1" y="1203.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (3 samples, 0.19%)</title><rect x="192.1" y="1187.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (3 samples, 0.19%)</title><rect x="192.1" y="1171.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.06%)</title><rect x="192.8" y="1155.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.06%)</title><rect x="192.8" y="1139.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.06%)</title><rect x="192.8" y="1123.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.8" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="192.8" y="1107.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.8" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="192.8" y="1091.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="195.8" y="1102.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.dataKind (1 samples, 0.06%)</title><rect x="192.8" y="1075.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.06%)</title><rect x="193.6" y="1155.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.6" y="1166.0"></text>
</g>
<g>
<title>treadle/TreadleTester.poke (1 samples, 0.06%)</title><rect x="194.3" y="1539.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.3" y="1550.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setValue (1 samples, 0.06%)</title><rect x="194.3" y="1523.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.3" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$plus$eq (1 samples, 0.06%)</title><rect x="194.3" y="1507.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.3" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (1 samples, 0.06%)</title><rect x="194.3" y="1491.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.3" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (1 samples, 0.06%)</title><rect x="194.3" y="1475.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="197.3" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (1 samples, 0.06%)</title><rect x="194.3" y="1459.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="197.3" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (1 samples, 0.06%)</title><rect x="194.3" y="1443.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="197.3" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (1 samples, 0.06%)</title><rect x="194.3" y="1427.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="197.3" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (1 samples, 0.06%)</title><rect x="194.3" y="1411.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="197.3" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="194.3" y="1395.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="197.3" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="194.3" y="1379.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.3" y="1390.0"></text>
</g>
<g>
<title>treadle/TreadleTester.step (123 samples, 7.59%)</title><rect x="195.0" y="1539.0" width="89.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.0" y="1550.0">treadle/Tr..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.updateCycleMap (1 samples, 0.06%)</title><rect x="195.0" y="1523.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.0" y="1534.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (1 samples, 0.06%)</title><rect x="195.0" y="1507.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.0" y="1518.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (1 samples, 0.06%)</title><rect x="195.0" y="1491.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.0" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.06%)</title><rect x="195.0" y="1475.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.0" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.06%)</title><rect x="195.0" y="1459.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="198.0" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="195.0" y="1443.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.0" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="195.0" y="1427.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.0" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.$init$ (1 samples, 0.06%)</title><rect x="195.0" y="1411.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="198.0" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap._loadFactor (1 samples, 0.06%)</title><rect x="195.0" y="1395.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.0" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.run (122 samples, 7.53%)</title><rect x="195.7" y="1523.0" width="88.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="198.7" y="1534.0">treadle/ex..</text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach$mVc$sp (121 samples, 7.47%)</title><rect x="195.7" y="1507.0" width="88.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.7" y="1518.0">scala/coll..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper$$Lambda$9317/206114504.apply$mcVI$sp (121 samples, 7.47%)</title><rect x="195.7" y="1491.0" width="88.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.7" y="1502.0">treadle/ex..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.$anonfun$run$2 (121 samples, 7.47%)</title><rect x="195.7" y="1475.0" width="88.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.7" y="1486.0">treadle/ex..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (10 samples, 0.62%)</title><rect x="195.7" y="1459.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.7" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (10 samples, 0.62%)</title><rect x="195.7" y="1443.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.7" y="1454.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (10 samples, 0.62%)</title><rect x="195.7" y="1427.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.7" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (10 samples, 0.62%)</title><rect x="195.7" y="1411.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.7" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$9363/422913791.apply$mcV$sp (5 samples, 0.31%)</title><rect x="195.7" y="1395.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.7" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (5 samples, 0.31%)</title><rect x="195.7" y="1379.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.7" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (5 samples, 0.31%)</title><rect x="195.7" y="1363.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.7" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (5 samples, 0.31%)</title><rect x="195.7" y="1347.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.7" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (5 samples, 0.31%)</title><rect x="195.7" y="1331.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.7" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (5 samples, 0.31%)</title><rect x="195.7" y="1315.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.7" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (5 samples, 0.31%)</title><rect x="195.7" y="1299.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.7" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (5 samples, 0.31%)</title><rect x="195.7" y="1283.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.7" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (5 samples, 0.31%)</title><rect x="195.7" y="1267.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="198.7" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (5 samples, 0.31%)</title><rect x="195.7" y="1251.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.7" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (5 samples, 0.31%)</title><rect x="195.7" y="1235.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (2 samples, 0.12%)</title><rect x="195.7" y="1219.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.12%)</title><rect x="195.7" y="1203.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.12%)</title><rect x="195.7" y="1187.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.12%)</title><rect x="195.7" y="1171.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (2 samples, 0.12%)</title><rect x="195.7" y="1155.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (2 samples, 0.12%)</title><rect x="195.7" y="1139.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (2 samples, 0.12%)</title><rect x="195.7" y="1123.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.7" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="195.7" y="1107.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.7" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (2 samples, 0.12%)</title><rect x="195.7" y="1091.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.7" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="195.7" y="1075.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.7" y="1086.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.06%)</title><rect x="195.7" y="1059.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.7" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.06%)</title><rect x="195.7" y="1043.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.7" y="1054.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.06%)</title><rect x="195.7" y="1027.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.7" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.06%)</title><rect x="195.7" y="1011.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.7" y="1022.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (1 samples, 0.06%)</title><rect x="195.7" y="995.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.7" y="1006.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (1 samples, 0.06%)</title><rect x="195.7" y="979.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.7" y="990.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="196.5" y="1075.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.06%)</title><rect x="197.2" y="1219.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="200.2" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.06%)</title><rect x="197.2" y="1203.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="200.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.06%)</title><rect x="197.2" y="1187.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="200.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.06%)</title><rect x="197.2" y="1171.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="200.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.06%)</title><rect x="197.2" y="1155.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="200.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.06%)</title><rect x="197.2" y="1139.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="200.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.06%)</title><rect x="197.2" y="1123.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.06%)</title><rect x="197.2" y="1107.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.2" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.06%)</title><rect x="197.2" y="1091.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.2" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.06%)</title><rect x="197.2" y="1075.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="200.2" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToInteger (1 samples, 0.06%)</title><rect x="197.9" y="1219.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.06%)</title><rect x="197.9" y="1203.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="200.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/Integer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="197.9" y="1187.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (1 samples, 0.06%)</title><rect x="197.9" y="1171.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="197.9" y="1155.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="200.9" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (1 samples, 0.06%)</title><rect x="198.7" y="1219.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.06%)</title><rect x="198.7" y="1203.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.7" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$9319/759737291.apply (1 samples, 0.06%)</title><rect x="198.7" y="1187.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="201.7" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (1 samples, 0.06%)</title><rect x="198.7" y="1171.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.06%)</title><rect x="198.7" y="1155.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.06%)</title><rect x="198.7" y="1139.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="201.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.06%)</title><rect x="198.7" y="1123.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="201.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.06%)</title><rect x="198.7" y="1107.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.06%)</title><rect x="198.7" y="1091.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="201.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.06%)</title><rect x="198.7" y="1075.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="201.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.06%)</title><rect x="198.7" y="1059.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="201.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.improve (1 samples, 0.06%)</title><rect x="198.7" y="1043.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve$ (1 samples, 0.06%)</title><rect x="198.7" y="1027.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve (1 samples, 0.06%)</title><rect x="198.7" y="1011.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.7" y="1022.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$9310/742057590.apply$mcV$sp (5 samples, 0.31%)</title><rect x="199.4" y="1395.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.4" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (5 samples, 0.31%)</title><rect x="199.4" y="1379.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.4" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (5 samples, 0.31%)</title><rect x="199.4" y="1363.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.4" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.treadle$executable$DataStore$AssignInt$$$outer (1 samples, 0.06%)</title><rect x="199.4" y="1347.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="202.4" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/EqInts.apply (1 samples, 0.06%)</title><rect x="199.4" y="1331.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.4" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (4 samples, 0.25%)</title><rect x="200.1" y="1347.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="203.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (4 samples, 0.25%)</title><rect x="200.1" y="1331.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="203.1" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (4 samples, 0.25%)</title><rect x="200.1" y="1315.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="203.1" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (4 samples, 0.25%)</title><rect x="200.1" y="1299.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.1" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (4 samples, 0.25%)</title><rect x="200.1" y="1283.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.1" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (4 samples, 0.25%)</title><rect x="200.1" y="1267.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.1" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (4 samples, 0.25%)</title><rect x="200.1" y="1251.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="203.1" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (4 samples, 0.25%)</title><rect x="200.1" y="1235.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="203.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (1 samples, 0.06%)</title><rect x="200.1" y="1219.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (1 samples, 0.06%)</title><rect x="200.1" y="1203.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.06%)</title><rect x="200.1" y="1187.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="203.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.06%)</title><rect x="200.1" y="1171.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="203.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="200.1" y="1155.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="203.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="200.1" y="1139.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="200.1" y="1123.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="200.1" y="1107.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="200.1" y="1091.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="203.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="200.1" y="1075.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="203.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="200.1" y="1059.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.06%)</title><rect x="200.8" y="1219.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.8" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.06%)</title><rect x="200.8" y="1203.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.8" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.06%)</title><rect x="200.8" y="1187.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.06%)</title><rect x="200.8" y="1171.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.8" y="1182.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="200.8" y="1155.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="203.8" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (2 samples, 0.12%)</title><rect x="201.6" y="1219.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.6" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.06%)</title><rect x="202.3" y="1203.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="205.3" y="1214.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.06%)</title><rect x="202.3" y="1187.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.3" y="1198.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.06%)</title><rect x="202.3" y="1171.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.3" y="1182.0"></text>
</g>
<g>
<title>scala/math/BigInt$.minCached (1 samples, 0.06%)</title><rect x="202.3" y="1155.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.3" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.engine (1 samples, 0.06%)</title><rect x="203.0" y="1459.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="206.0" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.lowerClock$1 (1 samples, 0.06%)</title><rect x="203.8" y="1459.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.8" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setIntValue (1 samples, 0.06%)</title><rect x="203.8" y="1443.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.8" y="1454.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.valueFrom (1 samples, 0.06%)</title><rect x="203.8" y="1427.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.8" y="1438.0"></text>
</g>
<g>
<title>scala/math/BigInt.$amp (1 samples, 0.06%)</title><rect x="203.8" y="1411.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="206.8" y="1422.0"></text>
</g>
<g>
<title>java/math/BigInteger.and (1 samples, 0.06%)</title><rect x="203.8" y="1395.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.8" y="1406.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.06%)</title><rect x="203.8" y="1379.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.8" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.raiseClock$1 (109 samples, 6.73%)</title><rect x="204.5" y="1459.0" width="79.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.5" y="1470.0">treadle/e..</text>
</g>
<g>
<title>treadle/chronometry/UTC.incrementTime (5 samples, 0.31%)</title><rect x="204.5" y="1443.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.5" y="1454.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.runUntil (5 samples, 0.31%)</title><rect x="204.5" y="1427.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.5" y="1438.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.setTime (5 samples, 0.31%)</title><rect x="204.5" y="1411.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.5" y="1422.0"></text>
</g>
<g>
<title>treadle/TreadleTester$$Lambda$9296/1771936790.apply$mcV$sp (5 samples, 0.31%)</title><rect x="204.5" y="1395.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.5" y="1406.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$2 (5 samples, 0.31%)</title><rect x="204.5" y="1379.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.5" y="1390.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="205.2" y="1363.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="208.2" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.run (2 samples, 0.12%)</title><rect x="205.9" y="1363.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="208.9" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$9284/124041989.apply$mcV$sp (1 samples, 0.06%)</title><rect x="207.4" y="1363.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.4" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (103 samples, 6.36%)</title><rect x="208.1" y="1443.0" width="75.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.1" y="1454.0">treadle/..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (103 samples, 6.36%)</title><rect x="208.1" y="1427.0" width="75.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="211.1" y="1438.0">treadle/..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (103 samples, 6.36%)</title><rect x="208.1" y="1411.0" width="75.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="211.1" y="1422.0">treadle/..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (103 samples, 6.36%)</title><rect x="208.1" y="1395.0" width="75.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="211.1" y="1406.0">treadle/..</text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner$$Lambda$9311/2037028822.apply$mcV$sp (14 samples, 0.86%)</title><rect x="208.1" y="1379.0" width="10.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="211.1" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.$anonfun$setLeanMode$2 (14 samples, 0.86%)</title><rect x="208.1" y="1363.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="211.1" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.runFull (14 samples, 0.86%)</title><rect x="208.1" y="1347.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.1" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$9363/422913791.apply$mcV$sp (14 samples, 0.86%)</title><rect x="208.1" y="1331.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.1" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (14 samples, 0.86%)</title><rect x="208.1" y="1315.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.1" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (14 samples, 0.86%)</title><rect x="208.1" y="1299.0" width="10.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.1" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (14 samples, 0.86%)</title><rect x="208.1" y="1283.0" width="10.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (14 samples, 0.86%)</title><rect x="208.1" y="1267.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.1" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (14 samples, 0.86%)</title><rect x="208.1" y="1251.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (14 samples, 0.86%)</title><rect x="208.1" y="1235.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.1" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (14 samples, 0.86%)</title><rect x="208.1" y="1219.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.1" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (14 samples, 0.86%)</title><rect x="208.1" y="1203.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="211.1" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (14 samples, 0.86%)</title><rect x="208.1" y="1187.0" width="10.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.1" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (14 samples, 0.86%)</title><rect x="208.1" y="1171.0" width="10.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (9 samples, 0.56%)</title><rect x="208.9" y="1155.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="211.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (9 samples, 0.56%)</title><rect x="208.9" y="1139.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="211.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (9 samples, 0.56%)</title><rect x="208.9" y="1123.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (9 samples, 0.56%)</title><rect x="208.9" y="1107.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.loop$1 (1 samples, 0.06%)</title><rect x="209.6" y="1091.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (1 samples, 0.06%)</title><rect x="209.6" y="1075.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="212.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.foreach (7 samples, 0.43%)</title><rect x="210.3" y="1091.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="213.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach$ (7 samples, 0.43%)</title><rect x="210.3" y="1075.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="213.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach (7 samples, 0.43%)</title><rect x="210.3" y="1059.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="213.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable$$Lambda$3535/1093185857.apply (7 samples, 0.43%)</title><rect x="210.3" y="1043.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="213.3" y="1054.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$anonfun$$plus$plus$eq$1 (7 samples, 0.43%)</title><rect x="210.3" y="1027.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="213.3" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (7 samples, 0.43%)</title><rect x="210.3" y="1011.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="213.3" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (6 samples, 0.37%)</title><rect x="211.0" y="995.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.0" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (6 samples, 0.37%)</title><rect x="211.0" y="979.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.0" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (6 samples, 0.37%)</title><rect x="211.0" y="963.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="214.0" y="974.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (6 samples, 0.37%)</title><rect x="211.0" y="947.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="214.0" y="958.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.31%)</title><rect x="211.0" y="931.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="214.0" y="942.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.06%)</title><rect x="214.7" y="931.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="217.7" y="942.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (3 samples, 0.19%)</title><rect x="215.4" y="1155.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="218.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (3 samples, 0.19%)</title><rect x="215.4" y="1139.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (3 samples, 0.19%)</title><rect x="215.4" y="1123.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (3 samples, 0.19%)</title><rect x="215.4" y="1107.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (2 samples, 0.12%)</title><rect x="215.4" y="1091.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="218.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (2 samples, 0.12%)</title><rect x="215.4" y="1075.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="218.4" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (2 samples, 0.12%)</title><rect x="215.4" y="1059.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="218.4" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="215.4" y="1043.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.4" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (2 samples, 0.12%)</title><rect x="215.4" y="1027.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.4" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="215.4" y="1011.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="218.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="215.4" y="995.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="218.4" y="1006.0"></text>
</g>
<g>
<title>firrtl/ir/NoInfo$.hashCode (1 samples, 0.06%)</title><rect x="215.4" y="979.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.4" y="990.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="216.1" y="1011.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="219.1" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.06%)</title><rect x="216.1" y="995.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.1" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.06%)</title><rect x="216.9" y="1091.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (1 samples, 0.06%)</title><rect x="216.9" y="1075.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="219.9" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.apply (1 samples, 0.06%)</title><rect x="217.6" y="1155.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (1 samples, 0.06%)</title><rect x="217.6" y="1139.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.06%)</title><rect x="217.6" y="1123.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="220.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.06%)</title><rect x="217.6" y="1107.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="220.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.06%)</title><rect x="217.6" y="1091.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="220.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.06%)</title><rect x="217.6" y="1075.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.06%)</title><rect x="217.6" y="1059.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="220.6" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.06%)</title><rect x="217.6" y="1043.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="220.6" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.06%)</title><rect x="217.6" y="1027.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="220.6" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.06%)</title><rect x="217.6" y="1011.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.6" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.06%)</title><rect x="217.6" y="995.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="220.6" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.06%)</title><rect x="217.6" y="979.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="220.6" y="990.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$9363/422913791.apply$mcV$sp (76 samples, 4.69%)</title><rect x="218.3" y="1379.0" width="55.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="221.3" y="1390.0">tread..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (76 samples, 4.69%)</title><rect x="218.3" y="1363.0" width="55.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="221.3" y="1374.0">tread..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (76 samples, 4.69%)</title><rect x="218.3" y="1347.0" width="55.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.3" y="1358.0">tread..</text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.06%)</title><rect x="218.3" y="1331.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.3" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (74 samples, 4.57%)</title><rect x="219.0" y="1331.0" width="54.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.0" y="1342.0">tread..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (74 samples, 4.57%)</title><rect x="219.0" y="1315.0" width="54.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="222.0" y="1326.0">scala..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (74 samples, 4.57%)</title><rect x="219.0" y="1299.0" width="54.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.0" y="1310.0">scala..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (74 samples, 4.57%)</title><rect x="219.0" y="1283.0" width="54.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.0" y="1294.0">scala..</text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (74 samples, 4.57%)</title><rect x="219.0" y="1267.0" width="54.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="222.0" y="1278.0">tread..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (74 samples, 4.57%)</title><rect x="219.0" y="1251.0" width="54.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.0" y="1262.0">tread..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (74 samples, 4.57%)</title><rect x="219.0" y="1235.0" width="54.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.0" y="1246.0">tread..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (74 samples, 4.57%)</title><rect x="219.0" y="1219.0" width="54.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="222.0" y="1230.0">tread..</text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.06%)</title><rect x="222.0" y="1203.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="225.0" y="1214.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="222.0" y="1187.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="225.0" y="1198.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.06%)</title><rect x="222.0" y="1171.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="225.0" y="1182.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="222.0" y="1155.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="225.0" y="1166.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.06%)</title><rect x="222.0" y="1139.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="225.0" y="1150.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.06%)</title><rect x="222.0" y="1123.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="225.0" y="1134.0"></text>
</g>
<g>
<title>scala/LowPriorityImplicits.wrapRefArray (2 samples, 0.12%)</title><rect x="222.7" y="1203.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="225.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.&lt;init&gt; (2 samples, 0.12%)</title><rect x="222.7" y="1187.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="225.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.&lt;init&gt; (1 samples, 0.06%)</title><rect x="223.4" y="1171.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="226.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (3 samples, 0.19%)</title><rect x="224.1" y="1203.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="227.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (1 samples, 0.06%)</title><rect x="224.1" y="1187.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="227.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.06%)</title><rect x="224.1" y="1171.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.06%)</title><rect x="224.1" y="1155.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="224.1" y="1139.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="224.1" y="1123.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="224.1" y="1107.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="224.1" y="1091.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="227.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="224.1" y="1075.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="224.1" y="1059.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="227.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (2 samples, 0.12%)</title><rect x="224.9" y="1187.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (2 samples, 0.12%)</title><rect x="224.9" y="1171.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (2 samples, 0.12%)</title><rect x="224.9" y="1155.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.loop$1 (1 samples, 0.06%)</title><rect x="225.6" y="1139.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="228.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (10 samples, 0.62%)</title><rect x="226.3" y="1203.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="229.3" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (10 samples, 0.62%)</title><rect x="226.3" y="1187.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="229.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (10 samples, 0.62%)</title><rect x="226.3" y="1171.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (10 samples, 0.62%)</title><rect x="226.3" y="1155.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="229.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (9 samples, 0.56%)</title><rect x="226.3" y="1139.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="229.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (6 samples, 0.37%)</title><rect x="228.5" y="1123.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="231.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (6 samples, 0.37%)</title><rect x="228.5" y="1107.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.5" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (6 samples, 0.37%)</title><rect x="228.5" y="1091.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.5" y="1102.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (6 samples, 0.37%)</title><rect x="228.5" y="1075.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.5" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (5 samples, 0.31%)</title><rect x="228.5" y="1059.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.5" y="1070.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.12%)</title><rect x="230.0" y="1043.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="233.0" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.12%)</title><rect x="230.0" y="1027.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.0" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.12%)</title><rect x="230.0" y="1011.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.0" y="1022.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.12%)</title><rect x="230.0" y="995.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="233.0" y="1006.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (2 samples, 0.12%)</title><rect x="230.0" y="979.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="233.0" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (2 samples, 0.12%)</title><rect x="230.0" y="963.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="233.0" y="974.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="231.4" y="1043.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.4" y="1054.0"></text>
</g>
<g>
<title>firrtl/ir/NoInfo$.hashCode (1 samples, 0.06%)</title><rect x="231.4" y="1027.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="234.4" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="232.2" y="1059.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="235.2" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.06%)</title><rect x="232.2" y="1043.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.06%)</title><rect x="232.9" y="1139.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.06%)</title><rect x="232.9" y="1123.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="235.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.06%)</title><rect x="232.9" y="1107.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="235.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.improve (1 samples, 0.06%)</title><rect x="232.9" y="1091.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="235.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve$ (1 samples, 0.06%)</title><rect x="232.9" y="1075.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve (1 samples, 0.06%)</title><rect x="232.9" y="1059.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.9" y="1070.0"></text>
</g>
<g>
<title>scala/util/hashing/package$.byteswap32 (1 samples, 0.06%)</title><rect x="232.9" y="1043.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="235.9" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (38 samples, 2.35%)</title><rect x="233.6" y="1203.0" width="27.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.6" y="1214.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (38 samples, 2.35%)</title><rect x="233.6" y="1187.0" width="27.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="236.6" y="1198.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (38 samples, 2.35%)</title><rect x="233.6" y="1171.0" width="27.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.6" y="1182.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (38 samples, 2.35%)</title><rect x="233.6" y="1155.0" width="27.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.6" y="1166.0">s..</text>
</g>
<g>
<title>itable stub (8 samples, 0.49%)</title><rect x="235.1" y="1139.0" width="5.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="238.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (2 samples, 0.12%)</title><rect x="240.9" y="1139.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.06%)</title><rect x="241.6" y="1123.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="244.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (11 samples, 0.68%)</title><rect x="242.4" y="1139.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="245.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (11 samples, 0.68%)</title><rect x="242.4" y="1123.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="245.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (11 samples, 0.68%)</title><rect x="242.4" y="1107.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="245.4" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (11 samples, 0.68%)</title><rect x="242.4" y="1091.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.4" y="1102.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (11 samples, 0.68%)</title><rect x="242.4" y="1075.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.4" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (8 samples, 0.49%)</title><rect x="242.4" y="1059.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.4" y="1070.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.12%)</title><rect x="243.1" y="1043.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="246.1" y="1054.0"></text>
</g>
<g>
<title>firrtl/ir/IntWidth.hashCode (1 samples, 0.06%)</title><rect x="243.8" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="246.8" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (4 samples, 0.25%)</title><rect x="244.5" y="1043.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.5" y="1054.0"></text>
</g>
<g>
<title>firrtl/NodeKind$.hashCode (2 samples, 0.12%)</title><rect x="245.3" y="1027.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="248.3" y="1038.0"></text>
</g>
<g>
<title>firrtl/PortKind$.hashCode (1 samples, 0.06%)</title><rect x="246.7" y="1027.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.7" y="1038.0"></text>
</g>
<g>
<title>treadle/executable/IntSize$.hashCode (1 samples, 0.06%)</title><rect x="247.5" y="1043.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.5" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (1 samples, 0.06%)</title><rect x="248.2" y="1059.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="251.2" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (1 samples, 0.06%)</title><rect x="248.2" y="1043.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.2" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="248.9" y="1059.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.9" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.06%)</title><rect x="248.9" y="1043.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="251.9" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.dataKind (1 samples, 0.06%)</title><rect x="249.6" y="1059.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="252.6" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (13 samples, 0.80%)</title><rect x="250.4" y="1139.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="253.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (11 samples, 0.68%)</title><rect x="251.8" y="1123.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (7 samples, 0.43%)</title><rect x="254.0" y="1107.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (7 samples, 0.43%)</title><rect x="254.0" y="1091.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="257.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (7 samples, 0.43%)</title><rect x="254.0" y="1075.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="257.0" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (7 samples, 0.43%)</title><rect x="254.0" y="1059.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="257.0" y="1070.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (7 samples, 0.43%)</title><rect x="254.0" y="1043.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.0" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.25%)</title><rect x="254.0" y="1027.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.0" y="1038.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.06%)</title><rect x="255.5" y="1011.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="258.5" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.06%)</title><rect x="256.2" y="1011.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="259.2" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (3 samples, 0.19%)</title><rect x="256.9" y="1027.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.06%)</title><rect x="256.9" y="1011.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.9" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (2 samples, 0.12%)</title><rect x="257.7" y="1011.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="260.7" y="1022.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="259.1" y="1107.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="262.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.12%)</title><rect x="259.8" y="1139.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (2 samples, 0.12%)</title><rect x="259.8" y="1123.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (2 samples, 0.12%)</title><rect x="259.8" y="1107.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (2 samples, 0.12%)</title><rect x="259.8" y="1091.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.8" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.12%)</title><rect x="259.8" y="1075.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="262.8" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.12%)</title><rect x="259.8" y="1059.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="262.8" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.06%)</title><rect x="259.8" y="1043.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.8" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.equals (1 samples, 0.06%)</title><rect x="260.6" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="263.6" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToInteger (1 samples, 0.06%)</title><rect x="261.3" y="1203.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="264.3" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (1 samples, 0.06%)</title><rect x="262.0" y="1203.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="265.0" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.06%)</title><rect x="262.0" y="1187.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="265.0" y="1198.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.06%)</title><rect x="262.0" y="1171.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="265.0" y="1182.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.06%)</title><rect x="262.0" y="1155.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="265.0" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (7 samples, 0.43%)</title><rect x="262.8" y="1203.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="265.8" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (7 samples, 0.43%)</title><rect x="262.8" y="1187.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="265.8" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$9319/759737291.apply (7 samples, 0.43%)</title><rect x="262.8" y="1171.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="265.8" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (7 samples, 0.43%)</title><rect x="262.8" y="1155.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="265.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (7 samples, 0.43%)</title><rect x="262.8" y="1139.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (7 samples, 0.43%)</title><rect x="262.8" y="1123.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="265.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (7 samples, 0.43%)</title><rect x="262.8" y="1107.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="265.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (7 samples, 0.43%)</title><rect x="262.8" y="1091.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="265.8" y="1102.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.12%)</title><rect x="263.5" y="1075.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="266.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (4 samples, 0.25%)</title><rect x="264.9" y="1075.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="267.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (4 samples, 0.25%)</title><rect x="264.9" y="1059.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (4 samples, 0.25%)</title><rect x="264.9" y="1043.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="267.9" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.25%)</title><rect x="264.9" y="1027.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.9" y="1038.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (4 samples, 0.25%)</title><rect x="264.9" y="1011.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.9" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.19%)</title><rect x="264.9" y="995.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.9" y="1006.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.06%)</title><rect x="265.7" y="979.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="268.7" y="990.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.06%)</title><rect x="265.7" y="963.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.7" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.06%)</title><rect x="265.7" y="947.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.7" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.06%)</title><rect x="265.7" y="931.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.7" y="942.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (1 samples, 0.06%)</title><rect x="265.7" y="915.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="268.7" y="926.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (1 samples, 0.06%)</title><rect x="265.7" y="899.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="268.7" y="910.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="266.4" y="979.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="269.4" y="990.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="267.1" y="995.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="270.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.06%)</title><rect x="267.1" y="979.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="270.1" y="990.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.apply (3 samples, 0.19%)</title><rect x="267.9" y="1203.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="270.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (3 samples, 0.19%)</title><rect x="267.9" y="1187.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="270.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (3 samples, 0.19%)</title><rect x="267.9" y="1171.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="270.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (3 samples, 0.19%)</title><rect x="267.9" y="1155.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (3 samples, 0.19%)</title><rect x="267.9" y="1139.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="270.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (3 samples, 0.19%)</title><rect x="267.9" y="1123.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="270.9" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (4 samples, 0.25%)</title><rect x="270.0" y="1203.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (4 samples, 0.25%)</title><rect x="270.0" y="1187.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="273.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (4 samples, 0.25%)</title><rect x="270.0" y="1171.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (4 samples, 0.25%)</title><rect x="270.0" y="1155.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="273.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (4 samples, 0.25%)</title><rect x="270.0" y="1139.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="273.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (4 samples, 0.25%)</title><rect x="270.0" y="1123.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (3 samples, 0.19%)</title><rect x="270.8" y="1107.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="273.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (3 samples, 0.19%)</title><rect x="270.8" y="1091.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="273.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (3 samples, 0.19%)</title><rect x="270.8" y="1075.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.8" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (3 samples, 0.19%)</title><rect x="270.8" y="1059.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.8" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (3 samples, 0.19%)</title><rect x="270.8" y="1043.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="273.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="270.8" y="1027.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.8" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.12%)</title><rect x="271.5" y="1027.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="274.5" y="1038.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$9352/756250296.apply (1 samples, 0.06%)</title><rect x="273.0" y="1331.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.0" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$15 (1 samples, 0.06%)</title><rect x="273.0" y="1315.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="276.0" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/TailBigs.apply (1 samples, 0.06%)</title><rect x="273.0" y="1299.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="276.0" y="1310.0"></text>
</g>
<g>
<title>scala/math/BigInt.$amp (1 samples, 0.06%)</title><rect x="273.0" y="1283.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.0" y="1294.0"></text>
</g>
<g>
<title>java/math/BigInteger.and (1 samples, 0.06%)</title><rect x="273.0" y="1267.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="276.0" y="1278.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.06%)</title><rect x="273.0" y="1251.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="276.0" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$9310/742057590.apply$mcV$sp (13 samples, 0.80%)</title><rect x="273.7" y="1379.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="276.7" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (13 samples, 0.80%)</title><rect x="273.7" y="1363.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="276.7" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (13 samples, 0.80%)</title><rect x="273.7" y="1347.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="276.7" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.treadle$executable$DataStore$AssignInt$$$outer (1 samples, 0.06%)</title><rect x="273.7" y="1331.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="276.7" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/EqInts.apply (1 samples, 0.06%)</title><rect x="273.7" y="1315.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="276.7" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (11 samples, 0.68%)</title><rect x="274.4" y="1331.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.4" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (11 samples, 0.68%)</title><rect x="274.4" y="1315.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.4" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (11 samples, 0.68%)</title><rect x="274.4" y="1299.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.4" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (11 samples, 0.68%)</title><rect x="274.4" y="1283.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="277.4" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (11 samples, 0.68%)</title><rect x="274.4" y="1267.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="277.4" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (11 samples, 0.68%)</title><rect x="274.4" y="1251.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="277.4" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (11 samples, 0.68%)</title><rect x="274.4" y="1235.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="277.4" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (11 samples, 0.68%)</title><rect x="274.4" y="1219.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="277.4" y="1230.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (3 samples, 0.19%)</title><rect x="274.4" y="1203.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="277.4" y="1214.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (1 samples, 0.06%)</title><rect x="275.1" y="1187.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="278.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.06%)</title><rect x="275.1" y="1171.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (1 samples, 0.06%)</title><rect x="275.1" y="1155.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="275.1" y="1139.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="275.1" y="1123.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.$init$ (1 samples, 0.06%)</title><rect x="275.1" y="1107.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="278.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (1 samples, 0.06%)</title><rect x="275.9" y="1187.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (1 samples, 0.06%)</title><rect x="275.9" y="1171.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="278.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (1 samples, 0.06%)</title><rect x="275.9" y="1155.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.foreach (1 samples, 0.06%)</title><rect x="275.9" y="1139.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="278.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach$ (1 samples, 0.06%)</title><rect x="275.9" y="1123.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="278.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach (1 samples, 0.06%)</title><rect x="275.9" y="1107.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="278.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.length (1 samples, 0.06%)</title><rect x="275.9" y="1091.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (5 samples, 0.31%)</title><rect x="276.6" y="1203.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="279.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (5 samples, 0.31%)</title><rect x="276.6" y="1187.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="279.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (5 samples, 0.31%)</title><rect x="276.6" y="1171.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="279.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (5 samples, 0.31%)</title><rect x="276.6" y="1155.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.6" y="1166.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.12%)</title><rect x="277.3" y="1139.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="280.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (2 samples, 0.12%)</title><rect x="278.8" y="1139.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (2 samples, 0.12%)</title><rect x="278.8" y="1123.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="281.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (2 samples, 0.12%)</title><rect x="278.8" y="1107.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.8" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="278.8" y="1091.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.8" y="1102.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (2 samples, 0.12%)</title><rect x="278.8" y="1075.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.8" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="278.8" y="1059.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.8" y="1070.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.06%)</title><rect x="278.8" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.8" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.06%)</title><rect x="278.8" y="1027.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.8" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.06%)</title><rect x="278.8" y="1011.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.8" y="1022.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.06%)</title><rect x="278.8" y="995.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="281.8" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="278.8" y="979.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.8" y="990.0"></text>
</g>
<g>
<title>firrtl/ir/IntWidth.hashCode (1 samples, 0.06%)</title><rect x="278.8" y="963.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.8" y="974.0"></text>
</g>
<g>
<title>scala/math/BigInt.toInt (1 samples, 0.06%)</title><rect x="278.8" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.8" y="958.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt$ (1 samples, 0.06%)</title><rect x="278.8" y="931.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.8" y="942.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt (1 samples, 0.06%)</title><rect x="278.8" y="915.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.8" y="926.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.06%)</title><rect x="278.8" y="899.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="281.8" y="910.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.06%)</title><rect x="278.8" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="281.8" y="894.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.06%)</title><rect x="278.8" y="867.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="281.8" y="878.0"></text>
</g>
<g>
<title>treadle/executable/IntSize$.hashCode (1 samples, 0.06%)</title><rect x="279.5" y="1043.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="282.5" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (2 samples, 0.12%)</title><rect x="280.2" y="1203.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="283.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (2 samples, 0.12%)</title><rect x="280.2" y="1187.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.2" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$9319/759737291.apply (2 samples, 0.12%)</title><rect x="280.2" y="1171.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.2" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (2 samples, 0.12%)</title><rect x="280.2" y="1155.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (2 samples, 0.12%)</title><rect x="280.2" y="1139.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (2 samples, 0.12%)</title><rect x="280.2" y="1123.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (2 samples, 0.12%)</title><rect x="280.2" y="1107.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="283.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (2 samples, 0.12%)</title><rect x="280.2" y="1091.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="283.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.06%)</title><rect x="280.2" y="1075.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="283.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.06%)</title><rect x="280.2" y="1059.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.06%)</title><rect x="281.0" y="1075.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.0" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.06%)</title><rect x="281.0" y="1059.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.06%)</title><rect x="281.0" y="1043.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.0" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="281.0" y="1027.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.0" y="1038.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="281.0" y="1011.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.0" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="281.0" y="995.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="284.0" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.06%)</title><rect x="281.0" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="284.0" y="990.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.apply (1 samples, 0.06%)</title><rect x="281.7" y="1203.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (1 samples, 0.06%)</title><rect x="281.7" y="1187.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.06%)</title><rect x="281.7" y="1171.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.06%)</title><rect x="281.7" y="1155.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.06%)</title><rect x="281.7" y="1139.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.06%)</title><rect x="281.7" y="1123.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.7" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$9264/1757338605.apply$mcI$sp (1 samples, 0.06%)</title><rect x="282.4" y="1331.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.4" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$1 (1 samples, 0.06%)</title><rect x="282.4" y="1315.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="285.4" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/EqBigs.apply (1 samples, 0.06%)</title><rect x="282.4" y="1299.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.4" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.06%)</title><rect x="282.4" y="1283.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.4" y="1294.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.06%)</title><rect x="282.4" y="1267.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.4" y="1278.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.06%)</title><rect x="282.4" y="1251.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.4" y="1262.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.06%)</title><rect x="282.4" y="1235.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.4" y="1246.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (1 samples, 0.06%)</title><rect x="282.4" y="1219.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.4" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setIntValue (1 samples, 0.06%)</title><rect x="283.1" y="1443.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.1" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (1 samples, 0.06%)</title><rect x="283.1" y="1427.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.1" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (1 samples, 0.06%)</title><rect x="283.1" y="1411.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.1" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (1 samples, 0.06%)</title><rect x="283.1" y="1395.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.1" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (1 samples, 0.06%)</title><rect x="283.1" y="1379.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.1" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (1 samples, 0.06%)</title><rect x="283.1" y="1363.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="286.1" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="283.1" y="1347.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="286.1" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="283.1" y="1331.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.1" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/RichInt$.until$extension0 (1 samples, 0.06%)</title><rect x="283.9" y="1507.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.9" y="1518.0"></text>
</g>
<g>
<title>scala/collection/immutable/Range$.apply (1 samples, 0.06%)</title><rect x="283.9" y="1491.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.9" y="1502.0"></text>
</g>
<g>
<title>scala/collection/immutable/Range.&lt;init&gt; (1 samples, 0.06%)</title><rect x="283.9" y="1475.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.9" y="1486.0"></text>
</g>
<g>
<title>scala/collection/immutable/Range.longLength (1 samples, 0.06%)</title><rect x="283.9" y="1459.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.9" y="1470.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.next (1 samples, 0.06%)</title><rect x="284.6" y="1619.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="287.6" y="1630.0"></text>
</g>
<g>
<title>treadle/TreadleTester$.apply (4 samples, 0.25%)</title><rect x="285.3" y="1731.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.3" y="1742.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$.transform (4 samples, 0.25%)</title><rect x="285.3" y="1715.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.3" y="1726.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (4 samples, 0.25%)</title><rect x="285.3" y="1699.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="288.3" y="1710.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (4 samples, 0.25%)</title><rect x="285.3" y="1683.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.3" y="1694.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (4 samples, 0.25%)</title><rect x="285.3" y="1667.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="288.3" y="1678.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$$$Lambda$8440/516774004.apply (4 samples, 0.25%)</title><rect x="285.3" y="1651.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="288.3" y="1662.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$.$anonfun$transform$2 (4 samples, 0.25%)</title><rect x="285.3" y="1635.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.3" y="1646.0"></text>
</g>
<g>
<title>treadle/stage/phases/CreateTester$.transform (1 samples, 0.06%)</title><rect x="285.3" y="1619.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="288.3" y="1630.0"></text>
</g>
<g>
<title>treadle/stage/phases/CreateTester$.transform (1 samples, 0.06%)</title><rect x="285.3" y="1603.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="288.3" y="1614.0"></text>
</g>
<g>
<title>treadle/TreadleTester.&lt;init&gt; (1 samples, 0.06%)</title><rect x="285.3" y="1587.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="288.3" y="1598.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$.apply (1 samples, 0.06%)</title><rect x="285.3" y="1571.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.3" y="1582.0"></text>
</g>
<g>
<title>treadle/chronometry/Timer.apply (1 samples, 0.06%)</title><rect x="285.3" y="1555.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="288.3" y="1566.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (1 samples, 0.06%)</title><rect x="285.3" y="1539.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.3" y="1550.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$$$Lambda$9247/6403629.apply$mcV$sp (1 samples, 0.06%)</title><rect x="285.3" y="1523.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="288.3" y="1534.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$.$anonfun$apply$8 (1 samples, 0.06%)</title><rect x="285.3" y="1507.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="288.3" y="1518.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.compile (1 samples, 0.06%)</title><rect x="285.3" y="1491.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.3" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processModule (1 samples, 0.06%)</title><rect x="285.3" y="1475.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="288.3" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processStatements (1 samples, 0.06%)</title><rect x="285.3" y="1459.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="288.3" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processStatements (1 samples, 0.06%)</title><rect x="285.3" y="1443.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="288.3" y="1454.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processExpression$1 (1 samples, 0.06%)</title><rect x="285.3" y="1427.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.3" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.oneArgOneParamOps$1 (1 samples, 0.06%)</title><rect x="285.3" y="1411.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.3" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.06%)</title><rect x="285.3" y="1395.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="288.3" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.06%)</title><rect x="285.3" y="1379.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="288.3" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.06%)</title><rect x="285.3" y="1363.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="288.3" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1974853525.invokeExact_MT (1 samples, 0.06%)</title><rect x="285.3" y="1347.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.3" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1991313236.invoker (1 samples, 0.06%)</title><rect x="285.3" y="1331.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="288.3" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$BMH/1666463590.reinvoke (1 samples, 0.06%)</title><rect x="285.3" y="1315.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="288.3" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/900008524.invokeStatic_L4_L (1 samples, 0.06%)</title><rect x="285.3" y="1299.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.3" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.06%)</title><rect x="285.3" y="1283.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.3" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.06%)</title><rect x="285.3" y="1267.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="288.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.06%)</title><rect x="285.3" y="1251.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="288.3" y="1262.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.defineAnonymousClass (1 samples, 0.06%)</title><rect x="285.3" y="1235.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="288.3" y="1246.0"></text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass (1 samples, 0.06%)</title><rect x="285.3" y="1219.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="288.3" y="1230.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, KlassHandle, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="285.3" y="1203.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="288.3" y="1214.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.06%)</title><rect x="285.3" y="1187.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="288.3" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.06%)</title><rect x="285.3" y="1171.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="288.3" y="1182.0"></text>
</g>
<g>
<title>Verifier::verify(instanceKlassHandle, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="285.3" y="1155.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="288.3" y="1166.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="285.3" y="1139.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="288.3" y="1150.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle, Thread*) (1 samples, 0.06%)</title><rect x="285.3" y="1123.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="288.3" y="1134.0"></text>
</g>
<g>
<title>VerificationType::is_assignable_from(VerificationType const&amp;, ClassVerifier*, bool, Thread*) const (1 samples, 0.06%)</title><rect x="285.3" y="1107.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="288.3" y="1118.0"></text>
</g>
<g>
<title>treadle/stage/phases/GetFirrtlAst$.transform (1 samples, 0.06%)</title><rect x="286.1" y="1619.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.1" y="1630.0"></text>
</g>
<g>
<title>treadle/stage/phases/GetFirrtlAst$.transform (1 samples, 0.06%)</title><rect x="286.1" y="1603.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.1" y="1614.0"></text>
</g>
<g>
<title>scala/Option.getOrElse (1 samples, 0.06%)</title><rect x="286.1" y="1587.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.1" y="1598.0"></text>
</g>
<g>
<title>treadle/stage/phases/GetFirrtlAst$$$Lambda$8442/1302387166.apply (1 samples, 0.06%)</title><rect x="286.1" y="1571.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="289.1" y="1582.0"></text>
</g>
<g>
<title>treadle/stage/phases/GetFirrtlAst$.$anonfun$transform$2 (1 samples, 0.06%)</title><rect x="286.1" y="1555.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.1" y="1566.0"></text>
</g>
<g>
<title>treadle/stage/phases/GetFirrtlAst$.handleFirrtlSource$1 (1 samples, 0.06%)</title><rect x="286.1" y="1539.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.1" y="1550.0"></text>
</g>
<g>
<title>firrtl/Parser$.parse (1 samples, 0.06%)</title><rect x="286.1" y="1523.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="289.1" y="1534.0"></text>
</g>
<g>
<title>firrtl/Parser$.parseString (1 samples, 0.06%)</title><rect x="286.1" y="1507.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.1" y="1518.0"></text>
</g>
<g>
<title>firrtl/Parser$.parseCharStream (1 samples, 0.06%)</title><rect x="286.1" y="1491.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.1" y="1502.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (1 samples, 0.06%)</title><rect x="286.1" y="1475.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="289.1" y="1486.0"></text>
</g>
<g>
<title>firrtl/Parser$$$Lambda$8443/1960332789.apply (1 samples, 0.06%)</title><rect x="286.1" y="1459.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.1" y="1470.0"></text>
</g>
<g>
<title>firrtl/Parser$.$anonfun$parseCharStream$1 (1 samples, 0.06%)</title><rect x="286.1" y="1443.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.1" y="1454.0"></text>
</g>
<g>
<title>firrtl/antlr/FIRRTLParser.circuit (1 samples, 0.06%)</title><rect x="286.1" y="1427.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.1" y="1438.0"></text>
</g>
<g>
<title>firrtl/antlr/FIRRTLParser.module (1 samples, 0.06%)</title><rect x="286.1" y="1411.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.1" y="1422.0"></text>
</g>
<g>
<title>firrtl/antlr/FIRRTLParser.moduleBlock (1 samples, 0.06%)</title><rect x="286.1" y="1395.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.1" y="1406.0"></text>
</g>
<g>
<title>firrtl/antlr/FIRRTLParser.simple_stmt (1 samples, 0.06%)</title><rect x="286.1" y="1379.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.1" y="1390.0"></text>
</g>
<g>
<title>firrtl/antlr/FIRRTLParser.stmt (1 samples, 0.06%)</title><rect x="286.1" y="1363.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.1" y="1374.0"></text>
</g>
<g>
<title>firrtl/antlr/FIRRTLParser.exp (1 samples, 0.06%)</title><rect x="286.1" y="1347.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.1" y="1358.0"></text>
</g>
<g>
<title>firrtl/antlr/FIRRTLParser.exp (1 samples, 0.06%)</title><rect x="286.1" y="1331.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.1" y="1342.0"></text>
</g>
<g>
<title>firrtl/antlr/FIRRTLParser.id (1 samples, 0.06%)</title><rect x="286.1" y="1315.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.1" y="1326.0"></text>
</g>
<g>
<title>org/antlr/v4/runtime/Parser.match (1 samples, 0.06%)</title><rect x="286.1" y="1299.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.1" y="1310.0"></text>
</g>
<g>
<title>treadle/stage/phases/PrepareAst$.transform (2 samples, 0.12%)</title><rect x="286.8" y="1619.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.8" y="1630.0"></text>
</g>
<g>
<title>treadle/stage/phases/PrepareAst$.transform (2 samples, 0.12%)</title><rect x="286.8" y="1603.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.8" y="1614.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.transform$ (2 samples, 0.12%)</title><rect x="286.8" y="1587.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.8" y="1598.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.transform (2 samples, 0.12%)</title><rect x="286.8" y="1571.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.8" y="1582.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.flatMap (2 samples, 0.12%)</title><rect x="286.8" y="1555.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.8" y="1566.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap$ (2 samples, 0.12%)</title><rect x="286.8" y="1539.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.8" y="1550.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap (2 samples, 0.12%)</title><rect x="286.8" y="1523.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.8" y="1534.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (2 samples, 0.12%)</title><rect x="286.8" y="1507.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.8" y="1518.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$4251/1646457409.apply (2 samples, 0.12%)</title><rect x="286.8" y="1491.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.8" y="1502.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$flatMap$1 (2 samples, 0.12%)</title><rect x="286.8" y="1475.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.8" y="1486.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase$$Lambda$8459/2101302801.apply (2 samples, 0.12%)</title><rect x="286.8" y="1459.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.8" y="1470.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.$anonfun$transform$2 (2 samples, 0.12%)</title><rect x="286.8" y="1443.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.8" y="1454.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (2 samples, 0.12%)</title><rect x="286.8" y="1427.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.8" y="1438.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (2 samples, 0.12%)</title><rect x="286.8" y="1411.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.8" y="1422.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (2 samples, 0.12%)</title><rect x="286.8" y="1395.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.8" y="1406.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase$$Lambda$8460/1311952029.apply (2 samples, 0.12%)</title><rect x="286.8" y="1379.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.8" y="1390.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.$anonfun$transform$3 (2 samples, 0.12%)</title><rect x="286.8" y="1363.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.8" y="1374.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (2 samples, 0.12%)</title><rect x="286.8" y="1347.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.8" y="1358.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (2 samples, 0.12%)</title><rect x="286.8" y="1331.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.8" y="1342.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8462/1346230705.apply (2 samples, 0.12%)</title><rect x="286.8" y="1315.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.8" y="1326.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (2 samples, 0.12%)</title><rect x="286.8" y="1299.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.8" y="1310.0"></text>
</g>
<g>
<title>treadle/stage/phases/ChirrtlToLow.execute (2 samples, 0.12%)</title><rect x="286.8" y="1283.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.8" y="1294.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (2 samples, 0.12%)</title><rect x="286.8" y="1267.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.8" y="1278.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (2 samples, 0.12%)</title><rect x="286.8" y="1251.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="289.8" y="1262.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (2 samples, 0.12%)</title><rect x="286.8" y="1235.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.8" y="1246.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (2 samples, 0.12%)</title><rect x="286.8" y="1219.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.8" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (2 samples, 0.12%)</title><rect x="286.8" y="1203.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.8" y="1214.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (2 samples, 0.12%)</title><rect x="286.8" y="1187.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="289.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (2 samples, 0.12%)</title><rect x="286.8" y="1171.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.8" y="1182.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$8463/148858234.apply (2 samples, 0.12%)</title><rect x="286.8" y="1155.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.8" y="1166.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (2 samples, 0.12%)</title><rect x="286.8" y="1139.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.8" y="1150.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (2 samples, 0.12%)</title><rect x="286.8" y="1123.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.8" y="1134.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (2 samples, 0.12%)</title><rect x="286.8" y="1107.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.8" y="1118.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8462/1346230705.apply (2 samples, 0.12%)</title><rect x="286.8" y="1091.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.8" y="1102.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (2 samples, 0.12%)</title><rect x="286.8" y="1075.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.8" y="1086.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (1 samples, 0.06%)</title><rect x="286.8" y="1059.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="289.8" y="1070.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (1 samples, 0.06%)</title><rect x="286.8" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.8" y="1054.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (1 samples, 0.06%)</title><rect x="286.8" y="1027.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.8" y="1038.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (1 samples, 0.06%)</title><rect x="286.8" y="1011.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.8" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (1 samples, 0.06%)</title><rect x="286.8" y="995.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.8" y="1006.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (1 samples, 0.06%)</title><rect x="286.8" y="979.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.8" y="990.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (1 samples, 0.06%)</title><rect x="286.8" y="963.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.8" y="974.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$8463/148858234.apply (1 samples, 0.06%)</title><rect x="286.8" y="947.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.8" y="958.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (1 samples, 0.06%)</title><rect x="286.8" y="931.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.8" y="942.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (1 samples, 0.06%)</title><rect x="286.8" y="915.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.8" y="926.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (1 samples, 0.06%)</title><rect x="286.8" y="899.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.8" y="910.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8462/1346230705.apply (1 samples, 0.06%)</title><rect x="286.8" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.8" y="894.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (1 samples, 0.06%)</title><rect x="286.8" y="867.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.8" y="878.0"></text>
</g>
<g>
<title>firrtl/transforms/RemoveWires.execute (1 samples, 0.06%)</title><rect x="286.8" y="851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.8" y="862.0"></text>
</g>
<g>
<title>firrtl/Mappers$CircuitMap$.map$extension (1 samples, 0.06%)</title><rect x="286.8" y="835.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.8" y="846.0"></text>
</g>
<g>
<title>firrtl/Mappers$CircuitMagnet$$anon$17.map (1 samples, 0.06%)</title><rect x="286.8" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.8" y="830.0"></text>
</g>
<g>
<title>firrtl/ir/Circuit.mapModule (1 samples, 0.06%)</title><rect x="286.8" y="803.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.8" y="814.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.06%)</title><rect x="286.8" y="787.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.8" y="798.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.06%)</title><rect x="286.8" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.8" y="782.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.06%)</title><rect x="286.8" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.8" y="766.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.06%)</title><rect x="286.8" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.8" y="750.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.06%)</title><rect x="286.8" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.8" y="734.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.06%)</title><rect x="286.8" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.8" y="718.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3615/1944768446.apply (1 samples, 0.06%)</title><rect x="286.8" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.8" y="702.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.06%)</title><rect x="286.8" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.8" y="686.0"></text>
</g>
<g>
<title>firrtl/transforms/RemoveWires$$Lambda$9066/1295352039.apply (1 samples, 0.06%)</title><rect x="286.8" y="659.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="289.8" y="670.0"></text>
</g>
<g>
<title>firrtl/transforms/RemoveWires.$anonfun$execute$1 (1 samples, 0.06%)</title><rect x="286.8" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.8" y="654.0"></text>
</g>
<g>
<title>firrtl/transforms/RemoveWires.onModule (1 samples, 0.06%)</title><rect x="286.8" y="627.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.8" y="638.0"></text>
</g>
<g>
<title>firrtl/transforms/RemoveWires.getOrderedNodes (1 samples, 0.06%)</title><rect x="286.8" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.8" y="622.0"></text>
</g>
<g>
<title>scala/util/Try$.apply (1 samples, 0.06%)</title><rect x="286.8" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.8" y="606.0"></text>
</g>
<g>
<title>firrtl/transforms/RemoveWires$$Lambda$9079/275600858.apply (1 samples, 0.06%)</title><rect x="286.8" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.8" y="590.0"></text>
</g>
<g>
<title>firrtl/transforms/RemoveWires.$anonfun$getOrderedNodes$5 (1 samples, 0.06%)</title><rect x="286.8" y="563.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.8" y="574.0"></text>
</g>
<g>
<title>firrtl/graph/DiGraph.linearize (1 samples, 0.06%)</title><rect x="286.8" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.8" y="558.0"></text>
</g>
<g>
<title>firrtl/graph/DiGraph.seededLinearize (1 samples, 0.06%)</title><rect x="286.8" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="289.8" y="542.0"></text>
</g>
<g>
<title>scala/collection/mutable/LinkedHashSet.contains (1 samples, 0.06%)</title><rect x="286.8" y="515.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.8" y="526.0"></text>
</g>
<g>
<title>scala/collection/mutable/LinkedHashSet.findEntry (1 samples, 0.06%)</title><rect x="286.8" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="289.8" y="510.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.06%)</title><rect x="286.8" y="483.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="289.8" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.06%)</title><rect x="286.8" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.8" y="478.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.06%)</title><rect x="286.8" y="451.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.8" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/LinkedHashSet.elemEquals (1 samples, 0.06%)</title><rect x="286.8" y="435.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.8" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.06%)</title><rect x="286.8" y="419.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.8" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.06%)</title><rect x="286.8" y="403.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.8" y="414.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.06%)</title><rect x="286.8" y="387.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.8" y="398.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.06%)</title><rect x="286.8" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.8" y="382.0"></text>
</g>
<g>
<title>firrtl/WrappedExpression.equals (1 samples, 0.06%)</title><rect x="286.8" y="355.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.8" y="366.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules.execute (1 samples, 0.06%)</title><rect x="287.5" y="1059.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="290.5" y="1070.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules.run (1 samples, 0.06%)</title><rect x="287.5" y="1043.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.5" y="1054.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules$.deduplicate (1 samples, 0.06%)</title><rect x="287.5" y="1027.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.5" y="1038.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules$.buildRTLTags (1 samples, 0.06%)</title><rect x="287.5" y="1011.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="290.5" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.06%)</title><rect x="287.5" y="995.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="290.5" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.06%)</title><rect x="287.5" y="979.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.5" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.06%)</title><rect x="287.5" y="963.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.5" y="974.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules$$$Lambda$8804/981949473.apply (1 samples, 0.06%)</title><rect x="287.5" y="947.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.5" y="958.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules$.$anonfun$buildRTLTags$6 (1 samples, 0.06%)</title><rect x="287.5" y="931.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.5" y="942.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules$.agnostify (1 samples, 0.06%)</title><rect x="287.5" y="915.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.5" y="926.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules$.changeInternals (1 samples, 0.06%)</title><rect x="287.5" y="899.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="290.5" y="910.0"></text>
</g>
<g>
<title>firrtl/Mappers$ModuleMap$.map$extension (1 samples, 0.06%)</title><rect x="287.5" y="883.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="290.5" y="894.0"></text>
</g>
<g>
<title>firrtl/Mappers$ModuleMagnet$$anon$13.map (1 samples, 0.06%)</title><rect x="287.5" y="867.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.5" y="878.0"></text>
</g>
<g>
<title>firrtl/ir/Module.mapStmt (1 samples, 0.06%)</title><rect x="287.5" y="851.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.5" y="862.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules$$$Lambda$8821/358915597.apply (1 samples, 0.06%)</title><rect x="287.5" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.5" y="846.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules$.$anonfun$changeInternals$20 (1 samples, 0.06%)</title><rect x="287.5" y="819.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.5" y="830.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules$.onStmt$1 (1 samples, 0.06%)</title><rect x="287.5" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.5" y="814.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMap$.map$extension (1 samples, 0.06%)</title><rect x="287.5" y="787.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.5" y="798.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMagnet$$anon$2.map (1 samples, 0.06%)</title><rect x="287.5" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.5" y="782.0"></text>
</g>
<g>
<title>firrtl/ir/Block.mapStmt (1 samples, 0.06%)</title><rect x="287.5" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.5" y="766.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.06%)</title><rect x="287.5" y="739.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.5" y="750.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.06%)</title><rect x="287.5" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="290.5" y="734.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.06%)</title><rect x="287.5" y="707.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.5" y="718.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.06%)</title><rect x="287.5" y="691.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.5" y="702.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.06%)</title><rect x="287.5" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.5" y="686.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.06%)</title><rect x="287.5" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.5" y="670.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3615/1944768446.apply (1 samples, 0.06%)</title><rect x="287.5" y="643.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.5" y="654.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.06%)</title><rect x="287.5" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="290.5" y="638.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules$$$Lambda$8824/73473556.apply (1 samples, 0.06%)</title><rect x="287.5" y="611.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.5" y="622.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules$.$anonfun$changeInternals$14 (1 samples, 0.06%)</title><rect x="287.5" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.5" y="606.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules$.onStmt$1 (1 samples, 0.06%)</title><rect x="287.5" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.5" y="590.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules$$$Lambda$8805/503899617.apply (1 samples, 0.06%)</title><rect x="287.5" y="563.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.5" y="574.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules$.$anonfun$agnostify$5 (1 samples, 0.06%)</title><rect x="287.5" y="547.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.5" y="558.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules$.rename$2 (1 samples, 0.06%)</title><rect x="287.5" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.5" y="542.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.getOrElseUpdate (1 samples, 0.06%)</title><rect x="287.5" y="515.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.5" y="526.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules$$$Lambda$8811/924206227.apply (1 samples, 0.06%)</title><rect x="287.5" y="499.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.5" y="510.0"></text>
</g>
<g>
<title>firrtl/transforms/DedupModules$.$anonfun$agnostify$1 (1 samples, 0.06%)</title><rect x="287.5" y="483.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.5" y="494.0"></text>
</g>
<g>
<title>firrtl/RenameMap.record (1 samples, 0.06%)</title><rect x="287.5" y="467.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.5" y="478.0"></text>
</g>
<g>
<title>firrtl/RenameMap.completeRename (1 samples, 0.06%)</title><rect x="287.5" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.5" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.update (1 samples, 0.06%)</title><rect x="287.5" y="435.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.5" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.06%)</title><rect x="287.5" y="419.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="290.5" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.06%)</title><rect x="287.5" y="403.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.5" y="414.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.06%)</title><rect x="287.5" y="387.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.5" y="398.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.06%)</title><rect x="287.5" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.5" y="382.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.06%)</title><rect x="287.5" y="355.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="290.5" y="366.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (1 samples, 0.06%)</title><rect x="287.5" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="290.5" y="350.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.06%)</title><rect x="287.5" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.5" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.06%)</title><rect x="287.5" y="307.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.5" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.06%)</title><rect x="287.5" y="291.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.5" y="302.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="287.5" y="275.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.5" y="286.0"></text>
</g>
<g>
<title>firrtl/annotations/ReferenceTarget.hashCode (1 samples, 0.06%)</title><rect x="287.5" y="259.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.5" y="270.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.06%)</title><rect x="287.5" y="243.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.5" y="254.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.06%)</title><rect x="287.5" y="227.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.5" y="238.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.06%)</title><rect x="287.5" y="211.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.5" y="222.0"></text>
</g>
<g>
<title>firrtl/annotations/ReferenceTarget.productArity (1 samples, 0.06%)</title><rect x="287.5" y="195.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.5" y="206.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="287.5" y="179.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="290.5" y="190.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="287.5" y="163.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="290.5" y="174.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="287.5" y="147.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="290.5" y="158.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="287.5" y="131.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="290.5" y="142.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.06%)</title><rect x="287.5" y="115.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="290.5" y="126.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.06%)</title><rect x="287.5" y="99.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="290.5" y="110.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*) (1 samples, 0.06%)</title><rect x="287.5" y="83.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="290.5" y="94.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*) (1 samples, 0.06%)</title><rect x="287.5" y="67.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="290.5" y="78.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.06%)</title><rect x="287.5" y="51.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="290.5" y="62.0"></text>
</g>
<g>
<title>_pthread_cond_updateval (1 samples, 0.06%)</title><rect x="287.5" y="35.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="290.5" y="46.0"></text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$8378/2024003890.apply$mcV$sp (223 samples, 13.77%)</title><rect x="288.2" y="1779.0" width="162.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="291.2" y="1790.0">treadle/GCDTester$$La..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$new$4 (223 samples, 13.77%)</title><rect x="288.2" y="1763.0" width="162.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.2" y="1774.0">treadle/GCDTester.$an..</text>
</g>
<g>
<title>treadle/GCDTester.manyValuesTest (223 samples, 13.77%)</title><rect x="288.2" y="1747.0" width="162.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="291.2" y="1758.0">treadle/GCDTester.man..</text>
</g>
<g>
<title>scala/collection/AbstractTraversable.flatMap (1 samples, 0.06%)</title><rect x="288.2" y="1731.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="291.2" y="1742.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap$ (1 samples, 0.06%)</title><rect x="288.2" y="1715.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.2" y="1726.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap (1 samples, 0.06%)</title><rect x="288.2" y="1699.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="291.2" y="1710.0"></text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach (1 samples, 0.06%)</title><rect x="288.2" y="1683.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.2" y="1694.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$4251/1646457409.apply (1 samples, 0.06%)</title><rect x="288.2" y="1667.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.2" y="1678.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$flatMap$1 (1 samples, 0.06%)</title><rect x="288.2" y="1651.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="291.2" y="1662.0"></text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$9364/955839295.apply (1 samples, 0.06%)</title><rect x="288.2" y="1635.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="291.2" y="1646.0"></text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$manyValuesTest$1$adapted (1 samples, 0.06%)</title><rect x="288.2" y="1619.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.2" y="1630.0"></text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$manyValuesTest$1 (1 samples, 0.06%)</title><rect x="288.2" y="1603.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.2" y="1614.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.06%)</title><rect x="288.2" y="1587.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="291.2" y="1598.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.06%)</title><rect x="288.2" y="1571.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="291.2" y="1582.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.06%)</title><rect x="288.2" y="1555.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.2" y="1566.0"></text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach (1 samples, 0.06%)</title><rect x="288.2" y="1539.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.2" y="1550.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3615/1944768446.apply (1 samples, 0.06%)</title><rect x="288.2" y="1523.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.2" y="1534.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.06%)</title><rect x="288.2" y="1507.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="291.2" y="1518.0"></text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$9365/1946162536.apply (1 samples, 0.06%)</title><rect x="288.2" y="1491.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="291.2" y="1502.0"></text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$manyValuesTest$2$adapted (1 samples, 0.06%)</title><rect x="288.2" y="1475.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="291.2" y="1486.0"></text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$manyValuesTest$2 (1 samples, 0.06%)</title><rect x="288.2" y="1459.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="291.2" y="1470.0"></text>
</g>
<g>
<title>treadle/GCDTester.computeGcd (1 samples, 0.06%)</title><rect x="288.2" y="1443.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="291.2" y="1454.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.foreach (220 samples, 13.58%)</title><rect x="289.0" y="1731.0" width="160.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="292.0" y="1742.0">scala/collection/Tra..</text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (220 samples, 13.58%)</title><rect x="289.0" y="1715.0" width="160.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="292.0" y="1726.0">scala/collection/Abs..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (220 samples, 13.58%)</title><rect x="289.0" y="1699.0" width="160.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.0" y="1710.0">scala/collection/Ite..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (220 samples, 13.58%)</title><rect x="289.0" y="1683.0" width="160.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.0" y="1694.0">scala/collection/Ite..</text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (220 samples, 13.58%)</title><rect x="289.0" y="1667.0" width="160.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="292.0" y="1678.0">scala/collection/Abs..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (220 samples, 13.58%)</title><rect x="289.0" y="1651.0" width="160.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="292.0" y="1662.0">scala/collection/Ite..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach (220 samples, 13.58%)</title><rect x="289.0" y="1635.0" width="160.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="292.0" y="1646.0">scala/collection/Ite..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter$$Lambda$3740/6454130.apply (220 samples, 13.58%)</title><rect x="289.0" y="1619.0" width="160.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="292.0" y="1630.0">scala/collection/Tra..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.$anonfun$foreach$1 (220 samples, 13.58%)</title><rect x="289.0" y="1603.0" width="160.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.0" y="1614.0">scala/collection/Tra..</text>
</g>
<g>
<title>scala/tools/nsc/transform/SpecializeTypes$$Lambda$4524/1906725094.apply (2 samples, 0.12%)</title><rect x="289.0" y="1587.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="292.0" y="1598.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.12%)</title><rect x="289.0" y="1571.0" width="1.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="292.0" y="1582.0"></text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$9367/1523037123.apply (218 samples, 13.46%)</title><rect x="290.4" y="1587.0" width="158.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="293.4" y="1598.0">treadle/GCDTester$$L..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$manyValuesTest$4$adapted (218 samples, 13.46%)</title><rect x="290.4" y="1571.0" width="158.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.4" y="1582.0">treadle/GCDTester.$a..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$manyValuesTest$4 (218 samples, 13.46%)</title><rect x="290.4" y="1555.0" width="158.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="293.4" y="1566.0">treadle/GCDTester.$a..</text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.06%)</title><rect x="291.2" y="1539.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="294.2" y="1550.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.06%)</title><rect x="291.2" y="1523.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.2" y="1534.0"></text>
</g>
<g>
<title>scala/math/BigInt.&lt;init&gt; (1 samples, 0.06%)</title><rect x="291.2" y="1507.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.2" y="1518.0"></text>
</g>
<g>
<title>scala/math/ScalaNumber.&lt;init&gt; (1 samples, 0.06%)</title><rect x="291.2" y="1491.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="294.2" y="1502.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (1 samples, 0.06%)</title><rect x="291.2" y="1475.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="294.2" y="1486.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="291.2" y="1459.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.2" y="1470.0"></text>
</g>
<g>
<title>treadle/TreadleTester.peek (85 samples, 5.25%)</title><rect x="291.9" y="1539.0" width="61.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="294.9" y="1550.0">treadl..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (83 samples, 5.12%)</title><rect x="291.9" y="1523.0" width="60.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="294.9" y="1534.0">treadl..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (83 samples, 5.12%)</title><rect x="291.9" y="1507.0" width="60.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="294.9" y="1518.0">treadl..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (83 samples, 5.12%)</title><rect x="291.9" y="1491.0" width="60.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="294.9" y="1502.0">treadl..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (83 samples, 5.12%)</title><rect x="291.9" y="1475.0" width="60.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.9" y="1486.0">treadl..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$9284/124041989.apply$mcV$sp (2 samples, 0.12%)</title><rect x="291.9" y="1459.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="294.9" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$1 (1 samples, 0.06%)</title><rect x="292.6" y="1443.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.6" y="1454.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runLean (1 samples, 0.06%)</title><rect x="292.6" y="1427.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="295.6" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.expression (1 samples, 0.06%)</title><rect x="292.6" y="1411.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="295.6" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$9310/742057590.apply$mcV$sp (81 samples, 5.00%)</title><rect x="293.3" y="1459.0" width="59.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.3" y="1470.0">treadl..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (81 samples, 5.00%)</title><rect x="293.3" y="1443.0" width="59.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="296.3" y="1454.0">treadl..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (81 samples, 5.00%)</title><rect x="293.3" y="1427.0" width="59.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="296.3" y="1438.0">treadl..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.symbol (1 samples, 0.06%)</title><rect x="293.3" y="1411.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="296.3" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.treadle$executable$DataStore$AssignInt$$$outer (5 samples, 0.31%)</title><rect x="294.1" y="1411.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="297.1" y="1422.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="294.1" y="1395.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="297.1" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$GetInt.apply (1 samples, 0.06%)</title><rect x="294.8" y="1395.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="297.8" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/EqInts.apply (1 samples, 0.06%)</title><rect x="295.5" y="1395.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.5" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/GtInts.apply (2 samples, 0.12%)</title><rect x="296.3" y="1395.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.3" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (75 samples, 4.63%)</title><rect x="297.7" y="1411.0" width="54.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="300.7" y="1422.0">tread..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (74 samples, 4.57%)</title><rect x="298.4" y="1395.0" width="53.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.4" y="1406.0">scala..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (74 samples, 4.57%)</title><rect x="298.4" y="1379.0" width="53.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="301.4" y="1390.0">scala..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (74 samples, 4.57%)</title><rect x="298.4" y="1363.0" width="53.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="301.4" y="1374.0">scala..</text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (74 samples, 4.57%)</title><rect x="298.4" y="1347.0" width="53.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="301.4" y="1358.0">tread..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (74 samples, 4.57%)</title><rect x="298.4" y="1331.0" width="53.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="301.4" y="1342.0">tread..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (74 samples, 4.57%)</title><rect x="298.4" y="1315.0" width="53.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="301.4" y="1326.0">tread..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (74 samples, 4.57%)</title><rect x="298.4" y="1299.0" width="53.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.4" y="1310.0">tread..</text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (9 samples, 0.56%)</title><rect x="299.2" y="1283.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="302.2" y="1294.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (7 samples, 0.43%)</title><rect x="299.2" y="1267.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.2" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (7 samples, 0.43%)</title><rect x="299.2" y="1251.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="302.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (7 samples, 0.43%)</title><rect x="299.2" y="1235.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="302.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateRight (1 samples, 0.06%)</title><rect x="299.9" y="1219.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="302.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (5 samples, 0.31%)</title><rect x="300.6" y="1219.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="303.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (5 samples, 0.31%)</title><rect x="300.6" y="1203.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="303.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.&lt;init&gt; (4 samples, 0.25%)</title><rect x="300.6" y="1187.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="303.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (4 samples, 0.25%)</title><rect x="300.6" y="1171.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="303.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (4 samples, 0.25%)</title><rect x="300.6" y="1155.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (4 samples, 0.25%)</title><rect x="300.6" y="1139.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="303.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/Parallelizable.$init$ (2 samples, 0.12%)</title><rect x="302.1" y="1123.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="305.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.$init$ (1 samples, 0.06%)</title><rect x="303.5" y="1187.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="306.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialThreshold (1 samples, 0.06%)</title><rect x="303.5" y="1171.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="306.5" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.initialCapacity (1 samples, 0.06%)</title><rect x="303.5" y="1155.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.initialSize (1 samples, 0.06%)</title><rect x="303.5" y="1139.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="306.5" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (2 samples, 0.12%)</title><rect x="304.3" y="1267.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="307.3" y="1278.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (2 samples, 0.12%)</title><rect x="304.3" y="1251.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="307.3" y="1262.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (2 samples, 0.12%)</title><rect x="304.3" y="1235.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="307.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/770911223.linkToTargetMethod (1 samples, 0.06%)</title><rect x="305.0" y="1219.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/233996206.invokeStatic_L_L (1 samples, 0.06%)</title><rect x="305.0" y="1203.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="308.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable$$Lambda$3535/1093185857.get$Lambda (1 samples, 0.06%)</title><rect x="305.0" y="1187.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable$$Lambda$3535/1093185857.&lt;init&gt; (1 samples, 0.06%)</title><rect x="305.0" y="1171.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="308.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="305.0" y="1155.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (8 samples, 0.49%)</title><rect x="305.7" y="1283.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="308.7" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (8 samples, 0.49%)</title><rect x="305.7" y="1267.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.7" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (8 samples, 0.49%)</title><rect x="305.7" y="1251.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="308.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (8 samples, 0.49%)</title><rect x="305.7" y="1235.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="308.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (7 samples, 0.43%)</title><rect x="305.7" y="1219.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (7 samples, 0.43%)</title><rect x="305.7" y="1203.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="308.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (7 samples, 0.43%)</title><rect x="305.7" y="1187.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="308.7" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (7 samples, 0.43%)</title><rect x="305.7" y="1171.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="308.7" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (7 samples, 0.43%)</title><rect x="305.7" y="1155.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.7" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.19%)</title><rect x="305.7" y="1139.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.7" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.06%)</title><rect x="306.5" y="1123.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="309.5" y="1134.0"></text>
</g>
<g>
<title>firrtl/PortKind$.hashCode (1 samples, 0.06%)</title><rect x="306.5" y="1107.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.5" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/UnsignedInt$.hashCode (1 samples, 0.06%)</title><rect x="307.2" y="1123.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.2" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (2 samples, 0.12%)</title><rect x="307.9" y="1139.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="310.9" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (2 samples, 0.12%)</title><rect x="307.9" y="1123.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.9" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (2 samples, 0.12%)</title><rect x="309.4" y="1139.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="312.4" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.06%)</title><rect x="310.1" y="1123.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.06%)</title><rect x="310.8" y="1219.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="313.8" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (33 samples, 2.04%)</title><rect x="311.6" y="1283.0" width="24.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="314.6" y="1294.0">s..</text>
</g>
<g>
<title>scala/Some.&lt;init&gt; (1 samples, 0.06%)</title><rect x="311.6" y="1267.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="314.6" y="1278.0"></text>
</g>
<g>
<title>scala/Option.&lt;init&gt; (1 samples, 0.06%)</title><rect x="311.6" y="1251.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="314.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="311.6" y="1235.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="314.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (32 samples, 1.98%)</title><rect x="312.3" y="1267.0" width="23.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.3" y="1278.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (32 samples, 1.98%)</title><rect x="312.3" y="1251.0" width="23.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.3" y="1262.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (32 samples, 1.98%)</title><rect x="312.3" y="1235.0" width="23.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="315.3" y="1246.0">s..</text>
</g>
<g>
<title>itable stub (6 samples, 0.37%)</title><rect x="313.7" y="1219.0" width="4.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="316.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (2 samples, 0.12%)</title><rect x="318.1" y="1219.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="321.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.06%)</title><rect x="318.8" y="1203.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="321.8" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (17 samples, 1.05%)</title><rect x="319.6" y="1219.0" width="12.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="322.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (16 samples, 0.99%)</title><rect x="320.3" y="1203.0" width="11.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="323.3" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (16 samples, 0.99%)</title><rect x="320.3" y="1187.0" width="11.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="323.3" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (16 samples, 0.99%)</title><rect x="320.3" y="1171.0" width="11.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.3" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (15 samples, 0.93%)</title><rect x="321.0" y="1155.0" width="11.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="324.0" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (9 samples, 0.56%)</title><rect x="321.0" y="1139.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="323.9" y="1123.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.9" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (3 samples, 0.19%)</title><rect x="324.7" y="1123.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="327.7" y="1134.0"></text>
</g>
<g>
<title>firrtl/PortKind$.hashCode (1 samples, 0.06%)</title><rect x="324.7" y="1107.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.7" y="1118.0"></text>
</g>
<g>
<title>firrtl/RegKind$.hashCode (2 samples, 0.12%)</title><rect x="325.4" y="1107.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="328.4" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/UnsignedInt$.hashCode (1 samples, 0.06%)</title><rect x="326.9" y="1123.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.9" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (2 samples, 0.12%)</title><rect x="327.6" y="1139.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.6" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (2 samples, 0.12%)</title><rect x="327.6" y="1123.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.6" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="329.0" y="1139.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.0" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.dataKind (1 samples, 0.06%)</title><rect x="329.8" y="1139.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="332.8" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.dataSize (1 samples, 0.06%)</title><rect x="330.5" y="1139.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.5" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.firrtlType (1 samples, 0.06%)</title><rect x="331.2" y="1139.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.06%)</title><rect x="332.0" y="1219.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="335.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.06%)</title><rect x="332.0" y="1203.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="335.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.06%)</title><rect x="332.0" y="1187.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="335.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.improve (1 samples, 0.06%)</title><rect x="332.0" y="1171.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="335.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve$ (1 samples, 0.06%)</title><rect x="332.0" y="1155.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="335.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve (1 samples, 0.06%)</title><rect x="332.0" y="1139.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="335.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.06%)</title><rect x="332.7" y="1219.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (3 samples, 0.19%)</title><rect x="333.4" y="1219.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="336.4" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (3 samples, 0.19%)</title><rect x="333.4" y="1203.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.4" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (3 samples, 0.19%)</title><rect x="333.4" y="1187.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="336.4" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (3 samples, 0.19%)</title><rect x="333.4" y="1171.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="336.4" y="1182.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (3 samples, 0.19%)</title><rect x="333.4" y="1155.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.4" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (3 samples, 0.19%)</title><rect x="333.4" y="1139.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="336.4" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (3 samples, 0.19%)</title><rect x="333.4" y="1123.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="336.4" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (16 samples, 0.99%)</title><rect x="335.6" y="1283.0" width="11.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="338.6" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (16 samples, 0.99%)</title><rect x="335.6" y="1267.0" width="11.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.6" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$9319/759737291.apply (16 samples, 0.99%)</title><rect x="335.6" y="1251.0" width="11.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.6" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (16 samples, 0.99%)</title><rect x="335.6" y="1235.0" width="11.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="338.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (16 samples, 0.99%)</title><rect x="335.6" y="1219.0" width="11.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (16 samples, 0.99%)</title><rect x="335.6" y="1203.0" width="11.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (16 samples, 0.99%)</title><rect x="335.6" y="1187.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (16 samples, 0.99%)</title><rect x="335.6" y="1171.0" width="11.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.6" y="1182.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.49%)</title><rect x="337.0" y="1155.0" width="5.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="340.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (5 samples, 0.31%)</title><rect x="342.9" y="1155.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="345.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (5 samples, 0.31%)</title><rect x="342.9" y="1139.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="345.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (5 samples, 0.31%)</title><rect x="342.9" y="1123.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.9" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (5 samples, 0.31%)</title><rect x="342.9" y="1107.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="345.9" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (5 samples, 0.31%)</title><rect x="342.9" y="1091.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="345.9" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.19%)</title><rect x="342.9" y="1075.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="345.9" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (2 samples, 0.12%)</title><rect x="343.6" y="1059.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="346.6" y="1070.0"></text>
</g>
<g>
<title>firrtl/NodeKind$.hashCode (1 samples, 0.06%)</title><rect x="343.6" y="1043.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="346.6" y="1054.0"></text>
</g>
<g>
<title>firrtl/RegKind$.hashCode (1 samples, 0.06%)</title><rect x="344.3" y="1043.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="347.3" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (1 samples, 0.06%)</title><rect x="345.1" y="1075.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.1" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (1 samples, 0.06%)</title><rect x="345.1" y="1059.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="348.1" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="345.8" y="1075.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="348.8" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.06%)</title><rect x="345.8" y="1059.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.8" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.06%)</title><rect x="346.5" y="1155.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.06%)</title><rect x="346.5" y="1139.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="349.5" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.06%)</title><rect x="346.5" y="1123.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="349.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.06%)</title><rect x="346.5" y="1107.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.5" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.06%)</title><rect x="346.5" y="1091.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.5" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.06%)</title><rect x="346.5" y="1075.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="349.5" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.06%)</title><rect x="346.5" y="1059.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="349.5" y="1070.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.equals (1 samples, 0.06%)</title><rect x="346.5" y="1043.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="349.5" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.apply (6 samples, 0.37%)</title><rect x="347.2" y="1283.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="350.2" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (6 samples, 0.37%)</title><rect x="347.2" y="1267.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="350.2" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (5 samples, 0.31%)</title><rect x="348.0" y="1251.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="351.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (5 samples, 0.31%)</title><rect x="348.0" y="1235.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="351.0" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (4 samples, 0.25%)</title><rect x="348.7" y="1219.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="351.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.06%)</title><rect x="348.7" y="1203.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="351.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.06%)</title><rect x="348.7" y="1187.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="351.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.06%)</title><rect x="348.7" y="1171.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="351.7" y="1182.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="348.7" y="1155.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="351.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="348.7" y="1139.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="351.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.06%)</title><rect x="349.4" y="1203.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="352.4" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.06%)</title><rect x="349.4" y="1187.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.4" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.06%)</title><rect x="349.4" y="1171.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="352.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.12%)</title><rect x="350.2" y="1203.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="353.2" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (1 samples, 0.06%)</title><rect x="351.6" y="1283.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="354.6" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (1 samples, 0.06%)</title><rect x="351.6" y="1267.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="354.6" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.06%)</title><rect x="351.6" y="1251.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="354.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.06%)</title><rect x="351.6" y="1235.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="354.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.06%)</title><rect x="351.6" y="1219.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.06%)</title><rect x="351.6" y="1203.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="354.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.06%)</title><rect x="351.6" y="1187.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.06%)</title><rect x="351.6" y="1171.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="354.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.06%)</title><rect x="351.6" y="1155.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="354.6" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.06%)</title><rect x="351.6" y="1139.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.6" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.06%)</title><rect x="351.6" y="1123.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="354.6" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.06%)</title><rect x="351.6" y="1107.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="354.6" y="1118.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="351.6" y="1091.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="354.6" y="1102.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.getValue (2 samples, 0.12%)</title><rect x="352.3" y="1523.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="355.3" y="1534.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.normalize (2 samples, 0.12%)</title><rect x="352.3" y="1507.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="355.3" y="1518.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.makeUInt (2 samples, 0.12%)</title><rect x="352.3" y="1491.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="355.3" y="1502.0"></text>
</g>
<g>
<title>scala/math/BigInt.$amp (2 samples, 0.12%)</title><rect x="352.3" y="1475.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="355.3" y="1486.0"></text>
</g>
<g>
<title>java/math/BigInteger.and (2 samples, 0.12%)</title><rect x="352.3" y="1459.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="355.3" y="1470.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (2 samples, 0.12%)</title><rect x="352.3" y="1443.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="355.3" y="1454.0"></text>
</g>
<g>
<title>treadle/TreadleTester.poke (3 samples, 0.19%)</title><rect x="353.8" y="1539.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.8" y="1550.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setValue (1 samples, 0.06%)</title><rect x="353.8" y="1523.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.8" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (1 samples, 0.06%)</title><rect x="353.8" y="1507.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="356.8" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (1 samples, 0.06%)</title><rect x="353.8" y="1491.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="356.8" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (1 samples, 0.06%)</title><rect x="353.8" y="1475.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="356.8" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (1 samples, 0.06%)</title><rect x="353.8" y="1459.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.8" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (1 samples, 0.06%)</title><rect x="353.8" y="1443.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="356.8" y="1454.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="353.8" y="1427.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.8" y="1438.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="353.8" y="1411.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.8" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.isRegister (2 samples, 0.12%)</title><rect x="354.5" y="1523.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.5" y="1534.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (1 samples, 0.06%)</title><rect x="355.3" y="1507.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="358.3" y="1518.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (1 samples, 0.06%)</title><rect x="355.3" y="1491.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="358.3" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (1 samples, 0.06%)</title><rect x="355.3" y="1475.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="358.3" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (1 samples, 0.06%)</title><rect x="355.3" y="1459.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="358.3" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (1 samples, 0.06%)</title><rect x="355.3" y="1443.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.3" y="1454.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.06%)</title><rect x="355.3" y="1427.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="358.3" y="1438.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.06%)</title><rect x="355.3" y="1411.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="358.3" y="1422.0"></text>
</g>
<g>
<title>treadle/TreadleTester.step (128 samples, 7.90%)</title><rect x="356.0" y="1539.0" width="93.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="359.0" y="1550.0">treadle/Tre..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.run (128 samples, 7.90%)</title><rect x="356.0" y="1523.0" width="93.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="359.0" y="1534.0">treadle/exe..</text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach$mVc$sp (128 samples, 7.90%)</title><rect x="356.0" y="1507.0" width="93.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="359.0" y="1518.0">scala/colle..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper$$Lambda$9317/206114504.apply$mcVI$sp (128 samples, 7.90%)</title><rect x="356.0" y="1491.0" width="93.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="359.0" y="1502.0">treadle/exe..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.$anonfun$run$2 (128 samples, 7.90%)</title><rect x="356.0" y="1475.0" width="93.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.0" y="1486.0">treadle/exe..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (9 samples, 0.56%)</title><rect x="356.0" y="1459.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="359.0" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (9 samples, 0.56%)</title><rect x="356.0" y="1443.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.0" y="1454.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (9 samples, 0.56%)</title><rect x="356.0" y="1427.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="359.0" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (9 samples, 0.56%)</title><rect x="356.0" y="1411.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="359.0" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$9310/742057590.apply$mcV$sp (9 samples, 0.56%)</title><rect x="356.0" y="1395.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.0" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (9 samples, 0.56%)</title><rect x="356.0" y="1379.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="359.0" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (9 samples, 0.56%)</title><rect x="356.0" y="1363.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="359.0" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.06%)</title><rect x="356.0" y="1347.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.0" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (7 samples, 0.43%)</title><rect x="356.7" y="1347.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="359.7" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (7 samples, 0.43%)</title><rect x="356.7" y="1331.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="359.7" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (7 samples, 0.43%)</title><rect x="356.7" y="1315.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.7" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (7 samples, 0.43%)</title><rect x="356.7" y="1299.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.7" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (7 samples, 0.43%)</title><rect x="356.7" y="1283.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.7" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (7 samples, 0.43%)</title><rect x="356.7" y="1267.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="359.7" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (7 samples, 0.43%)</title><rect x="356.7" y="1251.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.7" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (7 samples, 0.43%)</title><rect x="356.7" y="1235.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (2 samples, 0.12%)</title><rect x="356.7" y="1219.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="359.7" y="1230.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="356.7" y="1203.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="359.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.06%)</title><rect x="357.4" y="1203.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="360.4" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.06%)</title><rect x="357.4" y="1187.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.4" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.06%)</title><rect x="357.4" y="1171.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="360.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.06%)</title><rect x="357.4" y="1155.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="360.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.06%)</title><rect x="357.4" y="1139.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.06%)</title><rect x="357.4" y="1123.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="360.4" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="357.4" y="1107.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="360.4" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="357.4" y="1091.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.4" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="357.4" y="1075.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="360.4" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.06%)</title><rect x="357.4" y="1059.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="360.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (2 samples, 0.12%)</title><rect x="358.2" y="1219.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="361.2" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (2 samples, 0.12%)</title><rect x="358.2" y="1203.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="361.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (2 samples, 0.12%)</title><rect x="358.2" y="1187.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="361.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (2 samples, 0.12%)</title><rect x="358.2" y="1171.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="361.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (2 samples, 0.12%)</title><rect x="358.2" y="1155.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="361.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (2 samples, 0.12%)</title><rect x="358.2" y="1139.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="361.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (2 samples, 0.12%)</title><rect x="358.2" y="1123.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="361.2" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="358.2" y="1107.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.2" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (2 samples, 0.12%)</title><rect x="358.2" y="1091.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="361.2" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="358.2" y="1075.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="361.2" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (2 samples, 0.12%)</title><rect x="358.2" y="1059.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="361.2" y="1070.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (3 samples, 0.19%)</title><rect x="359.6" y="1219.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="362.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (3 samples, 0.19%)</title><rect x="359.6" y="1203.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="362.6" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$9319/759737291.apply (3 samples, 0.19%)</title><rect x="359.6" y="1187.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="362.6" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (3 samples, 0.19%)</title><rect x="359.6" y="1171.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (3 samples, 0.19%)</title><rect x="359.6" y="1155.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="362.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (3 samples, 0.19%)</title><rect x="359.6" y="1139.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="362.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (3 samples, 0.19%)</title><rect x="359.6" y="1123.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="362.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (3 samples, 0.19%)</title><rect x="359.6" y="1107.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.6" y="1118.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.12%)</title><rect x="359.6" y="1091.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="362.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.06%)</title><rect x="361.1" y="1091.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="364.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.06%)</title><rect x="361.1" y="1075.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="364.1" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$9264/1757338605.apply$mcI$sp (1 samples, 0.06%)</title><rect x="361.8" y="1347.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="364.8" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$1 (1 samples, 0.06%)</title><rect x="361.8" y="1331.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="364.8" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/EqInts.apply (1 samples, 0.06%)</title><rect x="361.8" y="1315.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="364.8" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$9272/676260972.apply$mcI$sp (1 samples, 0.06%)</title><rect x="361.8" y="1299.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="364.8" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$13 (1 samples, 0.06%)</title><rect x="361.8" y="1283.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="364.8" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.lowerClock$1 (3 samples, 0.19%)</title><rect x="362.5" y="1459.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="365.5" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setIntValue (3 samples, 0.19%)</title><rect x="362.5" y="1443.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="365.5" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (2 samples, 0.12%)</title><rect x="363.3" y="1427.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.3" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (2 samples, 0.12%)</title><rect x="363.3" y="1411.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.3" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (2 samples, 0.12%)</title><rect x="363.3" y="1395.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.3" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (2 samples, 0.12%)</title><rect x="363.3" y="1379.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="366.3" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (2 samples, 0.12%)</title><rect x="363.3" y="1363.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="366.3" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.index (1 samples, 0.06%)</title><rect x="363.3" y="1347.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="366.3" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index$ (1 samples, 0.06%)</title><rect x="363.3" y="1331.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="366.3" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index (1 samples, 0.06%)</title><rect x="363.3" y="1315.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="366.3" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.table (1 samples, 0.06%)</title><rect x="363.3" y="1299.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="366.3" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="364.0" y="1347.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.0" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="364.0" y="1331.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="367.0" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/IntSize$.hashCode (1 samples, 0.06%)</title><rect x="364.0" y="1315.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.0" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.raiseClock$1 (116 samples, 7.16%)</title><rect x="364.7" y="1459.0" width="84.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="367.7" y="1470.0">treadle/ex..</text>
</g>
<g>
<title>treadle/chronometry/UTC.incrementTime (5 samples, 0.31%)</title><rect x="364.7" y="1443.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.7" y="1454.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.runUntil (5 samples, 0.31%)</title><rect x="364.7" y="1427.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="367.7" y="1438.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.setTime (5 samples, 0.31%)</title><rect x="364.7" y="1411.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.7" y="1422.0"></text>
</g>
<g>
<title>treadle/TreadleTester$$Lambda$9296/1771936790.apply$mcV$sp (5 samples, 0.31%)</title><rect x="364.7" y="1395.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.7" y="1406.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$2 (5 samples, 0.31%)</title><rect x="364.7" y="1379.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="367.7" y="1390.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="366.9" y="1363.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="369.9" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.run (1 samples, 0.06%)</title><rect x="367.6" y="1363.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="370.6" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (108 samples, 6.67%)</title><rect x="368.4" y="1443.0" width="78.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="371.4" y="1454.0">treadle/e..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (108 samples, 6.67%)</title><rect x="368.4" y="1427.0" width="78.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.4" y="1438.0">treadle/e..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (108 samples, 6.67%)</title><rect x="368.4" y="1411.0" width="78.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="371.4" y="1422.0">treadle/e..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (108 samples, 6.67%)</title><rect x="368.4" y="1395.0" width="78.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="371.4" y="1406.0">treadle/e..</text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner$$Lambda$9311/2037028822.apply$mcV$sp (18 samples, 1.11%)</title><rect x="368.4" y="1379.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="371.4" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.$anonfun$setLeanMode$2 (18 samples, 1.11%)</title><rect x="368.4" y="1363.0" width="13.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="371.4" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.runFull (18 samples, 1.11%)</title><rect x="368.4" y="1347.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.4" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.isVerbose (1 samples, 0.06%)</title><rect x="368.4" y="1331.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="371.4" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/package$Assigner.isVerbose$ (1 samples, 0.06%)</title><rect x="368.4" y="1315.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="371.4" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/package$Assigner.isVerbose (1 samples, 0.06%)</title><rect x="368.4" y="1299.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="371.4" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.treadle$executable$Assigner$$verboseAssign (1 samples, 0.06%)</title><rect x="368.4" y="1283.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.4" y="1294.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="368.4" y="1267.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="371.4" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$9310/742057590.apply$mcV$sp (17 samples, 1.05%)</title><rect x="369.1" y="1331.0" width="12.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="372.1" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (17 samples, 1.05%)</title><rect x="369.1" y="1315.0" width="12.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="372.1" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (17 samples, 1.05%)</title><rect x="369.1" y="1299.0" width="12.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.1" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (17 samples, 1.05%)</title><rect x="369.1" y="1283.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="372.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (17 samples, 1.05%)</title><rect x="369.1" y="1267.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="372.1" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (17 samples, 1.05%)</title><rect x="369.1" y="1251.0" width="12.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="372.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (17 samples, 1.05%)</title><rect x="369.1" y="1235.0" width="12.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.1" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (17 samples, 1.05%)</title><rect x="369.1" y="1219.0" width="12.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="372.1" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (17 samples, 1.05%)</title><rect x="369.1" y="1203.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="372.1" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (17 samples, 1.05%)</title><rect x="369.1" y="1187.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="372.1" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (17 samples, 1.05%)</title><rect x="369.1" y="1171.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="372.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (5 samples, 0.31%)</title><rect x="369.1" y="1155.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="372.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (5 samples, 0.31%)</title><rect x="369.1" y="1139.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="372.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (5 samples, 0.31%)</title><rect x="369.1" y="1123.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (5 samples, 0.31%)</title><rect x="369.1" y="1107.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="372.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.loop$1 (1 samples, 0.06%)</title><rect x="369.1" y="1091.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="372.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (1 samples, 0.06%)</title><rect x="369.1" y="1075.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="372.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (1 samples, 0.06%)</title><rect x="369.1" y="1059.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="372.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.foreach (4 samples, 0.25%)</title><rect x="369.8" y="1091.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="372.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach$ (4 samples, 0.25%)</title><rect x="369.8" y="1075.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach (4 samples, 0.25%)</title><rect x="369.8" y="1059.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="372.8" y="1070.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable$$Lambda$3535/1093185857.apply (4 samples, 0.25%)</title><rect x="369.8" y="1043.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="372.8" y="1054.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$anonfun$$plus$plus$eq$1 (4 samples, 0.25%)</title><rect x="369.8" y="1027.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="372.8" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (4 samples, 0.25%)</title><rect x="369.8" y="1011.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.8" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.$plus$eq (4 samples, 0.25%)</title><rect x="369.8" y="995.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.8" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (4 samples, 0.25%)</title><rect x="369.8" y="979.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.8" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (4 samples, 0.25%)</title><rect x="369.8" y="963.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.8" y="974.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (4 samples, 0.25%)</title><rect x="369.8" y="947.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="372.8" y="958.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.25%)</title><rect x="369.8" y="931.0" width="2.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="372.8" y="942.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (7 samples, 0.43%)</title><rect x="372.7" y="1155.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (7 samples, 0.43%)</title><rect x="372.7" y="1139.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="375.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (7 samples, 0.43%)</title><rect x="372.7" y="1123.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="375.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (7 samples, 0.43%)</title><rect x="372.7" y="1107.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.7" y="1118.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.25%)</title><rect x="372.7" y="1091.0" width="3.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="375.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.06%)</title><rect x="375.7" y="1091.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.06%)</title><rect x="375.7" y="1075.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.06%)</title><rect x="375.7" y="1059.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.7" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="375.7" y="1043.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="378.7" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="375.7" y="1027.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="378.7" y="1038.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.dataType (1 samples, 0.06%)</title><rect x="375.7" y="1011.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (2 samples, 0.12%)</title><rect x="376.4" y="1091.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (1 samples, 0.06%)</title><rect x="377.1" y="1075.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.06%)</title><rect x="377.1" y="1059.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="380.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.06%)</title><rect x="377.1" y="1043.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="380.1" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.06%)</title><rect x="377.1" y="1027.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.1" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="377.1" y="1011.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="380.1" y="1022.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="377.1" y="995.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.1" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="377.1" y="979.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.1" y="990.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.06%)</title><rect x="377.1" y="963.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="380.1" y="974.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.06%)</title><rect x="377.1" y="947.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="380.1" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.06%)</title><rect x="377.1" y="931.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="380.1" y="942.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.06%)</title><rect x="377.1" y="915.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="380.1" y="926.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (1 samples, 0.06%)</title><rect x="377.1" y="899.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="380.1" y="910.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (1 samples, 0.06%)</title><rect x="377.1" y="883.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="380.1" y="894.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (2 samples, 0.12%)</title><rect x="377.8" y="1155.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="380.8" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (2 samples, 0.12%)</title><rect x="377.8" y="1139.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="380.8" y="1150.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (2 samples, 0.12%)</title><rect x="377.8" y="1123.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.8" y="1134.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.06%)</title><rect x="378.6" y="1107.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="381.6" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.symbolTable (1 samples, 0.06%)</title><rect x="379.3" y="1155.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.3" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (2 samples, 0.12%)</title><rect x="380.0" y="1155.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (2 samples, 0.12%)</title><rect x="380.0" y="1139.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.12%)</title><rect x="380.0" y="1123.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.12%)</title><rect x="380.0" y="1107.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.12%)</title><rect x="380.0" y="1091.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="383.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.12%)</title><rect x="380.0" y="1075.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.0" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (2 samples, 0.12%)</title><rect x="380.0" y="1059.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="383.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (2 samples, 0.12%)</title><rect x="380.0" y="1043.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="383.0" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (2 samples, 0.12%)</title><rect x="380.0" y="1027.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="383.0" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.12%)</title><rect x="380.0" y="1011.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="383.0" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.12%)</title><rect x="380.0" y="995.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="380.0" y="979.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="383.0" y="990.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.06%)</title><rect x="380.8" y="979.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="383.8" y="990.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$9310/742057590.apply$mcV$sp (90 samples, 5.56%)</title><rect x="381.5" y="1379.0" width="65.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.5" y="1390.0">treadle..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (90 samples, 5.56%)</title><rect x="381.5" y="1363.0" width="65.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.5" y="1374.0">treadle..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (90 samples, 5.56%)</title><rect x="381.5" y="1347.0" width="65.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="384.5" y="1358.0">treadle..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.treadle$executable$DataStore$AssignInt$$$outer (2 samples, 0.12%)</title><rect x="381.5" y="1331.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.5" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/EqInts.apply (1 samples, 0.06%)</title><rect x="381.5" y="1315.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.5" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/SubInts.apply (1 samples, 0.06%)</title><rect x="382.2" y="1315.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="385.2" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (85 samples, 5.25%)</title><rect x="382.9" y="1331.0" width="62.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="385.9" y="1342.0">treadl..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (85 samples, 5.25%)</title><rect x="382.9" y="1315.0" width="62.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="385.9" y="1326.0">scala/..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (85 samples, 5.25%)</title><rect x="382.9" y="1299.0" width="62.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.9" y="1310.0">scala/..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (85 samples, 5.25%)</title><rect x="382.9" y="1283.0" width="62.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.9" y="1294.0">scala/..</text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$9318/1507581606.apply (85 samples, 5.25%)</title><rect x="382.9" y="1267.0" width="62.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="385.9" y="1278.0">treadl..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (85 samples, 5.25%)</title><rect x="382.9" y="1251.0" width="62.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="385.9" y="1262.0">treadl..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (85 samples, 5.25%)</title><rect x="382.9" y="1235.0" width="62.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="385.9" y="1246.0">treadl..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (85 samples, 5.25%)</title><rect x="382.9" y="1219.0" width="62.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="385.9" y="1230.0">treadl..</text>
</g>
<g>
<title>scala/LowPriorityImplicits.wrapRefArray (5 samples, 0.31%)</title><rect x="384.4" y="1203.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.4" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.&lt;init&gt; (5 samples, 0.31%)</title><rect x="384.4" y="1187.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.4" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.&lt;init&gt; (5 samples, 0.31%)</title><rect x="384.4" y="1171.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="387.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSeq.&lt;init&gt; (3 samples, 0.19%)</title><rect x="385.9" y="1155.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.&lt;init&gt; (3 samples, 0.19%)</title><rect x="385.9" y="1139.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (3 samples, 0.19%)</title><rect x="385.9" y="1123.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="386.6" y="1107.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="389.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/generic/GenericTraversableTemplate.$init$ (1 samples, 0.06%)</title><rect x="386.6" y="1091.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.$init$ (1 samples, 0.06%)</title><rect x="387.3" y="1107.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="390.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (7 samples, 0.43%)</title><rect x="388.0" y="1203.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="391.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableMapFactory.newBuilder (3 samples, 0.19%)</title><rect x="390.2" y="1187.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="393.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (3 samples, 0.19%)</title><rect x="390.2" y="1171.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="393.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.empty (3 samples, 0.19%)</title><rect x="390.2" y="1155.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="393.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (3 samples, 0.19%)</title><rect x="390.2" y="1139.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (3 samples, 0.19%)</title><rect x="390.2" y="1123.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.&lt;init&gt; (3 samples, 0.19%)</title><rect x="390.2" y="1107.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="393.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (2 samples, 0.12%)</title><rect x="390.2" y="1091.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="393.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (2 samples, 0.12%)</title><rect x="390.2" y="1075.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="393.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="390.2" y="1059.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="393.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/GenIterable.$init$ (1 samples, 0.06%)</title><rect x="391.0" y="1059.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/Cloneable.$init$ (1 samples, 0.06%)</title><rect x="391.7" y="1091.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="394.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.06%)</title><rect x="391.7" y="1075.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="394.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (1 samples, 0.06%)</title><rect x="392.4" y="1187.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.4" y="1198.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (1 samples, 0.06%)</title><rect x="392.4" y="1171.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="395.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (1 samples, 0.06%)</title><rect x="392.4" y="1155.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="395.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (9 samples, 0.56%)</title><rect x="393.1" y="1203.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="396.1" y="1214.0"></text>
</g>
<g>
<title>scala/Some.&lt;init&gt; (1 samples, 0.06%)</title><rect x="393.1" y="1187.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.value (1 samples, 0.06%)</title><rect x="393.9" y="1187.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (7 samples, 0.43%)</title><rect x="394.6" y="1187.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (7 samples, 0.43%)</title><rect x="394.6" y="1171.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="397.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (7 samples, 0.43%)</title><rect x="394.6" y="1155.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="397.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (7 samples, 0.43%)</title><rect x="394.6" y="1139.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="397.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (6 samples, 0.37%)</title><rect x="395.3" y="1123.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="398.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (6 samples, 0.37%)</title><rect x="395.3" y="1107.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="398.3" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (6 samples, 0.37%)</title><rect x="395.3" y="1091.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.3" y="1102.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (6 samples, 0.37%)</title><rect x="395.3" y="1075.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="398.3" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.12%)</title><rect x="395.3" y="1059.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.3" y="1070.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.12%)</title><rect x="395.3" y="1043.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.3" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.12%)</title><rect x="395.3" y="1027.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="398.3" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.12%)</title><rect x="395.3" y="1011.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.3" y="1022.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.12%)</title><rect x="395.3" y="995.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="398.3" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="395.3" y="979.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="398.3" y="990.0"></text>
</g>
<g>
<title>firrtl/ir/IntWidth.hashCode (1 samples, 0.06%)</title><rect x="395.3" y="963.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.3" y="974.0"></text>
</g>
<g>
<title>scala/math/BigInt.toInt (1 samples, 0.06%)</title><rect x="395.3" y="947.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="398.3" y="958.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt$ (1 samples, 0.06%)</title><rect x="395.3" y="931.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="398.3" y="942.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt (1 samples, 0.06%)</title><rect x="395.3" y="915.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="398.3" y="926.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.06%)</title><rect x="395.3" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="398.3" y="910.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.06%)</title><rect x="395.3" y="883.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.3" y="894.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.06%)</title><rect x="395.3" y="867.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.3" y="878.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mix (1 samples, 0.06%)</title><rect x="396.0" y="979.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.0" y="990.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.06%)</title><rect x="396.0" y="963.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="399.0" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (3 samples, 0.19%)</title><rect x="396.8" y="1059.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="399.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.06%)</title><rect x="396.8" y="1043.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.8" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (2 samples, 0.12%)</title><rect x="397.5" y="1043.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.5" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.firrtlType (1 samples, 0.06%)</title><rect x="399.0" y="1059.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="402.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (41 samples, 2.53%)</title><rect x="399.7" y="1203.0" width="29.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.7" y="1214.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.value (1 samples, 0.06%)</title><rect x="399.7" y="1187.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (40 samples, 2.47%)</title><rect x="400.4" y="1187.0" width="29.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="403.4" y="1198.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (40 samples, 2.47%)</title><rect x="400.4" y="1171.0" width="29.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.4" y="1182.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (40 samples, 2.47%)</title><rect x="400.4" y="1155.0" width="29.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="403.4" y="1166.0">sc..</text>
</g>
<g>
<title>itable stub (10 samples, 0.62%)</title><rect x="401.1" y="1139.0" width="7.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="404.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.06%)</title><rect x="408.4" y="1139.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.createNewEntry (1 samples, 0.06%)</title><rect x="408.4" y="1123.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (13 samples, 0.80%)</title><rect x="409.2" y="1139.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (13 samples, 0.80%)</title><rect x="409.2" y="1123.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="412.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (13 samples, 0.80%)</title><rect x="409.2" y="1107.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="412.2" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (13 samples, 0.80%)</title><rect x="409.2" y="1091.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="412.2" y="1102.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (13 samples, 0.80%)</title><rect x="409.2" y="1075.0" width="9.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.2" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (9 samples, 0.56%)</title><rect x="409.2" y="1059.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="412.2" y="1070.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (3 samples, 0.19%)</title><rect x="410.6" y="1043.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.6" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (3 samples, 0.19%)</title><rect x="410.6" y="1027.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="413.6" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (3 samples, 0.19%)</title><rect x="410.6" y="1011.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.6" y="1022.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (3 samples, 0.19%)</title><rect x="410.6" y="995.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="413.6" y="1006.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (3 samples, 0.19%)</title><rect x="410.6" y="979.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.6" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (3 samples, 0.19%)</title><rect x="410.6" y="963.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.6" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (3 samples, 0.19%)</title><rect x="412.8" y="1043.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.8" y="1054.0"></text>
</g>
<g>
<title>firrtl/PortKind$.hashCode (1 samples, 0.06%)</title><rect x="412.8" y="1027.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="415.8" y="1038.0"></text>
</g>
<g>
<title>firrtl/RegKind$.hashCode (2 samples, 0.12%)</title><rect x="413.5" y="1027.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.5" y="1038.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="415.0" y="1043.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="418.0" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (1 samples, 0.06%)</title><rect x="415.7" y="1059.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="418.7" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (1 samples, 0.06%)</title><rect x="415.7" y="1043.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.7" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (3 samples, 0.19%)</title><rect x="416.4" y="1059.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (2 samples, 0.12%)</title><rect x="416.4" y="1043.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="419.4" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.06%)</title><rect x="417.9" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="420.9" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.06%)</title><rect x="418.6" y="1139.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="421.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (14 samples, 0.86%)</title><rect x="419.4" y="1139.0" width="10.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="422.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (10 samples, 0.62%)</title><rect x="422.3" y="1123.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (9 samples, 0.56%)</title><rect x="423.0" y="1107.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="426.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (9 samples, 0.56%)</title><rect x="423.0" y="1091.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="426.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (9 samples, 0.56%)</title><rect x="423.0" y="1075.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.0" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (9 samples, 0.56%)</title><rect x="423.0" y="1059.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="426.0" y="1070.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (9 samples, 0.56%)</title><rect x="423.0" y="1043.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.0" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (8 samples, 0.49%)</title><rect x="423.0" y="1027.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="426.0" y="1038.0"></text>
</g>
<g>
<title>firrtl/PortKind$.hashCode (1 samples, 0.06%)</title><rect x="423.7" y="1011.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.7" y="1022.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (4 samples, 0.25%)</title><rect x="424.5" y="1011.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.5" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (4 samples, 0.25%)</title><rect x="424.5" y="995.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.5" y="1006.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (4 samples, 0.25%)</title><rect x="424.5" y="979.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="427.5" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (4 samples, 0.25%)</title><rect x="424.5" y="963.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="427.5" y="974.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.productElement (1 samples, 0.06%)</title><rect x="424.5" y="947.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="427.5" y="958.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.width (1 samples, 0.06%)</title><rect x="424.5" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="427.5" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="425.2" y="947.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="428.2" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (1 samples, 0.06%)</title><rect x="425.9" y="947.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="428.9" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (1 samples, 0.06%)</title><rect x="425.9" y="931.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="428.9" y="942.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mix (1 samples, 0.06%)</title><rect x="426.6" y="947.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="429.6" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mixLast (1 samples, 0.06%)</title><rect x="426.6" y="931.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="429.6" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.06%)</title><rect x="427.4" y="1011.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.4" y="1022.0"></text>
</g>
<g>
<title>treadle/executable/IntSize$.hashCode (1 samples, 0.06%)</title><rect x="428.1" y="1011.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="431.1" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="428.8" y="1027.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="431.8" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.06%)</title><rect x="428.8" y="1011.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="431.8" y="1022.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (1 samples, 0.06%)</title><rect x="429.6" y="1203.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="432.6" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (9 samples, 0.56%)</title><rect x="430.3" y="1203.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="433.3" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (9 samples, 0.56%)</title><rect x="430.3" y="1187.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="433.3" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$9319/759737291.apply (9 samples, 0.56%)</title><rect x="430.3" y="1171.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="433.3" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (9 samples, 0.56%)</title><rect x="430.3" y="1155.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (9 samples, 0.56%)</title><rect x="430.3" y="1139.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (9 samples, 0.56%)</title><rect x="430.3" y="1123.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (9 samples, 0.56%)</title><rect x="430.3" y="1107.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (9 samples, 0.56%)</title><rect x="430.3" y="1091.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.3" y="1102.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.37%)</title><rect x="430.3" y="1075.0" width="4.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="433.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (3 samples, 0.19%)</title><rect x="434.7" y="1075.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="437.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (3 samples, 0.19%)</title><rect x="434.7" y="1059.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="437.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (3 samples, 0.19%)</title><rect x="434.7" y="1043.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="437.7" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.19%)</title><rect x="434.7" y="1027.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="437.7" y="1038.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (3 samples, 0.19%)</title><rect x="434.7" y="1011.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="437.7" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="434.7" y="995.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="437.7" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (1 samples, 0.06%)</title><rect x="435.4" y="995.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="438.4" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (1 samples, 0.06%)</title><rect x="435.4" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="438.4" y="990.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.06%)</title><rect x="436.1" y="995.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.1" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.06%)</title><rect x="436.1" y="979.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.1" y="990.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.apply (10 samples, 0.62%)</title><rect x="436.8" y="1203.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.8" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (10 samples, 0.62%)</title><rect x="436.8" y="1187.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (6 samples, 0.37%)</title><rect x="439.8" y="1171.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="442.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (6 samples, 0.37%)</title><rect x="439.8" y="1155.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (6 samples, 0.37%)</title><rect x="439.8" y="1139.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (6 samples, 0.37%)</title><rect x="439.8" y="1123.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="442.8" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (1 samples, 0.06%)</title><rect x="444.1" y="1203.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="447.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (1 samples, 0.06%)</title><rect x="444.1" y="1187.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.06%)</title><rect x="444.1" y="1171.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="447.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.06%)</title><rect x="444.1" y="1155.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="447.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.06%)</title><rect x="444.1" y="1139.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="447.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.06%)</title><rect x="444.1" y="1123.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.1" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$9264/1757338605.apply$mcI$sp (3 samples, 0.19%)</title><rect x="444.9" y="1331.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="447.9" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$1 (3 samples, 0.19%)</title><rect x="444.9" y="1315.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.9" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/EqInts.apply (1 samples, 0.06%)</title><rect x="444.9" y="1299.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="447.9" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/EqInts.f2 (1 samples, 0.06%)</title><rect x="444.9" y="1283.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.9" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/TailInts.apply (2 samples, 0.12%)</title><rect x="445.6" y="1299.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="448.6" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$9271/1283402371.apply$mcI$sp (1 samples, 0.06%)</title><rect x="446.3" y="1283.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.3" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$153 (1 samples, 0.06%)</title><rect x="446.3" y="1267.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="449.3" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$GetInt.apply (1 samples, 0.06%)</title><rect x="446.3" y="1251.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="449.3" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$GetInt.index (1 samples, 0.06%)</title><rect x="446.3" y="1235.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="449.3" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setIntValue (3 samples, 0.19%)</title><rect x="447.0" y="1443.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="450.0" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (1 samples, 0.06%)</title><rect x="447.0" y="1427.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.0" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (1 samples, 0.06%)</title><rect x="447.0" y="1411.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.0" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (1 samples, 0.06%)</title><rect x="447.0" y="1395.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="450.0" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (1 samples, 0.06%)</title><rect x="447.0" y="1379.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.0" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (1 samples, 0.06%)</title><rect x="447.0" y="1363.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="450.0" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.06%)</title><rect x="447.0" y="1347.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="450.0" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="447.0" y="1331.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="450.0" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.valueFrom (2 samples, 0.12%)</title><rect x="447.8" y="1427.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="450.8" y="1438.0"></text>
</g>
<g>
<title>scala/math/BigInt.$amp (2 samples, 0.12%)</title><rect x="447.8" y="1411.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="450.8" y="1422.0"></text>
</g>
<g>
<title>java/math/BigInteger.and (2 samples, 0.12%)</title><rect x="447.8" y="1395.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="450.8" y="1406.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (2 samples, 0.12%)</title><rect x="447.8" y="1379.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="450.8" y="1390.0"></text>
</g>
<g>
<title>treadle/TreadleTester$.apply (2 samples, 0.12%)</title><rect x="449.2" y="1731.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.2" y="1742.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$.transform (2 samples, 0.12%)</title><rect x="449.2" y="1715.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.2" y="1726.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (2 samples, 0.12%)</title><rect x="449.2" y="1699.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="452.2" y="1710.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (2 samples, 0.12%)</title><rect x="449.2" y="1683.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="452.2" y="1694.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (2 samples, 0.12%)</title><rect x="449.2" y="1667.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="452.2" y="1678.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$$$Lambda$8440/516774004.apply (2 samples, 0.12%)</title><rect x="449.2" y="1651.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.2" y="1662.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$.$anonfun$transform$2 (2 samples, 0.12%)</title><rect x="449.2" y="1635.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="452.2" y="1646.0"></text>
</g>
<g>
<title>treadle/stage/phases/PrepareAst$.transform (2 samples, 0.12%)</title><rect x="449.2" y="1619.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.2" y="1630.0"></text>
</g>
<g>
<title>treadle/stage/phases/PrepareAst$.transform (2 samples, 0.12%)</title><rect x="449.2" y="1603.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="452.2" y="1614.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.transform$ (2 samples, 0.12%)</title><rect x="449.2" y="1587.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="452.2" y="1598.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.transform (2 samples, 0.12%)</title><rect x="449.2" y="1571.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="452.2" y="1582.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.flatMap (2 samples, 0.12%)</title><rect x="449.2" y="1555.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.2" y="1566.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap$ (2 samples, 0.12%)</title><rect x="449.2" y="1539.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="452.2" y="1550.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap (2 samples, 0.12%)</title><rect x="449.2" y="1523.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.2" y="1534.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (2 samples, 0.12%)</title><rect x="449.2" y="1507.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="452.2" y="1518.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$4251/1646457409.apply (2 samples, 0.12%)</title><rect x="449.2" y="1491.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="452.2" y="1502.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$flatMap$1 (2 samples, 0.12%)</title><rect x="449.2" y="1475.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.2" y="1486.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase$$Lambda$8459/2101302801.apply (2 samples, 0.12%)</title><rect x="449.2" y="1459.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="452.2" y="1470.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.$anonfun$transform$2 (2 samples, 0.12%)</title><rect x="449.2" y="1443.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.2" y="1454.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (2 samples, 0.12%)</title><rect x="449.2" y="1427.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="452.2" y="1438.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (2 samples, 0.12%)</title><rect x="449.2" y="1411.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="452.2" y="1422.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (2 samples, 0.12%)</title><rect x="449.2" y="1395.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.2" y="1406.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase$$Lambda$8460/1311952029.apply (2 samples, 0.12%)</title><rect x="449.2" y="1379.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="452.2" y="1390.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.$anonfun$transform$3 (2 samples, 0.12%)</title><rect x="449.2" y="1363.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.2" y="1374.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (2 samples, 0.12%)</title><rect x="449.2" y="1347.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="452.2" y="1358.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (2 samples, 0.12%)</title><rect x="449.2" y="1331.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="452.2" y="1342.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8462/1346230705.apply (2 samples, 0.12%)</title><rect x="449.2" y="1315.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="452.2" y="1326.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (2 samples, 0.12%)</title><rect x="449.2" y="1299.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="452.2" y="1310.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (1 samples, 0.06%)</title><rect x="449.2" y="1283.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.2" y="1294.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (1 samples, 0.06%)</title><rect x="449.2" y="1267.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="452.2" y="1278.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (1 samples, 0.06%)</title><rect x="449.2" y="1251.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="452.2" y="1262.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (1 samples, 0.06%)</title><rect x="449.2" y="1235.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="452.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (1 samples, 0.06%)</title><rect x="449.2" y="1219.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="452.2" y="1230.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (1 samples, 0.06%)</title><rect x="449.2" y="1203.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (1 samples, 0.06%)</title><rect x="449.2" y="1187.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="452.2" y="1198.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$8463/148858234.apply (1 samples, 0.06%)</title><rect x="449.2" y="1171.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.2" y="1182.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (1 samples, 0.06%)</title><rect x="449.2" y="1155.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="452.2" y="1166.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (1 samples, 0.06%)</title><rect x="449.2" y="1139.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="452.2" y="1150.0"></text>
</g>
<g>
<title>firrtl/Transform.propagateAnnotations (1 samples, 0.06%)</title><rect x="449.2" y="1123.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.flatMap (1 samples, 0.06%)</title><rect x="449.2" y="1107.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="452.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap$ (1 samples, 0.06%)</title><rect x="449.2" y="1091.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="452.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap (1 samples, 0.06%)</title><rect x="449.2" y="1075.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/LinkedHashSet.foreach (1 samples, 0.06%)</title><rect x="449.2" y="1059.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="452.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$4251/1646457409.apply (1 samples, 0.06%)</title><rect x="449.2" y="1043.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$flatMap$1 (1 samples, 0.06%)</title><rect x="449.2" y="1027.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="452.2" y="1038.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8501/1806450254.apply (1 samples, 0.06%)</title><rect x="449.2" y="1011.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="452.2" y="1022.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$propagateAnnotations$3 (1 samples, 0.06%)</title><rect x="449.2" y="995.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="452.2" y="1006.0"></text>
</g>
<g>
<title>firrtl/options/TargetDirAnnotation.update (1 samples, 0.06%)</title><rect x="449.2" y="979.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="452.2" y="990.0"></text>
</g>
<g>
<title>firrtl/annotations/NoTargetAnnotation.update$ (1 samples, 0.06%)</title><rect x="449.2" y="963.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="452.2" y="974.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="449.2" y="947.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="452.2" y="958.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="449.2" y="931.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="452.2" y="942.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="449.2" y="915.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="452.2" y="926.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.06%)</title><rect x="449.2" y="899.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="452.2" y="910.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.06%)</title><rect x="449.2" y="883.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="452.2" y="894.0"></text>
</g>
<g>
<title>treadle/stage/phases/ChirrtlToLow.execute (1 samples, 0.06%)</title><rect x="450.0" y="1283.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.0" y="1294.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (1 samples, 0.06%)</title><rect x="450.0" y="1267.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.0" y="1278.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (1 samples, 0.06%)</title><rect x="450.0" y="1251.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.0" y="1262.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (1 samples, 0.06%)</title><rect x="450.0" y="1235.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.0" y="1246.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (1 samples, 0.06%)</title><rect x="450.0" y="1219.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="453.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (1 samples, 0.06%)</title><rect x="450.0" y="1203.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (1 samples, 0.06%)</title><rect x="450.0" y="1187.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="453.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (1 samples, 0.06%)</title><rect x="450.0" y="1171.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.0" y="1182.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$8463/148858234.apply (1 samples, 0.06%)</title><rect x="450.0" y="1155.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.0" y="1166.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (1 samples, 0.06%)</title><rect x="450.0" y="1139.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.0" y="1150.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (1 samples, 0.06%)</title><rect x="450.0" y="1123.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.0" y="1134.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (1 samples, 0.06%)</title><rect x="450.0" y="1107.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.0" y="1118.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8462/1346230705.apply (1 samples, 0.06%)</title><rect x="450.0" y="1091.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.0" y="1102.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (1 samples, 0.06%)</title><rect x="450.0" y="1075.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.0" y="1086.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (1 samples, 0.06%)</title><rect x="450.0" y="1059.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="453.0" y="1070.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (1 samples, 0.06%)</title><rect x="450.0" y="1043.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.0" y="1054.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (1 samples, 0.06%)</title><rect x="450.0" y="1027.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="453.0" y="1038.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (1 samples, 0.06%)</title><rect x="450.0" y="1011.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="453.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (1 samples, 0.06%)</title><rect x="450.0" y="995.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.0" y="1006.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (1 samples, 0.06%)</title><rect x="450.0" y="979.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="453.0" y="990.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (1 samples, 0.06%)</title><rect x="450.0" y="963.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.0" y="974.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$8463/148858234.apply (1 samples, 0.06%)</title><rect x="450.0" y="947.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="453.0" y="958.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (1 samples, 0.06%)</title><rect x="450.0" y="931.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.0" y="942.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (1 samples, 0.06%)</title><rect x="450.0" y="915.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="453.0" y="926.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (1 samples, 0.06%)</title><rect x="450.0" y="899.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.0" y="910.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$8462/1346230705.apply (1 samples, 0.06%)</title><rect x="450.0" y="883.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="453.0" y="894.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (1 samples, 0.06%)</title><rect x="450.0" y="867.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.0" y="878.0"></text>
</g>
<g>
<title>firrtl/passes/RemoveAccesses$.execute (1 samples, 0.06%)</title><rect x="450.0" y="851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.0" y="862.0"></text>
</g>
<g>
<title>firrtl/passes/Pass.execute$ (1 samples, 0.06%)</title><rect x="450.0" y="835.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.0" y="846.0"></text>
</g>
<g>
<title>firrtl/passes/Pass.execute (1 samples, 0.06%)</title><rect x="450.0" y="819.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="453.0" y="830.0"></text>
</g>
<g>
<title>firrtl/passes/RemoveAccesses$.run (1 samples, 0.06%)</title><rect x="450.0" y="803.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.0" y="814.0"></text>
</g>
<g>
<title>firrtl/passes/RemoveAccesses.run (1 samples, 0.06%)</title><rect x="450.0" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.0" y="798.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.06%)</title><rect x="450.0" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.0" y="782.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.06%)</title><rect x="450.0" y="755.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.0" y="766.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.06%)</title><rect x="450.0" y="739.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.0" y="750.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.06%)</title><rect x="450.0" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="453.0" y="734.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.06%)</title><rect x="450.0" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.0" y="718.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.06%)</title><rect x="450.0" y="691.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="453.0" y="702.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3615/1944768446.apply (1 samples, 0.06%)</title><rect x="450.0" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.0" y="686.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.06%)</title><rect x="450.0" y="659.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.0" y="670.0"></text>
</g>
<g>
<title>firrtl/passes/RemoveAccesses$$Lambda$8892/770421691.apply (1 samples, 0.06%)</title><rect x="450.0" y="643.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.0" y="654.0"></text>
</g>
<g>
<title>firrtl/passes/RemoveAccesses.$anonfun$run$12 (1 samples, 0.06%)</title><rect x="450.0" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="453.0" y="638.0"></text>
</g>
<g>
<title>firrtl/passes/RemoveAccesses.remove_m$1 (1 samples, 0.06%)</title><rect x="450.0" y="611.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.0" y="622.0"></text>
</g>
<g>
<title>firrtl/passes/RemoveAccesses.onStmt$1 (1 samples, 0.06%)</title><rect x="450.0" y="595.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.0" y="606.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMap$.map$extension (1 samples, 0.06%)</title><rect x="450.0" y="579.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.0" y="590.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMagnet$$anon$2.map (1 samples, 0.06%)</title><rect x="450.0" y="563.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.0" y="574.0"></text>
</g>
<g>
<title>firrtl/ir/Block.mapStmt (1 samples, 0.06%)</title><rect x="450.0" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.0" y="558.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.06%)</title><rect x="450.0" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.0" y="542.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.06%)</title><rect x="450.0" y="515.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="453.0" y="526.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.06%)</title><rect x="450.0" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="453.0" y="510.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.06%)</title><rect x="450.0" y="483.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.0" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.06%)</title><rect x="450.0" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.0" y="478.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.06%)</title><rect x="450.0" y="451.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.0" y="462.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3615/1944768446.apply (1 samples, 0.06%)</title><rect x="450.0" y="435.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.0" y="446.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.06%)</title><rect x="450.0" y="419.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="453.0" y="430.0"></text>
</g>
<g>
<title>firrtl/passes/RemoveAccesses$$Lambda$8897/669048258.apply (1 samples, 0.06%)</title><rect x="450.0" y="403.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="453.0" y="414.0"></text>
</g>
<g>
<title>firrtl/passes/RemoveAccesses.$anonfun$run$10 (1 samples, 0.06%)</title><rect x="450.0" y="387.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.0" y="398.0"></text>
</g>
<g>
<title>firrtl/passes/RemoveAccesses.onStmt$1 (1 samples, 0.06%)</title><rect x="450.0" y="371.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.0" y="382.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMap$.map$extension (1 samples, 0.06%)</title><rect x="450.0" y="355.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.0" y="366.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMagnet$$anon$3.map (1 samples, 0.06%)</title><rect x="450.0" y="339.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.0" y="350.0"></text>
</g>
<g>
<title>firrtl/ir/DefNode.mapExpr (1 samples, 0.06%)</title><rect x="450.0" y="323.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.0" y="334.0"></text>
</g>
<g>
<title>firrtl/passes/RemoveAccesses$$Lambda$8895/1592058610.apply (1 samples, 0.06%)</title><rect x="450.0" y="307.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.0" y="318.0"></text>
</g>
<g>
<title>firrtl/passes/RemoveAccesses.$anonfun$run$8 (1 samples, 0.06%)</title><rect x="450.0" y="291.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="453.0" y="302.0"></text>
</g>
<g>
<title>firrtl/passes/RemoveAccesses.fixMale$1 (1 samples, 0.06%)</title><rect x="450.0" y="275.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.0" y="286.0"></text>
</g>
<g>
<title>firrtl/Mappers$ExprMap$.map$extension (1 samples, 0.06%)</title><rect x="450.0" y="259.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="453.0" y="270.0"></text>
</g>
<g>
<title>firrtl/Mappers$ExprMagnet$$anon$7.map (1 samples, 0.06%)</title><rect x="450.0" y="243.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.0" y="254.0"></text>
</g>
<g>
<title>firrtl/ir/Mux.mapExpr (1 samples, 0.06%)</title><rect x="450.0" y="227.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.0" y="238.0"></text>
</g>
<g>
<title>firrtl/passes/RemoveAccesses$$Lambda$8899/1734763543.apply (1 samples, 0.06%)</title><rect x="450.0" y="211.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.0" y="222.0"></text>
</g>
<g>
<title>firrtl/passes/RemoveAccesses.$anonfun$run$4 (1 samples, 0.06%)</title><rect x="450.0" y="195.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.0" y="206.0"></text>
</g>
<g>
<title>firrtl/passes/RemoveAccesses.fixMale$1 (1 samples, 0.06%)</title><rect x="450.0" y="179.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1610630521.linkToTargetMethod (1 samples, 0.06%)</title><rect x="450.0" y="163.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/900008524.invokeStatic_L4_L (1 samples, 0.06%)</title><rect x="450.0" y="147.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.0" y="158.0"></text>
</g>
<g>
<title>firrtl/passes/RemoveAccesses$$Lambda$8899/1734763543.get$Lambda (1 samples, 0.06%)</title><rect x="450.0" y="131.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.0" y="142.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress$ProgressThread.run (20 samples, 1.23%)</title><rect x="450.7" y="2931.0" width="14.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.7" y="2942.0"></text>
</g>
<g>
<title>java/lang/Thread.sleep (1 samples, 0.06%)</title><rect x="450.7" y="2915.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="453.7" y="2926.0"></text>
</g>
<g>
<title>JVM_Sleep (1 samples, 0.06%)</title><rect x="450.7" y="2899.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="453.7" y="2910.0"></text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (1 samples, 0.06%)</title><rect x="450.7" y="2883.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="453.7" y="2894.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.06%)</title><rect x="450.7" y="2867.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="453.7" y="2878.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.06%)</title><rect x="450.7" y="2851.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="453.7" y="2862.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress.sbt$internal$TaskProgress$$report (19 samples, 1.17%)</title><rect x="451.4" y="2915.0" width="13.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="454.4" y="2926.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress.containsSkipTasks (1 samples, 0.06%)</title><rect x="451.4" y="2899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="454.4" y="2910.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (1 samples, 0.06%)</title><rect x="451.4" y="2883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="454.4" y="2894.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.exists$ (1 samples, 0.06%)</title><rect x="451.4" y="2867.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.4" y="2878.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.exists (1 samples, 0.06%)</title><rect x="451.4" y="2851.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.4" y="2862.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.exists (1 samples, 0.06%)</title><rect x="451.4" y="2835.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="454.4" y="2846.0"></text>
</g>
<g>
<title>scala/collection/Iterator.exists$ (1 samples, 0.06%)</title><rect x="451.4" y="2819.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="454.4" y="2830.0"></text>
</g>
<g>
<title>scala/collection/Iterator.exists (1 samples, 0.06%)</title><rect x="451.4" y="2803.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.4" y="2814.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress$$Lambda$2254/1118439560.apply (1 samples, 0.06%)</title><rect x="451.4" y="2787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.4" y="2798.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress.$anonfun$containsSkipTasks$2$adapted (1 samples, 0.06%)</title><rect x="451.4" y="2771.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="454.4" y="2782.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress.$anonfun$containsSkipTasks$2 (1 samples, 0.06%)</title><rect x="451.4" y="2755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="454.4" y="2766.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (1 samples, 0.06%)</title><rect x="451.4" y="2739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="454.4" y="2750.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.exists$ (1 samples, 0.06%)</title><rect x="451.4" y="2723.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="454.4" y="2734.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.exists (1 samples, 0.06%)</title><rect x="451.4" y="2707.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.4" y="2718.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.exists (1 samples, 0.06%)</title><rect x="451.4" y="2691.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="454.4" y="2702.0"></text>
</g>
<g>
<title>scala/collection/Iterator.exists$ (1 samples, 0.06%)</title><rect x="451.4" y="2675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="454.4" y="2686.0"></text>
</g>
<g>
<title>scala/collection/Iterator.exists (1 samples, 0.06%)</title><rect x="451.4" y="2659.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.4" y="2670.0"></text>
</g>
<g>
<title>scala/collection/immutable/TrieIterator.hasNext (1 samples, 0.06%)</title><rect x="451.4" y="2643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="454.4" y="2654.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress.report0$1 (18 samples, 1.11%)</title><rect x="452.1" y="2899.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.1" y="2910.0"></text>
</g>
<g>
<title>java/lang/Class.getClassLoader (1 samples, 0.06%)</title><rect x="452.1" y="2883.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="455.1" y="2894.0"></text>
</g>
<g>
<title>sun/reflect/Reflection.getCallerClass (1 samples, 0.06%)</title><rect x="452.1" y="2867.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.1" y="2878.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (1 samples, 0.06%)</title><rect x="452.1" y="2851.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="455.1" y="2862.0"></text>
</g>
<g>
<title>vframeStreamCommon::next() (1 samples, 0.06%)</title><rect x="452.1" y="2835.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="455.1" y="2846.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (1 samples, 0.06%)</title><rect x="452.1" y="2819.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="455.1" y="2830.0"></text>
</g>
<g>
<title>sbt/internal/util/ManagedLogger.logEvent (8 samples, 0.49%)</title><rect x="452.9" y="2883.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.9" y="2894.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/spi/AbstractLogger.log (1 samples, 0.06%)</title><rect x="452.9" y="2867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.9" y="2878.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/spi/AbstractLogger.logIfEnabled (1 samples, 0.06%)</title><rect x="452.9" y="2851.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.9" y="2862.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/spi/AbstractLogger.logMessageSafely (1 samples, 0.06%)</title><rect x="452.9" y="2835.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.9" y="2846.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/spi/AbstractLogger.logMessageTrackRecursion (1 samples, 0.06%)</title><rect x="452.9" y="2819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="455.9" y="2830.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/spi/AbstractLogger.tryLogMessage (1 samples, 0.06%)</title><rect x="452.9" y="2803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="455.9" y="2814.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/Logger.logMessage (1 samples, 0.06%)</title><rect x="452.9" y="2787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="455.9" y="2798.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/AwaitCompletionReliabilityStrategy.log (1 samples, 0.06%)</title><rect x="452.9" y="2771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="455.9" y="2782.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/LoggerConfig.log (1 samples, 0.06%)</title><rect x="452.9" y="2755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="455.9" y="2766.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/LoggerConfig.log (1 samples, 0.06%)</title><rect x="452.9" y="2739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.9" y="2750.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/LoggerConfig.processLogEvent (1 samples, 0.06%)</title><rect x="452.9" y="2723.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="455.9" y="2734.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/LoggerConfig.callAppenders (1 samples, 0.06%)</title><rect x="452.9" y="2707.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="455.9" y="2718.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/AppenderControl.callAppender (1 samples, 0.06%)</title><rect x="452.9" y="2691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.9" y="2702.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/AppenderControl.callAppenderPreventRecursion (1 samples, 0.06%)</title><rect x="452.9" y="2675.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="455.9" y="2686.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/AppenderControl.callAppender0 (1 samples, 0.06%)</title><rect x="452.9" y="2659.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.9" y="2670.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/AppenderControl.tryCallAppender (1 samples, 0.06%)</title><rect x="452.9" y="2643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.9" y="2654.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender.append (1 samples, 0.06%)</title><rect x="452.9" y="2627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="455.9" y="2638.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender.appendMessage (1 samples, 0.06%)</title><rect x="452.9" y="2611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.9" y="2622.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender.appendMessageContent (1 samples, 0.06%)</title><rect x="452.9" y="2595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.9" y="2606.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender.appendEvent$1 (1 samples, 0.06%)</title><rect x="452.9" y="2579.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="455.9" y="2590.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender.appendProgressEvent (1 samples, 0.06%)</title><rect x="452.9" y="2563.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.9" y="2574.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender.updateProgressState (1 samples, 0.06%)</title><rect x="452.9" y="2547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="455.9" y="2558.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender.deleteConsoleLines (1 samples, 0.06%)</title><rect x="452.9" y="2531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="455.9" y="2542.0"></text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach$mVc$sp (1 samples, 0.06%)</title><rect x="452.9" y="2515.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="455.9" y="2526.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender$$Lambda$2594/2098873177.apply$mcVI$sp (1 samples, 0.06%)</title><rect x="452.9" y="2499.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="455.9" y="2510.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleAppender.$anonfun$deleteConsoleLines$1 (1 samples, 0.06%)</title><rect x="452.9" y="2483.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.9" y="2494.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleOut$$anon$1.println (1 samples, 0.06%)</title><rect x="452.9" y="2467.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="455.9" y="2478.0"></text>
</g>
<g>
<title>sbt/internal/util/ConsoleOut$$anon$1.println (1 samples, 0.06%)</title><rect x="452.9" y="2451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="455.9" y="2462.0"></text>
</g>
<g>
<title>java/io/PrintStream.println (1 samples, 0.06%)</title><rect x="452.9" y="2435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="455.9" y="2446.0"></text>
</g>
<g>
<title>java/io/PrintStream.print (1 samples, 0.06%)</title><rect x="452.9" y="2419.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="455.9" y="2430.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.06%)</title><rect x="452.9" y="2403.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="455.9" y="2414.0"></text>
</g>
<g>
<title>java/io/OutputStreamWriter.flushBuffer (1 samples, 0.06%)</title><rect x="452.9" y="2387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.9" y="2398.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.flushBuffer (1 samples, 0.06%)</title><rect x="452.9" y="2371.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="455.9" y="2382.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.implFlushBuffer (1 samples, 0.06%)</title><rect x="452.9" y="2355.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.9" y="2366.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.writeBytes (1 samples, 0.06%)</title><rect x="452.9" y="2339.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="455.9" y="2350.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.06%)</title><rect x="452.9" y="2323.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.9" y="2334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.06%)</title><rect x="452.9" y="2307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.9" y="2318.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.06%)</title><rect x="452.9" y="2291.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="455.9" y="2302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.06%)</title><rect x="452.9" y="2275.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.9" y="2286.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.06%)</title><rect x="452.9" y="2259.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.9" y="2270.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.06%)</title><rect x="452.9" y="2243.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="455.9" y="2254.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.06%)</title><rect x="452.9" y="2227.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="455.9" y="2238.0"></text>
</g>
<g>
<title>jsqrt (1 samples, 0.06%)</title><rect x="452.9" y="2211.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="455.9" y="2222.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.apply (7 samples, 0.43%)</title><rect x="453.6" y="2867.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="456.6" y="2878.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.retry$1 (7 samples, 0.43%)</title><rect x="453.6" y="2851.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="456.6" y="2862.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.doApply$1 (7 samples, 0.43%)</title><rect x="453.6" y="2835.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="456.6" y="2846.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.typeToString (7 samples, 0.43%)</title><rect x="453.6" y="2819.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="456.6" y="2830.0"></text>
</g>
<g>
<title>scala/reflect/ClassTag$GenericClassTag.unapply (2 samples, 0.12%)</title><rect x="453.6" y="2803.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="456.6" y="2814.0"></text>
</g>
<g>
<title>Runtime1::is_instance_of(oopDesc*, oopDesc*) (1 samples, 0.06%)</title><rect x="454.3" y="2787.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="457.3" y="2798.0"></text>
</g>
<g>
<title>Klass::is_subtype_of(Klass*) const (1 samples, 0.06%)</title><rect x="454.3" y="2771.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="457.3" y="2782.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$Type.toString (5 samples, 0.31%)</title><rect x="455.0" y="2803.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.0" y="2814.0"></text>
</g>
<g>
<title>scala/reflect/internal/Definitions$DefinitionsClass.fullyInitializeType (3 samples, 0.19%)</title><rect x="455.0" y="2787.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="458.0" y="2798.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$NoArgsTypeRef.typeParams (1 samples, 0.06%)</title><rect x="456.5" y="2771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.5" y="2782.0"></text>
</g>
<g>
<title>scala/reflect/runtime/SynchronizedSymbols$SynchronizedSymbol$$anon$7.typeParams (1 samples, 0.06%)</title><rect x="456.5" y="2755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.5" y="2766.0"></text>
</g>
<g>
<title>scala/reflect/runtime/SynchronizedSymbols$SynchronizedSymbol.typeParams$ (1 samples, 0.06%)</title><rect x="456.5" y="2739.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="459.5" y="2750.0"></text>
</g>
<g>
<title>scala/reflect/runtime/SynchronizedSymbols$SynchronizedSymbol.typeParams (1 samples, 0.06%)</title><rect x="456.5" y="2723.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="459.5" y="2734.0"></text>
</g>
<g>
<title>scala/reflect/runtime/SynchronizedSymbols$SynchronizedSymbol.$anonfun$typeParams$1 (1 samples, 0.06%)</title><rect x="456.5" y="2707.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.5" y="2718.0"></text>
</g>
<g>
<title>scala/reflect/runtime/SynchronizedSymbols$SynchronizedSymbol$$anon$7.validTo (1 samples, 0.06%)</title><rect x="456.5" y="2691.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="459.5" y="2702.0"></text>
</g>
<g>
<title>scala/reflect/internal/SymbolTable.typeToString (2 samples, 0.12%)</title><rect x="457.2" y="2787.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.2" y="2798.0"></text>
</g>
<g>
<title>scala/reflect/internal/tpe/TypeToStrings.typeToString$ (2 samples, 0.12%)</title><rect x="457.2" y="2771.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.2" y="2782.0"></text>
</g>
<g>
<title>scala/reflect/internal/tpe/TypeToStrings.typeToString (2 samples, 0.12%)</title><rect x="457.2" y="2755.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.2" y="2766.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$TypeRef.safeToString (2 samples, 0.12%)</title><rect x="457.2" y="2739.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.2" y="2750.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$TypeRef.customToString (1 samples, 0.06%)</title><rect x="457.2" y="2723.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.2" y="2734.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$TypeRef.isShowAsInfixType (1 samples, 0.06%)</title><rect x="457.2" y="2707.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.2" y="2718.0"></text>
</g>
<g>
<title>scala/reflect/internal/SymbolTable.hasLength (1 samples, 0.06%)</title><rect x="457.2" y="2691.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="460.2" y="2702.0"></text>
</g>
<g>
<title>scala/reflect/internal/util/Collections.hasLength$ (1 samples, 0.06%)</title><rect x="457.2" y="2675.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="460.2" y="2686.0"></text>
</g>
<g>
<title>scala/reflect/internal/util/Collections.hasLength (1 samples, 0.06%)</title><rect x="457.2" y="2659.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.2" y="2670.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.lengthCompare (1 samples, 0.06%)</title><rect x="457.2" y="2643.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="460.2" y="2654.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.lengthCompare$ (1 samples, 0.06%)</title><rect x="457.2" y="2627.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.2" y="2638.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.lengthCompare (1 samples, 0.06%)</title><rect x="457.2" y="2611.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="460.2" y="2622.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.loop$1 (1 samples, 0.06%)</title><rect x="457.2" y="2595.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.2" y="2606.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="457.2" y="2579.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="460.2" y="2590.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$TypeRef.preString (1 samples, 0.06%)</title><rect x="458.0" y="2723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="461.0" y="2734.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$TypeRef.needsPreString (1 samples, 0.06%)</title><rect x="458.0" y="2707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.0" y="2718.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$TypeRef.scala$reflect$internal$Types$TypeRef$$$outer (1 samples, 0.06%)</title><rect x="458.0" y="2691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.0" y="2702.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.sortBy (1 samples, 0.06%)</title><rect x="458.7" y="2883.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.7" y="2894.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.sortBy$ (1 samples, 0.06%)</title><rect x="458.7" y="2867.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.7" y="2878.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.sortBy (1 samples, 0.06%)</title><rect x="458.7" y="2851.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.7" y="2862.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.sorted (1 samples, 0.06%)</title><rect x="458.7" y="2835.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.7" y="2846.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.sorted$ (1 samples, 0.06%)</title><rect x="458.7" y="2819.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.7" y="2830.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.on (1 samples, 0.06%)</title><rect x="458.7" y="2803.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.7" y="2814.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (2 samples, 0.12%)</title><rect x="459.4" y="2883.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.4" y="2894.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (2 samples, 0.12%)</title><rect x="459.4" y="2867.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="462.4" y="2878.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (2 samples, 0.12%)</title><rect x="459.4" y="2851.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.4" y="2862.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (2 samples, 0.12%)</title><rect x="459.4" y="2835.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.4" y="2846.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (2 samples, 0.12%)</title><rect x="459.4" y="2819.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="462.4" y="2830.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (2 samples, 0.12%)</title><rect x="459.4" y="2803.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="462.4" y="2814.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (2 samples, 0.12%)</title><rect x="459.4" y="2787.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.4" y="2798.0"></text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (2 samples, 0.12%)</title><rect x="459.4" y="2771.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="462.4" y="2782.0"></text>
</g>
<g>
<title>scala/collection/Iterator.foreach (2 samples, 0.12%)</title><rect x="459.4" y="2755.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="462.4" y="2766.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$8/1891546521.apply (1 samples, 0.06%)</title><rect x="459.4" y="2739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.4" y="2750.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.06%)</title><rect x="459.4" y="2723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="462.4" y="2734.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="459.4" y="2707.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="462.4" y="2718.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.hasNext (1 samples, 0.06%)</title><rect x="460.1" y="2739.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.1" y="2750.0"></text>
</g>
<g>
<title>scala/reflect/api/TypeTags$TypeTag$.apply (3 samples, 0.19%)</title><rect x="460.9" y="2883.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="463.9" y="2894.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors$JavaMirror.typeTag (3 samples, 0.19%)</title><rect x="460.9" y="2867.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="463.9" y="2878.0"></text>
</g>
<g>
<title>java/lang/ClassValue.get (1 samples, 0.06%)</title><rect x="460.9" y="2851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.9" y="2862.0"></text>
</g>
<g>
<title>java/lang/ClassValue.getFromBackup (1 samples, 0.06%)</title><rect x="460.9" y="2835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="463.9" y="2846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.06%)</title><rect x="461.6" y="2851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.6" y="2862.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors$JavaMirror.typeTagCache (1 samples, 0.06%)</title><rect x="462.3" y="2851.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="465.3" y="2862.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors$JavaMirror.typeTagCache$lzycompute$1 (1 samples, 0.06%)</title><rect x="462.3" y="2835.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.3" y="2846.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors$JavaMirror$typeTagCache$.&lt;init&gt; (1 samples, 0.06%)</title><rect x="462.3" y="2819.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.3" y="2830.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaUniverse.runtimeMirror (3 samples, 0.19%)</title><rect x="463.1" y="2883.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.1" y="2894.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaUniverse.runtimeMirror (3 samples, 0.19%)</title><rect x="463.1" y="2867.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.1" y="2878.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors.runtimeMirror$ (3 samples, 0.19%)</title><rect x="463.1" y="2851.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.1" y="2862.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors.runtimeMirror (2 samples, 0.12%)</title><rect x="463.8" y="2835.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.8" y="2846.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors.$anonfun$runtimeMirror$1 (1 samples, 0.06%)</title><rect x="463.8" y="2819.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.8" y="2830.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaUniverse.isCompilerUniverse (1 samples, 0.06%)</title><rect x="464.5" y="2819.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="467.5" y="2830.0"></text>
</g>
<g>
<title>sbt/internal/classpath/ClassLoaderCache$CleanupThread.run (2 samples, 0.12%)</title><rect x="465.2" y="2931.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.2" y="2942.0"></text>
</g>
<g>
<title>sbt/internal/classpath/ClassLoaderCache.sbt$internal$classpath$ClassLoaderCache$$clearExpiredLoaders (2 samples, 0.12%)</title><rect x="465.2" y="2915.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.2" y="2926.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.groupBy (2 samples, 0.12%)</title><rect x="465.2" y="2899.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="468.2" y="2910.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.groupBy$ (2 samples, 0.12%)</title><rect x="465.2" y="2883.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="468.2" y="2894.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.groupBy (2 samples, 0.12%)</title><rect x="465.2" y="2867.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="468.2" y="2878.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (2 samples, 0.12%)</title><rect x="465.2" y="2851.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.2" y="2862.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (2 samples, 0.12%)</title><rect x="465.2" y="2835.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="468.2" y="2846.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (2 samples, 0.12%)</title><rect x="465.2" y="2819.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="468.2" y="2830.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (2 samples, 0.12%)</title><rect x="465.2" y="2803.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.2" y="2814.0"></text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (2 samples, 0.12%)</title><rect x="465.2" y="2787.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="468.2" y="2798.0"></text>
</g>
<g>
<title>scala/collection/Iterator.foreach (2 samples, 0.12%)</title><rect x="465.2" y="2771.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.2" y="2782.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$499/696165690.apply (2 samples, 0.12%)</title><rect x="465.2" y="2755.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.2" y="2766.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$groupBy$1 (2 samples, 0.12%)</title><rect x="465.2" y="2739.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="468.2" y="2750.0"></text>
</g>
<g>
<title>sbt/internal/classpath/ClassLoaderCache$$Lambda$498/321772459.apply (1 samples, 0.06%)</title><rect x="465.2" y="2723.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.2" y="2734.0"></text>
</g>
<g>
<title>sbt/internal/classpath/ClassLoaderCache.$anonfun$clearExpiredLoaders$2 (1 samples, 0.06%)</title><rect x="465.2" y="2707.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.2" y="2718.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.toSet (1 samples, 0.06%)</title><rect x="465.2" y="2691.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.2" y="2702.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.toSet$ (1 samples, 0.06%)</title><rect x="465.2" y="2675.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.2" y="2686.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.toSet (1 samples, 0.06%)</title><rect x="465.2" y="2659.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="468.2" y="2670.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.to (1 samples, 0.06%)</title><rect x="465.2" y="2643.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="468.2" y="2654.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.to$ (1 samples, 0.06%)</title><rect x="465.2" y="2627.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="468.2" y="2638.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.to (1 samples, 0.06%)</title><rect x="465.2" y="2611.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="468.2" y="2622.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.thisCollection (1 samples, 0.06%)</title><rect x="465.2" y="2595.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="468.2" y="2606.0"></text>
</g>
<g>
<title>scala/collection/convert/Wrappers$JConcurrentMapWrapper.$plus$eq (1 samples, 0.06%)</title><rect x="466.0" y="2723.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.0" y="2734.0"></text>
</g>
<g>
<title>scala/collection/convert/Wrappers$JConcurrentMapWrapper.$plus$eq (1 samples, 0.06%)</title><rect x="466.0" y="2707.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="469.0" y="2718.0"></text>
</g>
<g>
<title>scala/collection/convert/Wrappers$JMapWrapperLike.$plus$eq$ (1 samples, 0.06%)</title><rect x="466.0" y="2691.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.0" y="2702.0"></text>
</g>
<g>
<title>scala/collection/convert/Wrappers$JMapWrapperLike.$plus$eq (1 samples, 0.06%)</title><rect x="466.0" y="2675.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.0" y="2686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (1 samples, 0.06%)</title><rect x="466.0" y="2659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="469.0" y="2670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.06%)</title><rect x="466.0" y="2643.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="469.0" y="2654.0"></text>
</g>
<g>
<title>sbt/internal/classpath/ClassLoaderCache$Key.hashCode (1 samples, 0.06%)</title><rect x="466.0" y="2627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.0" y="2638.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.hashCode (1 samples, 0.06%)</title><rect x="466.0" y="2611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.0" y="2622.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqLike.hashCode$ (1 samples, 0.06%)</title><rect x="466.0" y="2595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="469.0" y="2606.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqLike.hashCode (1 samples, 0.06%)</title><rect x="466.0" y="2579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.0" y="2590.0"></text>
</g>
<g>
<title>thread_start (993 samples, 61.30%)</title><rect x="466.7" y="2931.0" width="723.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="469.7" y="2942.0">thread_start</text>
</g>
<g>
<title>_pthread_start (993 samples, 61.30%)</title><rect x="466.7" y="2915.0" width="723.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="469.7" y="2926.0">_pthread_start</text>
</g>
<g>
<title>_pthread_body (993 samples, 61.30%)</title><rect x="466.7" y="2899.0" width="723.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="469.7" y="2910.0">_pthread_body</text>
</g>
<g>
<title>java_start(Thread*) (993 samples, 61.30%)</title><rect x="466.7" y="2883.0" width="723.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="469.7" y="2894.0">java_start(Thread*)</text>
</g>
<g>
<title>GCTaskThread::run() (898 samples, 55.43%)</title><rect x="466.7" y="2867.0" width="654.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="469.7" y="2878.0">GCTaskThread::run()</text>
</g>
<g>
<title>DrainStacksCompactionTask::do_it(GCTaskManager*, unsigned int) (217 samples, 13.40%)</title><rect x="466.7" y="2851.0" width="158.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="469.7" y="2862.0">DrainStacksCompactio..</text>
</g>
<g>
<title>ParCompactionManager::drain_region_stacks() (217 samples, 13.40%)</title><rect x="466.7" y="2835.0" width="158.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="469.7" y="2846.0">ParCompactionManager..</text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (217 samples, 13.40%)</title><rect x="466.7" y="2819.0" width="158.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="469.7" y="2830.0">PSParallelCompact::f..</text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (5 samples, 0.31%)</title><rect x="466.7" y="2803.0" width="3.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="469.7" y="2814.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (3 samples, 0.19%)</title><rect x="468.2" y="2787.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="471.2" y="2798.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (3 samples, 0.19%)</title><rect x="468.2" y="2771.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="471.2" y="2782.0"></text>
</g>
<g>
<title>PSParallelCompact::fill_blocks(unsigned long) (3 samples, 0.19%)</title><rect x="468.2" y="2755.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="471.2" y="2766.0"></text>
</g>
<g>
<title>PSParallelCompact::skip_live_words(HeapWord*, HeapWord*, unsigned long) (2 samples, 0.12%)</title><rect x="470.3" y="2803.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="473.3" y="2814.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (210 samples, 12.96%)</title><rect x="471.8" y="2803.0" width="153.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="474.8" y="2814.0">ParMarkBitMap::iter..</text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (200 samples, 12.35%)</title><rect x="478.4" y="2787.0" width="145.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="481.4" y="2798.0">MoveAndUpdateClosu..</text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (137 samples, 8.46%)</title><rect x="484.9" y="2771.0" width="99.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="487.9" y="2782.0">InstanceKlas..</text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.06%)</title><rect x="490.7" y="2755.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="493.7" y="2766.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (128 samples, 7.90%)</title><rect x="491.5" y="2755.0" width="93.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="494.5" y="2766.0">ParallelCom..</text>
</g>
<g>
<title>PSParallelCompact::fill_blocks(unsigned long) (5 samples, 0.31%)</title><rect x="496.6" y="2739.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="499.6" y="2750.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (116 samples, 7.16%)</title><rect x="500.2" y="2739.0" width="84.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="503.2" y="2750.0">ParMarkBit..</text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (48 samples, 2.96%)</title><rect x="584.7" y="2771.0" width="35.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="587.7" y="2782.0">Ob..</text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (41 samples, 2.53%)</title><rect x="589.8" y="2755.0" width="29.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="592.8" y="2766.0">Pa..</text>
</g>
<g>
<title>PSParallelCompact::fill_blocks(unsigned long) (2 samples, 0.12%)</title><rect x="590.5" y="2739.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="593.5" y="2750.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (38 samples, 2.35%)</title><rect x="592.0" y="2739.0" width="27.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="595.0" y="2750.0">P..</text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (2 samples, 0.12%)</title><rect x="619.7" y="2771.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="622.7" y="2782.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (4 samples, 0.25%)</title><rect x="621.1" y="2771.0" width="2.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="624.1" y="2782.0"></text>
</g>
<g>
<title>_setcontext (1 samples, 0.06%)</title><rect x="624.0" y="2787.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="627.0" y="2798.0"></text>
</g>
<g>
<title>GCTaskManager::get_task(unsigned int) (3 samples, 0.19%)</title><rect x="624.8" y="2851.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="627.8" y="2862.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 0.19%)</title><rect x="624.8" y="2835.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="627.8" y="2846.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (3 samples, 0.19%)</title><rect x="624.8" y="2819.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="627.8" y="2830.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (3 samples, 0.19%)</title><rect x="624.8" y="2803.0" width="2.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="627.8" y="2814.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (3 samples, 0.19%)</title><rect x="624.8" y="2787.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="627.8" y="2798.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.19%)</title><rect x="624.8" y="2771.0" width="2.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="627.8" y="2782.0"></text>
</g>
<g>
<title>MarkFromRootsTask::do_it(GCTaskManager*, unsigned int) (4 samples, 0.25%)</title><rect x="627.0" y="2851.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="630.0" y="2862.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (4 samples, 0.25%)</title><rect x="627.0" y="2835.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="630.0" y="2846.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (2 samples, 0.12%)</title><rect x="627.0" y="2819.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="630.0" y="2830.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (2 samples, 0.12%)</title><rect x="627.0" y="2803.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="630.0" y="2814.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (2 samples, 0.12%)</title><rect x="627.0" y="2787.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="630.0" y="2798.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (2 samples, 0.12%)</title><rect x="628.4" y="2819.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="631.4" y="2830.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (2 samples, 0.12%)</title><rect x="628.4" y="2803.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="631.4" y="2814.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (2 samples, 0.12%)</title><rect x="628.4" y="2787.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="631.4" y="2798.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.06%)</title><rect x="629.1" y="2771.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="632.1" y="2782.0"></text>
</g>
<g>
<title>OldToYoungRootsTask::do_it(GCTaskManager*, unsigned int) (30 samples, 1.85%)</title><rect x="629.9" y="2851.0" width="21.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="632.9" y="2862.0">O..</text>
</g>
<g>
<title>CardTableExtension::scavenge_contents_parallel(ObjectStartArray*, MutableSpace*, HeapWord*, PSPromotionManager*, unsigned int, unsigned int) (30 samples, 1.85%)</title><rect x="629.9" y="2835.0" width="21.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="632.9" y="2846.0">C..</text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (30 samples, 1.85%)</title><rect x="629.9" y="2819.0" width="21.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="632.9" y="2830.0">P..</text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (27 samples, 1.67%)</title><rect x="632.0" y="2803.0" width="19.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="635.0" y="2814.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (27 samples, 1.67%)</title><rect x="632.0" y="2787.0" width="19.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="635.0" y="2798.0"></text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (3 samples, 0.19%)</title><rect x="635.7" y="2771.0" width="2.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="638.7" y="2782.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (7 samples, 0.43%)</title><rect x="637.9" y="2771.0" width="5.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="640.9" y="2782.0"></text>
</g>
<g>
<title>InstanceKlass::vtable_length() const (1 samples, 0.06%)</title><rect x="643.0" y="2771.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="646.0" y="2782.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (8 samples, 0.49%)</title><rect x="643.7" y="2771.0" width="5.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="646.7" y="2782.0"></text>
</g>
<g>
<title>void PSPromotionManager::push_depth&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.12%)</title><rect x="648.1" y="2755.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="651.1" y="2766.0"></text>
</g>
<g>
<title>PSOldPromotionLAB::allocate(unsigned long) (1 samples, 0.06%)</title><rect x="649.5" y="2771.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="652.5" y="2782.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.12%)</title><rect x="650.3" y="2771.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="653.3" y="2782.0"></text>
</g>
<g>
<title>PSParallelCompact::update_and_deadwood_in_dense_prefix(ParCompactionManager*, PSParallelCompact::SpaceId, unsigned long, unsigned long) (22 samples, 1.36%)</title><rect x="651.7" y="2851.0" width="16.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="654.7" y="2862.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, ParMarkBitMapClosure*, unsigned long, unsigned long, unsigned long) const (22 samples, 1.36%)</title><rect x="651.7" y="2835.0" width="16.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="654.7" y="2846.0"></text>
</g>
<g>
<title>UpdateOnlyClosure::do_addr(HeapWord*, unsigned long) (16 samples, 0.99%)</title><rect x="656.1" y="2819.0" width="11.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="659.1" y="2830.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (6 samples, 0.37%)</title><rect x="659.0" y="2803.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="662.0" y="2814.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (3 samples, 0.19%)</title><rect x="661.2" y="2787.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="664.2" y="2798.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (6 samples, 0.37%)</title><rect x="663.4" y="2803.0" width="4.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="666.4" y="2814.0"></text>
</g>
<g>
<title>ScavengeRootsTask::do_it(GCTaskManager*, unsigned int) (5 samples, 0.31%)</title><rect x="667.7" y="2851.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="670.7" y="2862.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::oops_do(OopClosure*, KlassClosure*, bool) (5 samples, 0.31%)</title><rect x="667.7" y="2835.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="670.7" y="2846.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (2 samples, 0.12%)</title><rect x="667.7" y="2819.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="670.7" y="2830.0"></text>
</g>
<g>
<title>PSScavengeKlassClosure::do_klass(Klass*) (2 samples, 0.12%)</title><rect x="667.7" y="2803.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="670.7" y="2814.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (3 samples, 0.19%)</title><rect x="669.2" y="2819.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="672.2" y="2830.0"></text>
</g>
<g>
<title>JNIHandleBlock::oops_do(OopClosure*) (1 samples, 0.06%)</title><rect x="669.2" y="2803.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="672.2" y="2814.0"></text>
</g>
<g>
<title>void PSRootsClosure&lt;false&gt;::do_oop_work&lt;oopDesc*&gt;(oopDesc**) (2 samples, 0.12%)</title><rect x="669.9" y="2803.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="672.9" y="2814.0"></text>
</g>
<g>
<title>StealMarkingTask::do_it(GCTaskManager*, unsigned int) (325 samples, 20.06%)</title><rect x="671.4" y="2851.0" width="236.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="674.4" y="2862.0">StealMarkingTask::do_it(GCTaskM..</text>
</g>
<g>
<title>GenericTaskQueueSet&lt;GenericTaskQueue&lt;oopDesc*, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal(unsigned int, int*, oopDesc*&amp;) (3 samples, 0.19%)</title><rect x="671.4" y="2835.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="674.4" y="2846.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;GenericTaskQueue&lt;oopDesc*, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, oopDesc*&amp;) (3 samples, 0.19%)</title><rect x="671.4" y="2819.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="674.4" y="2830.0"></text>
</g>
<g>
<title>GenericTaskQueue&lt;oopDesc*, (MemoryType)5, 131072u&gt;::pop_global(oopDesc* volatile&amp;) (1 samples, 0.06%)</title><rect x="672.1" y="2803.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="675.1" y="2814.0"></text>
</g>
<g>
<title>TaskQueueSetSuper::randomParkAndMiller(int*) (1 samples, 0.06%)</title><rect x="672.8" y="2803.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="675.8" y="2814.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.06%)</title><rect x="673.6" y="2835.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="676.6" y="2846.0"></text>
</g>
<g>
<title>PSParallelCompact::follow_class_loader(ParCompactionManager*, ClassLoaderData*) (1 samples, 0.06%)</title><rect x="673.6" y="2819.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="676.6" y="2830.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (1 samples, 0.06%)</title><rect x="673.6" y="2803.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="676.6" y="2814.0"></text>
</g>
<g>
<title>JNIHandleBlock::oops_do(OopClosure*) (1 samples, 0.06%)</title><rect x="673.6" y="2787.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="676.6" y="2798.0"></text>
</g>
<g>
<title>PSParallelCompact::follow_class_loader(ParCompactionManager*, ClassLoaderData*) (1 samples, 0.06%)</title><rect x="674.3" y="2835.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="677.3" y="2846.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (1 samples, 0.06%)</title><rect x="674.3" y="2819.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="677.3" y="2830.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;oopDesc*&gt;(ParCompactionManager*, oopDesc**) (1 samples, 0.06%)</title><rect x="674.3" y="2803.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="677.3" y="2814.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (77 samples, 4.75%)</title><rect x="675.0" y="2835.0" width="56.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="678.0" y="2846.0">ParCom..</text>
</g>
<g>
<title>GenericTaskQueue&lt;oopDesc*, (MemoryType)5, 131072u&gt;::pop_local_slow(unsigned int, TaskQueueSuper&lt;131072u, (MemoryType)5&gt;::Age) (1 samples, 0.06%)</title><rect x="679.4" y="2819.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="682.4" y="2830.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.06%)</title><rect x="680.1" y="2819.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="683.1" y="2830.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (40 samples, 2.47%)</title><rect x="680.9" y="2819.0" width="29.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="683.9" y="2830.0">In..</text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (2 samples, 0.12%)</title><rect x="684.5" y="2803.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="687.5" y="2814.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;oopDesc*&gt;(ParCompactionManager*, oopDesc**) (3 samples, 0.19%)</title><rect x="686.0" y="2803.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="689.0" y="2814.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (30 samples, 1.85%)</title><rect x="688.1" y="2803.0" width="21.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="691.1" y="2814.0">v..</text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (12 samples, 0.74%)</title><rect x="694.7" y="2787.0" width="8.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="697.7" y="2798.0"></text>
</g>
<g>
<title>ParallelCompactData::add_obj(HeapWord*, unsigned long) (5 samples, 0.31%)</title><rect x="703.4" y="2787.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="706.4" y="2798.0"></text>
</g>
<g>
<title>oopDesc::size() (4 samples, 0.25%)</title><rect x="707.1" y="2787.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="710.1" y="2798.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (28 samples, 1.73%)</title><rect x="710.0" y="2819.0" width="20.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="713.0" y="2830.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (28 samples, 1.73%)</title><rect x="710.0" y="2803.0" width="20.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="713.0" y="2814.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (24 samples, 1.48%)</title><rect x="712.9" y="2787.0" width="17.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="715.9" y="2798.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (5 samples, 0.31%)</title><rect x="716.5" y="2771.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="719.5" y="2782.0"></text>
</g>
<g>
<title>ParallelCompactData::add_obj(HeapWord*, unsigned long) (2 samples, 0.12%)</title><rect x="720.2" y="2771.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="723.2" y="2782.0"></text>
</g>
<g>
<title>oopDesc::size() (12 samples, 0.74%)</title><rect x="721.6" y="2771.0" width="8.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="724.6" y="2782.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (1 samples, 0.06%)</title><rect x="730.4" y="2819.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="733.4" y="2830.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.06%)</title><rect x="730.4" y="2803.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="733.4" y="2814.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.06%)</title><rect x="730.4" y="2787.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="733.4" y="2798.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (31 samples, 1.91%)</title><rect x="731.1" y="2835.0" width="22.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="734.1" y="2846.0">P..</text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;unsigned long, (MemoryType)7, 131072u&gt;, (MemoryType)1&gt;::peek() (1 samples, 0.06%)</title><rect x="736.9" y="2819.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="739.9" y="2830.0"></text>
</g>
<g>
<title>xdrmem_ops_aligned (22 samples, 1.36%)</title><rect x="737.7" y="2819.0" width="16.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="740.7" y="2830.0"></text>
</g>
<g>
<title>SpinPause (212 samples, 13.09%)</title><rect x="753.7" y="2835.0" width="154.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="756.7" y="2846.0">SpinPause</text>
</g>
<g>
<title>StealRegionCompactionTask::do_it(GCTaskManager*, unsigned int) (1 samples, 0.06%)</title><rect x="908.1" y="2851.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="911.1" y="2862.0"></text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (1 samples, 0.06%)</title><rect x="908.1" y="2835.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="911.1" y="2846.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (1 samples, 0.06%)</title><rect x="908.1" y="2819.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="911.1" y="2830.0"></text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (1 samples, 0.06%)</title><rect x="908.1" y="2803.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="911.1" y="2814.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.06%)</title><rect x="908.1" y="2787.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="911.1" y="2798.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.06%)</title><rect x="908.1" y="2771.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="911.1" y="2782.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.06%)</title><rect x="908.1" y="2755.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="911.1" y="2766.0"></text>
</g>
<g>
<title>StealTask::do_it(GCTaskManager*, unsigned int) (284 samples, 17.53%)</title><rect x="908.8" y="2851.0" width="206.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="911.8" y="2862.0">StealTask::do_it(GCTaskMana..</text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)1, 131072u&gt;, (MemoryType)1&gt;::steal(unsigned int, int*, StarTask&amp;) (12 samples, 0.74%)</title><rect x="908.8" y="2835.0" width="8.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="911.8" y="2846.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)1, 131072u&gt;, (MemoryType)1&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (12 samples, 0.74%)</title><rect x="908.8" y="2819.0" width="8.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="911.8" y="2830.0"></text>
</g>
<g>
<title>GenericTaskQueue&lt;StarTask, (MemoryType)1, 131072u&gt;::pop_global(StarTask volatile&amp;) (7 samples, 0.43%)</title><rect x="911.8" y="2803.0" width="5.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="914.8" y="2814.0"></text>
</g>
<g>
<title>TaskQueueSetSuper::randomParkAndMiller(int*) (1 samples, 0.06%)</title><rect x="916.9" y="2803.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="919.9" y="2814.0"></text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (263 samples, 16.23%)</title><rect x="917.6" y="2835.0" width="191.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="920.6" y="2846.0">PSPromotionManager::drain..</text>
</g>
<g>
<title>GenericTaskQueue&lt;StarTask, (MemoryType)1, 131072u&gt;::pop_local_slow(unsigned int, TaskQueueSuper&lt;131072u, (MemoryType)1&gt;::Age) (3 samples, 0.19%)</title><rect x="927.0" y="2819.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="930.0" y="2830.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (246 samples, 15.19%)</title><rect x="929.2" y="2819.0" width="179.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="932.2" y="2830.0">PSPromotionManager::pro..</text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (2 samples, 0.12%)</title><rect x="942.3" y="2803.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="945.3" y="2814.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (224 samples, 13.83%)</title><rect x="943.8" y="2803.0" width="163.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="946.8" y="2814.0">oopDesc* PSPromotionM..</text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (29 samples, 1.79%)</title><rect x="1004.3" y="2787.0" width="21.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1007.3" y="2798.0">C..</text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (13 samples, 0.80%)</title><rect x="1015.9" y="2771.0" width="9.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1018.9" y="2782.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (38 samples, 2.35%)</title><rect x="1025.4" y="2787.0" width="27.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1028.4" y="2798.0">I..</text>
</g>
<g>
<title>InstanceKlass::vtable_length() const (1 samples, 0.06%)</title><rect x="1048.7" y="2771.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1051.7" y="2782.0"></text>
</g>
<g>
<title>void PSPromotionManager::push_depth&lt;unsigned int&gt;(unsigned int*) (5 samples, 0.31%)</title><rect x="1049.4" y="2771.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1052.4" y="2782.0"></text>
</g>
<g>
<title>InstanceKlass::vtable_length() const (2 samples, 0.12%)</title><rect x="1053.1" y="2787.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1056.1" y="2798.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (51 samples, 3.15%)</title><rect x="1054.5" y="2787.0" width="37.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1057.5" y="2798.0">Obj..</text>
</g>
<g>
<title>void PSPromotionManager::push_depth&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.06%)</title><rect x="1090.9" y="2771.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1093.9" y="2782.0"></text>
</g>
<g>
<title>PSOldPromotionLAB::allocate(unsigned long) (2 samples, 0.12%)</title><rect x="1091.7" y="2787.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1094.7" y="2798.0"></text>
</g>
<g>
<title>YieldingFlexibleGangWorker::~YieldingFlexibleGangWorker() (1 samples, 0.06%)</title><rect x="1093.1" y="2787.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1096.1" y="2798.0"></text>
</g>
<g>
<title>oopDesc::size() (18 samples, 1.11%)</title><rect x="1093.9" y="2787.0" width="13.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1096.9" y="2798.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.12%)</title><rect x="1107.0" y="2803.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1110.0" y="2814.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (1 samples, 0.06%)</title><rect x="1108.4" y="2819.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1111.4" y="2830.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (9 samples, 0.56%)</title><rect x="1109.1" y="2835.0" width="6.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1112.1" y="2846.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (2 samples, 0.12%)</title><rect x="1114.2" y="2819.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1117.2" y="2830.0"></text>
</g>
<g>
<title>ThreadRootsMarkingTask::do_it(GCTaskManager*, unsigned int) (7 samples, 0.43%)</title><rect x="1115.7" y="2851.0" width="5.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1118.7" y="2862.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (7 samples, 0.43%)</title><rect x="1115.7" y="2835.0" width="5.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1118.7" y="2846.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (4 samples, 0.25%)</title><rect x="1116.4" y="2819.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1119.4" y="2830.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.06%)</title><rect x="1116.4" y="2803.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1119.4" y="2814.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (3 samples, 0.19%)</title><rect x="1117.2" y="2803.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1120.2" y="2814.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (1 samples, 0.06%)</title><rect x="1117.9" y="2787.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1120.9" y="2798.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.06%)</title><rect x="1118.6" y="2787.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1121.6" y="2798.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (2 samples, 0.12%)</title><rect x="1119.3" y="2819.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1122.3" y="2830.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (2 samples, 0.12%)</title><rect x="1119.3" y="2803.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1122.3" y="2814.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (2 samples, 0.12%)</title><rect x="1119.3" y="2787.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1122.3" y="2798.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.06%)</title><rect x="1120.1" y="2771.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1123.1" y="2782.0"></text>
</g>
<g>
<title>JavaThread::run() (65 samples, 4.01%)</title><rect x="1120.8" y="2867.0" width="47.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1123.8" y="2878.0">Java..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (65 samples, 4.01%)</title><rect x="1120.8" y="2851.0" width="47.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1123.8" y="2862.0">Java..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (65 samples, 4.01%)</title><rect x="1120.8" y="2835.0" width="47.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1123.8" y="2846.0">Comp..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (58 samples, 3.58%)</title><rect x="1120.8" y="2819.0" width="42.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1123.8" y="2830.0">Comp..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (54 samples, 3.33%)</title><rect x="1120.8" y="2803.0" width="39.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1123.8" y="2814.0">C2C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (54 samples, 3.33%)</title><rect x="1120.8" y="2787.0" width="39.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1123.8" y="2798.0">Com..</text>
</g>
<g>
<title>Compile::Code_Gen() (28 samples, 1.73%)</title><rect x="1120.8" y="2771.0" width="20.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1123.8" y="2782.0"></text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.12%)</title><rect x="1120.8" y="2755.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1123.8" y="2766.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.06%)</title><rect x="1120.8" y="2739.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1123.8" y="2750.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.06%)</title><rect x="1120.8" y="2723.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1123.8" y="2734.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (1 samples, 0.06%)</title><rect x="1120.8" y="2707.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1123.8" y="2718.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.06%)</title><rect x="1121.5" y="2739.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1124.5" y="2750.0"></text>
</g>
<g>
<title>CodeBuffer::initialize(int, int) (1 samples, 0.06%)</title><rect x="1121.5" y="2723.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1124.5" y="2734.0"></text>
</g>
<g>
<title>BufferBlob::create(char const*, int) (1 samples, 0.06%)</title><rect x="1121.5" y="2707.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1124.5" y="2718.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.06%)</title><rect x="1121.5" y="2691.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1124.5" y="2702.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.06%)</title><rect x="1121.5" y="2675.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1124.5" y="2686.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (3 samples, 0.19%)</title><rect x="1122.3" y="2755.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1125.3" y="2766.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (2 samples, 0.12%)</title><rect x="1123.0" y="2739.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1126.0" y="2750.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.12%)</title><rect x="1123.0" y="2723.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1126.0" y="2734.0"></text>
</g>
<g>
<title>DebugInformationRecorder::serialize_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.12%)</title><rect x="1123.0" y="2707.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1126.0" y="2718.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.12%)</title><rect x="1123.0" y="2691.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1126.0" y="2702.0"></text>
</g>
<g>
<title>DIR_Chunk::find_match(GrowableArray&lt;DIR_Chunk*&gt;*, int, DebugInformationRecorder*) (2 samples, 0.12%)</title><rect x="1123.0" y="2675.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1126.0" y="2686.0"></text>
</g>
<g>
<title>Matcher::match() (5 samples, 0.31%)</title><rect x="1124.4" y="2755.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1127.4" y="2766.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.06%)</title><rect x="1124.4" y="2739.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1127.4" y="2750.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (4 samples, 0.25%)</title><rect x="1125.2" y="2739.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1128.2" y="2750.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (2 samples, 0.12%)</title><rect x="1125.9" y="2723.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1128.9" y="2734.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.06%)</title><rect x="1127.4" y="2723.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1130.4" y="2734.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.12%)</title><rect x="1128.1" y="2755.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1131.1" y="2766.0"></text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (1 samples, 0.06%)</title><rect x="1128.1" y="2739.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1131.1" y="2750.0"></text>
</g>
<g>
<title>PhaseCFG::do_DFS(Tarjan*, unsigned int) (1 samples, 0.06%)</title><rect x="1128.1" y="2723.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1131.1" y="2734.0"></text>
</g>
<g>
<title>Block_Stack::push(unsigned int, Block*) (1 samples, 0.06%)</title><rect x="1128.1" y="2707.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1131.1" y="2718.0"></text>
</g>
<g>
<title>jmpDirNode::ideal_Opcode() const (1 samples, 0.06%)</title><rect x="1128.1" y="2691.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1131.1" y="2702.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.06%)</title><rect x="1128.8" y="2739.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1131.8" y="2750.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1128.8" y="2723.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1131.8" y="2734.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (1 samples, 0.06%)</title><rect x="1128.8" y="2707.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1131.8" y="2718.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) (1 samples, 0.06%)</title><rect x="1128.8" y="2691.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1131.8" y="2702.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.06%)</title><rect x="1128.8" y="2675.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1131.8" y="2686.0"></text>
</g>
<g>
<title>pthread_getspecific (1 samples, 0.06%)</title><rect x="1128.8" y="2659.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1131.8" y="2670.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (16 samples, 0.99%)</title><rect x="1129.5" y="2755.0" width="11.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1132.5" y="2766.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (2 samples, 0.12%)</title><rect x="1129.5" y="2739.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1132.5" y="2750.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.06%)</title><rect x="1131.0" y="2739.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1134.0" y="2750.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.06%)</title><rect x="1131.0" y="2723.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1134.0" y="2734.0"></text>
</g>
<g>
<title>RegMask::find_first_set(int) const (1 samples, 0.06%)</title><rect x="1131.0" y="2707.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1134.0" y="2718.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.12%)</title><rect x="1131.7" y="2739.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1134.7" y="2750.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.12%)</title><rect x="1131.7" y="2723.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.7" y="2734.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.12%)</title><rect x="1133.2" y="2739.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1136.2" y="2750.0"></text>
</g>
<g>
<title>JVMState::is_monitor_use(unsigned int) const (1 samples, 0.06%)</title><rect x="1133.2" y="2723.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1136.2" y="2734.0"></text>
</g>
<g>
<title>JVMState::is_monitor_use(unsigned int) const (1 samples, 0.06%)</title><rect x="1133.2" y="2707.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1136.2" y="2718.0"></text>
</g>
<g>
<title>JVMState::is_monitor_use(unsigned int) const (1 samples, 0.06%)</title><rect x="1133.2" y="2691.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1136.2" y="2702.0"></text>
</g>
<g>
<title>JVMState::is_monitor_use(unsigned int) const (1 samples, 0.06%)</title><rect x="1133.2" y="2675.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.2" y="2686.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (1 samples, 0.06%)</title><rect x="1133.9" y="2723.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1136.9" y="2734.0"></text>
</g>
<g>
<title>MachNode::mach_constant_base_node_input() const (1 samples, 0.06%)</title><rect x="1133.9" y="2707.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1136.9" y="2718.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (5 samples, 0.31%)</title><rect x="1134.6" y="2739.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1137.6" y="2750.0"></text>
</g>
<g>
<title>IndexSet::insert(unsigned int) (1 samples, 0.06%)</title><rect x="1134.6" y="2723.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1137.6" y="2734.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.06%)</title><rect x="1135.4" y="2723.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1138.4" y="2734.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.06%)</title><rect x="1135.4" y="2707.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1138.4" y="2718.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.12%)</title><rect x="1136.1" y="2723.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1139.1" y="2734.0"></text>
</g>
<g>
<title>IndexSet::insert(unsigned int) (2 samples, 0.12%)</title><rect x="1136.1" y="2707.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1139.1" y="2718.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.06%)</title><rect x="1137.6" y="2723.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1140.6" y="2734.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (1 samples, 0.06%)</title><rect x="1138.3" y="2739.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1141.3" y="2750.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.06%)</title><rect x="1139.0" y="2739.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1142.0" y="2750.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.06%)</title><rect x="1139.0" y="2723.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1142.0" y="2734.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.06%)</title><rect x="1139.7" y="2739.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1142.7" y="2750.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.06%)</title><rect x="1139.7" y="2723.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1142.7" y="2734.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.06%)</title><rect x="1140.5" y="2739.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1143.5" y="2750.0"></text>
</g>
<g>
<title>IndexSet::clear() (1 samples, 0.06%)</title><rect x="1140.5" y="2723.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1143.5" y="2734.0"></text>
</g>
<g>
<title>Compile::Optimize() (17 samples, 1.05%)</title><rect x="1141.2" y="2771.0" width="12.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1144.2" y="2782.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.06%)</title><rect x="1141.2" y="2755.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1144.2" y="2766.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.06%)</title><rect x="1141.2" y="2739.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1144.2" y="2750.0"></text>
</g>
<g>
<title>ConnectionGraph::add_node_to_connection_graph(Node*, Unique_Node_List*) (1 samples, 0.06%)</title><rect x="1141.2" y="2723.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1144.2" y="2734.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field(Node*, PointsToNode::EscapeState, int) (1 samples, 0.06%)</title><rect x="1141.2" y="2707.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1144.2" y="2718.0"></text>
</g>
<g>
<title>ConnectionGraph::is_oop_field(Node*, int, bool*) (1 samples, 0.06%)</title><rect x="1141.2" y="2691.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1144.2" y="2702.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="1141.2" y="2675.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1144.2" y="2686.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1141.2" y="2659.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1144.2" y="2670.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="1141.2" y="2643.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.2" y="2654.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.06%)</title><rect x="1141.2" y="2627.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1144.2" y="2638.0"></text>
</g>
<g>
<title>TypeInstPtr::eq(Type const*) const (1 samples, 0.06%)</title><rect x="1141.2" y="2611.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1144.2" y="2622.0"></text>
</g>
<g>
<title>TypeOopPtr::eq(Type const*) const (1 samples, 0.06%)</title><rect x="1141.2" y="2595.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.2" y="2606.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (12 samples, 0.74%)</title><rect x="1141.9" y="2755.0" width="8.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1144.9" y="2766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.06%)</title><rect x="1141.9" y="2739.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1144.9" y="2750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.19%)</title><rect x="1142.7" y="2739.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1145.7" y="2750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.06%)</title><rect x="1142.7" y="2723.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1145.7" y="2734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="1142.7" y="2707.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1145.7" y="2718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl_no_update(Node*) const (1 samples, 0.06%)</title><rect x="1142.7" y="2691.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1145.7" y="2702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::set_ctrl(Node*, Node*) (1 samples, 0.06%)</title><rect x="1143.4" y="2723.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1146.4" y="2734.0"></text>
</g>
<g>
<title>VectorSet::test_set(unsigned int) (1 samples, 0.06%)</title><rect x="1144.1" y="2723.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1147.1" y="2734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.19%)</title><rect x="1144.8" y="2739.0" width="2.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1147.8" y="2750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (2 samples, 0.12%)</title><rect x="1145.6" y="2723.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1148.6" y="2734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (2 samples, 0.12%)</title><rect x="1145.6" y="2707.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1148.6" y="2718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const (1 samples, 0.06%)</title><rect x="1145.6" y="2691.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1148.6" y="2702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (1 samples, 0.06%)</title><rect x="1146.3" y="2691.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1149.3" y="2702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::idom_no_update(Node*) const (1 samples, 0.06%)</title><rect x="1146.3" y="2675.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.3" y="2686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (3 samples, 0.19%)</title><rect x="1147.0" y="2739.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1150.0" y="2750.0"></text>
</g>
<g>
<title>GrowableArray&lt;Node*&gt;::append(Node* const&amp;) (1 samples, 0.06%)</title><rect x="1147.0" y="2723.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1150.0" y="2734.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (1 samples, 0.06%)</title><rect x="1147.8" y="2723.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1150.8" y="2734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.06%)</title><rect x="1148.5" y="2723.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1151.5" y="2734.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.12%)</title><rect x="1149.2" y="2739.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1152.2" y="2750.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.12%)</title><rect x="1149.2" y="2723.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1152.2" y="2734.0"></text>
</g>
<g>
<title>AddPNode::Value(PhaseTransform*) const (1 samples, 0.06%)</title><rect x="1149.2" y="2707.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1152.2" y="2718.0"></text>
</g>
<g>
<title>LoadNNode::Opcode() const (1 samples, 0.06%)</title><rect x="1149.9" y="2707.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.9" y="2718.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.19%)</title><rect x="1150.7" y="2755.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1153.7" y="2766.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.19%)</title><rect x="1150.7" y="2739.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1153.7" y="2750.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="1150.7" y="2723.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1153.7" y="2734.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="1150.7" y="2707.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1153.7" y="2718.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.06%)</title><rect x="1150.7" y="2691.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1153.7" y="2702.0"></text>
</g>
<g>
<title>PhaseTransform::ensure_type_or_null(Node const*) (1 samples, 0.06%)</title><rect x="1151.4" y="2723.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.4" y="2734.0"></text>
</g>
<g>
<title>RegionNode::Opcode() const (1 samples, 0.06%)</title><rect x="1152.1" y="2723.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1155.1" y="2734.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.06%)</title><rect x="1152.9" y="2755.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.9" y="2766.0"></text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.06%)</title><rect x="1152.9" y="2739.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.9" y="2750.0"></text>
</g>
<g>
<title>Chunk::operator delete(void*) (1 samples, 0.06%)</title><rect x="1152.9" y="2723.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.9" y="2734.0"></text>
</g>
<g>
<title>madvise (1 samples, 0.06%)</title><rect x="1152.9" y="2707.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1155.9" y="2718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.56%)</title><rect x="1153.6" y="2771.0" width="6.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1156.6" y="2782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.56%)</title><rect x="1153.6" y="2755.0" width="6.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1156.6" y="2766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.56%)</title><rect x="1153.6" y="2739.0" width="6.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1156.6" y="2750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.56%)</title><rect x="1153.6" y="2723.0" width="6.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.6" y="2734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.56%)</title><rect x="1153.6" y="2707.0" width="6.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.6" y="2718.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.49%)</title><rect x="1153.6" y="2691.0" width="5.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.6" y="2702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.43%)</title><rect x="1153.6" y="2675.0" width="5.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1156.6" y="2686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.43%)</title><rect x="1153.6" y="2659.0" width="5.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.6" y="2670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.37%)</title><rect x="1153.6" y="2643.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.6" y="2654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.37%)</title><rect x="1153.6" y="2627.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.6" y="2638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.37%)</title><rect x="1153.6" y="2611.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.6" y="2622.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.37%)</title><rect x="1153.6" y="2595.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1156.6" y="2606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.25%)</title><rect x="1153.6" y="2579.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1156.6" y="2590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.25%)</title><rect x="1153.6" y="2563.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1156.6" y="2574.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.06%)</title><rect x="1153.6" y="2547.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.6" y="2558.0"></text>
</g>
<g>
<title>GraphKit::null_check_receiver_before_call(ciMethod*) (1 samples, 0.06%)</title><rect x="1153.6" y="2531.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1156.6" y="2542.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**) (1 samples, 0.06%)</title><rect x="1153.6" y="2515.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1156.6" y="2526.0"></text>
</g>
<g>
<title>Compile::too_many_traps(ciMethod*, int, Deoptimization::DeoptReason) (1 samples, 0.06%)</title><rect x="1153.6" y="2499.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.6" y="2510.0"></text>
</g>
<g>
<title>Compile::too_many_traps(Deoptimization::DeoptReason, ciMethodData*) (1 samples, 0.06%)</title><rect x="1153.6" y="2483.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.6" y="2494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.19%)</title><rect x="1154.3" y="2547.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1157.3" y="2558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.19%)</title><rect x="1154.3" y="2531.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1157.3" y="2542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.19%)</title><rect x="1154.3" y="2515.0" width="2.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1157.3" y="2526.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.19%)</title><rect x="1154.3" y="2499.0" width="2.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.3" y="2510.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1154.3" y="2483.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.3" y="2494.0"></text>
</g>
<g>
<title>Compile::should_delay_boxing_inlining(ciMethod*, JVMState*) (1 samples, 0.06%)</title><rect x="1154.3" y="2467.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.3" y="2478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1155.0" y="2483.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.0" y="2494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1155.0" y="2467.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1158.0" y="2478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1155.0" y="2451.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.0" y="2462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1155.0" y="2435.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1158.0" y="2446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1155.0" y="2419.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1158.0" y="2430.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1155.0" y="2403.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1158.0" y="2414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1155.0" y="2387.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.0" y="2398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1155.0" y="2371.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1158.0" y="2382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1155.0" y="2355.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.0" y="2366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1155.0" y="2339.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1158.0" y="2350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1155.0" y="2323.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1158.0" y="2334.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1155.0" y="2307.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.0" y="2318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1155.0" y="2291.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.0" y="2302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1155.0" y="2275.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1158.0" y="2286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1155.0" y="2259.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1158.0" y="2270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1155.0" y="2243.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1158.0" y="2254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1155.0" y="2227.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1158.0" y="2238.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1155.0" y="2211.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.0" y="2222.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.06%)</title><rect x="1155.0" y="2195.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1158.0" y="2206.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.06%)</title><rect x="1155.0" y="2179.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1158.0" y="2190.0"></text>
</g>
<g>
<title>TypeTuple::make_range(ciSignature*) (1 samples, 0.06%)</title><rect x="1155.0" y="2163.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.0" y="2174.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1155.0" y="2147.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1158.0" y="2158.0"></text>
</g>
<g>
<title>ciInstanceKlass::is_instance_klass() const (1 samples, 0.06%)</title><rect x="1155.0" y="2131.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1158.0" y="2142.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1155.8" y="2291.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.8" y="2302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1155.8" y="2275.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1158.8" y="2286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1155.8" y="2259.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1158.8" y="2270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1155.8" y="2243.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.8" y="2254.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1155.8" y="2227.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.8" y="2238.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1155.8" y="2211.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1158.8" y="2222.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1155.8" y="2195.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1158.8" y="2206.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1155.8" y="2179.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.8" y="2190.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1155.8" y="2163.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1158.8" y="2174.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1155.8" y="2147.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.8" y="2158.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1155.8" y="2131.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1158.8" y="2142.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1155.8" y="2115.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1158.8" y="2126.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1155.8" y="2099.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1158.8" y="2110.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1155.8" y="2083.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1158.8" y="2094.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1155.8" y="2067.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1158.8" y="2078.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1155.8" y="2051.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1158.8" y="2062.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1155.8" y="2035.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1158.8" y="2046.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1155.8" y="2019.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1158.8" y="2030.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1155.8" y="2003.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1158.8" y="2014.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1155.8" y="1987.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1158.8" y="1998.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1155.8" y="1971.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1158.8" y="1982.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1155.8" y="1955.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1158.8" y="1966.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1155.8" y="1939.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1158.8" y="1950.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1155.8" y="1923.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.8" y="1934.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1155.8" y="1907.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1158.8" y="1918.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1155.8" y="1891.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.8" y="1902.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1155.8" y="1875.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1158.8" y="1886.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1155.8" y="1859.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1158.8" y="1870.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1155.8" y="1843.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1158.8" y="1854.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1155.8" y="1827.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.8" y="1838.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1155.8" y="1811.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.8" y="1822.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1155.8" y="1795.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1158.8" y="1806.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1155.8" y="1779.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.8" y="1790.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1155.8" y="1763.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1158.8" y="1774.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.06%)</title><rect x="1155.8" y="1747.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1158.8" y="1758.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1155.8" y="1731.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1158.8" y="1742.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1155.8" y="1715.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1158.8" y="1726.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1155.8" y="1699.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1158.8" y="1710.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1155.8" y="1683.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1158.8" y="1694.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1155.8" y="1667.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1158.8" y="1678.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1155.8" y="1651.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.8" y="1662.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1155.8" y="1635.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1158.8" y="1646.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::push_translate(ciType*) (1 samples, 0.06%)</title><rect x="1155.8" y="1619.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1158.8" y="1630.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1156.5" y="2579.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.5" y="2590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1156.5" y="2563.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1159.5" y="2574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1156.5" y="2547.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1159.5" y="2558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1156.5" y="2531.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1159.5" y="2542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1156.5" y="2515.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1159.5" y="2526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1156.5" y="2499.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1159.5" y="2510.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1156.5" y="2483.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.5" y="2494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1156.5" y="2467.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1159.5" y="2478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1156.5" y="2451.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.5" y="2462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1156.5" y="2435.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1159.5" y="2446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1156.5" y="2419.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1159.5" y="2430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1156.5" y="2403.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.5" y="2414.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1156.5" y="2387.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.5" y="2398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1156.5" y="2371.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1159.5" y="2382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1156.5" y="2355.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1159.5" y="2366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1156.5" y="2339.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1159.5" y="2350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1156.5" y="2323.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.5" y="2334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1156.5" y="2307.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1159.5" y="2318.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1156.5" y="2291.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.5" y="2302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1156.5" y="2275.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.5" y="2286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1156.5" y="2259.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1159.5" y="2270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1156.5" y="2243.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1159.5" y="2254.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1156.5" y="2227.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1159.5" y="2238.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1156.5" y="2211.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1159.5" y="2222.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1156.5" y="2195.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.5" y="2206.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1156.5" y="2179.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1159.5" y="2190.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1156.5" y="2163.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1159.5" y="2174.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1156.5" y="2147.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.5" y="2158.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1156.5" y="2131.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1159.5" y="2142.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1156.5" y="2115.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1159.5" y="2126.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1156.5" y="2099.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.5" y="2110.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1156.5" y="2083.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.5" y="2094.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1156.5" y="2067.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.5" y="2078.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1156.5" y="2051.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.5" y="2062.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1156.5" y="2035.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.5" y="2046.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1156.5" y="2019.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.5" y="2030.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1156.5" y="2003.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.5" y="2014.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1156.5" y="1987.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1159.5" y="1998.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1156.5" y="1971.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1159.5" y="1982.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1156.5" y="1955.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.5" y="1966.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1156.5" y="1939.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1159.5" y="1950.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1156.5" y="1923.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.5" y="1934.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1156.5" y="1907.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1159.5" y="1918.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1156.5" y="1891.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.5" y="1902.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1156.5" y="1875.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1159.5" y="1886.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1156.5" y="1859.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1159.5" y="1870.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1156.5" y="1843.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.5" y="1854.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1156.5" y="1827.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1159.5" y="1838.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1156.5" y="1811.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.5" y="1822.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1156.5" y="1795.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.5" y="1806.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1156.5" y="1779.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1159.5" y="1790.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1156.5" y="1763.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.5" y="1774.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1156.5" y="1747.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.5" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1156.5" y="1731.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1159.5" y="1742.0"></text>
</g>
<g>
<title>Parse::array_load(BasicType) (1 samples, 0.06%)</title><rect x="1156.5" y="1715.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.5" y="1726.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const**) (1 samples, 0.06%)</title><rect x="1156.5" y="1699.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.5" y="1710.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1156.5" y="1683.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.5" y="1694.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.06%)</title><rect x="1156.5" y="1667.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.5" y="1678.0"></text>
</g>
<g>
<title>LoadNode::cmp(Node const&amp;) const (1 samples, 0.06%)</title><rect x="1156.5" y="1651.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.5" y="1662.0"></text>
</g>
<g>
<title>TypeInt::eq(Type const*) const (1 samples, 0.06%)</title><rect x="1156.5" y="1635.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.5" y="1646.0"></text>
</g>
<g>
<title>ciBytecodeStream::has_appendix() (1 samples, 0.06%)</title><rect x="1157.2" y="1795.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1160.2" y="1806.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.06%)</title><rect x="1157.2" y="1779.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1160.2" y="1790.0"></text>
</g>
<g>
<title>ciMethod::method_data() (1 samples, 0.06%)</title><rect x="1158.0" y="2643.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.0" y="2654.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.06%)</title><rect x="1158.0" y="2627.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1161.0" y="2638.0"></text>
</g>
<g>
<title>ciReceiverTypeData::translate_receiver_data_from(ProfileData const*) (1 samples, 0.06%)</title><rect x="1158.0" y="2611.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.0" y="2622.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1158.0" y="2595.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.0" y="2606.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1158.0" y="2579.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.0" y="2590.0"></text>
</g>
<g>
<title>InstanceKlass::protection_domain() const (1 samples, 0.06%)</title><rect x="1158.0" y="2563.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.0" y="2574.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1158.7" y="2675.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.7" y="2686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1158.7" y="2659.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.7" y="2670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1158.7" y="2643.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1161.7" y="2654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1158.7" y="2627.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.7" y="2638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1158.7" y="2611.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.7" y="2622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1158.7" y="2595.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.7" y="2606.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1158.7" y="2579.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1161.7" y="2590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1158.7" y="2563.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1161.7" y="2574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1158.7" y="2547.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.7" y="2558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1158.7" y="2531.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.7" y="2542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1158.7" y="2515.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1161.7" y="2526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1158.7" y="2499.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.7" y="2510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1158.7" y="2483.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.7" y="2494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1158.7" y="2467.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.7" y="2478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1158.7" y="2451.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.7" y="2462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1158.7" y="2435.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.7" y="2446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1158.7" y="2419.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.7" y="2430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1158.7" y="2403.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.7" y="2414.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1158.7" y="2387.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.7" y="2398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1158.7" y="2371.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1161.7" y="2382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1158.7" y="2355.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1161.7" y="2366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1158.7" y="2339.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.7" y="2350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1158.7" y="2323.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1161.7" y="2334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1158.7" y="2307.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.7" y="2318.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1158.7" y="2291.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.7" y="2302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1158.7" y="2275.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1161.7" y="2286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1158.7" y="2259.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.7" y="2270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1158.7" y="2243.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.7" y="2254.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1158.7" y="2227.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1161.7" y="2238.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1158.7" y="2211.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1161.7" y="2222.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1158.7" y="2195.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.7" y="2206.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1158.7" y="2179.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1161.7" y="2190.0"></text>
</g>
<g>
<title>InlineTree::find_subtree_from_root(InlineTree*, JVMState*, ciMethod*) (1 samples, 0.06%)</title><rect x="1158.7" y="2163.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.7" y="2174.0"></text>
</g>
<g>
<title>JVMState::of_depth(int) const (1 samples, 0.06%)</title><rect x="1158.7" y="2147.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1161.7" y="2158.0"></text>
</g>
<g>
<title>Parse::push_constant(ciConstant, bool, bool, Type const*) (1 samples, 0.06%)</title><rect x="1159.4" y="2691.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1162.4" y="2702.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1159.4" y="2675.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.4" y="2686.0"></text>
</g>
<g>
<title>TypeInt::xdual() const (1 samples, 0.06%)</title><rect x="1159.4" y="2659.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1162.4" y="2670.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (4 samples, 0.25%)</title><rect x="1160.1" y="2803.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.1" y="2814.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (4 samples, 0.25%)</title><rect x="1160.1" y="2787.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.1" y="2798.0"></text>
</g>
<g>
<title>Compilation::compile_method() (4 samples, 0.25%)</title><rect x="1160.1" y="2771.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.1" y="2782.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (2 samples, 0.12%)</title><rect x="1160.1" y="2755.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1163.1" y="2766.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.06%)</title><rect x="1160.1" y="2739.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.1" y="2750.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.06%)</title><rect x="1160.1" y="2723.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.1" y="2734.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_lir_list(LIR_List*) (1 samples, 0.06%)</title><rect x="1160.1" y="2707.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.1" y="2718.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (1 samples, 0.06%)</title><rect x="1160.1" y="2691.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1163.1" y="2702.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (1 samples, 0.06%)</title><rect x="1160.1" y="2675.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.1" y="2686.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.06%)</title><rect x="1160.9" y="2739.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.9" y="2750.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.06%)</title><rect x="1160.9" y="2723.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.9" y="2734.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (1 samples, 0.06%)</title><rect x="1160.9" y="2707.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1163.9" y="2718.0"></text>
</g>
<g>
<title>LinearScan::use_kind_of_input_operand(LIR_Op*, LIR_OprDesc*) (1 samples, 0.06%)</title><rect x="1160.9" y="2691.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.9" y="2702.0"></text>
</g>
<g>
<title>LIR_OprDesc::type_register() const (1 samples, 0.06%)</title><rect x="1160.9" y="2675.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.9" y="2686.0"></text>
</g>
<g>
<title>Compilation::install_code(int) (2 samples, 0.12%)</title><rect x="1161.6" y="2755.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1164.6" y="2766.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (2 samples, 0.12%)</title><rect x="1161.6" y="2739.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1164.6" y="2750.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (2 samples, 0.12%)</title><rect x="1161.6" y="2723.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.6" y="2734.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (2 samples, 0.12%)</title><rect x="1161.6" y="2707.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1164.6" y="2718.0"></text>
</g>
<g>
<title>CodeBlob::CodeBlob(char const*, CodeBuffer*, int, int, int, int, OopMapSet*) (2 samples, 0.12%)</title><rect x="1161.6" y="2691.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1164.6" y="2702.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (2 samples, 0.12%)</title><rect x="1161.6" y="2675.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.6" y="2686.0"></text>
</g>
<g>
<title>CallRelocation::fix_relocation_after_move(CodeBuffer const*, CodeBuffer*) (1 samples, 0.06%)</title><rect x="1161.6" y="2659.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1164.6" y="2670.0"></text>
</g>
<g>
<title>CodeBuffer::verify_section_allocation() (1 samples, 0.06%)</title><rect x="1162.3" y="2659.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.3" y="2670.0"></text>
</g>
<g>
<title>CompileQueue::get() (7 samples, 0.43%)</title><rect x="1163.0" y="2819.0" width="5.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.0" y="2830.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (7 samples, 0.43%)</title><rect x="1163.0" y="2803.0" width="5.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1166.0" y="2814.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.06%)</title><rect x="1163.0" y="2787.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.0" y="2798.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (6 samples, 0.37%)</title><rect x="1163.8" y="2787.0" width="4.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.8" y="2798.0"></text>
</g>
<g>
<title>Monitor::IUnlock(bool) (1 samples, 0.06%)</title><rect x="1163.8" y="2771.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1166.8" y="2782.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.06%)</title><rect x="1164.5" y="2771.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.5" y="2782.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.06%)</title><rect x="1164.5" y="2755.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.5" y="2766.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.06%)</title><rect x="1164.5" y="2739.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1167.5" y="2750.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.06%)</title><rect x="1164.5" y="2723.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1167.5" y="2734.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="1164.5" y="2707.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1167.5" y="2718.0"></text>
</g>
<g>
<title>NMethodSweeper::process_nmethod(nmethod*) (4 samples, 0.25%)</title><rect x="1165.2" y="2771.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.2" y="2782.0"></text>
</g>
<g>
<title>nmethod::cleanup_inline_caches() (3 samples, 0.19%)</title><rect x="1166.0" y="2755.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.0" y="2766.0"></text>
</g>
<g>
<title>CompiledIC::ic_destination() const (1 samples, 0.06%)</title><rect x="1166.7" y="2739.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.7" y="2750.0"></text>
</g>
<g>
<title>NativeCall::destination() const (1 samples, 0.06%)</title><rect x="1166.7" y="2723.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.7" y="2734.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.06%)</title><rect x="1167.4" y="2739.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1170.4" y="2750.0"></text>
</g>
<g>
<title>RelocIterator::advance_over_prefix() (1 samples, 0.06%)</title><rect x="1167.4" y="2723.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1170.4" y="2734.0"></text>
</g>
<g>
<title>VMThread::run() (27 samples, 1.67%)</title><rect x="1168.1" y="2867.0" width="19.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1171.1" y="2878.0"></text>
</g>
<g>
<title>VMThread::loop() (27 samples, 1.67%)</title><rect x="1168.1" y="2851.0" width="19.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.1" y="2862.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.06%)</title><rect x="1168.1" y="2835.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1171.1" y="2846.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (26 samples, 1.60%)</title><rect x="1168.9" y="2835.0" width="18.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.9" y="2846.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (26 samples, 1.60%)</title><rect x="1168.9" y="2819.0" width="18.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.9" y="2830.0"></text>
</g>
<g>
<title>VM_ParallelGCFailedAllocation::doit() (26 samples, 1.60%)</title><rect x="1168.9" y="2803.0" width="18.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.9" y="2814.0"></text>
</g>
<g>
<title>ParallelScavengeHeap::failed_mem_allocate(unsigned long) (26 samples, 1.60%)</title><rect x="1168.9" y="2787.0" width="18.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.9" y="2798.0"></text>
</g>
<g>
<title>PSScavenge::invoke() (26 samples, 1.60%)</title><rect x="1168.9" y="2771.0" width="18.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.9" y="2782.0"></text>
</g>
<g>
<title>PSParallelCompact::invoke_no_policy(bool) (21 samples, 1.30%)</title><rect x="1168.9" y="2755.0" width="15.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.9" y="2766.0"></text>
</g>
<g>
<title>PSParallelCompact::adjust_roots() (9 samples, 0.56%)</title><rect x="1168.9" y="2739.0" width="6.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.9" y="2750.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::oops_do(OopClosure*, KlassClosure*, bool) (3 samples, 0.19%)</title><rect x="1168.9" y="2723.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.9" y="2734.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (1 samples, 0.06%)</title><rect x="1168.9" y="2707.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1171.9" y="2718.0"></text>
</g>
<g>
<title>PSParallelCompact::AdjustKlassClosure::do_klass(Klass*) (1 samples, 0.06%)</title><rect x="1168.9" y="2691.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.9" y="2702.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (2 samples, 0.12%)</title><rect x="1169.6" y="2707.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.6" y="2718.0"></text>
</g>
<g>
<title>ClassLoaderData::claim() (1 samples, 0.06%)</title><rect x="1170.3" y="2691.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.3" y="2702.0"></text>
</g>
<g>
<title>CodeCache::blobs_do(CodeBlobClosure*) (6 samples, 0.37%)</title><rect x="1171.1" y="2723.0" width="4.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1174.1" y="2734.0"></text>
</g>
<g>
<title>CodeBlobToOopClosure::do_nmethod(nmethod*) (3 samples, 0.19%)</title><rect x="1171.1" y="2707.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.1" y="2718.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.06%)</title><rect x="1171.1" y="2691.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.1" y="2702.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (2 samples, 0.12%)</title><rect x="1171.8" y="2691.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.8" y="2702.0"></text>
</g>
<g>
<title>PSParallelCompact::AdjustPointerClosure::do_oop(oopDesc**) (1 samples, 0.06%)</title><rect x="1172.5" y="2675.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.5" y="2686.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.06%)</title><rect x="1172.5" y="2659.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.5" y="2670.0"></text>
</g>
<g>
<title>CodeCache::alive(CodeBlob*) (1 samples, 0.06%)</title><rect x="1173.2" y="2707.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.2" y="2718.0"></text>
</g>
<g>
<title>nmethod::is_alive() const (1 samples, 0.06%)</title><rect x="1173.2" y="2691.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1176.2" y="2702.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (2 samples, 0.12%)</title><rect x="1174.0" y="2707.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1177.0" y="2718.0"></text>
</g>
<g>
<title>RelocIterator::advance_over_prefix() (1 samples, 0.06%)</title><rect x="1174.0" y="2691.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1177.0" y="2702.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.06%)</title><rect x="1174.7" y="2691.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1177.7" y="2702.0"></text>
</g>
<g>
<title>RelocIterator::advance_over_prefix() (1 samples, 0.06%)</title><rect x="1174.7" y="2675.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.7" y="2686.0"></text>
</g>
<g>
<title>PSParallelCompact::compact() (1 samples, 0.06%)</title><rect x="1175.4" y="2739.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.4" y="2750.0"></text>
</g>
<g>
<title>PSParallelCompact::update_deferred_objects(ParCompactionManager*, PSParallelCompact::SpaceId) (1 samples, 0.06%)</title><rect x="1175.4" y="2723.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.4" y="2734.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.06%)</title><rect x="1175.4" y="2707.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.4" y="2718.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.06%)</title><rect x="1175.4" y="2691.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.4" y="2702.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.06%)</title><rect x="1175.4" y="2675.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.4" y="2686.0"></text>
</g>
<g>
<title>PSParallelCompact::marking_phase(ParCompactionManager*, bool, ParallelOldTracer*) (11 samples, 0.68%)</title><rect x="1176.2" y="2739.0" width="8.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.2" y="2750.0"></text>
</g>
<g>
<title>CodeCache::do_unloading(BoolObjectClosure*, bool) (3 samples, 0.19%)</title><rect x="1176.2" y="2723.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.2" y="2734.0"></text>
</g>
<g>
<title>nmethod::do_unloading(BoolObjectClosure*, bool) (3 samples, 0.19%)</title><rect x="1176.2" y="2707.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.2" y="2718.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.06%)</title><rect x="1176.2" y="2691.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.2" y="2702.0"></text>
</g>
<g>
<title>RelocIterator::set_limits(unsigned char*, unsigned char*) (1 samples, 0.06%)</title><rect x="1176.9" y="2691.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.9" y="2702.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.06%)</title><rect x="1176.9" y="2675.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.9" y="2686.0"></text>
</g>
<g>
<title>Relocation::unpack_2_ints(int&amp;, int&amp;) (1 samples, 0.06%)</title><rect x="1177.6" y="2691.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.6" y="2702.0"></text>
</g>
<g>
<title>Klass::clean_weak_klass_links(BoolObjectClosure*, bool) (3 samples, 0.19%)</title><rect x="1178.3" y="2723.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.3" y="2734.0"></text>
</g>
<g>
<title>InstanceKlass::clean_weak_instanceklass_links(BoolObjectClosure*) (2 samples, 0.12%)</title><rect x="1178.3" y="2707.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.3" y="2718.0"></text>
</g>
<g>
<title>InstanceKlass::clean_method_data(BoolObjectClosure*) (2 samples, 0.12%)</title><rect x="1178.3" y="2691.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.3" y="2702.0"></text>
</g>
<g>
<title>MethodData::clean_extra_data(BoolObjectClosure*) (1 samples, 0.06%)</title><rect x="1178.3" y="2675.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.3" y="2686.0"></text>
</g>
<g>
<title>MethodData::clean_method_data(BoolObjectClosure*) (1 samples, 0.06%)</title><rect x="1179.1" y="2675.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.1" y="2686.0"></text>
</g>
<g>
<title>PSParallelCompact::IsAliveClosure::do_object_b(oopDesc*) (1 samples, 0.06%)</title><rect x="1179.8" y="2707.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.8" y="2718.0"></text>
</g>
<g>
<title>SymbolTable::unlink(int*, int*) (4 samples, 0.25%)</title><rect x="1180.5" y="2723.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.5" y="2734.0"></text>
</g>
<g>
<title>SymbolTable::buckets_unlink(int, int, int*, int*, unsigned long*) (4 samples, 0.25%)</title><rect x="1180.5" y="2707.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.5" y="2718.0"></text>
</g>
<g>
<title>SystemDictionary::do_unloading(BoolObjectClosure*, bool) (1 samples, 0.06%)</title><rect x="1183.4" y="2723.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.4" y="2734.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::do_unloading(BoolObjectClosure*, bool) (1 samples, 0.06%)</title><rect x="1183.4" y="2707.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.4" y="2718.0"></text>
</g>
<g>
<title>ClassLoaderData::is_alive(BoolObjectClosure*) const (1 samples, 0.06%)</title><rect x="1183.4" y="2691.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.4" y="2702.0"></text>
</g>
<g>
<title>PSScavenge::invoke_no_policy() (5 samples, 0.31%)</title><rect x="1184.2" y="2755.0" width="3.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.2" y="2766.0"></text>
</g>
<g>
<title>GCHeapLog::log_heap(bool) (1 samples, 0.06%)</title><rect x="1184.2" y="2739.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.2" y="2750.0"></text>
</g>
<g>
<title>MetaspaceAux::print_on(outputStream*) (1 samples, 0.06%)</title><rect x="1184.2" y="2723.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.2" y="2734.0"></text>
</g>
<g>
<title>outputStream::print_cr(char const*, ...) (1 samples, 0.06%)</title><rect x="1184.2" y="2707.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.2" y="2718.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf(char*, unsigned long, char const*, __va_list_tag*, bool, unsigned long&amp;) (1 samples, 0.06%)</title><rect x="1184.2" y="2691.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.2" y="2702.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 0.06%)</title><rect x="1184.2" y="2675.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1187.2" y="2686.0"></text>
</g>
<g>
<title>_vsnprintf (1 samples, 0.06%)</title><rect x="1184.2" y="2659.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1187.2" y="2670.0"></text>
</g>
<g>
<title>__v2printf (1 samples, 0.06%)</title><rect x="1184.2" y="2643.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1187.2" y="2654.0"></text>
</g>
<g>
<title>__vfprintf (1 samples, 0.06%)</title><rect x="1184.2" y="2627.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1187.2" y="2638.0"></text>
</g>
<g>
<title>StringTable::buckets_unlink_or_oops_do(BoolObjectClosure*, OopClosure*, int, int, int*, int*) (1 samples, 0.06%)</title><rect x="1184.9" y="2739.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.9" y="2750.0"></text>
</g>
<g>
<title>java_lang_ref_SoftReference::clock() (1 samples, 0.06%)</title><rect x="1185.6" y="2739.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.6" y="2750.0"></text>
</g>
<g>
<title>nmethod::oops_do_marking_epilogue() (2 samples, 0.12%)</title><rect x="1186.4" y="2739.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.4" y="2750.0"></text>
</g>
<g>
<title>nmethod::verify_oop_relocations() (2 samples, 0.12%)</title><rect x="1186.4" y="2723.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.4" y="2734.0"></text>
</g>
<g>
<title>RelocIterator::next() (2 samples, 0.12%)</title><rect x="1186.4" y="2707.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.4" y="2718.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.19%)</title><rect x="1187.8" y="2867.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.8" y="2878.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (3 samples, 0.19%)</title><rect x="1187.8" y="2851.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.8" y="2862.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 0.19%)</title><rect x="1187.8" y="2835.0" width="2.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.8" y="2846.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (3 samples, 0.19%)</title><rect x="1187.8" y="2819.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.8" y="2830.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (3 samples, 0.19%)</title><rect x="1187.8" y="2803.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.8" y="2814.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.19%)</title><rect x="1187.8" y="2787.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1190.8" y="2798.0"></text>
</g>
</g>
</svg>
