<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2966" onload="init(evt)" viewBox="0 0 1200 2966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="2949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="2949"> </text>
<g id="frames">
<g>
<title>all (2,141 samples, 100.00%)</title><rect x="10.0" y="2915.0" width="1180.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="13.0" y="2926.0">all</text>
</g>
<g>
<title>[not_walkable] (1 samples, 0.05%)</title><rect x="10.0" y="2899.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="2910.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.05%)</title><rect x="10.6" y="2899.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.6" y="2910.0"></text>
</g>
<g>
<title>[unknown_Java] (60 samples, 2.80%)</title><rect x="11.1" y="2899.0" width="33.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="14.1" y="2910.0">[u..</text>
</g>
<g>
<title>java/lang/Thread.run (516 samples, 24.10%)</title><rect x="44.2" y="2899.0" width="284.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.2" y="2910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (516 samples, 24.10%)</title><rect x="44.2" y="2883.0" width="284.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.2" y="2894.0">java/util/concurrent/ThreadPoolExecuto..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (516 samples, 24.10%)</title><rect x="44.2" y="2867.0" width="284.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.2" y="2878.0">java/util/concurrent/ThreadPoolExecuto..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (516 samples, 24.10%)</title><rect x="44.2" y="2851.0" width="284.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.2" y="2862.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (516 samples, 24.10%)</title><rect x="44.2" y="2835.0" width="284.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.2" y="2846.0">java/util/concurrent/Executors$Runnabl..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (516 samples, 24.10%)</title><rect x="44.2" y="2819.0" width="284.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.2" y="2830.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>sbt/CompletionService$$anon$2.call (516 samples, 24.10%)</title><rect x="44.2" y="2803.0" width="284.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.2" y="2814.0">sbt/CompletionService$$anon$2.call</text>
</g>
<g>
<title>sbt/ConcurrentRestrictions$$anon$4$$Lambda$2279/2130242983.apply (516 samples, 24.10%)</title><rect x="44.2" y="2787.0" width="284.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.2" y="2798.0">sbt/ConcurrentRestrictions$$anon$4$$La..</text>
</g>
<g>
<title>sbt/ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1 (516 samples, 24.10%)</title><rect x="44.2" y="2771.0" width="284.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.2" y="2782.0">sbt/ConcurrentRestrictions$$anon$4.$an..</text>
</g>
<g>
<title>sbt/Execute$$Lambda$2272/2074687317.apply (516 samples, 24.10%)</title><rect x="44.2" y="2755.0" width="284.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.2" y="2766.0">sbt/Execute$$Lambda$2272/2074687317.ap..</text>
</g>
<g>
<title>sbt/Execute.$anonfun$submit$1 (516 samples, 24.10%)</title><rect x="44.2" y="2739.0" width="284.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.2" y="2750.0">sbt/Execute.$anonfun$submit$1</text>
</g>
<g>
<title>sbt/Execute.work (516 samples, 24.10%)</title><rect x="44.2" y="2723.0" width="284.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.2" y="2734.0">sbt/Execute.work</text>
</g>
<g>
<title>sbt/internal/util/ErrorHandling$.wideConvert (516 samples, 24.10%)</title><rect x="44.2" y="2707.0" width="284.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.2" y="2718.0">sbt/internal/util/ErrorHandling$.wideC..</text>
</g>
<g>
<title>sbt/Execute$$Lambda$2281/459574917.apply (516 samples, 24.10%)</title><rect x="44.2" y="2691.0" width="284.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.2" y="2702.0">sbt/Execute$$Lambda$2281/459574917.apply</text>
</g>
<g>
<title>sbt/Execute.$anonfun$submit$2 (516 samples, 24.10%)</title><rect x="44.2" y="2675.0" width="284.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.2" y="2686.0">sbt/Execute.$anonfun$submit$2</text>
</g>
<g>
<title>sbt/std/Transform$$anon$4.work (516 samples, 24.10%)</title><rect x="44.2" y="2659.0" width="284.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.2" y="2670.0">sbt/std/Transform$$anon$4.work</text>
</g>
<g>
<title>sbt/std/Transform$$anon$3$$Lambda$2270/1283634655.apply (516 samples, 24.10%)</title><rect x="44.2" y="2643.0" width="284.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.2" y="2654.0">sbt/std/Transform$$anon$3$$Lambda$2270..</text>
</g>
<g>
<title>sbt/std/Transform$$anon$3.$anonfun$apply$2 (516 samples, 24.10%)</title><rect x="44.2" y="2627.0" width="284.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.2" y="2638.0">sbt/std/Transform$$anon$3.$anonfun$app..</text>
</g>
<g>
<title>sbt/Tests$$$Lambda$5357/1514696853.apply (516 samples, 24.10%)</title><rect x="44.2" y="2611.0" width="284.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.2" y="2622.0">sbt/Tests$$$Lambda$5357/1514696853.apply</text>
</g>
<g>
<title>sbt/Tests$.$anonfun$toTask$1 (516 samples, 24.10%)</title><rect x="44.2" y="2595.0" width="284.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.2" y="2606.0">sbt/Tests$.$anonfun$toTask$1</text>
</g>
<g>
<title>sbt/TestFunction.apply (516 samples, 24.10%)</title><rect x="44.2" y="2579.0" width="284.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.2" y="2590.0">sbt/TestFunction.apply</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply (516 samples, 24.10%)</title><rect x="44.2" y="2563.0" width="284.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="47.2" y="2574.0">sbt/TestFramework$$anon$3$$anonfun$$le..</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply (516 samples, 24.10%)</title><rect x="44.2" y="2547.0" width="284.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.2" y="2558.0">sbt/TestFramework$$anon$3$$anonfun$$le..</text>
</g>
<g>
<title>sbt/TestFramework$.sbt$TestFramework$$withContextLoader (516 samples, 24.10%)</title><rect x="44.2" y="2531.0" width="284.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.2" y="2542.0">sbt/TestFramework$.sbt$TestFramework$$..</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1$$Lambda$5378/1396467410.apply (516 samples, 24.10%)</title><rect x="44.2" y="2515.0" width="284.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.2" y="2526.0">sbt/TestFramework$$anon$3$$anonfun$$le..</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1 (516 samples, 24.10%)</title><rect x="44.2" y="2499.0" width="284.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.2" y="2510.0">sbt/TestFramework$$anon$3$$anonfun$$le..</text>
</g>
<g>
<title>sbt/TestRunner.run (516 samples, 24.10%)</title><rect x="44.2" y="2483.0" width="284.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.2" y="2494.0">sbt/TestRunner.run</text>
</g>
<g>
<title>sbt/TestRunner.runTest$1 (516 samples, 24.10%)</title><rect x="44.2" y="2467.0" width="284.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.2" y="2478.0">sbt/TestRunner.runTest$1</text>
</g>
<g>
<title>org/scalatest/tools/Framework$ScalaTestTask.execute (516 samples, 24.10%)</title><rect x="44.2" y="2451.0" width="284.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.2" y="2462.0">org/scalatest/tools/Framework$ScalaTes..</text>
</g>
<g>
<title>org/scalatest/tools/Framework.org$scalatest$tools$Framework$$runSuite (516 samples, 24.10%)</title><rect x="44.2" y="2435.0" width="284.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.2" y="2446.0">org/scalatest/tools/Framework.org$scal..</text>
</g>
<g>
<title>org/scalatest/FlatSpec.run (516 samples, 24.10%)</title><rect x="44.2" y="2419.0" width="284.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.2" y="2430.0">org/scalatest/FlatSpec.run</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.run$ (516 samples, 24.10%)</title><rect x="44.2" y="2403.0" width="284.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.2" y="2414.0">org/scalatest/FlatSpecLike.run$</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.run (516 samples, 24.10%)</title><rect x="44.2" y="2387.0" width="284.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.2" y="2398.0">org/scalatest/FlatSpecLike.run</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runImpl (516 samples, 24.10%)</title><rect x="44.2" y="2371.0" width="284.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.2" y="2382.0">org/scalatest/SuperEngine.runImpl</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike$$Lambda$20956/1457693778.apply (516 samples, 24.10%)</title><rect x="44.2" y="2355.0" width="284.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="47.2" y="2366.0">org/scalatest/FlatSpecLike$$Lambda$209..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.$anonfun$run$1 (516 samples, 24.10%)</title><rect x="44.2" y="2339.0" width="284.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="47.2" y="2350.0">org/scalatest/FlatSpecLike.$anonfun$ru..</text>
</g>
<g>
<title>org/scalatest/FlatSpec.org$scalatest$FlatSpecLike$$super$run (516 samples, 24.10%)</title><rect x="44.2" y="2323.0" width="284.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.2" y="2334.0">org/scalatest/FlatSpec.org$scalatest$F..</text>
</g>
<g>
<title>org/scalatest/Suite.run$ (516 samples, 24.10%)</title><rect x="44.2" y="2307.0" width="284.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.2" y="2318.0">org/scalatest/Suite.run$</text>
</g>
<g>
<title>org/scalatest/Suite.run (516 samples, 24.10%)</title><rect x="44.2" y="2291.0" width="284.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.2" y="2302.0">org/scalatest/Suite.run</text>
</g>
<g>
<title>org/scalatest/FlatSpec.runTests (516 samples, 24.10%)</title><rect x="44.2" y="2275.0" width="284.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.2" y="2286.0">org/scalatest/FlatSpec.runTests</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.runTests$ (516 samples, 24.10%)</title><rect x="44.2" y="2259.0" width="284.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.2" y="2270.0">org/scalatest/FlatSpecLike.runTests$</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.runTests (516 samples, 24.10%)</title><rect x="44.2" y="2243.0" width="284.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.2" y="2254.0">org/scalatest/FlatSpecLike.runTests</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestsImpl (516 samples, 24.10%)</title><rect x="44.2" y="2227.0" width="284.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.2" y="2238.0">org/scalatest/SuperEngine.runTestsImpl</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestsInBranch (516 samples, 24.10%)</title><rect x="44.2" y="2211.0" width="284.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.2" y="2222.0">org/scalatest/SuperEngine.runTestsInBr..</text>
</g>
<g>
<title>org/scalatest/SuperEngine.traverseSubNodes$1 (516 samples, 24.10%)</title><rect x="44.2" y="2195.0" width="284.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.2" y="2206.0">org/scalatest/SuperEngine.traverseSubN..</text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (516 samples, 24.10%)</title><rect x="44.2" y="2179.0" width="284.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.2" y="2190.0">scala/collection/immutable/List.foreach</text>
</g>
<g>
<title>org/scalatest/SuperEngine$$Lambda$20964/1490119986.apply (516 samples, 24.10%)</title><rect x="44.2" y="2163.0" width="284.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.2" y="2174.0">org/scalatest/SuperEngine$$Lambda$2096..</text>
</g>
<g>
<title>org/scalatest/SuperEngine.$anonfun$runTestsInBranch$1 (516 samples, 24.10%)</title><rect x="44.2" y="2147.0" width="284.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.2" y="2158.0">org/scalatest/SuperEngine.$anonfun$run..</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestsInBranch (516 samples, 24.10%)</title><rect x="44.2" y="2131.0" width="284.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.2" y="2142.0">org/scalatest/SuperEngine.runTestsInBr..</text>
</g>
<g>
<title>org/scalatest/SuperEngine.traverseSubNodes$1 (516 samples, 24.10%)</title><rect x="44.2" y="2115.0" width="284.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.2" y="2126.0">org/scalatest/SuperEngine.traverseSubN..</text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (516 samples, 24.10%)</title><rect x="44.2" y="2099.0" width="284.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.2" y="2110.0">scala/collection/immutable/List.foreach</text>
</g>
<g>
<title>org/scalatest/SuperEngine$$Lambda$20964/1490119986.apply (516 samples, 24.10%)</title><rect x="44.2" y="2083.0" width="284.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.2" y="2094.0">org/scalatest/SuperEngine$$Lambda$2096..</text>
</g>
<g>
<title>org/scalatest/SuperEngine.$anonfun$runTestsInBranch$1 (516 samples, 24.10%)</title><rect x="44.2" y="2067.0" width="284.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.2" y="2078.0">org/scalatest/SuperEngine.$anonfun$run..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike$$Lambda$20963/1752099902.apply (516 samples, 24.10%)</title><rect x="44.2" y="2051.0" width="284.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.2" y="2062.0">org/scalatest/FlatSpecLike$$Lambda$209..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.$anonfun$runTests$1 (516 samples, 24.10%)</title><rect x="44.2" y="2035.0" width="284.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.2" y="2046.0">org/scalatest/FlatSpecLike.$anonfun$ru..</text>
</g>
<g>
<title>org/scalatest/FlatSpec.runTest (516 samples, 24.10%)</title><rect x="44.2" y="2019.0" width="284.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.2" y="2030.0">org/scalatest/FlatSpec.runTest</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.runTest$ (516 samples, 24.10%)</title><rect x="44.2" y="2003.0" width="284.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.2" y="2014.0">org/scalatest/FlatSpecLike.runTest$</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.runTest (516 samples, 24.10%)</title><rect x="44.2" y="1987.0" width="284.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.2" y="1998.0">org/scalatest/FlatSpecLike.runTest</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestImpl (516 samples, 24.10%)</title><rect x="44.2" y="1971.0" width="284.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.2" y="1982.0">org/scalatest/SuperEngine.runTestImpl</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike$$Lambda$20979/1492647069.apply (515 samples, 24.05%)</title><rect x="44.2" y="1955.0" width="283.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.2" y="1966.0">org/scalatest/FlatSpecLike$$Lambda$209..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.$anonfun$runTest$1 (515 samples, 24.05%)</title><rect x="44.2" y="1939.0" width="283.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.2" y="1950.0">org/scalatest/FlatSpecLike.$anonfun$ru..</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike.invokeWithFixture$1 (515 samples, 24.05%)</title><rect x="44.2" y="1923.0" width="283.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.2" y="1934.0">org/scalatest/FlatSpecLike.invokeWithF..</text>
</g>
<g>
<title>org/scalatest/FlatSpec.withFixture (515 samples, 24.05%)</title><rect x="44.2" y="1907.0" width="283.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.2" y="1918.0">org/scalatest/FlatSpec.withFixture</text>
</g>
<g>
<title>org/scalatest/TestSuite.withFixture$ (515 samples, 24.05%)</title><rect x="44.2" y="1891.0" width="283.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.2" y="1902.0">org/scalatest/TestSuite.withFixture$</text>
</g>
<g>
<title>org/scalatest/TestSuite.withFixture (515 samples, 24.05%)</title><rect x="44.2" y="1875.0" width="283.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.2" y="1886.0">org/scalatest/TestSuite.withFixture</text>
</g>
<g>
<title>org/scalatest/FlatSpecLike$$anon$5.apply (515 samples, 24.05%)</title><rect x="44.2" y="1859.0" width="283.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.2" y="1870.0">org/scalatest/FlatSpecLike$$anon$5.apply</text>
</g>
<g>
<title>org/scalatest/Transformer.apply (515 samples, 24.05%)</title><rect x="44.2" y="1843.0" width="283.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.2" y="1854.0">org/scalatest/Transformer.apply</text>
</g>
<g>
<title>org/scalatest/Transformer.apply (515 samples, 24.05%)</title><rect x="44.2" y="1827.0" width="283.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.2" y="1838.0">org/scalatest/Transformer.apply</text>
</g>
<g>
<title>org/scalatest/OutcomeOf$.outcomeOf (515 samples, 24.05%)</title><rect x="44.2" y="1811.0" width="283.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.2" y="1822.0">org/scalatest/OutcomeOf$.outcomeOf</text>
</g>
<g>
<title>org/scalatest/OutcomeOf.outcomeOf$ (515 samples, 24.05%)</title><rect x="44.2" y="1795.0" width="283.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.2" y="1806.0">org/scalatest/OutcomeOf.outcomeOf$</text>
</g>
<g>
<title>org/scalatest/OutcomeOf.outcomeOf (515 samples, 24.05%)</title><rect x="44.2" y="1779.0" width="283.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.2" y="1790.0">org/scalatest/OutcomeOf.outcomeOf</text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (515 samples, 24.05%)</title><rect x="44.2" y="1763.0" width="283.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.2" y="1774.0">scala/runtime/java8/JFunction0$mcV$sp...</text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$20939/1468785638.apply$mcV$sp (184 samples, 8.59%)</title><rect x="44.2" y="1747.0" width="101.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.2" y="1758.0">treadle/GCDT..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$new$1 (184 samples, 8.59%)</title><rect x="44.2" y="1731.0" width="101.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.2" y="1742.0">treadle/GCDT..</text>
</g>
<g>
<title>treadle/GCDTester.sizableTest (184 samples, 8.59%)</title><rect x="44.2" y="1715.0" width="101.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.2" y="1726.0">treadle/GCDT..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.foreach (164 samples, 7.66%)</title><rect x="44.2" y="1699.0" width="90.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.2" y="1710.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (164 samples, 7.66%)</title><rect x="44.2" y="1683.0" width="90.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.2" y="1694.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (164 samples, 7.66%)</title><rect x="44.2" y="1667.0" width="90.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.2" y="1678.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (164 samples, 7.66%)</title><rect x="44.2" y="1651.0" width="90.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.2" y="1662.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (164 samples, 7.66%)</title><rect x="44.2" y="1635.0" width="90.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.2" y="1646.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (164 samples, 7.66%)</title><rect x="44.2" y="1619.0" width="90.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.2" y="1630.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach (164 samples, 7.66%)</title><rect x="44.2" y="1603.0" width="90.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.2" y="1614.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter$$Lambda$3702/1735448379.apply (164 samples, 7.66%)</title><rect x="44.2" y="1587.0" width="90.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.2" y="1598.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.$anonfun$foreach$1 (164 samples, 7.66%)</title><rect x="44.2" y="1571.0" width="90.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.2" y="1582.0">scala/coll..</text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$21883/1244445115.apply (164 samples, 7.66%)</title><rect x="44.2" y="1555.0" width="90.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.2" y="1566.0">treadle/GC..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$sizableTest$4$adapted (164 samples, 7.66%)</title><rect x="44.2" y="1539.0" width="90.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.2" y="1550.0">treadle/GC..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$sizableTest$4 (164 samples, 7.66%)</title><rect x="44.2" y="1523.0" width="90.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.2" y="1534.0">treadle/GC..</text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.05%)</title><rect x="44.7" y="1507.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.7" y="1518.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.05%)</title><rect x="44.7" y="1491.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.7" y="1502.0"></text>
</g>
<g>
<title>scala/math/BigInt.&lt;init&gt; (1 samples, 0.05%)</title><rect x="44.7" y="1475.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.7" y="1486.0"></text>
</g>
<g>
<title>treadle/TreadleTester.expect (1 samples, 0.05%)</title><rect x="45.3" y="1507.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.3" y="1518.0"></text>
</g>
<g>
<title>treadle/TreadleTester.peek (1 samples, 0.05%)</title><rect x="45.3" y="1491.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="48.3" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.getValue (1 samples, 0.05%)</title><rect x="45.3" y="1475.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.3" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (1 samples, 0.05%)</title><rect x="45.3" y="1459.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.3" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (1 samples, 0.05%)</title><rect x="45.3" y="1443.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.3" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="45.3" y="1427.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.3" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="45.3" y="1411.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.3" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="45.3" y="1395.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.3" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="45.3" y="1379.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.3" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="45.3" y="1363.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.3" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="45.3" y="1347.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.3" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="45.3" y="1331.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.3" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="45.3" y="1315.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.3" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="45.3" y="1299.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.3" y="1310.0"></text>
</g>
<g>
<title>treadle/TreadleTester.peek (53 samples, 2.48%)</title><rect x="45.8" y="1507.0" width="29.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.8" y="1518.0">tr..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (50 samples, 2.34%)</title><rect x="45.8" y="1491.0" width="27.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.8" y="1502.0">t..</text>
</g>
<g>
<title>scala/collection/mutable/HashSet.clear (1 samples, 0.05%)</title><rect x="46.4" y="1475.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.4" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.clearTable (1 samples, 0.05%)</title><rect x="46.4" y="1459.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.4" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.clearTable$ (1 samples, 0.05%)</title><rect x="46.4" y="1443.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.4" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.clearTable (1 samples, 0.05%)</title><rect x="46.4" y="1427.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.4" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.nnSizeMapReset (1 samples, 0.05%)</title><rect x="46.4" y="1411.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.4" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (48 samples, 2.24%)</title><rect x="46.9" y="1475.0" width="26.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.9" y="1486.0">t..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.lastStopResult (1 samples, 0.05%)</title><rect x="47.5" y="1459.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.5" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (46 samples, 2.15%)</title><rect x="48.0" y="1459.0" width="25.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="51.0" y="1470.0">t..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (46 samples, 2.15%)</title><rect x="48.0" y="1443.0" width="25.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.0" y="1454.0">t..</text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner$$Lambda$21878/2041363392.apply$mcV$sp (1 samples, 0.05%)</title><rect x="48.6" y="1427.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.6" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.$anonfun$setLeanMode$2 (1 samples, 0.05%)</title><rect x="48.6" y="1411.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.6" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.runFull (1 samples, 0.05%)</title><rect x="48.6" y="1395.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.6" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/ClockTransitionGetter.transition (1 samples, 0.05%)</title><rect x="48.6" y="1379.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.6" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/ClockTransitionGetter.isPosEdge (1 samples, 0.05%)</title><rect x="48.6" y="1363.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.6" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$21877/517240099.apply$mcV$sp (44 samples, 2.06%)</title><rect x="49.1" y="1427.0" width="24.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.1" y="1438.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (44 samples, 2.06%)</title><rect x="49.1" y="1411.0" width="24.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.1" y="1422.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (44 samples, 2.06%)</title><rect x="49.1" y="1395.0" width="24.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.1" y="1406.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.treadle$executable$DataStore$AssignInt$$$outer (1 samples, 0.05%)</title><rect x="49.1" y="1379.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="52.1" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (43 samples, 2.01%)</title><rect x="49.7" y="1379.0" width="23.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="52.7" y="1390.0">t..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2144838275.linkToTargetMethod (1 samples, 0.05%)</title><rect x="49.7" y="1363.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="52.7" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/920459577.invokeStatic_LIL_L (1 samples, 0.05%)</title><rect x="49.7" y="1347.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.7" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.get$Lambda (1 samples, 0.05%)</title><rect x="49.7" y="1331.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="52.7" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (42 samples, 1.96%)</title><rect x="50.2" y="1363.0" width="23.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.2" y="1374.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (42 samples, 1.96%)</title><rect x="50.2" y="1347.0" width="23.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="53.2" y="1358.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (42 samples, 1.96%)</title><rect x="50.2" y="1331.0" width="23.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.2" y="1342.0">s..</text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (1 samples, 0.05%)</title><rect x="50.2" y="1315.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.2" y="1326.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.size$ (1 samples, 0.05%)</title><rect x="50.2" y="1299.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.2" y="1310.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.size (1 samples, 0.05%)</title><rect x="50.2" y="1283.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.2" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.length (1 samples, 0.05%)</title><rect x="50.2" y="1267.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.2" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.apply (41 samples, 1.91%)</title><rect x="50.8" y="1315.0" width="22.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.8" y="1326.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (40 samples, 1.87%)</title><rect x="51.3" y="1299.0" width="22.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.3" y="1310.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (40 samples, 1.87%)</title><rect x="51.3" y="1283.0" width="22.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.3" y="1294.0">t..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (40 samples, 1.87%)</title><rect x="51.3" y="1267.0" width="22.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.3" y="1278.0">t..</text>
</g>
<g>
<title>scala/LowPriorityImplicits.wrapRefArray (2 samples, 0.09%)</title><rect x="51.9" y="1251.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.&lt;init&gt; (2 samples, 0.09%)</title><rect x="51.9" y="1235.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.&lt;init&gt; (2 samples, 0.09%)</title><rect x="51.9" y="1219.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSeq.&lt;init&gt; (2 samples, 0.09%)</title><rect x="51.9" y="1203.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.&lt;init&gt; (2 samples, 0.09%)</title><rect x="51.9" y="1187.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/generic/GenericCompanion.apply (5 samples, 0.23%)</title><rect x="53.0" y="1251.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (5 samples, 0.23%)</title><rect x="53.0" y="1235.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.0" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (4 samples, 0.19%)</title><rect x="53.5" y="1219.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet$.empty (4 samples, 0.19%)</title><rect x="53.5" y="1203.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.5" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (4 samples, 0.19%)</title><rect x="53.5" y="1187.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (4 samples, 0.19%)</title><rect x="53.5" y="1171.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.5" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSet.&lt;init&gt; (3 samples, 0.14%)</title><rect x="53.5" y="1155.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractIterable.&lt;init&gt; (3 samples, 0.14%)</title><rect x="53.5" y="1139.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.5" y="1150.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (3 samples, 0.14%)</title><rect x="53.5" y="1123.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (3 samples, 0.14%)</title><rect x="53.5" y="1107.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/GenTraversableOnce.$init$ (1 samples, 0.05%)</title><rect x="54.6" y="1091.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.$init$ (1 samples, 0.05%)</title><rect x="55.2" y="1155.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.initialCapacity (1 samples, 0.05%)</title><rect x="55.2" y="1139.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="58.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (10 samples, 0.47%)</title><rect x="55.7" y="1251.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (10 samples, 0.47%)</title><rect x="55.7" y="1235.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (10 samples, 0.47%)</title><rect x="55.7" y="1219.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (10 samples, 0.47%)</title><rect x="55.7" y="1203.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (9 samples, 0.42%)</title><rect x="55.7" y="1187.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (9 samples, 0.42%)</title><rect x="55.7" y="1171.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (9 samples, 0.42%)</title><rect x="55.7" y="1155.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.7" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (9 samples, 0.42%)</title><rect x="55.7" y="1139.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.7" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (9 samples, 0.42%)</title><rect x="55.7" y="1123.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="58.7" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (7 samples, 0.33%)</title><rect x="55.7" y="1107.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.7" y="1118.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (3 samples, 0.14%)</title><rect x="56.8" y="1091.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="59.8" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.09%)</title><rect x="57.4" y="1075.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.4" y="1086.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.09%)</title><rect x="57.4" y="1059.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.4" y="1070.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.09%)</title><rect x="57.4" y="1043.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.4" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="57.4" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.4" y="1038.0"></text>
</g>
<g>
<title>firrtl/ir/IntWidth.hashCode (1 samples, 0.05%)</title><rect x="57.4" y="1011.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.4" y="1022.0"></text>
</g>
<g>
<title>scala/math/BigInt.toInt (1 samples, 0.05%)</title><rect x="57.4" y="995.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.4" y="1006.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt$ (1 samples, 0.05%)</title><rect x="57.4" y="979.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.4" y="990.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt (1 samples, 0.05%)</title><rect x="57.4" y="963.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.4" y="974.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.05%)</title><rect x="57.4" y="947.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="60.4" y="958.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.05%)</title><rect x="57.4" y="931.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="60.4" y="942.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.05%)</title><rect x="57.4" y="915.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.4" y="926.0"></text>
</g>
<g>
<title>java/math/BigInteger.signInt (1 samples, 0.05%)</title><rect x="57.4" y="899.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.4" y="910.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (1 samples, 0.05%)</title><rect x="57.9" y="1027.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.9" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (1 samples, 0.05%)</title><rect x="57.9" y="1011.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.9" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="58.5" y="1091.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.5" y="1102.0"></text>
</g>
<g>
<title>firrtl/PortKind$.hashCode (1 samples, 0.05%)</title><rect x="58.5" y="1075.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.5" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/IntSize$.hashCode (1 samples, 0.05%)</title><rect x="59.1" y="1091.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.1" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (1 samples, 0.05%)</title><rect x="59.6" y="1107.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.6" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (1 samples, 0.05%)</title><rect x="59.6" y="1091.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.6" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.05%)</title><rect x="60.2" y="1107.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.2" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.05%)</title><rect x="60.2" y="1091.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="60.7" y="1187.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (7 samples, 0.33%)</title><rect x="61.3" y="1251.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.3" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (7 samples, 0.33%)</title><rect x="61.3" y="1235.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (7 samples, 0.33%)</title><rect x="61.3" y="1219.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.3" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (7 samples, 0.33%)</title><rect x="61.3" y="1203.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.3" y="1214.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.09%)</title><rect x="61.3" y="1187.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="64.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (4 samples, 0.19%)</title><rect x="62.4" y="1187.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.4" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (4 samples, 0.19%)</title><rect x="62.4" y="1171.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (4 samples, 0.19%)</title><rect x="62.4" y="1155.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.4" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.19%)</title><rect x="62.4" y="1139.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.4" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (3 samples, 0.14%)</title><rect x="62.9" y="1123.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.9" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="63.5" y="1107.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.5" y="1118.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.09%)</title><rect x="63.5" y="1091.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.5" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="64.0" y="1075.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="67.0" y="1086.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="64.0" y="1059.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.0" y="1070.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="64.0" y="1043.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.0" y="1054.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (1 samples, 0.05%)</title><rect x="64.0" y="1027.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.0" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (1 samples, 0.05%)</title><rect x="64.0" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.05%)</title><rect x="64.6" y="1187.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.05%)</title><rect x="64.6" y="1171.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.05%)</title><rect x="64.6" y="1155.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.improve (1 samples, 0.05%)</title><rect x="64.6" y="1139.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve$ (1 samples, 0.05%)</title><rect x="64.6" y="1123.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="67.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve (1 samples, 0.05%)</title><rect x="64.6" y="1107.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (2 samples, 0.09%)</title><rect x="65.1" y="1251.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (2 samples, 0.09%)</title><rect x="65.1" y="1235.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (2 samples, 0.09%)</title><rect x="65.1" y="1219.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (2 samples, 0.09%)</title><rect x="65.1" y="1203.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (2 samples, 0.09%)</title><rect x="65.1" y="1187.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (2 samples, 0.09%)</title><rect x="65.1" y="1171.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (1 samples, 0.05%)</title><rect x="65.7" y="1155.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.7" y="1166.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (1 samples, 0.05%)</title><rect x="65.7" y="1139.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.7" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="65.7" y="1123.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.7" y="1134.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="65.7" y="1107.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.7" y="1118.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="65.7" y="1091.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.7" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="65.7" y="1075.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.7" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="65.7" y="1059.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.7" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="65.7" y="1043.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.7" y="1054.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.05%)</title><rect x="65.7" y="1027.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.7" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="65.7" y="1011.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="68.7" y="1022.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="65.7" y="995.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.7" y="1006.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="65.7" y="979.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.7" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mix (1 samples, 0.05%)</title><rect x="65.7" y="963.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.7" y="974.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.05%)</title><rect x="65.7" y="947.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.7" y="958.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.currentMap (4 samples, 0.19%)</title><rect x="66.2" y="1251.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (4 samples, 0.19%)</title><rect x="66.2" y="1235.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (4 samples, 0.19%)</title><rect x="66.2" y="1219.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.2" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (4 samples, 0.19%)</title><rect x="66.2" y="1203.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (4 samples, 0.19%)</title><rect x="66.2" y="1187.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="66.2" y="1171.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="66.2" y="1155.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="66.2" y="1139.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.2" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="66.2" y="1123.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.2" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="66.2" y="1107.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (3 samples, 0.14%)</title><rect x="66.8" y="1171.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (3 samples, 0.14%)</title><rect x="66.8" y="1155.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (3 samples, 0.14%)</title><rect x="66.8" y="1139.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (3 samples, 0.14%)</title><rect x="66.8" y="1123.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.8" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (3 samples, 0.14%)</title><rect x="66.8" y="1107.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.8" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (3 samples, 0.14%)</title><rect x="66.8" y="1091.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.8" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (3 samples, 0.14%)</title><rect x="66.8" y="1075.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.8" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (1 samples, 0.05%)</title><rect x="68.4" y="1251.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.4" y="1262.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.05%)</title><rect x="68.4" y="1235.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.4" y="1246.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.05%)</title><rect x="68.4" y="1219.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.4" y="1230.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.05%)</title><rect x="68.4" y="1203.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.4" y="1214.0"></text>
</g>
<g>
<title>java/math/BigInteger.firstNonzeroIntNum (1 samples, 0.05%)</title><rect x="68.4" y="1187.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.4" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (5 samples, 0.23%)</title><rect x="69.0" y="1251.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (5 samples, 0.23%)</title><rect x="69.0" y="1235.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.0" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$21886/800006155.apply (5 samples, 0.23%)</title><rect x="69.0" y="1219.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.0" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (5 samples, 0.23%)</title><rect x="69.0" y="1203.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.0" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (5 samples, 0.23%)</title><rect x="69.0" y="1187.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (5 samples, 0.23%)</title><rect x="69.0" y="1171.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (5 samples, 0.23%)</title><rect x="69.0" y="1155.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (5 samples, 0.23%)</title><rect x="69.0" y="1139.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (5 samples, 0.23%)</title><rect x="69.0" y="1123.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (5 samples, 0.23%)</title><rect x="69.0" y="1107.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (5 samples, 0.23%)</title><rect x="69.0" y="1091.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="72.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (5 samples, 0.23%)</title><rect x="69.0" y="1075.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.0" y="1086.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (4 samples, 0.19%)</title><rect x="69.0" y="1059.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.0" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (4 samples, 0.19%)</title><rect x="69.0" y="1043.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.0" y="1054.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (4 samples, 0.19%)</title><rect x="69.0" y="1027.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.0" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (4 samples, 0.19%)</title><rect x="69.0" y="1011.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.0" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.19%)</title><rect x="69.0" y="995.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.0" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (4 samples, 0.19%)</title><rect x="69.0" y="979.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.0" y="990.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="69.0" y="963.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.0" y="974.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.05%)</title><rect x="69.5" y="947.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.5" y="958.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="69.5" y="931.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.5" y="942.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="69.5" y="915.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.5" y="926.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="69.5" y="899.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.5" y="910.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mix (1 samples, 0.05%)</title><rect x="69.5" y="883.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.5" y="894.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (1 samples, 0.05%)</title><rect x="70.1" y="963.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.1" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (1 samples, 0.05%)</title><rect x="70.1" y="947.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.1" y="958.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.05%)</title><rect x="70.6" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.6" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.05%)</title><rect x="70.6" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.6" y="958.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="71.2" y="1059.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="74.2" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="71.2" y="1043.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.2" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="71.2" y="1027.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.2" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.05%)</title><rect x="71.2" y="1011.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.2" y="1022.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (3 samples, 0.14%)</title><rect x="71.7" y="1251.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (3 samples, 0.14%)</title><rect x="71.7" y="1235.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (3 samples, 0.14%)</title><rect x="71.7" y="1219.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (3 samples, 0.14%)</title><rect x="71.7" y="1203.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (3 samples, 0.14%)</title><rect x="71.7" y="1187.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="71.7" y="1171.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="71.7" y="1155.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="71.7" y="1139.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.7" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="71.7" y="1123.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="71.7" y="1107.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.09%)</title><rect x="72.3" y="1171.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.3" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.getValue (1 samples, 0.05%)</title><rect x="73.4" y="1491.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.4" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (1 samples, 0.05%)</title><rect x="73.4" y="1475.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.4" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (1 samples, 0.05%)</title><rect x="73.4" y="1459.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.4" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="73.4" y="1443.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.4" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="73.4" y="1427.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.4" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="73.4" y="1411.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.4" y="1422.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="73.4" y="1395.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="76.4" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.combinationalBump (2 samples, 0.09%)</title><rect x="73.9" y="1491.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.9" y="1502.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.incrementTime (1 samples, 0.05%)</title><rect x="74.5" y="1475.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.5" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner$$Lambda$21878/2041363392.apply$mcV$sp (1 samples, 0.05%)</title><rect x="74.5" y="1459.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.5" y="1470.0"></text>
</g>
<g>
<title>treadle/TreadleTester.poke (1 samples, 0.05%)</title><rect x="75.0" y="1507.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.0" y="1518.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setValue (1 samples, 0.05%)</title><rect x="75.0" y="1491.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.0" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (1 samples, 0.05%)</title><rect x="75.0" y="1475.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.0" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (1 samples, 0.05%)</title><rect x="75.0" y="1459.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.0" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (1 samples, 0.05%)</title><rect x="75.0" y="1443.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.0" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (1 samples, 0.05%)</title><rect x="75.0" y="1427.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.0" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (1 samples, 0.05%)</title><rect x="75.0" y="1411.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.0" y="1422.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="75.0" y="1395.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.0" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="75.0" y="1379.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.0" y="1390.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="75.0" y="1363.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.0" y="1374.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.05%)</title><rect x="75.0" y="1347.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.0" y="1358.0"></text>
</g>
<g>
<title>treadle/TreadleTester.step (107 samples, 5.00%)</title><rect x="75.6" y="1507.0" width="59.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.6" y="1518.0">treadl..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.updateCycleMap (3 samples, 0.14%)</title><rect x="75.6" y="1491.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.6" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (3 samples, 0.14%)</title><rect x="75.6" y="1475.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.6" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (3 samples, 0.14%)</title><rect x="75.6" y="1459.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.6" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (3 samples, 0.14%)</title><rect x="75.6" y="1443.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="78.6" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (3 samples, 0.14%)</title><rect x="75.6" y="1427.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.6" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (2 samples, 0.09%)</title><rect x="75.6" y="1411.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.6" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (2 samples, 0.09%)</title><rect x="75.6" y="1395.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.6" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="76.1" y="1379.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.1" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="76.1" y="1363.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.1" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="76.1" y="1347.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.1" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="76.1" y="1331.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.1" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="76.1" y="1315.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.1" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="76.7" y="1411.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.7" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="76.7" y="1395.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.7" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="76.7" y="1379.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.7" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="76.7" y="1363.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="79.7" y="1374.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="76.7" y="1347.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.7" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="76.7" y="1331.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.7" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="76.7" y="1315.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.7" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.run (104 samples, 4.86%)</title><rect x="77.2" y="1491.0" width="57.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.2" y="1502.0">treadl..</text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach$mVc$sp (104 samples, 4.86%)</title><rect x="77.2" y="1475.0" width="57.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.2" y="1486.0">scala/..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper$$Lambda$21884/538115616.apply$mcVI$sp (104 samples, 4.86%)</title><rect x="77.2" y="1459.0" width="57.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.2" y="1470.0">treadl..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.$anonfun$run$2 (104 samples, 4.86%)</title><rect x="77.2" y="1443.0" width="57.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.2" y="1454.0">treadl..</text>
</g>
<g>
<title>treadle/chronometry/UTC.incrementTime (1 samples, 0.05%)</title><rect x="77.2" y="1427.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.2" y="1438.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.runUntil (1 samples, 0.05%)</title><rect x="77.2" y="1411.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.2" y="1422.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.setTime (1 samples, 0.05%)</title><rect x="77.2" y="1395.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.2" y="1406.0"></text>
</g>
<g>
<title>treadle/TreadleTester$$Lambda$21863/1932728723.apply$mcV$sp (1 samples, 0.05%)</title><rect x="77.2" y="1379.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.2" y="1390.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$2 (1 samples, 0.05%)</title><rect x="77.2" y="1363.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.2" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (10 samples, 0.47%)</title><rect x="77.8" y="1427.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.8" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (10 samples, 0.47%)</title><rect x="77.8" y="1411.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.8" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (10 samples, 0.47%)</title><rect x="77.8" y="1395.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.8" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (10 samples, 0.47%)</title><rect x="77.8" y="1379.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.8" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$21877/517240099.apply$mcV$sp (10 samples, 0.47%)</title><rect x="77.8" y="1363.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.8" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (10 samples, 0.47%)</title><rect x="77.8" y="1347.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.8" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (10 samples, 0.47%)</title><rect x="77.8" y="1331.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.8" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (10 samples, 0.47%)</title><rect x="77.8" y="1315.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.8" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (10 samples, 0.47%)</title><rect x="77.8" y="1299.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.8" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (10 samples, 0.47%)</title><rect x="77.8" y="1283.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.8" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (10 samples, 0.47%)</title><rect x="77.8" y="1267.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.8" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.apply (10 samples, 0.47%)</title><rect x="77.8" y="1251.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.8" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (10 samples, 0.47%)</title><rect x="77.8" y="1235.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.8" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (10 samples, 0.47%)</title><rect x="77.8" y="1219.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.8" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (10 samples, 0.47%)</title><rect x="77.8" y="1203.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.8" y="1214.0"></text>
</g>
<g>
<title>scala/collection/generic/GenericCompanion.apply (1 samples, 0.05%)</title><rect x="77.8" y="1187.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (1 samples, 0.05%)</title><rect x="77.8" y="1171.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (1 samples, 0.05%)</title><rect x="77.8" y="1155.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet$.empty (1 samples, 0.05%)</title><rect x="77.8" y="1139.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="77.8" y="1123.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="77.8" y="1107.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.$init$ (1 samples, 0.05%)</title><rect x="77.8" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet._loadFactor_$eq (1 samples, 0.05%)</title><rect x="77.8" y="1075.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.05%)</title><rect x="78.3" y="1187.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="78.3" y="1171.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="78.3" y="1155.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="78.3" y="1139.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="78.3" y="1123.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="78.3" y="1107.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="78.3" y="1091.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.3" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="78.3" y="1075.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.3" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="78.3" y="1059.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.3" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (1 samples, 0.05%)</title><rect x="78.3" y="1043.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.3" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (1 samples, 0.05%)</title><rect x="78.3" y="1027.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.3" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (5 samples, 0.23%)</title><rect x="78.9" y="1187.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (5 samples, 0.23%)</title><rect x="78.9" y="1171.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (5 samples, 0.23%)</title><rect x="78.9" y="1155.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (5 samples, 0.23%)</title><rect x="78.9" y="1139.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.9" y="1150.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="79.4" y="1123.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="82.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="80.0" y="1123.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="80.0" y="1107.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="80.0" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.0" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="80.0" y="1075.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="83.0" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="80.0" y="1059.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.0" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.05%)</title><rect x="80.0" y="1043.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.0" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.05%)</title><rect x="80.0" y="1027.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.0" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.05%)</title><rect x="80.5" y="1123.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="81.1" y="1123.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="81.1" y="1107.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="81.1" y="1091.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="81.1" y="1075.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.1" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="81.1" y="1059.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.1" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="81.1" y="1043.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="84.1" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.currentMap (1 samples, 0.05%)</title><rect x="81.6" y="1187.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.05%)</title><rect x="81.6" y="1171.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="81.6" y="1155.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="81.6" y="1139.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="81.6" y="1123.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="81.6" y="1107.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="81.6" y="1091.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="81.6" y="1075.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="84.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="81.6" y="1059.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.6" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="81.6" y="1043.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.6" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="81.6" y="1027.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.6" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="81.6" y="1011.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.6" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.05%)</title><rect x="81.6" y="995.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.6" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (1 samples, 0.05%)</title><rect x="82.2" y="1187.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.05%)</title><rect x="82.2" y="1171.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.2" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$21886/800006155.apply (1 samples, 0.05%)</title><rect x="82.2" y="1155.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.2" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (1 samples, 0.05%)</title><rect x="82.2" y="1139.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.2" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (1 samples, 0.05%)</title><rect x="82.2" y="1123.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (1 samples, 0.05%)</title><rect x="82.2" y="1107.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (1 samples, 0.05%)</title><rect x="82.2" y="1091.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (1 samples, 0.05%)</title><rect x="82.2" y="1075.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (1 samples, 0.05%)</title><rect x="82.2" y="1059.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (1 samples, 0.05%)</title><rect x="82.2" y="1043.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (1 samples, 0.05%)</title><rect x="82.2" y="1027.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.2" y="1038.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (1 samples, 0.05%)</title><rect x="82.8" y="1187.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (1 samples, 0.05%)</title><rect x="82.8" y="1171.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="82.8" y="1155.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="82.8" y="1139.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="82.8" y="1123.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="82.8" y="1107.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="82.8" y="1091.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="82.8" y="1075.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="82.8" y="1059.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.8" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="82.8" y="1043.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.8" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="82.8" y="1027.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.8" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="82.8" y="1011.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="85.8" y="1022.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.raiseClock$1 (93 samples, 4.34%)</title><rect x="83.3" y="1427.0" width="51.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.3" y="1438.0">tread..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (92 samples, 4.30%)</title><rect x="83.3" y="1411.0" width="50.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.3" y="1422.0">tread..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (92 samples, 4.30%)</title><rect x="83.3" y="1395.0" width="50.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.3" y="1406.0">tread..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (92 samples, 4.30%)</title><rect x="83.3" y="1379.0" width="50.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.3" y="1390.0">tread..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (92 samples, 4.30%)</title><rect x="83.3" y="1363.0" width="50.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.3" y="1374.0">tread..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.apply (1 samples, 0.05%)</title><rect x="83.3" y="1347.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.3" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply$ (1 samples, 0.05%)</title><rect x="83.3" y="1331.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.3" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner$$Lambda$21878/2041363392.apply$mcV$sp (13 samples, 0.61%)</title><rect x="83.9" y="1347.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.9" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.$anonfun$setLeanMode$2 (13 samples, 0.61%)</title><rect x="83.9" y="1331.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.9" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.runFull (13 samples, 0.61%)</title><rect x="83.9" y="1315.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.9" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$21877/517240099.apply$mcV$sp (13 samples, 0.61%)</title><rect x="83.9" y="1299.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.9" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (13 samples, 0.61%)</title><rect x="83.9" y="1283.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.9" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (13 samples, 0.61%)</title><rect x="83.9" y="1267.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.9" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (13 samples, 0.61%)</title><rect x="83.9" y="1251.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (13 samples, 0.61%)</title><rect x="83.9" y="1235.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (13 samples, 0.61%)</title><rect x="83.9" y="1219.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (13 samples, 0.61%)</title><rect x="83.9" y="1203.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.9" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.apply (13 samples, 0.61%)</title><rect x="83.9" y="1187.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.9" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (13 samples, 0.61%)</title><rect x="83.9" y="1171.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.9" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (13 samples, 0.61%)</title><rect x="83.9" y="1155.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.9" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (13 samples, 0.61%)</title><rect x="83.9" y="1139.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="83.9" y="1123.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="83.9" y="1107.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.05%)</title><rect x="83.9" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.9" y="1102.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="83.9" y="1075.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/generic/GenericCompanion.apply (6 samples, 0.28%)</title><rect x="84.4" y="1123.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableSetFactory.newBuilder (2 samples, 0.09%)</title><rect x="84.4" y="1107.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (2 samples, 0.09%)</title><rect x="84.4" y="1091.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (2 samples, 0.09%)</title><rect x="84.4" y="1075.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.4" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet$.empty (2 samples, 0.09%)</title><rect x="84.4" y="1059.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (2 samples, 0.09%)</title><rect x="84.4" y="1043.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.4" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (2 samples, 0.09%)</title><rect x="84.4" y="1027.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.4" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="84.4" y="1011.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.4" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="84.4" y="995.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.4" y="1006.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="84.4" y="979.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.4" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.$init$ (1 samples, 0.05%)</title><rect x="85.0" y="1011.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.initialCapacity (1 samples, 0.05%)</title><rect x="85.0" y="995.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.0" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.capacity (1 samples, 0.05%)</title><rect x="85.0" y="979.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.0" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.capacity$ (1 samples, 0.05%)</title><rect x="85.0" y="963.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="88.0" y="974.0"></text>
</g>
<g>
<title>scala/collection/mutable/GrowingBuilder.$plus$plus$eq (3 samples, 0.14%)</title><rect x="85.5" y="1107.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (3 samples, 0.14%)</title><rect x="85.5" y="1091.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="88.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (3 samples, 0.14%)</title><rect x="85.5" y="1075.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.foreach (3 samples, 0.14%)</title><rect x="85.5" y="1059.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="88.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach$ (3 samples, 0.14%)</title><rect x="85.5" y="1043.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="88.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach (3 samples, 0.14%)</title><rect x="85.5" y="1027.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="88.5" y="1038.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable$$Lambda$3497/63942083.apply (3 samples, 0.14%)</title><rect x="85.5" y="1011.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.5" y="1022.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$anonfun$$plus$plus$eq$1 (3 samples, 0.14%)</title><rect x="85.5" y="995.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.5" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/GrowingBuilder.$plus$eq (3 samples, 0.14%)</title><rect x="85.5" y="979.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="88.5" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/GrowingBuilder.$plus$eq (3 samples, 0.14%)</title><rect x="85.5" y="963.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="88.5" y="974.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$plus$eq (3 samples, 0.14%)</title><rect x="85.5" y="947.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="88.5" y="958.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$plus$eq (3 samples, 0.14%)</title><rect x="85.5" y="931.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="88.5" y="942.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (3 samples, 0.14%)</title><rect x="85.5" y="915.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.5" y="926.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (3 samples, 0.14%)</title><rect x="85.5" y="899.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.5" y="910.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (3 samples, 0.14%)</title><rect x="85.5" y="883.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="88.5" y="894.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (3 samples, 0.14%)</title><rect x="85.5" y="867.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.5" y="878.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (3 samples, 0.14%)</title><rect x="85.5" y="851.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.5" y="862.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (3 samples, 0.14%)</title><rect x="85.5" y="835.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.5" y="846.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (3 samples, 0.14%)</title><rect x="85.5" y="819.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.5" y="830.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (3 samples, 0.14%)</title><rect x="85.5" y="803.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.5" y="814.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (3 samples, 0.14%)</title><rect x="85.5" y="787.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="88.5" y="798.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (3 samples, 0.14%)</title><rect x="85.5" y="771.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.5" y="782.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.14%)</title><rect x="85.5" y="755.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.5" y="766.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="86.6" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="89.6" y="750.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="86.6" y="723.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="89.6" y="734.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.05%)</title><rect x="86.6" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.6" y="718.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="86.6" y="691.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.6" y="702.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="86.6" y="675.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.6" y="686.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="86.6" y="659.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.6" y="670.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mix (1 samples, 0.05%)</title><rect x="86.6" y="643.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="89.6" y="654.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (1 samples, 0.05%)</title><rect x="87.2" y="1107.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (1 samples, 0.05%)</title><rect x="87.2" y="1091.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet$.empty (1 samples, 0.05%)</title><rect x="87.2" y="1075.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="87.2" y="1059.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="87.2" y="1043.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.initWithContents (1 samples, 0.05%)</title><rect x="87.2" y="1027.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.initWithContents$ (1 samples, 0.05%)</title><rect x="87.2" y="1011.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (4 samples, 0.19%)</title><rect x="87.7" y="1123.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (4 samples, 0.19%)</title><rect x="87.7" y="1107.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="90.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (4 samples, 0.19%)</title><rect x="87.7" y="1091.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (4 samples, 0.19%)</title><rect x="87.7" y="1075.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.7" y="1086.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.09%)</title><rect x="88.3" y="1059.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="91.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (1 samples, 0.05%)</title><rect x="89.4" y="1059.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (1 samples, 0.05%)</title><rect x="89.4" y="1043.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.4" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="89.4" y="1027.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="92.4" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="89.4" y="1011.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.4" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="89.4" y="995.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.4" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="89.4" y="979.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.4" y="990.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="89.4" y="963.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="92.4" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (1 samples, 0.05%)</title><rect x="89.4" y="947.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.4" y="958.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (1 samples, 0.05%)</title><rect x="89.4" y="931.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.4" y="942.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.currentMap (1 samples, 0.05%)</title><rect x="89.9" y="1123.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="92.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.05%)</title><rect x="89.9" y="1107.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="89.9" y="1091.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="89.9" y="1075.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="89.9" y="1059.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="89.9" y="1043.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="92.9" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="89.9" y="1027.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.9" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="89.9" y="1011.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.9" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="89.9" y="995.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="92.9" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (1 samples, 0.05%)</title><rect x="90.5" y="1123.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (1 samples, 0.05%)</title><rect x="90.5" y="1107.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="90.5" y="1091.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="90.5" y="1075.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="93.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="90.5" y="1059.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="90.5" y="1043.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="90.5" y="1027.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.5" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="90.5" y="1011.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.5" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="90.5" y="995.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.5" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="90.5" y="979.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.5" y="990.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="90.5" y="963.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="90.5" y="947.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.5" y="958.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$21877/517240099.apply$mcV$sp (78 samples, 3.64%)</title><rect x="91.0" y="1347.0" width="43.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.0" y="1358.0">trea..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (78 samples, 3.64%)</title><rect x="91.0" y="1331.0" width="43.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.0" y="1342.0">trea..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (78 samples, 3.64%)</title><rect x="91.0" y="1315.0" width="43.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="94.0" y="1326.0">trea..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.treadle$executable$DataStore$AssignInt$$$outer (4 samples, 0.19%)</title><rect x="91.0" y="1299.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.0" y="1310.0"></text>
</g>
<g>
<title>SafepointBlob (1 samples, 0.05%)</title><rect x="91.6" y="1283.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="94.6" y="1294.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="92.1" y="1283.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="95.1" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/MuxInts.apply (1 samples, 0.05%)</title><rect x="92.7" y="1283.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="95.7" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (71 samples, 3.32%)</title><rect x="93.2" y="1299.0" width="39.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.2" y="1310.0">tre..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (70 samples, 3.27%)</title><rect x="93.8" y="1283.0" width="38.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.8" y="1294.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (70 samples, 3.27%)</title><rect x="93.8" y="1267.0" width="38.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.8" y="1278.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (70 samples, 3.27%)</title><rect x="93.8" y="1251.0" width="38.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.8" y="1262.0">sca..</text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (1 samples, 0.05%)</title><rect x="93.8" y="1235.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.8" y="1246.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.size$ (1 samples, 0.05%)</title><rect x="93.8" y="1219.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.8" y="1230.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.size (1 samples, 0.05%)</title><rect x="93.8" y="1203.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.8" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.length (1 samples, 0.05%)</title><rect x="93.8" y="1187.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="96.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.length$ (1 samples, 0.05%)</title><rect x="93.8" y="1171.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.8" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.apply (69 samples, 3.22%)</title><rect x="94.3" y="1235.0" width="38.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.3" y="1246.0">tre..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (69 samples, 3.22%)</title><rect x="94.3" y="1219.0" width="38.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.3" y="1230.0">tre..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (69 samples, 3.22%)</title><rect x="94.3" y="1203.0" width="38.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.3" y="1214.0">tre..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (69 samples, 3.22%)</title><rect x="94.3" y="1187.0" width="38.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.3" y="1198.0">tre..</text>
</g>
<g>
<title>scala/LowPriorityImplicits.wrapRefArray (5 samples, 0.23%)</title><rect x="94.9" y="1171.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.&lt;init&gt; (5 samples, 0.23%)</title><rect x="94.9" y="1155.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.&lt;init&gt; (5 samples, 0.23%)</title><rect x="94.9" y="1139.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="97.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSeq.&lt;init&gt; (4 samples, 0.19%)</title><rect x="95.4" y="1123.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.&lt;init&gt; (4 samples, 0.19%)</title><rect x="95.4" y="1107.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="98.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="97.1" y="1091.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/generic/GenericCompanion.apply (10 samples, 0.47%)</title><rect x="97.6" y="1171.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableSetFactory.newBuilder (3 samples, 0.14%)</title><rect x="98.2" y="1155.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (3 samples, 0.14%)</title><rect x="98.2" y="1139.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (3 samples, 0.14%)</title><rect x="98.2" y="1123.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet$.empty (3 samples, 0.14%)</title><rect x="98.2" y="1107.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (3 samples, 0.14%)</title><rect x="98.2" y="1091.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="101.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (3 samples, 0.14%)</title><rect x="98.2" y="1075.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="98.7" y="1059.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.$init$ (1 samples, 0.05%)</title><rect x="99.3" y="1059.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.initialCapacity (1 samples, 0.05%)</title><rect x="99.3" y="1043.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.3" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (6 samples, 0.28%)</title><rect x="99.8" y="1155.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (5 samples, 0.23%)</title><rect x="100.4" y="1139.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="103.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet$.empty (5 samples, 0.23%)</title><rect x="100.4" y="1123.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (4 samples, 0.19%)</title><rect x="100.9" y="1107.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (4 samples, 0.19%)</title><rect x="100.9" y="1091.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSet.&lt;init&gt; (2 samples, 0.09%)</title><rect x="100.9" y="1075.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="103.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="101.5" y="1059.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="101.5" y="1043.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="101.5" y="1027.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.5" y="1038.0"></text>
</g>
<g>
<title>scala/collection/Parallelizable.$init$ (1 samples, 0.05%)</title><rect x="101.5" y="1011.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.5" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.initWithContents (2 samples, 0.09%)</title><rect x="102.0" y="1075.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.0" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.initWithContents$ (2 samples, 0.09%)</title><rect x="102.0" y="1059.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="105.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (11 samples, 0.51%)</title><rect x="103.1" y="1171.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (11 samples, 0.51%)</title><rect x="103.1" y="1155.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (11 samples, 0.51%)</title><rect x="103.1" y="1139.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (11 samples, 0.51%)</title><rect x="103.1" y="1123.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (6 samples, 0.28%)</title><rect x="103.1" y="1107.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (6 samples, 0.28%)</title><rect x="103.1" y="1091.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (6 samples, 0.28%)</title><rect x="103.1" y="1075.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="106.1" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (6 samples, 0.28%)</title><rect x="103.1" y="1059.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="106.1" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="103.1" y="1043.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.1" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (5 samples, 0.23%)</title><rect x="103.7" y="1043.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.7" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.19%)</title><rect x="103.7" y="1027.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.7" y="1038.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.09%)</title><rect x="104.2" y="1011.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="107.2" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="104.8" y="995.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="107.8" y="1006.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="104.8" y="979.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="107.8" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="104.8" y="963.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="107.8" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="104.8" y="947.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="107.8" y="958.0"></text>
</g>
<g>
<title>firrtl/ir/IntWidth.hashCode (1 samples, 0.05%)</title><rect x="104.8" y="931.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="107.8" y="942.0"></text>
</g>
<g>
<title>scala/math/BigInt.toInt (1 samples, 0.05%)</title><rect x="104.8" y="915.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="107.8" y="926.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt$ (1 samples, 0.05%)</title><rect x="104.8" y="899.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.8" y="910.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt (1 samples, 0.05%)</title><rect x="104.8" y="883.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="107.8" y="894.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.05%)</title><rect x="104.8" y="867.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.8" y="878.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.05%)</title><rect x="104.8" y="851.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.8" y="862.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.05%)</title><rect x="104.8" y="835.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="107.8" y="846.0"></text>
</g>
<g>
<title>java/math/BigInteger.signInt (1 samples, 0.05%)</title><rect x="104.8" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.8" y="830.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="105.3" y="1011.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.3" y="1022.0"></text>
</g>
<g>
<title>firrtl/NodeKind$.hashCode (1 samples, 0.05%)</title><rect x="105.3" y="995.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.3" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.05%)</title><rect x="105.9" y="1027.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="108.9" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (5 samples, 0.23%)</title><rect x="106.5" y="1107.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (5 samples, 0.23%)</title><rect x="106.5" y="1091.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (5 samples, 0.23%)</title><rect x="106.5" y="1075.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="109.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (5 samples, 0.23%)</title><rect x="106.5" y="1059.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="109.5" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (5 samples, 0.23%)</title><rect x="106.5" y="1043.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.5" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (5 samples, 0.23%)</title><rect x="106.5" y="1027.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.5" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsCharObject (1 samples, 0.05%)</title><rect x="106.5" y="1011.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="109.5" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (4 samples, 0.19%)</title><rect x="107.0" y="1011.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (24 samples, 1.12%)</title><rect x="109.2" y="1171.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (23 samples, 1.07%)</title><rect x="109.8" y="1155.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (23 samples, 1.07%)</title><rect x="109.8" y="1139.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="112.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (23 samples, 1.07%)</title><rect x="109.8" y="1123.0" width="12.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="112.8" y="1134.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.23%)</title><rect x="111.4" y="1107.0" width="2.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="114.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (6 samples, 0.28%)</title><rect x="114.2" y="1107.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (6 samples, 0.28%)</title><rect x="114.2" y="1091.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (6 samples, 0.28%)</title><rect x="114.2" y="1075.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.2" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (6 samples, 0.28%)</title><rect x="114.2" y="1059.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.2" y="1070.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (6 samples, 0.28%)</title><rect x="114.2" y="1043.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="117.2" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (5 samples, 0.23%)</title><rect x="114.2" y="1027.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.2" y="1038.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.09%)</title><rect x="115.3" y="1011.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.3" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.09%)</title><rect x="115.3" y="995.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.3" y="1006.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.09%)</title><rect x="115.3" y="979.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.3" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.09%)</title><rect x="115.3" y="963.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.3" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="115.3" y="947.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.3" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (1 samples, 0.05%)</title><rect x="115.8" y="947.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.8" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (1 samples, 0.05%)</title><rect x="115.8" y="931.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.8" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="116.4" y="1011.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.4" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (1 samples, 0.05%)</title><rect x="116.9" y="1027.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="119.9" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (1 samples, 0.05%)</title><rect x="116.9" y="1011.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.9" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (3 samples, 0.14%)</title><rect x="117.5" y="1107.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="120.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (3 samples, 0.14%)</title><rect x="117.5" y="1091.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (2 samples, 0.09%)</title><rect x="118.0" y="1075.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.0" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (2 samples, 0.09%)</title><rect x="118.0" y="1059.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (2 samples, 0.09%)</title><rect x="118.0" y="1043.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.0" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="118.0" y="1027.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="121.0" y="1038.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (2 samples, 0.09%)</title><rect x="118.0" y="1011.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="121.0" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="118.0" y="995.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.0" y="1006.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.05%)</title><rect x="118.6" y="979.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.6" y="990.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="118.6" y="963.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="121.6" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="118.6" y="947.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.6" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="118.6" y="931.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="121.6" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="118.6" y="915.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.6" y="926.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (6 samples, 0.28%)</title><rect x="119.1" y="1107.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (5 samples, 0.23%)</title><rect x="119.7" y="1091.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="122.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (5 samples, 0.23%)</title><rect x="119.7" y="1075.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="122.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (5 samples, 0.23%)</title><rect x="119.7" y="1059.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.7" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (5 samples, 0.23%)</title><rect x="119.7" y="1043.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="122.7" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (5 samples, 0.23%)</title><rect x="119.7" y="1027.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.7" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.09%)</title><rect x="120.8" y="1011.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.8" y="1022.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.equals (1 samples, 0.05%)</title><rect x="121.9" y="1011.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.9" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (4 samples, 0.19%)</title><rect x="122.4" y="1171.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (4 samples, 0.19%)</title><rect x="122.4" y="1155.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="125.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (4 samples, 0.19%)</title><rect x="122.4" y="1139.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (4 samples, 0.19%)</title><rect x="122.4" y="1123.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (4 samples, 0.19%)</title><rect x="122.4" y="1107.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (4 samples, 0.19%)</title><rect x="122.4" y="1091.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (4 samples, 0.19%)</title><rect x="122.4" y="1075.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.4" y="1086.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (3 samples, 0.14%)</title><rect x="122.4" y="1059.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.4" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (3 samples, 0.14%)</title><rect x="122.4" y="1043.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.4" y="1054.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (3 samples, 0.14%)</title><rect x="122.4" y="1027.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="125.4" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (3 samples, 0.14%)</title><rect x="122.4" y="1011.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="125.4" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.14%)</title><rect x="122.4" y="995.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.4" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="122.4" y="979.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.4" y="990.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (2 samples, 0.09%)</title><rect x="123.0" y="979.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.0" y="990.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="123.0" y="963.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="126.0" y="974.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.05%)</title><rect x="123.0" y="947.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="126.0" y="958.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="123.5" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.5" y="958.0"></text>
</g>
<g>
<title>firrtl/RegKind$.hashCode (1 samples, 0.05%)</title><rect x="123.5" y="931.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="126.5" y="942.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="124.1" y="1059.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="127.1" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="124.1" y="1043.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.1" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="124.1" y="1027.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.1" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.05%)</title><rect x="124.1" y="1011.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="127.1" y="1022.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.currentMap (2 samples, 0.09%)</title><rect x="124.6" y="1171.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="127.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (2 samples, 0.09%)</title><rect x="124.6" y="1155.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.09%)</title><rect x="124.6" y="1139.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.09%)</title><rect x="124.6" y="1123.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.09%)</title><rect x="124.6" y="1107.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="124.6" y="1091.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="124.6" y="1075.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="124.6" y="1059.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.6" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="124.6" y="1043.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.6" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="124.6" y="1027.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="127.6" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="125.2" y="1091.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="125.2" y="1075.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="125.2" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="125.2" y="1043.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.2" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="125.2" y="1027.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.2" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="125.2" y="1011.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.2" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="125.2" y="995.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.2" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (2 samples, 0.09%)</title><rect x="125.7" y="1171.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.7" y="1182.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.05%)</title><rect x="126.3" y="1155.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.3" y="1166.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.05%)</title><rect x="126.3" y="1139.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.3" y="1150.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.05%)</title><rect x="126.3" y="1123.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.3" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (7 samples, 0.33%)</title><rect x="126.8" y="1171.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (7 samples, 0.33%)</title><rect x="126.8" y="1155.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.8" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$21886/800006155.apply (7 samples, 0.33%)</title><rect x="126.8" y="1139.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.8" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (7 samples, 0.33%)</title><rect x="126.8" y="1123.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.8" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (7 samples, 0.33%)</title><rect x="126.8" y="1107.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (7 samples, 0.33%)</title><rect x="126.8" y="1091.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (7 samples, 0.33%)</title><rect x="126.8" y="1075.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (7 samples, 0.33%)</title><rect x="126.8" y="1059.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.8" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (7 samples, 0.33%)</title><rect x="126.8" y="1043.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.8" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (6 samples, 0.28%)</title><rect x="126.8" y="1027.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="129.8" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (6 samples, 0.28%)</title><rect x="126.8" y="1011.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.8" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (6 samples, 0.28%)</title><rect x="126.8" y="995.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.8" y="1006.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (6 samples, 0.28%)</title><rect x="126.8" y="979.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.8" y="990.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (6 samples, 0.28%)</title><rect x="126.8" y="963.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.8" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (6 samples, 0.28%)</title><rect x="126.8" y="947.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.8" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (6 samples, 0.28%)</title><rect x="126.8" y="931.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="129.8" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (6 samples, 0.28%)</title><rect x="126.8" y="915.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="129.8" y="926.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (5 samples, 0.23%)</title><rect x="127.4" y="899.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.4" y="910.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.14%)</title><rect x="127.4" y="883.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.4" y="894.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.09%)</title><rect x="127.9" y="867.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="130.9" y="878.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.09%)</title><rect x="127.9" y="851.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.9" y="862.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.09%)</title><rect x="127.9" y="835.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="130.9" y="846.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.09%)</title><rect x="127.9" y="819.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.9" y="830.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="127.9" y="803.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="130.9" y="814.0"></text>
</g>
<g>
<title>firrtl/ir/IntWidth.hashCode (1 samples, 0.05%)</title><rect x="127.9" y="787.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.9" y="798.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mix (1 samples, 0.05%)</title><rect x="128.5" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.5" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.05%)</title><rect x="128.5" y="787.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.5" y="798.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (2 samples, 0.09%)</title><rect x="129.0" y="883.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.05%)</title><rect x="129.6" y="867.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.6" y="878.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.elemToEntry (1 samples, 0.05%)</title><rect x="130.1" y="1027.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.1" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.elemToEntry$ (1 samples, 0.05%)</title><rect x="130.1" y="1011.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="133.1" y="1022.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (3 samples, 0.14%)</title><rect x="130.7" y="1171.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (3 samples, 0.14%)</title><rect x="130.7" y="1155.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (3 samples, 0.14%)</title><rect x="130.7" y="1139.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (3 samples, 0.14%)</title><rect x="130.7" y="1123.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (3 samples, 0.14%)</title><rect x="130.7" y="1107.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="130.7" y="1091.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="131.3" y="1091.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="131.3" y="1075.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="131.3" y="1059.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="134.3" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="131.3" y="1043.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="131.3" y="1027.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.3" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="131.8" y="1091.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="131.8" y="1075.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="131.8" y="1059.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.8" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="131.8" y="1043.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.8" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="131.8" y="1027.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.8" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="131.8" y="1011.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.8" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="131.8" y="995.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.8" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$21831/1518288657.apply$mcI$sp (3 samples, 0.14%)</title><rect x="132.4" y="1299.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.4" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$1 (3 samples, 0.14%)</title><rect x="132.4" y="1283.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.4" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/GtInts.apply (1 samples, 0.05%)</title><rect x="132.4" y="1267.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.4" y="1278.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="132.4" y="1251.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="135.4" y="1262.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="132.4" y="1235.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="135.4" y="1246.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="132.4" y="1219.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="135.4" y="1230.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="132.4" y="1203.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="135.4" y="1214.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.05%)</title><rect x="132.4" y="1187.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="135.4" y="1198.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.05%)</title><rect x="132.4" y="1171.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="135.4" y="1182.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*) (1 samples, 0.05%)</title><rect x="132.4" y="1155.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="135.4" y="1166.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*) (1 samples, 0.05%)</title><rect x="132.4" y="1139.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="135.4" y="1150.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.05%)</title><rect x="132.4" y="1123.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="135.4" y="1134.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.05%)</title><rect x="132.4" y="1107.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="135.4" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/MuxInts.apply (2 samples, 0.09%)</title><rect x="132.9" y="1267.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="135.9" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$21828/1984914550.apply$mcI$sp (1 samples, 0.05%)</title><rect x="133.5" y="1251.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.5" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$188 (1 samples, 0.05%)</title><rect x="133.5" y="1235.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.5" y="1246.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.05%)</title><rect x="133.5" y="1219.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.5" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setIntValue (1 samples, 0.05%)</title><rect x="134.0" y="1411.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="137.0" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (1 samples, 0.05%)</title><rect x="134.0" y="1395.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="137.0" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (1 samples, 0.05%)</title><rect x="134.0" y="1379.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.0" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (1 samples, 0.05%)</title><rect x="134.0" y="1363.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="137.0" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (1 samples, 0.05%)</title><rect x="134.0" y="1347.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.0" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (1 samples, 0.05%)</title><rect x="134.0" y="1331.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.0" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="134.0" y="1315.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.0" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="134.0" y="1299.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="137.0" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="134.0" y="1283.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="137.0" y="1294.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.05%)</title><rect x="134.0" y="1267.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.0" y="1278.0"></text>
</g>
<g>
<title>treadle/TreadleTester$.apply (20 samples, 0.93%)</title><rect x="134.6" y="1699.0" width="11.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.6" y="1710.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$.transform (20 samples, 0.93%)</title><rect x="134.6" y="1683.0" width="11.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="137.6" y="1694.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (20 samples, 0.93%)</title><rect x="134.6" y="1667.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.6" y="1678.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (20 samples, 0.93%)</title><rect x="134.6" y="1651.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.6" y="1662.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (20 samples, 0.93%)</title><rect x="134.6" y="1635.0" width="11.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.6" y="1646.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$$$Lambda$21007/882178822.apply (20 samples, 0.93%)</title><rect x="134.6" y="1619.0" width="11.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="137.6" y="1630.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$.$anonfun$transform$2 (20 samples, 0.93%)</title><rect x="134.6" y="1603.0" width="11.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="137.6" y="1614.0"></text>
</g>
<g>
<title>treadle/stage/phases/CreateTester$.transform (14 samples, 0.65%)</title><rect x="134.6" y="1587.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.6" y="1598.0"></text>
</g>
<g>
<title>treadle/stage/phases/CreateTester$.transform (14 samples, 0.65%)</title><rect x="134.6" y="1571.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.6" y="1582.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.05%)</title><rect x="134.6" y="1555.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="137.6" y="1566.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.05%)</title><rect x="134.6" y="1539.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="137.6" y="1550.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.05%)</title><rect x="134.6" y="1523.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="137.6" y="1534.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.05%)</title><rect x="134.6" y="1507.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="137.6" y="1518.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.05%)</title><rect x="134.6" y="1491.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="137.6" y="1502.0"></text>
</g>
<g>
<title>Verifier::verify(instanceKlassHandle, Verifier::Mode, bool, Thread*) (1 samples, 0.05%)</title><rect x="134.6" y="1475.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="137.6" y="1486.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.05%)</title><rect x="134.6" y="1459.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="137.6" y="1470.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle, Thread*) (1 samples, 0.05%)</title><rect x="134.6" y="1443.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="137.6" y="1454.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle, StackMapTable*, Thread*) (1 samples, 0.05%)</title><rect x="134.6" y="1427.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="137.6" y="1438.0"></text>
</g>
<g>
<title>ClassVerifier::cp_ref_index_to_type(int, constantPoolHandle, Thread*) (1 samples, 0.05%)</title><rect x="134.6" y="1411.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="137.6" y="1422.0"></text>
</g>
<g>
<title>treadle/TreadleTester.&lt;init&gt; (13 samples, 0.61%)</title><rect x="135.1" y="1555.0" width="7.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.1" y="1566.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="135.1" y="1539.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.1" y="1550.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="135.1" y="1523.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.1" y="1534.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="135.1" y="1507.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.1" y="1518.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="135.1" y="1491.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.1" y="1502.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="135.1" y="1475.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.1" y="1486.0"></text>
</g>
<g>
<title>xsbt/boot/BootFilteredLoader.loadClass (1 samples, 0.05%)</title><rect x="135.1" y="1459.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.1" y="1470.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="135.1" y="1443.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.1" y="1454.0"></text>
</g>
<g>
<title>sun/misc/Launcher$AppClassLoader.loadClass (1 samples, 0.05%)</title><rect x="135.1" y="1427.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.1" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="135.1" y="1411.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="135.1" y="1395.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.1" y="1406.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="135.1" y="1379.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.1" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassNotFoundException.&lt;init&gt; (1 samples, 0.05%)</title><rect x="135.1" y="1363.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.1" y="1374.0"></text>
</g>
<g>
<title>java/lang/ReflectiveOperationException.&lt;init&gt; (1 samples, 0.05%)</title><rect x="135.1" y="1347.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.05%)</title><rect x="135.1" y="1331.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.1" y="1342.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="135.1" y="1315.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.1" y="1326.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.05%)</title><rect x="135.1" y="1299.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.1" y="1310.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.05%)</title><rect x="135.1" y="1283.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.1" y="1294.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.05%)</title><rect x="135.1" y="1267.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="138.1" y="1278.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (1 samples, 0.05%)</title><rect x="135.1" y="1251.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="138.1" y="1262.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.setTime (1 samples, 0.05%)</title><rect x="135.7" y="1539.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.7" y="1550.0"></text>
</g>
<g>
<title>treadle/TreadleTester$$Lambda$21863/1932728723.apply$mcV$sp (1 samples, 0.05%)</title><rect x="135.7" y="1523.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.7" y="1534.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$2 (1 samples, 0.05%)</title><rect x="135.7" y="1507.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.7" y="1518.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="135.7" y="1491.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.7" y="1502.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="135.7" y="1475.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="138.7" y="1486.0"></text>
</g>
<g>
<title>sbt/internal/ManagedClassLoader.findClass (1 samples, 0.05%)</title><rect x="135.7" y="1459.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.7" y="1470.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="135.7" y="1443.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.7" y="1454.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="135.7" y="1427.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.7" y="1438.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="135.7" y="1411.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.7" y="1422.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="135.7" y="1395.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.7" y="1406.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.access$100 (1 samples, 0.05%)</title><rect x="135.7" y="1379.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.7" y="1390.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="135.7" y="1363.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.7" y="1374.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="135.7" y="1347.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.7" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="135.7" y="1331.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="138.7" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="135.7" y="1315.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.7" y="1326.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="135.7" y="1299.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="138.7" y="1310.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="135.7" y="1283.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="138.7" y="1294.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, unsigned char, Thread*) (1 samples, 0.05%)</title><rect x="135.7" y="1267.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="138.7" y="1278.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, bool, Thread*) (1 samples, 0.05%)</title><rect x="135.7" y="1251.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="138.7" y="1262.0"></text>
</g>
<g>
<title>ClassFileParser::parseClassFile(Symbol*, ClassLoaderData*, Handle, KlassHandle, GrowableArray&lt;Handle&gt;*, TempNewSymbol&amp;, bool, Thread*) (1 samples, 0.05%)</title><rect x="135.7" y="1235.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="138.7" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(Thread*) (1 samples, 0.05%)</title><rect x="135.7" y="1219.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="138.7" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(int, Thread*) (1 samples, 0.05%)</title><rect x="135.7" y="1203.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="138.7" y="1214.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.05%)</title><rect x="135.7" y="1187.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="138.7" y="1198.0"></text>
</g>
<g>
<title>Atomic::inc(short volatile*) (1 samples, 0.05%)</title><rect x="135.7" y="1171.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="138.7" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$.apply (11 samples, 0.51%)</title><rect x="136.2" y="1539.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="139.2" y="1550.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.05%)</title><rect x="136.2" y="1523.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="139.2" y="1534.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.05%)</title><rect x="136.2" y="1507.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="139.2" y="1518.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.05%)</title><rect x="136.2" y="1491.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="139.2" y="1502.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.05%)</title><rect x="136.2" y="1475.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="139.2" y="1486.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.05%)</title><rect x="136.2" y="1459.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="139.2" y="1470.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.05%)</title><rect x="136.2" y="1443.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="139.2" y="1454.0"></text>
</g>
<g>
<title>VM::ClassPrepare(_jvmtiEnv*, JNIEnv_*, _jobject*, _jclass*) (1 samples, 0.05%)</title><rect x="136.2" y="1427.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="139.2" y="1438.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods (1 samples, 0.05%)</title><rect x="136.2" y="1411.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="139.2" y="1422.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (1 samples, 0.05%)</title><rect x="136.2" y="1395.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="139.2" y="1406.0"></text>
</g>
<g>
<title>Method::jmethod_id() (1 samples, 0.05%)</title><rect x="136.2" y="1379.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="139.2" y="1390.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(instanceKlassHandle, methodHandle) (1 samples, 0.05%)</title><rect x="136.2" y="1363.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="139.2" y="1374.0"></text>
</g>
<g>
<title>Method::make_jmethod_id(ClassLoaderData*, Method*) (1 samples, 0.05%)</title><rect x="136.2" y="1347.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="139.2" y="1358.0"></text>
</g>
<g>
<title>JNIMethodBlock::add_method(Method*) (1 samples, 0.05%)</title><rect x="136.2" y="1331.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="139.2" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.09%)</title><rect x="136.8" y="1523.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="139.8" y="1534.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.09%)</title><rect x="136.8" y="1507.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="139.8" y="1518.0"></text>
</g>
<g>
<title>sbt/internal/ManagedClassLoader.findClass (2 samples, 0.09%)</title><rect x="136.8" y="1491.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="139.8" y="1502.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (2 samples, 0.09%)</title><rect x="136.8" y="1475.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="139.8" y="1486.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.09%)</title><rect x="136.8" y="1459.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="139.8" y="1470.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (2 samples, 0.09%)</title><rect x="136.8" y="1443.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.8" y="1454.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (2 samples, 0.09%)</title><rect x="136.8" y="1427.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="139.8" y="1438.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.access$100 (2 samples, 0.09%)</title><rect x="136.8" y="1411.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="139.8" y="1422.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (2 samples, 0.09%)</title><rect x="136.8" y="1395.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.8" y="1406.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.09%)</title><rect x="136.8" y="1379.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="139.8" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.09%)</title><rect x="136.8" y="1363.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="139.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (2 samples, 0.09%)</title><rect x="136.8" y="1347.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="139.8" y="1358.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (2 samples, 0.09%)</title><rect x="136.8" y="1331.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="139.8" y="1342.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (2 samples, 0.09%)</title><rect x="136.8" y="1315.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="139.8" y="1326.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, unsigned char, Thread*) (2 samples, 0.09%)</title><rect x="136.8" y="1299.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="139.8" y="1310.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, bool, Thread*) (2 samples, 0.09%)</title><rect x="136.8" y="1283.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="139.8" y="1294.0"></text>
</g>
<g>
<title>ClassFileParser::parseClassFile(Symbol*, ClassLoaderData*, Handle, KlassHandle, GrowableArray&lt;Handle&gt;*, TempNewSymbol&amp;, bool, Thread*) (2 samples, 0.09%)</title><rect x="136.8" y="1267.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="139.8" y="1278.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(bool, AccessFlags*, bool*, bool*, Thread*) (2 samples, 0.09%)</title><rect x="136.8" y="1251.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="139.8" y="1262.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(bool, AccessFlags*, Thread*) (2 samples, 0.09%)</title><rect x="136.8" y="1235.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="139.8" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::parse_localvariable_table(unsigned int, unsigned short, unsigned int, unsigned short*, bool, Thread*) (1 samples, 0.05%)</title><rect x="136.8" y="1219.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="139.8" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_field_name(Symbol*, Thread*) (1 samples, 0.05%)</title><rect x="136.8" y="1203.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="139.8" y="1214.0"></text>
</g>
<g>
<title>Symbol::as_C_string(char*, int) const (1 samples, 0.05%)</title><rect x="136.8" y="1187.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="139.8" y="1198.0"></text>
</g>
<g>
<title>Method::allocate(ClassLoaderData*, int, AccessFlags, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.05%)</title><rect x="137.3" y="1219.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="140.3" y="1230.0"></text>
</g>
<g>
<title>ConstMethod::allocate(ClassLoaderData*, int, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.05%)</title><rect x="137.3" y="1203.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="140.3" y="1214.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, bool, MetaspaceObj::Type, Thread*) (1 samples, 0.05%)</title><rect x="137.3" y="1187.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="140.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.exists (1 samples, 0.05%)</title><rect x="137.9" y="1523.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.9" y="1534.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.exists$ (1 samples, 0.05%)</title><rect x="137.9" y="1507.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="140.9" y="1518.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.exists (1 samples, 0.05%)</title><rect x="137.9" y="1491.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="140.9" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$$$Lambda$21781/1989042002.apply (1 samples, 0.05%)</title><rect x="137.9" y="1475.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.9" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$.$anonfun$apply$5$adapted (1 samples, 0.05%)</title><rect x="137.9" y="1459.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.9" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$.$anonfun$apply$5 (1 samples, 0.05%)</title><rect x="137.9" y="1443.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.9" y="1454.0"></text>
</g>
<g>
<title>treadle/ValidIfIsRandomAnnotation$.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="137.9" y="1427.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="140.9" y="1438.0"></text>
</g>
<g>
<title>treadle/ValidIfIsRandomAnnotation$.&lt;init&gt; (1 samples, 0.05%)</title><rect x="137.9" y="1411.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.9" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.05%)</title><rect x="137.9" y="1395.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="140.9" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.05%)</title><rect x="137.9" y="1379.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.9" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.05%)</title><rect x="137.9" y="1363.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="140.9" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/230528013.invokeExact_MT (1 samples, 0.05%)</title><rect x="137.9" y="1347.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="140.9" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1861086228.invoker (1 samples, 0.05%)</title><rect x="137.9" y="1331.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$BMH/1824524646.reinvoke (1 samples, 0.05%)</title><rect x="137.9" y="1315.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="140.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/282432134.invokeStatic_L4_L (1 samples, 0.05%)</title><rect x="137.9" y="1299.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="140.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.05%)</title><rect x="137.9" y="1283.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="140.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.05%)</title><rect x="137.9" y="1267.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.05%)</title><rect x="137.9" y="1251.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.9" y="1262.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.defineAnonymousClass (1 samples, 0.05%)</title><rect x="137.9" y="1235.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.9" y="1246.0"></text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass (1 samples, 0.05%)</title><rect x="137.9" y="1219.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="140.9" y="1230.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, KlassHandle, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="137.9" y="1203.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="140.9" y="1214.0"></text>
</g>
<g>
<title>ClassFileParser::parseClassFile(Symbol*, ClassLoaderData*, Handle, KlassHandle, GrowableArray&lt;Handle&gt;*, TempNewSymbol&amp;, bool, Thread*) (1 samples, 0.05%)</title><rect x="137.9" y="1187.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="140.9" y="1198.0"></text>
</g>
<g>
<title>ClassFileParser::parse_interfaces(int, Handle, Symbol*, bool*, Thread*) (1 samples, 0.05%)</title><rect x="137.9" y="1171.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="140.9" y="1182.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="137.9" y="1155.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="140.9" y="1166.0"></text>
</g>
<g>
<title>Dictionary::find_class(int, unsigned int, Symbol*, ClassLoaderData*) (1 samples, 0.05%)</title><rect x="137.9" y="1139.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="140.9" y="1150.0"></text>
</g>
<g>
<title>Dictionary::get_entry(int, unsigned int, Symbol*, ClassLoaderData*) (1 samples, 0.05%)</title><rect x="137.9" y="1123.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="140.9" y="1134.0"></text>
</g>
<g>
<title>treadle/chronometry/Timer.apply (5 samples, 0.23%)</title><rect x="138.4" y="1523.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.4" y="1534.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (2 samples, 0.09%)</title><rect x="138.4" y="1507.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="141.4" y="1518.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$$$Lambda$21814/2009740352.apply$mcV$sp (2 samples, 0.09%)</title><rect x="138.4" y="1491.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.4" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$.$anonfun$apply$8 (2 samples, 0.09%)</title><rect x="138.4" y="1475.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="141.4" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.compile (2 samples, 0.09%)</title><rect x="138.4" y="1459.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="141.4" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processModule (2 samples, 0.09%)</title><rect x="138.4" y="1443.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="141.4" y="1454.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processStatements (1 samples, 0.05%)</title><rect x="138.4" y="1427.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.4" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processStatements (1 samples, 0.05%)</title><rect x="138.4" y="1411.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.4" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.makeAssigner (1 samples, 0.05%)</title><rect x="138.4" y="1395.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="141.4" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.&lt;init&gt; (1 samples, 0.05%)</title><rect x="138.4" y="1379.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.4" y="1390.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.05%)</title><rect x="138.4" y="1363.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="141.4" y="1374.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.05%)</title><rect x="138.4" y="1347.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="141.4" y="1358.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.05%)</title><rect x="138.4" y="1331.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="141.4" y="1342.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.05%)</title><rect x="138.4" y="1315.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="141.4" y="1326.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.05%)</title><rect x="138.4" y="1299.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="141.4" y="1310.0"></text>
</g>
<g>
<title>Verifier::verify(instanceKlassHandle, Verifier::Mode, bool, Thread*) (1 samples, 0.05%)</title><rect x="138.4" y="1283.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="141.4" y="1294.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.05%)</title><rect x="138.4" y="1267.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="141.4" y="1278.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle, Thread*) (1 samples, 0.05%)</title><rect x="138.4" y="1251.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="141.4" y="1262.0"></text>
</g>
<g>
<title>ClassVerifier::verify_field_instructions(RawBytecodeStream*, StackMapFrame*, constantPoolHandle, Thread*) (1 samples, 0.05%)</title><rect x="138.4" y="1235.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="141.4" y="1246.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.05%)</title><rect x="138.4" y="1219.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="141.4" y="1230.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.05%)</title><rect x="138.4" y="1203.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="141.4" y="1214.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.05%)</title><rect x="138.4" y="1187.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="141.4" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processTopLevelClocks (1 samples, 0.05%)</title><rect x="139.0" y="1427.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.0" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="139.0" y="1411.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.0" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="139.0" y="1395.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="142.0" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="139.0" y="1379.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.0" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$21815/1288144304.apply (1 samples, 0.05%)</title><rect x="139.0" y="1363.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.0" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processTopLevelClocks$1$adapted (1 samples, 0.05%)</title><rect x="139.0" y="1347.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.0" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processTopLevelClocks$1 (1 samples, 0.05%)</title><rect x="139.0" y="1331.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.0" y="1342.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.05%)</title><rect x="139.0" y="1315.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="142.0" y="1326.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.05%)</title><rect x="139.0" y="1299.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="142.0" y="1310.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.05%)</title><rect x="139.0" y="1283.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="142.0" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.05%)</title><rect x="139.0" y="1267.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="142.0" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.05%)</title><rect x="139.0" y="1251.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="142.0" y="1262.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.05%)</title><rect x="139.0" y="1235.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="142.0" y="1246.0"></text>
</g>
<g>
<title>VM::ClassPrepare(_jvmtiEnv*, JNIEnv_*, _jobject*, _jclass*) (1 samples, 0.05%)</title><rect x="139.0" y="1219.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="142.0" y="1230.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods (1 samples, 0.05%)</title><rect x="139.0" y="1203.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="142.0" y="1214.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (1 samples, 0.05%)</title><rect x="139.0" y="1187.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="142.0" y="1198.0"></text>
</g>
<g>
<title>Method::jmethod_id() (1 samples, 0.05%)</title><rect x="139.0" y="1171.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="142.0" y="1182.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(instanceKlassHandle, methodHandle) (1 samples, 0.05%)</title><rect x="139.0" y="1155.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="142.0" y="1166.0"></text>
</g>
<g>
<title>Method::make_jmethod_id(ClassLoaderData*, Method*) (1 samples, 0.05%)</title><rect x="139.0" y="1139.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="142.0" y="1150.0"></text>
</g>
<g>
<title>JNIMethodBlock::add_method(Method*) (1 samples, 0.05%)</title><rect x="139.0" y="1123.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="142.0" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$$$Lambda$21785/299201311.apply (3 samples, 0.14%)</title><rect x="139.5" y="1507.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.5" y="1518.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$.$anonfun$apply$7 (3 samples, 0.14%)</title><rect x="139.5" y="1491.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.5" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="139.5" y="1475.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="142.5" y="1486.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle, int, Bytecodes::Code, Thread*) (1 samples, 0.05%)</title><rect x="139.5" y="1459.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="142.5" y="1470.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, Bytecodes::Code, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="139.5" y="1443.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="142.5" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.05%)</title><rect x="139.5" y="1427.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="142.5" y="1438.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.05%)</title><rect x="139.5" y="1411.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="142.5" y="1422.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.05%)</title><rect x="139.5" y="1395.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="142.5" y="1406.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.05%)</title><rect x="139.5" y="1379.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="142.5" y="1390.0"></text>
</g>
<g>
<title>Verifier::verify(instanceKlassHandle, Verifier::Mode, bool, Thread*) (1 samples, 0.05%)</title><rect x="139.5" y="1363.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="142.5" y="1374.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.05%)</title><rect x="139.5" y="1347.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="142.5" y="1358.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle, Thread*) (1 samples, 0.05%)</title><rect x="139.5" y="1331.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="142.5" y="1342.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle, StackMapTable*, Thread*) (1 samples, 0.05%)</title><rect x="139.5" y="1315.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="142.5" y="1326.0"></text>
</g>
<g>
<title>SignatureVerifier::is_valid_method_signature(Symbol*) (1 samples, 0.05%)</title><rect x="139.5" y="1299.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="142.5" y="1310.0"></text>
</g>
<g>
<title>SignatureVerifier::is_valid_type(char const*, long) (1 samples, 0.05%)</title><rect x="139.5" y="1283.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="142.5" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable$.apply (2 samples, 0.09%)</title><rect x="140.1" y="1475.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.1" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable$.processModule$1 (2 samples, 0.09%)</title><rect x="140.1" y="1459.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="143.1" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable$.processDependencyStatements$1 (1 samples, 0.05%)</title><rect x="140.1" y="1443.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.1" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="140.1" y="1427.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.1" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="140.1" y="1411.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="143.1" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="140.1" y="1395.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.1" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable$$$Lambda$21790/1961316924.apply (1 samples, 0.05%)</title><rect x="140.1" y="1379.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.1" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable$.$anonfun$apply$5$adapted (1 samples, 0.05%)</title><rect x="140.1" y="1363.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.1" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable$.$anonfun$apply$5 (1 samples, 0.05%)</title><rect x="140.1" y="1347.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.1" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable$.processDependencyStatements$1 (1 samples, 0.05%)</title><rect x="140.1" y="1331.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.1" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable$.addOperationDependency$1 (1 samples, 0.05%)</title><rect x="140.1" y="1315.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="143.1" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable$.expressionToOpType$1 (1 samples, 0.05%)</title><rect x="140.1" y="1299.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.1" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.05%)</title><rect x="140.1" y="1283.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="143.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.05%)</title><rect x="140.1" y="1267.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.05%)</title><rect x="140.1" y="1251.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/230528013.invokeExact_MT (1 samples, 0.05%)</title><rect x="140.1" y="1235.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1861086228.invoker (1 samples, 0.05%)</title><rect x="140.1" y="1219.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.1" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$BMH/1824524646.reinvoke (1 samples, 0.05%)</title><rect x="140.1" y="1203.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/282432134.invokeStatic_L4_L (1 samples, 0.05%)</title><rect x="140.1" y="1187.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.05%)</title><rect x="140.1" y="1171.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.05%)</title><rect x="140.1" y="1155.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="143.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.05%)</title><rect x="140.1" y="1139.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="143.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate (1 samples, 0.05%)</title><rect x="140.1" y="1123.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.convertType (1 samples, 0.05%)</title><rect x="140.1" y="1107.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.1" y="1118.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (1 samples, 0.05%)</title><rect x="140.1" y="1091.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.1" y="1102.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (1 samples, 0.05%)</title><rect x="140.1" y="1075.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.05%)</title><rect x="140.1" y="1059.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.1" y="1070.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="140.1" y="1043.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="143.1" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable$.processPorts$1 (1 samples, 0.05%)</title><rect x="140.6" y="1443.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.6" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="140.6" y="1427.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.6" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="140.6" y="1411.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.6" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="140.6" y="1395.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.6" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable$$$Lambda$21788/649728965.apply (1 samples, 0.05%)</title><rect x="140.6" y="1379.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.6" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable$.$anonfun$apply$22$adapted (1 samples, 0.05%)</title><rect x="140.6" y="1363.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="143.6" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable$.$anonfun$apply$22 (1 samples, 0.05%)</title><rect x="140.6" y="1347.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.6" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/Symbol$.apply (1 samples, 0.05%)</title><rect x="140.6" y="1331.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.6" y="1342.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.05%)</title><rect x="140.6" y="1315.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="143.6" y="1326.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.05%)</title><rect x="140.6" y="1299.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="143.6" y="1310.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.05%)</title><rect x="140.6" y="1283.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="143.6" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.05%)</title><rect x="140.6" y="1267.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="143.6" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.05%)</title><rect x="140.6" y="1251.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="143.6" y="1262.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.05%)</title><rect x="140.6" y="1235.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="143.6" y="1246.0"></text>
</g>
<g>
<title>VM::ClassPrepare(_jvmtiEnv*, JNIEnv_*, _jobject*, _jclass*) (1 samples, 0.05%)</title><rect x="140.6" y="1219.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="143.6" y="1230.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods (1 samples, 0.05%)</title><rect x="140.6" y="1203.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="143.6" y="1214.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (1 samples, 0.05%)</title><rect x="140.6" y="1187.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="143.6" y="1198.0"></text>
</g>
<g>
<title>Method::jmethod_id() (1 samples, 0.05%)</title><rect x="140.6" y="1171.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="143.6" y="1182.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(instanceKlassHandle, methodHandle) (1 samples, 0.05%)</title><rect x="140.6" y="1155.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="143.6" y="1166.0"></text>
</g>
<g>
<title>Method::make_jmethod_id(ClassLoaderData*, Method*) (1 samples, 0.05%)</title><rect x="140.6" y="1139.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="143.6" y="1150.0"></text>
</g>
<g>
<title>JNIMethodBlock::add_method(Method*) (1 samples, 0.05%)</title><rect x="140.6" y="1123.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="143.6" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$.apply (1 samples, 0.05%)</title><rect x="141.2" y="1523.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.2" y="1534.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.&lt;init&gt; (1 samples, 0.05%)</title><rect x="141.2" y="1507.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.2" y="1518.0"></text>
</g>
<g>
<title>treadle/executable/RollBackBufferManager.&lt;init&gt; (1 samples, 0.05%)</title><rect x="141.2" y="1491.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.2" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.05%)</title><rect x="141.2" y="1475.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="144.2" y="1486.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.05%)</title><rect x="141.2" y="1459.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="144.2" y="1470.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.05%)</title><rect x="141.2" y="1443.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="144.2" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.05%)</title><rect x="141.2" y="1427.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="144.2" y="1438.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.05%)</title><rect x="141.2" y="1411.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="144.2" y="1422.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.05%)</title><rect x="141.2" y="1395.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="144.2" y="1406.0"></text>
</g>
<g>
<title>VM::ClassPrepare(_jvmtiEnv*, JNIEnv_*, _jobject*, _jclass*) (1 samples, 0.05%)</title><rect x="141.2" y="1379.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="144.2" y="1390.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods (1 samples, 0.05%)</title><rect x="141.2" y="1363.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="144.2" y="1374.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (1 samples, 0.05%)</title><rect x="141.2" y="1347.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="144.2" y="1358.0"></text>
</g>
<g>
<title>Method::jmethod_id() (1 samples, 0.05%)</title><rect x="141.2" y="1331.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="144.2" y="1342.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(instanceKlassHandle, methodHandle) (1 samples, 0.05%)</title><rect x="141.2" y="1315.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="144.2" y="1326.0"></text>
</g>
<g>
<title>Method::make_jmethod_id(ClassLoaderData*, Method*) (1 samples, 0.05%)</title><rect x="141.2" y="1299.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="144.2" y="1310.0"></text>
</g>
<g>
<title>JNIMethodBlock::add_method(Method*) (1 samples, 0.05%)</title><rect x="141.2" y="1283.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="144.2" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/DataStoreAllocator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="141.7" y="1523.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="144.7" y="1534.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="141.7" y="1507.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="144.7" y="1518.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle, int, Bytecodes::Code, Thread*) (1 samples, 0.05%)</title><rect x="141.7" y="1491.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="144.7" y="1502.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, Bytecodes::Code, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="141.7" y="1475.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="144.7" y="1486.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.05%)</title><rect x="141.7" y="1459.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="144.7" y="1470.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.05%)</title><rect x="141.7" y="1443.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="144.7" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.05%)</title><rect x="141.7" y="1427.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="144.7" y="1438.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.05%)</title><rect x="141.7" y="1411.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="144.7" y="1422.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.05%)</title><rect x="141.7" y="1395.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="144.7" y="1406.0"></text>
</g>
<g>
<title>VM::ClassPrepare(_jvmtiEnv*, JNIEnv_*, _jobject*, _jclass*) (1 samples, 0.05%)</title><rect x="141.7" y="1379.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="144.7" y="1390.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods (1 samples, 0.05%)</title><rect x="141.7" y="1363.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="144.7" y="1374.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (1 samples, 0.05%)</title><rect x="141.7" y="1347.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="144.7" y="1358.0"></text>
</g>
<g>
<title>Method::jmethod_id() (1 samples, 0.05%)</title><rect x="141.7" y="1331.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="144.7" y="1342.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(instanceKlassHandle, methodHandle) (1 samples, 0.05%)</title><rect x="141.7" y="1315.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="144.7" y="1326.0"></text>
</g>
<g>
<title>Method::make_jmethod_id(ClassLoaderData*, Method*) (1 samples, 0.05%)</title><rect x="141.7" y="1299.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="144.7" y="1310.0"></text>
</g>
<g>
<title>JNIMethodBlock::add_method(Method*) (1 samples, 0.05%)</title><rect x="141.7" y="1283.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="144.7" y="1294.0"></text>
</g>
<g>
<title>treadle/stage/phases/PrepareAst$.transform (6 samples, 0.28%)</title><rect x="142.3" y="1587.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.3" y="1598.0"></text>
</g>
<g>
<title>treadle/stage/phases/PrepareAst$.transform (6 samples, 0.28%)</title><rect x="142.3" y="1571.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.3" y="1582.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.transform$ (6 samples, 0.28%)</title><rect x="142.3" y="1555.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.3" y="1566.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.transform (6 samples, 0.28%)</title><rect x="142.3" y="1539.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.3" y="1550.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.flatMap (6 samples, 0.28%)</title><rect x="142.3" y="1523.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.3" y="1534.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap$ (6 samples, 0.28%)</title><rect x="142.3" y="1507.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.3" y="1518.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap (6 samples, 0.28%)</title><rect x="142.3" y="1491.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.3" y="1502.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (6 samples, 0.28%)</title><rect x="142.3" y="1475.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.3" y="1486.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$4204/1202885598.apply (6 samples, 0.28%)</title><rect x="142.3" y="1459.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.3" y="1470.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$flatMap$1 (6 samples, 0.28%)</title><rect x="142.3" y="1443.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.3" y="1454.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase$$Lambda$21026/630470630.apply (6 samples, 0.28%)</title><rect x="142.3" y="1427.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.3" y="1438.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.$anonfun$transform$2 (6 samples, 0.28%)</title><rect x="142.3" y="1411.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.3" y="1422.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (6 samples, 0.28%)</title><rect x="142.3" y="1395.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.3" y="1406.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (6 samples, 0.28%)</title><rect x="142.3" y="1379.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.3" y="1390.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (6 samples, 0.28%)</title><rect x="142.3" y="1363.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.3" y="1374.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase$$Lambda$21027/1138740095.apply (6 samples, 0.28%)</title><rect x="142.3" y="1347.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.3" y="1358.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.$anonfun$transform$3 (6 samples, 0.28%)</title><rect x="142.3" y="1331.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.3" y="1342.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (6 samples, 0.28%)</title><rect x="142.3" y="1315.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.3" y="1326.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (6 samples, 0.28%)</title><rect x="142.3" y="1299.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.3" y="1310.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$21029/121264124.apply (6 samples, 0.28%)</title><rect x="142.3" y="1283.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.3" y="1294.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (6 samples, 0.28%)</title><rect x="142.3" y="1267.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.3" y="1278.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (5 samples, 0.23%)</title><rect x="142.3" y="1251.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.3" y="1262.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (5 samples, 0.23%)</title><rect x="142.3" y="1235.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.3" y="1246.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (5 samples, 0.23%)</title><rect x="142.3" y="1219.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.3" y="1230.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (5 samples, 0.23%)</title><rect x="142.3" y="1203.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.3" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (5 samples, 0.23%)</title><rect x="142.3" y="1187.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (5 samples, 0.23%)</title><rect x="142.3" y="1171.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (5 samples, 0.23%)</title><rect x="142.3" y="1155.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.3" y="1166.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$21030/969066331.apply (5 samples, 0.23%)</title><rect x="142.3" y="1139.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.3" y="1150.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (5 samples, 0.23%)</title><rect x="142.3" y="1123.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.3" y="1134.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (5 samples, 0.23%)</title><rect x="142.3" y="1107.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.3" y="1118.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (5 samples, 0.23%)</title><rect x="142.3" y="1091.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.3" y="1102.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$21029/121264124.apply (5 samples, 0.23%)</title><rect x="142.3" y="1075.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.3" y="1086.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (5 samples, 0.23%)</title><rect x="142.3" y="1059.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.3" y="1070.0"></text>
</g>
<g>
<title>firrtl/passes/CommonSubexpressionElimination$.execute (1 samples, 0.05%)</title><rect x="142.3" y="1043.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.3" y="1054.0"></text>
</g>
<g>
<title>firrtl/passes/Pass.execute$ (1 samples, 0.05%)</title><rect x="142.3" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.3" y="1038.0"></text>
</g>
<g>
<title>firrtl/passes/Pass.execute (1 samples, 0.05%)</title><rect x="142.3" y="1011.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.3" y="1022.0"></text>
</g>
<g>
<title>firrtl/passes/CommonSubexpressionElimination$.run (1 samples, 0.05%)</title><rect x="142.3" y="995.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.3" y="1006.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.05%)</title><rect x="142.3" y="979.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.3" y="990.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="142.3" y="963.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.3" y="974.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="142.3" y="947.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.3" y="958.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="142.3" y="931.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.3" y="942.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="142.3" y="915.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.3" y="926.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="142.3" y="899.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.3" y="910.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3577/1680023710.apply (1 samples, 0.05%)</title><rect x="142.3" y="883.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.3" y="894.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="142.3" y="867.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.3" y="878.0"></text>
</g>
<g>
<title>firrtl/passes/CommonSubexpressionElimination$$$Lambda$21720/1357445487.apply (1 samples, 0.05%)</title><rect x="142.3" y="851.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.3" y="862.0"></text>
</g>
<g>
<title>firrtl/passes/CommonSubexpressionElimination$.$anonfun$run$1 (1 samples, 0.05%)</title><rect x="142.3" y="835.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.3" y="846.0"></text>
</g>
<g>
<title>firrtl/passes/CommonSubexpressionElimination$.cse (1 samples, 0.05%)</title><rect x="142.3" y="819.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.3" y="830.0"></text>
</g>
<g>
<title>firrtl/passes/CommonSubexpressionElimination$.eliminateNodeRefs$1 (1 samples, 0.05%)</title><rect x="142.3" y="803.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.3" y="814.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMap$.map$extension (1 samples, 0.05%)</title><rect x="142.3" y="787.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.3" y="798.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMagnet$$anon$2.map (1 samples, 0.05%)</title><rect x="142.3" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.3" y="782.0"></text>
</g>
<g>
<title>firrtl/ir/Block.mapStmt (1 samples, 0.05%)</title><rect x="142.3" y="755.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.3" y="766.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.05%)</title><rect x="142.3" y="739.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.3" y="750.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="142.3" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.3" y="734.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="142.3" y="707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="145.3" y="718.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="142.3" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.3" y="702.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="142.3" y="675.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.3" y="686.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="142.3" y="659.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.3" y="670.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3577/1680023710.apply (1 samples, 0.05%)</title><rect x="142.3" y="643.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.3" y="654.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="142.3" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.3" y="638.0"></text>
</g>
<g>
<title>firrtl/passes/CommonSubexpressionElimination$$$Lambda$21723/351695935.apply (1 samples, 0.05%)</title><rect x="142.3" y="611.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.3" y="622.0"></text>
</g>
<g>
<title>firrtl/passes/CommonSubexpressionElimination$.$anonfun$cse$6 (1 samples, 0.05%)</title><rect x="142.3" y="595.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.3" y="606.0"></text>
</g>
<g>
<title>firrtl/passes/CommonSubexpressionElimination$.eliminateNodeRefs$1 (1 samples, 0.05%)</title><rect x="142.3" y="579.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.05%)</title><rect x="142.3" y="563.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.05%)</title><rect x="142.3" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.05%)</title><rect x="142.3" y="531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/230528013.invokeExact_MT (1 samples, 0.05%)</title><rect x="142.3" y="515.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1861086228.invoker (1 samples, 0.05%)</title><rect x="142.3" y="499.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$BMH/1824524646.reinvoke (1 samples, 0.05%)</title><rect x="142.3" y="483.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="145.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/282432134.invokeStatic_L4_L (1 samples, 0.05%)</title><rect x="142.3" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.05%)</title><rect x="142.3" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.05%)</title><rect x="142.3" y="435.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.05%)</title><rect x="142.3" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.3" y="430.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.defineAnonymousClass (1 samples, 0.05%)</title><rect x="142.3" y="403.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.3" y="414.0"></text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass (1 samples, 0.05%)</title><rect x="142.3" y="387.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="145.3" y="398.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, KlassHandle, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="142.3" y="371.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="145.3" y="382.0"></text>
</g>
<g>
<title>ClassFileParser::parseClassFile(Symbol*, ClassLoaderData*, Handle, KlassHandle, GrowableArray&lt;Handle&gt;*, TempNewSymbol&amp;, bool, Thread*) (1 samples, 0.05%)</title><rect x="142.3" y="355.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="145.3" y="366.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="142.3" y="339.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="145.3" y="350.0"></text>
</g>
<g>
<title>PlaceholderTable::find_and_add(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Symbol*, Thread*) (1 samples, 0.05%)</title><rect x="142.3" y="323.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="145.3" y="334.0"></text>
</g>
<g>
<title>PlaceholderEntry::add_seen_thread(Thread*, PlaceholderTable::classloadAction) (1 samples, 0.05%)</title><rect x="142.3" y="307.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="145.3" y="318.0"></text>
</g>
<g>
<title>CHeapObj&lt;(MemoryType)7&gt;::operator new(unsigned long) (1 samples, 0.05%)</title><rect x="142.3" y="291.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="145.3" y="302.0"></text>
</g>
<g>
<title>CHeapObj&lt;(MemoryType)7&gt;::operator new(unsigned long, NativeCallStack const&amp;) (1 samples, 0.05%)</title><rect x="142.3" y="275.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="145.3" y="286.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.05%)</title><rect x="142.3" y="259.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="145.3" y="270.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.05%)</title><rect x="142.3" y="243.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="145.3" y="254.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.05%)</title><rect x="142.3" y="227.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="145.3" y="238.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="142.3" y="211.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="145.3" y="222.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="142.3" y="195.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="145.3" y="206.0"></text>
</g>
<g>
<title>firrtl/transforms/ConstantPropagation.execute (3 samples, 0.14%)</title><rect x="142.8" y="1043.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.8" y="1054.0"></text>
</g>
<g>
<title>firrtl/transforms/ConstantPropagation.run (3 samples, 0.14%)</title><rect x="142.8" y="1027.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.8" y="1038.0"></text>
</g>
<g>
<title>firrtl/analyses/InstanceGraph.&lt;init&gt; (1 samples, 0.05%)</title><rect x="142.8" y="1011.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.8" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="142.8" y="995.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.8" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="142.8" y="979.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.8" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="142.8" y="963.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="145.8" y="974.0"></text>
</g>
<g>
<title>firrtl/analyses/InstanceGraph$$Lambda$21349/674289013.apply (1 samples, 0.05%)</title><rect x="142.8" y="947.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.8" y="958.0"></text>
</g>
<g>
<title>firrtl/analyses/InstanceGraph.$anonfun$new$1 (1 samples, 0.05%)</title><rect x="142.8" y="931.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.8" y="942.0"></text>
</g>
<g>
<title>firrtl/graph/DiGraph.reverse (1 samples, 0.05%)</title><rect x="143.4" y="1011.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.05%)</title><rect x="143.4" y="995.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.05%)</title><rect x="143.4" y="979.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.4" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.05%)</title><rect x="143.4" y="963.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.4" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/230528013.invokeExact_MT (1 samples, 0.05%)</title><rect x="143.4" y="947.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.4" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1861086228.invoker (1 samples, 0.05%)</title><rect x="143.4" y="931.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.4" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$BMH/1824524646.reinvoke (1 samples, 0.05%)</title><rect x="143.4" y="915.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.4" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/282432134.invokeStatic_L4_L (1 samples, 0.05%)</title><rect x="143.4" y="899.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.4" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.05%)</title><rect x="143.4" y="883.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.4" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.05%)</title><rect x="143.4" y="867.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.4" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findStatic (1 samples, 0.05%)</title><rect x="143.4" y="851.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.4" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.resolveOrFail (1 samples, 0.05%)</title><rect x="143.4" y="835.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.4" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolveOrFail (1 samples, 0.05%)</title><rect x="143.4" y="819.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.4" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolve (1 samples, 0.05%)</title><rect x="143.4" y="803.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.resolve (1 samples, 0.05%)</title><rect x="143.4" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.4" y="798.0"></text>
</g>
<g>
<title>MHN_resolve_Mem (1 samples, 0.05%)</title><rect x="143.4" y="771.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="146.4" y="782.0"></text>
</g>
<g>
<title>MethodHandles::resolve_MemberName(Handle, KlassHandle, Thread*) (1 samples, 0.05%)</title><rect x="143.4" y="755.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="146.4" y="766.0"></text>
</g>
<g>
<title>MethodHandles::init_method_MemberName(Handle, CallInfo&amp;) (1 samples, 0.05%)</title><rect x="143.4" y="739.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="146.4" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::add_member_name(Handle) (1 samples, 0.05%)</title><rect x="143.4" y="723.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="146.4" y="734.0"></text>
</g>
<g>
<title>JNIHandles::make_weak_global(Handle) (1 samples, 0.05%)</title><rect x="143.4" y="707.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="146.4" y="718.0"></text>
</g>
<g>
<title>firrtl/transforms/ConstantPropagation.iterate$1 (1 samples, 0.05%)</title><rect x="143.9" y="1011.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.9" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foldLeft (1 samples, 0.05%)</title><rect x="143.9" y="995.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.9" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foldLeft$ (1 samples, 0.05%)</title><rect x="143.9" y="979.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.9" y="990.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foldLeft (1 samples, 0.05%)</title><rect x="143.9" y="963.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.9" y="974.0"></text>
</g>
<g>
<title>firrtl/transforms/ConstantPropagation$$Lambda$21680/228331479.apply (1 samples, 0.05%)</title><rect x="143.9" y="947.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.9" y="958.0"></text>
</g>
<g>
<title>firrtl/transforms/ConstantPropagation.$anonfun$run$2 (1 samples, 0.05%)</title><rect x="143.9" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.9" y="942.0"></text>
</g>
<g>
<title>firrtl/transforms/ConstantPropagation.constPropModule (1 samples, 0.05%)</title><rect x="143.9" y="915.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.9" y="926.0"></text>
</g>
<g>
<title>firrtl/transforms/ConstantPropagation.constPropStmt$1 (1 samples, 0.05%)</title><rect x="143.9" y="899.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.9" y="910.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMap$.map$extension (1 samples, 0.05%)</title><rect x="143.9" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.9" y="894.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMagnet$$anon$2.map (1 samples, 0.05%)</title><rect x="143.9" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.9" y="878.0"></text>
</g>
<g>
<title>firrtl/ir/Block.mapStmt (1 samples, 0.05%)</title><rect x="143.9" y="851.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="146.9" y="862.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.05%)</title><rect x="143.9" y="835.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.9" y="846.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="143.9" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.9" y="830.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="143.9" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="146.9" y="814.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="143.9" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.9" y="798.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="143.9" y="771.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="146.9" y="782.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="143.9" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.9" y="766.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3577/1680023710.apply (1 samples, 0.05%)</title><rect x="143.9" y="739.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.9" y="750.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="143.9" y="723.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.9" y="734.0"></text>
</g>
<g>
<title>firrtl/transforms/ConstantPropagation$$Lambda$21684/1991523375.apply (1 samples, 0.05%)</title><rect x="143.9" y="707.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.9" y="718.0"></text>
</g>
<g>
<title>firrtl/transforms/ConstantPropagation.$anonfun$constPropModule$8 (1 samples, 0.05%)</title><rect x="143.9" y="691.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.9" y="702.0"></text>
</g>
<g>
<title>firrtl/transforms/ConstantPropagation.constPropStmt$1 (1 samples, 0.05%)</title><rect x="143.9" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="146.9" y="686.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMap$.map$extension (1 samples, 0.05%)</title><rect x="143.9" y="659.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.9" y="670.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMagnet$$anon$3.map (1 samples, 0.05%)</title><rect x="143.9" y="643.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.9" y="654.0"></text>
</g>
<g>
<title>firrtl/ir/DefNode.mapExpr (1 samples, 0.05%)</title><rect x="143.9" y="627.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.9" y="638.0"></text>
</g>
<g>
<title>firrtl/transforms/ConstantPropagation$$Lambda$21686/1925332465.apply (1 samples, 0.05%)</title><rect x="143.9" y="611.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.9" y="622.0"></text>
</g>
<g>
<title>firrtl/transforms/ConstantPropagation.$anonfun$constPropModule$10 (1 samples, 0.05%)</title><rect x="143.9" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.9" y="606.0"></text>
</g>
<g>
<title>firrtl/transforms/ConstantPropagation.constPropExpression (1 samples, 0.05%)</title><rect x="143.9" y="579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.9" y="590.0"></text>
</g>
<g>
<title>firrtl/transforms/ConstantPropagation.constPropPrim (1 samples, 0.05%)</title><rect x="143.9" y="563.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.9" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="143.9" y="547.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.9" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="143.9" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.9" y="542.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="143.9" y="515.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.9" y="526.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="143.9" y="499.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.9" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="143.9" y="483.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.9" y="494.0"></text>
</g>
<g>
<title>xsbt/boot/BootFilteredLoader.loadClass (1 samples, 0.05%)</title><rect x="143.9" y="467.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.9" y="478.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="143.9" y="451.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="146.9" y="462.0"></text>
</g>
<g>
<title>sun/misc/Launcher$AppClassLoader.loadClass (1 samples, 0.05%)</title><rect x="143.9" y="435.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="146.9" y="446.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="143.9" y="419.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.9" y="430.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="143.9" y="403.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.9" y="414.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="143.9" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.9" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="143.9" y="371.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="146.9" y="382.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.05%)</title><rect x="143.9" y="355.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="146.9" y="366.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*) (1 samples, 0.05%)</title><rect x="143.9" y="339.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="146.9" y="350.0"></text>
</g>
<g>
<title>firrtl/transforms/DeadCodeElimination.execute (1 samples, 0.05%)</title><rect x="144.5" y="1043.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.5" y="1054.0"></text>
</g>
<g>
<title>firrtl/transforms/DeadCodeElimination.run (1 samples, 0.05%)</title><rect x="144.5" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="147.5" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="144.5" y="1011.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="147.5" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="144.5" y="995.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.5" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="144.5" y="979.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.5" y="990.0"></text>
</g>
<g>
<title>firrtl/transforms/DeadCodeElimination$$Lambda$21746/159155660.apply (1 samples, 0.05%)</title><rect x="144.5" y="963.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="147.5" y="974.0"></text>
</g>
<g>
<title>firrtl/transforms/DeadCodeElimination.$anonfun$run$7 (1 samples, 0.05%)</title><rect x="144.5" y="947.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.5" y="958.0"></text>
</g>
<g>
<title>firrtl/transforms/DeadCodeElimination.deleteDeadCode (1 samples, 0.05%)</title><rect x="144.5" y="931.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.5" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.05%)</title><rect x="144.5" y="915.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.5" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.05%)</title><rect x="144.5" y="899.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.5" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.05%)</title><rect x="144.5" y="883.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="147.5" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/230528013.invokeExact_MT (1 samples, 0.05%)</title><rect x="144.5" y="867.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="147.5" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1861086228.invoker (1 samples, 0.05%)</title><rect x="144.5" y="851.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="147.5" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$BMH/1824524646.reinvoke (1 samples, 0.05%)</title><rect x="144.5" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.5" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/282432134.invokeStatic_L4_L (1 samples, 0.05%)</title><rect x="144.5" y="819.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="147.5" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.05%)</title><rect x="144.5" y="803.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.5" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.05%)</title><rect x="144.5" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.05%)</title><rect x="144.5" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.5" y="782.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.defineAnonymousClass (1 samples, 0.05%)</title><rect x="144.5" y="755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.5" y="766.0"></text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass (1 samples, 0.05%)</title><rect x="144.5" y="739.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="147.5" y="750.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, KlassHandle, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="144.5" y="723.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="147.5" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.05%)</title><rect x="144.5" y="707.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="147.5" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.05%)</title><rect x="144.5" y="691.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="147.5" y="702.0"></text>
</g>
<g>
<title>Verifier::verify(instanceKlassHandle, Verifier::Mode, bool, Thread*) (1 samples, 0.05%)</title><rect x="144.5" y="675.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="147.5" y="686.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.05%)</title><rect x="144.5" y="659.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="147.5" y="670.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle, Thread*) (1 samples, 0.05%)</title><rect x="144.5" y="643.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="147.5" y="654.0"></text>
</g>
<g>
<title>StackMapFrame::set_locals_from_arg(methodHandle, VerificationType, Thread*) (1 samples, 0.05%)</title><rect x="144.5" y="627.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="147.5" y="638.0"></text>
</g>
<g>
<title>firrtl/transforms/BlackBoxSourceHelper.execute (1 samples, 0.05%)</title><rect x="145.0" y="1251.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="148.0" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="145.0" y="1235.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="145.0" y="1219.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.0" y="1230.0"></text>
</g>
<g>
<title>sbt/internal/ManagedClassLoader.findClass (1 samples, 0.05%)</title><rect x="145.0" y="1203.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="148.0" y="1214.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="145.0" y="1187.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.0" y="1198.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="145.0" y="1171.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.0" y="1182.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="145.0" y="1155.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.0" y="1166.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="145.0" y="1139.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.0" y="1150.0"></text>
</g>
<g>
<title>sun/misc/URLClassPath.getResource (1 samples, 0.05%)</title><rect x="145.0" y="1123.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="148.0" y="1134.0"></text>
</g>
<g>
<title>sun/misc/URLClassPath$JarLoader.getResource (1 samples, 0.05%)</title><rect x="145.0" y="1107.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.0" y="1118.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.05%)</title><rect x="145.0" y="1091.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.0" y="1102.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.05%)</title><rect x="145.0" y="1075.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="148.0" y="1086.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.05%)</title><rect x="145.0" y="1059.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.0" y="1070.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.05%)</title><rect x="145.0" y="1043.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.0" y="1054.0"></text>
</g>
<g>
<title>Java_java_util_zip_ZipFile_getEntry (1 samples, 0.05%)</title><rect x="145.0" y="1027.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="148.0" y="1038.0"></text>
</g>
<g>
<title>ZIP_GetEntry2 (1 samples, 0.05%)</title><rect x="145.0" y="1011.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="148.0" y="1022.0"></text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$20943/2103711151.apply$mcV$sp (163 samples, 7.61%)</title><rect x="145.6" y="1747.0" width="89.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="148.6" y="1758.0">treadle/GC..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$new$2 (163 samples, 7.61%)</title><rect x="145.6" y="1731.0" width="89.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.6" y="1742.0">treadle/GC..</text>
</g>
<g>
<title>treadle/GCDTester.sizableTest (163 samples, 7.61%)</title><rect x="145.6" y="1715.0" width="89.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.6" y="1726.0">treadle/GC..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.foreach (158 samples, 7.38%)</title><rect x="145.6" y="1699.0" width="87.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.6" y="1710.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (158 samples, 7.38%)</title><rect x="145.6" y="1683.0" width="87.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.6" y="1694.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (158 samples, 7.38%)</title><rect x="145.6" y="1667.0" width="87.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.6" y="1678.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (158 samples, 7.38%)</title><rect x="145.6" y="1651.0" width="87.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="148.6" y="1662.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (158 samples, 7.38%)</title><rect x="145.6" y="1635.0" width="87.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.6" y="1646.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (158 samples, 7.38%)</title><rect x="145.6" y="1619.0" width="87.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.6" y="1630.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach (158 samples, 7.38%)</title><rect x="145.6" y="1603.0" width="87.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.6" y="1614.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter$$Lambda$3702/1735448379.apply (158 samples, 7.38%)</title><rect x="145.6" y="1587.0" width="87.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.6" y="1598.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.$anonfun$foreach$1 (158 samples, 7.38%)</title><rect x="145.6" y="1571.0" width="87.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.6" y="1582.0">scala/coll..</text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$21883/1244445115.apply (158 samples, 7.38%)</title><rect x="145.6" y="1555.0" width="87.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.6" y="1566.0">treadle/GC..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$sizableTest$4$adapted (158 samples, 7.38%)</title><rect x="145.6" y="1539.0" width="87.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.6" y="1550.0">treadle/GC..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$sizableTest$4 (158 samples, 7.38%)</title><rect x="145.6" y="1523.0" width="87.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="148.6" y="1534.0">treadle/GC..</text>
</g>
<g>
<title>treadle/TreadleTester.peek (55 samples, 2.57%)</title><rect x="145.6" y="1507.0" width="30.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.6" y="1518.0">tr..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (54 samples, 2.52%)</title><rect x="145.6" y="1491.0" width="29.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.6" y="1502.0">tr..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (54 samples, 2.52%)</title><rect x="145.6" y="1475.0" width="29.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.6" y="1486.0">tr..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.lastStopResult (1 samples, 0.05%)</title><rect x="145.6" y="1459.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.6" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (53 samples, 2.48%)</title><rect x="146.1" y="1459.0" width="29.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.1" y="1470.0">tr..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (53 samples, 2.48%)</title><rect x="146.1" y="1443.0" width="29.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.1" y="1454.0">tr..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$21877/517240099.apply$mcV$sp (18 samples, 0.84%)</title><rect x="146.1" y="1427.0" width="10.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.1" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (18 samples, 0.84%)</title><rect x="146.1" y="1411.0" width="10.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.1" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (18 samples, 0.84%)</title><rect x="146.1" y="1395.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.1" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.treadle$executable$DataStore$AssignInt$$$outer (1 samples, 0.05%)</title><rect x="146.1" y="1379.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.1" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (17 samples, 0.79%)</title><rect x="146.7" y="1379.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.7" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (17 samples, 0.79%)</title><rect x="146.7" y="1363.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.7" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (17 samples, 0.79%)</title><rect x="146.7" y="1347.0" width="9.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.7" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (17 samples, 0.79%)</title><rect x="146.7" y="1331.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.7" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.apply (17 samples, 0.79%)</title><rect x="146.7" y="1315.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.7" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (17 samples, 0.79%)</title><rect x="146.7" y="1299.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.7" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (17 samples, 0.79%)</title><rect x="146.7" y="1283.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.7" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (17 samples, 0.79%)</title><rect x="146.7" y="1267.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.7" y="1278.0"></text>
</g>
<g>
<title>scala/LowPriorityImplicits.wrapRefArray (1 samples, 0.05%)</title><rect x="146.7" y="1251.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.&lt;init&gt; (1 samples, 0.05%)</title><rect x="146.7" y="1235.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.&lt;init&gt; (1 samples, 0.05%)</title><rect x="146.7" y="1219.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSeq.&lt;init&gt; (1 samples, 0.05%)</title><rect x="146.7" y="1203.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.&lt;init&gt; (1 samples, 0.05%)</title><rect x="146.7" y="1187.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="146.7" y="1171.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="146.7" y="1155.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/generic/GenericCompanion.apply (3 samples, 0.14%)</title><rect x="147.2" y="1251.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (3 samples, 0.14%)</title><rect x="147.2" y="1235.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="150.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (3 samples, 0.14%)</title><rect x="147.2" y="1219.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.2" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet$.empty (3 samples, 0.14%)</title><rect x="147.2" y="1203.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (3 samples, 0.14%)</title><rect x="147.2" y="1187.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (3 samples, 0.14%)</title><rect x="147.2" y="1171.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSet.&lt;init&gt; (2 samples, 0.09%)</title><rect x="147.2" y="1155.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractIterable.&lt;init&gt; (2 samples, 0.09%)</title><rect x="147.2" y="1139.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="150.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (2 samples, 0.09%)</title><rect x="147.2" y="1123.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="150.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (2 samples, 0.09%)</title><rect x="147.2" y="1107.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="150.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/GenTraversable.$init$ (1 samples, 0.05%)</title><rect x="147.2" y="1091.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/GenTraversableOnce.$init$ (1 samples, 0.05%)</title><rect x="147.8" y="1091.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.$init$ (1 samples, 0.05%)</title><rect x="148.3" y="1155.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="151.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.initialCapacity (1 samples, 0.05%)</title><rect x="148.3" y="1139.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.capacity (1 samples, 0.05%)</title><rect x="148.3" y="1123.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.capacity$ (1 samples, 0.05%)</title><rect x="148.3" y="1107.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="151.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.capacity (1 samples, 0.05%)</title><rect x="148.3" y="1091.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (2 samples, 0.09%)</title><rect x="148.9" y="1251.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.09%)</title><rect x="148.9" y="1235.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.09%)</title><rect x="148.9" y="1219.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.09%)</title><rect x="148.9" y="1203.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (2 samples, 0.09%)</title><rect x="148.9" y="1187.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (2 samples, 0.09%)</title><rect x="148.9" y="1171.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (2 samples, 0.09%)</title><rect x="148.9" y="1155.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.9" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="148.9" y="1139.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.9" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (2 samples, 0.09%)</title><rect x="148.9" y="1123.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="151.9" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="148.9" y="1107.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="151.9" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="148.9" y="1091.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="151.9" y="1102.0"></text>
</g>
<g>
<title>firrtl/PortKind$.hashCode (1 samples, 0.05%)</title><rect x="148.9" y="1075.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.9" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.05%)</title><rect x="149.4" y="1107.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.05%)</title><rect x="149.4" y="1091.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="152.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (5 samples, 0.23%)</title><rect x="150.0" y="1251.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="153.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (5 samples, 0.23%)</title><rect x="150.0" y="1235.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.0" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (5 samples, 0.23%)</title><rect x="150.0" y="1219.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (5 samples, 0.23%)</title><rect x="150.0" y="1203.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.0" y="1214.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="150.0" y="1187.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="153.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (3 samples, 0.14%)</title><rect x="150.5" y="1187.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (3 samples, 0.14%)</title><rect x="150.5" y="1171.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.5" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (3 samples, 0.14%)</title><rect x="150.5" y="1155.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.5" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.14%)</title><rect x="150.5" y="1139.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.5" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (3 samples, 0.14%)</title><rect x="150.5" y="1123.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.5" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.14%)</title><rect x="150.5" y="1107.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.5" y="1118.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.09%)</title><rect x="151.1" y="1091.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.1" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="151.6" y="1075.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.6" y="1086.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="151.6" y="1059.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="154.6" y="1070.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="151.6" y="1043.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.6" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="151.6" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.6" y="1038.0"></text>
</g>
<g>
<title>firrtl/ir/IntWidth.hashCode (1 samples, 0.05%)</title><rect x="151.6" y="1011.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.6" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="152.2" y="1187.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="152.2" y="1171.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="152.2" y="1155.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="155.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="152.2" y="1139.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="155.2" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="152.2" y="1123.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.2" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="152.2" y="1107.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.2" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="152.2" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.2" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToInteger (1 samples, 0.05%)</title><rect x="152.7" y="1251.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.7" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (1 samples, 0.05%)</title><rect x="153.3" y="1251.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.3" y="1262.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.05%)</title><rect x="153.3" y="1235.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.3" y="1246.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.05%)</title><rect x="153.3" y="1219.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.3" y="1230.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.05%)</title><rect x="153.3" y="1203.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.3" y="1214.0"></text>
</g>
<g>
<title>java/math/BigInteger.signInt (1 samples, 0.05%)</title><rect x="153.3" y="1187.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.3" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (4 samples, 0.19%)</title><rect x="153.8" y="1251.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.8" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (4 samples, 0.19%)</title><rect x="153.8" y="1235.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.8" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$21886/800006155.apply (4 samples, 0.19%)</title><rect x="153.8" y="1219.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="156.8" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (4 samples, 0.19%)</title><rect x="153.8" y="1203.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.8" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (4 samples, 0.19%)</title><rect x="153.8" y="1187.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (4 samples, 0.19%)</title><rect x="153.8" y="1171.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (4 samples, 0.19%)</title><rect x="153.8" y="1155.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (4 samples, 0.19%)</title><rect x="153.8" y="1139.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (4 samples, 0.19%)</title><rect x="153.8" y="1123.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="156.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (4 samples, 0.19%)</title><rect x="153.8" y="1107.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (4 samples, 0.19%)</title><rect x="153.8" y="1091.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (4 samples, 0.19%)</title><rect x="153.8" y="1075.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="156.8" y="1086.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (4 samples, 0.19%)</title><rect x="153.8" y="1059.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.8" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (4 samples, 0.19%)</title><rect x="153.8" y="1043.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.8" y="1054.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (4 samples, 0.19%)</title><rect x="153.8" y="1027.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.8" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (4 samples, 0.19%)</title><rect x="153.8" y="1011.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.8" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.19%)</title><rect x="153.8" y="995.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.8" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (4 samples, 0.19%)</title><rect x="153.8" y="979.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="156.8" y="990.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.14%)</title><rect x="153.8" y="963.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.8" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="154.4" y="947.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.4" y="958.0"></text>
</g>
<g>
<title>treadle/executable/IntSize$.hashCode (1 samples, 0.05%)</title><rect x="155.0" y="947.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.0" y="958.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (1 samples, 0.05%)</title><rect x="155.5" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="158.5" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (1 samples, 0.05%)</title><rect x="155.5" y="947.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="158.5" y="958.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$21915/849975120.apply$mcV$sp (35 samples, 1.63%)</title><rect x="156.1" y="1427.0" width="19.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.1" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (35 samples, 1.63%)</title><rect x="156.1" y="1411.0" width="19.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="159.1" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (35 samples, 1.63%)</title><rect x="156.1" y="1395.0" width="19.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.1" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (33 samples, 1.54%)</title><rect x="156.1" y="1379.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.1" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (33 samples, 1.54%)</title><rect x="156.1" y="1363.0" width="18.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="159.1" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (33 samples, 1.54%)</title><rect x="156.1" y="1347.0" width="18.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (33 samples, 1.54%)</title><rect x="156.1" y="1331.0" width="18.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="159.1" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.apply (33 samples, 1.54%)</title><rect x="156.1" y="1315.0" width="18.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="159.1" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (33 samples, 1.54%)</title><rect x="156.1" y="1299.0" width="18.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="159.1" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (33 samples, 1.54%)</title><rect x="156.1" y="1283.0" width="18.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.1" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (33 samples, 1.54%)</title><rect x="156.1" y="1267.0" width="18.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="159.1" y="1278.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.05%)</title><rect x="156.6" y="1251.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="159.6" y="1262.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="156.6" y="1235.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="159.6" y="1246.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="156.6" y="1219.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="159.6" y="1230.0"></text>
</g>
<g>
<title>CompiledIC::CompiledIC(nmethod*, NativeCall*) (1 samples, 0.05%)</title><rect x="156.6" y="1203.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="159.6" y="1214.0"></text>
</g>
<g>
<title>RelocIterator::set_limits(unsigned char*, unsigned char*) (1 samples, 0.05%)</title><rect x="156.6" y="1187.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="159.6" y="1198.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.05%)</title><rect x="156.6" y="1171.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="159.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/generic/GenericCompanion.apply (5 samples, 0.23%)</title><rect x="157.2" y="1251.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (4 samples, 0.19%)</title><rect x="157.7" y="1235.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="160.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (4 samples, 0.19%)</title><rect x="157.7" y="1219.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="160.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet$.empty (4 samples, 0.19%)</title><rect x="157.7" y="1203.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="160.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (4 samples, 0.19%)</title><rect x="157.7" y="1187.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (4 samples, 0.19%)</title><rect x="157.7" y="1171.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="160.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="157.7" y="1155.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="160.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="157.7" y="1139.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="157.7" y="1123.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="157.7" y="1107.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="160.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.$init$ (3 samples, 0.14%)</title><rect x="158.3" y="1155.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.initialCapacity (2 samples, 0.09%)</title><rect x="158.8" y="1139.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="161.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.capacity (2 samples, 0.09%)</title><rect x="158.8" y="1123.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.capacity$ (1 samples, 0.05%)</title><rect x="159.4" y="1107.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.initialSize (1 samples, 0.05%)</title><rect x="159.4" y="1091.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.apply (1 samples, 0.05%)</title><rect x="159.9" y="1251.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.apply$ (1 samples, 0.05%)</title><rect x="159.9" y="1235.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (3 samples, 0.14%)</title><rect x="160.5" y="1251.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="163.5" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (3 samples, 0.14%)</title><rect x="160.5" y="1235.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="163.5" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (3 samples, 0.14%)</title><rect x="160.5" y="1219.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="163.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (3 samples, 0.14%)</title><rect x="160.5" y="1203.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.5" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (3 samples, 0.14%)</title><rect x="160.5" y="1187.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (3 samples, 0.14%)</title><rect x="160.5" y="1171.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.5" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (3 samples, 0.14%)</title><rect x="160.5" y="1155.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.5" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.14%)</title><rect x="160.5" y="1139.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="163.5" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (3 samples, 0.14%)</title><rect x="160.5" y="1123.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.5" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.14%)</title><rect x="160.5" y="1107.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.5" y="1118.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.05%)</title><rect x="160.5" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.5" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="160.5" y="1075.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.5" y="1086.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="160.5" y="1059.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.5" y="1070.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="160.5" y="1043.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.5" y="1054.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mix (1 samples, 0.05%)</title><rect x="160.5" y="1027.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.5" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mixLast (1 samples, 0.05%)</title><rect x="160.5" y="1011.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.5" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="161.0" y="1091.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.0" y="1102.0"></text>
</g>
<g>
<title>treadle/executable/UnsignedInt$.hashCode (1 samples, 0.05%)</title><rect x="161.6" y="1091.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (14 samples, 0.65%)</title><rect x="162.1" y="1251.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="165.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (14 samples, 0.65%)</title><rect x="162.1" y="1235.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (14 samples, 0.65%)</title><rect x="162.1" y="1219.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="165.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (14 samples, 0.65%)</title><rect x="162.1" y="1203.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.1" y="1214.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.19%)</title><rect x="162.1" y="1187.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="165.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (8 samples, 0.37%)</title><rect x="164.3" y="1187.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (8 samples, 0.37%)</title><rect x="164.3" y="1171.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="167.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (8 samples, 0.37%)</title><rect x="164.3" y="1155.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="167.3" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (8 samples, 0.37%)</title><rect x="164.3" y="1139.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="167.3" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (8 samples, 0.37%)</title><rect x="164.3" y="1123.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.3" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (6 samples, 0.28%)</title><rect x="164.3" y="1107.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.3" y="1118.0"></text>
</g>
<g>
<title>firrtl/RegKind$.hashCode (1 samples, 0.05%)</title><rect x="164.9" y="1091.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="167.9" y="1102.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.09%)</title><rect x="165.4" y="1091.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="168.4" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.09%)</title><rect x="165.4" y="1075.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.4" y="1086.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.09%)</title><rect x="165.4" y="1059.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="168.4" y="1070.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.09%)</title><rect x="165.4" y="1043.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.4" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="165.4" y="1027.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.4" y="1038.0"></text>
</g>
<g>
<title>firrtl/ir/IntWidth.hashCode (1 samples, 0.05%)</title><rect x="166.0" y="1011.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.0" y="1022.0"></text>
</g>
<g>
<title>scala/math/BigInt.toInt (1 samples, 0.05%)</title><rect x="166.0" y="995.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="169.0" y="1006.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt$ (1 samples, 0.05%)</title><rect x="166.0" y="979.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.0" y="990.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt (1 samples, 0.05%)</title><rect x="166.0" y="963.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.0" y="974.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.05%)</title><rect x="166.0" y="947.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="169.0" y="958.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.05%)</title><rect x="166.0" y="931.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.0" y="942.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.05%)</title><rect x="166.0" y="915.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="169.0" y="926.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="166.5" y="1091.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="169.5" y="1102.0"></text>
</g>
<g>
<title>firrtl/RegKind$.hashCode (1 samples, 0.05%)</title><rect x="166.5" y="1075.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="169.5" y="1086.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="167.1" y="1091.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="170.1" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (2 samples, 0.09%)</title><rect x="167.6" y="1107.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="170.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.05%)</title><rect x="167.6" y="1091.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.6" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.05%)</title><rect x="168.2" y="1091.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="171.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.09%)</title><rect x="168.7" y="1187.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (2 samples, 0.09%)</title><rect x="168.7" y="1171.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="171.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (2 samples, 0.09%)</title><rect x="168.7" y="1155.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="171.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (2 samples, 0.09%)</title><rect x="168.7" y="1139.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.7" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.09%)</title><rect x="168.7" y="1123.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.7" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.09%)</title><rect x="168.7" y="1107.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.7" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.09%)</title><rect x="168.7" y="1091.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="171.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (3 samples, 0.14%)</title><rect x="169.8" y="1251.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="172.8" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (3 samples, 0.14%)</title><rect x="169.8" y="1235.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.8" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (3 samples, 0.14%)</title><rect x="169.8" y="1219.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="172.8" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (3 samples, 0.14%)</title><rect x="169.8" y="1203.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="172.8" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (3 samples, 0.14%)</title><rect x="169.8" y="1187.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (3 samples, 0.14%)</title><rect x="169.8" y="1171.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="172.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (3 samples, 0.14%)</title><rect x="169.8" y="1155.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="172.8" y="1166.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (3 samples, 0.14%)</title><rect x="169.8" y="1139.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.8" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (3 samples, 0.14%)</title><rect x="169.8" y="1123.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="172.8" y="1134.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (3 samples, 0.14%)</title><rect x="169.8" y="1107.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.8" y="1118.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (3 samples, 0.14%)</title><rect x="169.8" y="1091.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="172.8" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.14%)</title><rect x="169.8" y="1075.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="172.8" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="170.9" y="1059.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="173.9" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="170.9" y="1043.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.9" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.currentMap (1 samples, 0.05%)</title><rect x="171.5" y="1251.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.5" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.05%)</title><rect x="171.5" y="1235.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="174.5" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="171.5" y="1219.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="171.5" y="1203.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="174.5" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="171.5" y="1187.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="174.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="171.5" y="1171.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.5" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="171.5" y="1155.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="171.5" y="1139.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.5" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="171.5" y="1123.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.5" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="171.5" y="1107.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.5" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="171.5" y="1091.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="174.5" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="171.5" y="1075.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.5" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.05%)</title><rect x="171.5" y="1059.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.5" y="1070.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (2 samples, 0.09%)</title><rect x="172.0" y="1251.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (2 samples, 0.09%)</title><rect x="172.0" y="1235.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="175.0" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$21886/800006155.apply (2 samples, 0.09%)</title><rect x="172.0" y="1219.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="175.0" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (2 samples, 0.09%)</title><rect x="172.0" y="1203.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="175.0" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (2 samples, 0.09%)</title><rect x="172.0" y="1187.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="175.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (2 samples, 0.09%)</title><rect x="172.0" y="1171.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="175.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (2 samples, 0.09%)</title><rect x="172.0" y="1155.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (2 samples, 0.09%)</title><rect x="172.0" y="1139.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="175.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (2 samples, 0.09%)</title><rect x="172.0" y="1123.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="175.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (2 samples, 0.09%)</title><rect x="172.0" y="1107.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="175.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (2 samples, 0.09%)</title><rect x="172.0" y="1091.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="175.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (2 samples, 0.09%)</title><rect x="172.0" y="1075.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="175.0" y="1086.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (2 samples, 0.09%)</title><rect x="172.0" y="1059.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="175.0" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.09%)</title><rect x="172.0" y="1043.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.0" y="1054.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.09%)</title><rect x="172.0" y="1027.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.0" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.09%)</title><rect x="172.0" y="1011.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="175.0" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="172.0" y="995.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="175.0" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (2 samples, 0.09%)</title><rect x="172.0" y="979.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.0" y="990.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="172.0" y="963.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="175.0" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="172.0" y="947.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.0" y="958.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="172.0" y="931.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="175.0" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (1 samples, 0.05%)</title><rect x="172.6" y="963.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="175.6" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (1 samples, 0.05%)</title><rect x="172.6" y="947.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.6" y="958.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (2 samples, 0.09%)</title><rect x="173.1" y="1251.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (2 samples, 0.09%)</title><rect x="173.1" y="1235.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="176.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.09%)</title><rect x="173.1" y="1219.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.09%)</title><rect x="173.1" y="1203.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.09%)</title><rect x="173.1" y="1187.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="176.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.09%)</title><rect x="173.1" y="1171.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="176.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (2 samples, 0.09%)</title><rect x="173.1" y="1155.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (2 samples, 0.09%)</title><rect x="173.1" y="1139.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (2 samples, 0.09%)</title><rect x="173.1" y="1123.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.1" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.09%)</title><rect x="173.1" y="1107.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="176.1" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.09%)</title><rect x="173.1" y="1091.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="176.1" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.09%)</title><rect x="173.1" y="1075.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="176.1" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$21904/1789022700.apply$mcJ$sp (2 samples, 0.09%)</title><rect x="174.2" y="1379.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.2" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$8 (2 samples, 0.09%)</title><rect x="174.2" y="1363.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="177.2" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/SubLongs.apply (1 samples, 0.05%)</title><rect x="174.2" y="1347.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="177.2" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/TailLongs.apply (1 samples, 0.05%)</title><rect x="174.8" y="1347.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="177.8" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$21910/1937486255.apply$mcJ$sp (1 samples, 0.05%)</title><rect x="174.8" y="1331.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="177.8" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$157 (1 samples, 0.05%)</title><rect x="174.8" y="1315.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="177.8" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.getValue (1 samples, 0.05%)</title><rect x="175.3" y="1491.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="178.3" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1822383117.linkToTargetMethod (1 samples, 0.05%)</title><rect x="175.3" y="1475.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="178.3" y="1486.0"></text>
</g>
<g>
<title>treadle/TreadleTester.poke (1 samples, 0.05%)</title><rect x="175.9" y="1507.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.9" y="1518.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setValue (1 samples, 0.05%)</title><rect x="175.9" y="1491.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="178.9" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.update (1 samples, 0.05%)</title><rect x="175.9" y="1475.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.9" y="1486.0"></text>
</g>
<g>
<title>scala/math/BigInt.toLong (1 samples, 0.05%)</title><rect x="175.9" y="1459.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.9" y="1470.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toLong$ (1 samples, 0.05%)</title><rect x="175.9" y="1443.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="178.9" y="1454.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toLong (1 samples, 0.05%)</title><rect x="175.9" y="1427.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.9" y="1438.0"></text>
</g>
<g>
<title>scala/math/BigInt.longValue (1 samples, 0.05%)</title><rect x="175.9" y="1411.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.9" y="1422.0"></text>
</g>
<g>
<title>java/math/BigInteger.longValue (1 samples, 0.05%)</title><rect x="175.9" y="1395.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="178.9" y="1406.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.05%)</title><rect x="175.9" y="1379.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.9" y="1390.0"></text>
</g>
<g>
<title>treadle/TreadleTester.step (102 samples, 4.76%)</title><rect x="176.4" y="1507.0" width="56.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="179.4" y="1518.0">treadl..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.updateCycleMap (6 samples, 0.28%)</title><rect x="176.4" y="1491.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.4" y="1502.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (1 samples, 0.05%)</title><rect x="176.4" y="1475.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="179.4" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (1 samples, 0.05%)</title><rect x="176.4" y="1459.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="179.4" y="1470.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (1 samples, 0.05%)</title><rect x="176.4" y="1443.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="179.4" y="1454.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (1 samples, 0.05%)</title><rect x="176.4" y="1427.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.4" y="1438.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.loop$1 (1 samples, 0.05%)</title><rect x="176.4" y="1411.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="179.4" y="1422.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.nonEmpty (1 samples, 0.05%)</title><rect x="176.4" y="1395.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.4" y="1406.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.nonEmpty$ (1 samples, 0.05%)</title><rect x="176.4" y="1379.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="179.4" y="1390.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.nonEmpty (1 samples, 0.05%)</title><rect x="176.4" y="1363.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="179.4" y="1374.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="176.4" y="1347.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="179.4" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (5 samples, 0.23%)</title><rect x="177.0" y="1475.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.0" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (5 samples, 0.23%)</title><rect x="177.0" y="1459.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="180.0" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (5 samples, 0.23%)</title><rect x="177.0" y="1443.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="180.0" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (5 samples, 0.23%)</title><rect x="177.0" y="1427.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.0" y="1438.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="177.0" y="1411.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="180.0" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (2 samples, 0.09%)</title><rect x="177.5" y="1411.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="180.5" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (2 samples, 0.09%)</title><rect x="177.5" y="1395.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.5" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="178.1" y="1379.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="181.1" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="178.1" y="1363.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.1" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="178.1" y="1347.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.1" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="178.1" y="1331.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="181.1" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="178.1" y="1315.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.1" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.09%)</title><rect x="178.7" y="1411.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="181.7" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (2 samples, 0.09%)</title><rect x="178.7" y="1395.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="181.7" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (2 samples, 0.09%)</title><rect x="178.7" y="1379.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="181.7" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (2 samples, 0.09%)</title><rect x="178.7" y="1363.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="181.7" y="1374.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.09%)</title><rect x="178.7" y="1347.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="181.7" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.09%)</title><rect x="178.7" y="1331.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="181.7" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.09%)</title><rect x="178.7" y="1315.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.7" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.run (96 samples, 4.48%)</title><rect x="179.8" y="1491.0" width="52.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.8" y="1502.0">tread..</text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach$mVc$sp (96 samples, 4.48%)</title><rect x="179.8" y="1475.0" width="52.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.8" y="1486.0">scala..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper$$Lambda$21884/538115616.apply$mcVI$sp (96 samples, 4.48%)</title><rect x="179.8" y="1459.0" width="52.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.8" y="1470.0">tread..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.$anonfun$run$2 (96 samples, 4.48%)</title><rect x="179.8" y="1443.0" width="52.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="182.8" y="1454.0">tread..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (10 samples, 0.47%)</title><rect x="179.8" y="1427.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="182.8" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (10 samples, 0.47%)</title><rect x="179.8" y="1411.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.8" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (10 samples, 0.47%)</title><rect x="179.8" y="1395.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.8" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (10 samples, 0.47%)</title><rect x="179.8" y="1379.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.8" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.apply (1 samples, 0.05%)</title><rect x="179.8" y="1363.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.8" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply$ (1 samples, 0.05%)</title><rect x="179.8" y="1347.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.8" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply (1 samples, 0.05%)</title><rect x="179.8" y="1331.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.8" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$21877/517240099.apply$mcV$sp (4 samples, 0.19%)</title><rect x="180.3" y="1363.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.3" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (4 samples, 0.19%)</title><rect x="180.3" y="1347.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.3" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (4 samples, 0.19%)</title><rect x="180.3" y="1331.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="183.3" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.treadle$executable$DataStore$AssignInt$$$outer (1 samples, 0.05%)</title><rect x="180.3" y="1315.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="183.3" y="1326.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="180.3" y="1299.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="183.3" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (3 samples, 0.14%)</title><rect x="180.9" y="1315.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.9" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (3 samples, 0.14%)</title><rect x="180.9" y="1299.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="183.9" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (3 samples, 0.14%)</title><rect x="180.9" y="1283.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="183.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (3 samples, 0.14%)</title><rect x="180.9" y="1267.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.9" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.apply (3 samples, 0.14%)</title><rect x="180.9" y="1251.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.9" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (3 samples, 0.14%)</title><rect x="180.9" y="1235.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.9" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (3 samples, 0.14%)</title><rect x="180.9" y="1219.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="183.9" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (3 samples, 0.14%)</title><rect x="180.9" y="1203.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="183.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.05%)</title><rect x="180.9" y="1187.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="183.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="180.9" y="1171.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="180.9" y="1155.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="183.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="180.9" y="1139.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="180.9" y="1123.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="183.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="180.9" y="1107.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="183.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="180.9" y="1091.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.9" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="180.9" y="1075.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.9" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="180.9" y="1059.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="183.9" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.05%)</title><rect x="180.9" y="1043.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="183.9" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.05%)</title><rect x="180.9" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.9" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.05%)</title><rect x="181.4" y="1187.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="184.4" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.05%)</title><rect x="181.4" y="1171.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="184.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.05%)</title><rect x="181.4" y="1155.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="184.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="181.4" y="1139.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="184.4" y="1150.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="181.4" y="1123.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="184.4" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (1 samples, 0.05%)</title><rect x="182.0" y="1187.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="185.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.05%)</title><rect x="182.0" y="1171.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="185.0" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$21886/800006155.apply (1 samples, 0.05%)</title><rect x="182.0" y="1155.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.0" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (1 samples, 0.05%)</title><rect x="182.0" y="1139.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.0" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (1 samples, 0.05%)</title><rect x="182.0" y="1123.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (1 samples, 0.05%)</title><rect x="182.0" y="1107.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (1 samples, 0.05%)</title><rect x="182.0" y="1091.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (1 samples, 0.05%)</title><rect x="182.0" y="1075.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="185.0" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (1 samples, 0.05%)</title><rect x="182.0" y="1059.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="185.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (1 samples, 0.05%)</title><rect x="182.0" y="1043.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="185.0" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (1 samples, 0.05%)</title><rect x="182.0" y="1027.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.0" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (1 samples, 0.05%)</title><rect x="182.0" y="1011.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.0" y="1022.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (1 samples, 0.05%)</title><rect x="182.0" y="995.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="185.0" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="182.0" y="979.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="185.0" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="182.0" y="963.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.0" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="182.0" y="947.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.0" y="958.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="182.0" y="931.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="185.0" y="942.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="182.0" y="915.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.0" y="926.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="182.0" y="899.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="185.0" y="910.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.05%)</title><rect x="182.0" y="883.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.0" y="894.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="182.0" y="867.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.0" y="878.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="182.0" y="851.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="185.0" y="862.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="182.0" y="835.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.0" y="846.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (1 samples, 0.05%)</title><rect x="182.0" y="819.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="185.0" y="830.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (1 samples, 0.05%)</title><rect x="182.0" y="803.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.0" y="814.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$21915/849975120.apply$mcV$sp (5 samples, 0.23%)</title><rect x="182.5" y="1363.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.5" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (4 samples, 0.19%)</title><rect x="183.1" y="1347.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.1" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (4 samples, 0.19%)</title><rect x="183.1" y="1331.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.1" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (4 samples, 0.19%)</title><rect x="183.1" y="1315.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.1" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (4 samples, 0.19%)</title><rect x="183.1" y="1299.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="186.1" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (4 samples, 0.19%)</title><rect x="183.1" y="1283.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (4 samples, 0.19%)</title><rect x="183.1" y="1267.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.1" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.apply (4 samples, 0.19%)</title><rect x="183.1" y="1251.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="186.1" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (4 samples, 0.19%)</title><rect x="183.1" y="1235.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.1" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (4 samples, 0.19%)</title><rect x="183.1" y="1219.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.1" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (4 samples, 0.19%)</title><rect x="183.1" y="1203.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.05%)</title><rect x="183.1" y="1187.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.05%)</title><rect x="183.1" y="1171.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.05%)</title><rect x="183.1" y="1155.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="183.1" y="1139.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="183.1" y="1123.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="183.1" y="1107.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="183.1" y="1091.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.1" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="183.1" y="1075.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="186.1" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="183.1" y="1059.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.1" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="183.1" y="1043.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="186.1" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="183.1" y="1027.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.1" y="1038.0"></text>
</g>
<g>
<title>firrtl/RegKind$.hashCode (1 samples, 0.05%)</title><rect x="183.1" y="1011.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.1" y="1022.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (1 samples, 0.05%)</title><rect x="183.6" y="1187.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.05%)</title><rect x="183.6" y="1171.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="186.6" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$21886/800006155.apply (1 samples, 0.05%)</title><rect x="183.6" y="1155.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.6" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (1 samples, 0.05%)</title><rect x="183.6" y="1139.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.6" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (1 samples, 0.05%)</title><rect x="183.6" y="1123.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (1 samples, 0.05%)</title><rect x="183.6" y="1107.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (1 samples, 0.05%)</title><rect x="183.6" y="1091.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="186.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (1 samples, 0.05%)</title><rect x="183.6" y="1075.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (1 samples, 0.05%)</title><rect x="183.6" y="1059.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.6" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (1 samples, 0.05%)</title><rect x="183.6" y="1043.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="186.6" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (1 samples, 0.05%)</title><rect x="183.6" y="1027.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.6" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (1 samples, 0.05%)</title><rect x="183.6" y="1011.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.6" y="1022.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (1 samples, 0.05%)</title><rect x="183.6" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.6" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="183.6" y="979.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="186.6" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="183.6" y="963.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.6" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="183.6" y="947.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.6" y="958.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="183.6" y="931.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.6" y="942.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="183.6" y="915.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="186.6" y="926.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="183.6" y="899.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.6" y="910.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (2 samples, 0.09%)</title><rect x="184.2" y="1187.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (2 samples, 0.09%)</title><rect x="184.2" y="1171.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.09%)</title><rect x="184.2" y="1155.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.09%)</title><rect x="184.2" y="1139.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.09%)</title><rect x="184.2" y="1123.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="187.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="184.2" y="1107.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="187.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="184.7" y="1107.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="184.7" y="1091.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="187.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="184.7" y="1075.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="187.7" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="184.7" y="1059.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="184.7" y="1043.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.7" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.lowerClock$1 (3 samples, 0.14%)</title><rect x="185.3" y="1427.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.3" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setIntValue (3 samples, 0.14%)</title><rect x="185.3" y="1411.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="188.3" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$plus$eq (1 samples, 0.05%)</title><rect x="185.3" y="1395.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.3" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (1 samples, 0.05%)</title><rect x="185.3" y="1379.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="188.3" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (1 samples, 0.05%)</title><rect x="185.3" y="1363.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="188.3" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (1 samples, 0.05%)</title><rect x="185.3" y="1347.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="188.3" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (1 samples, 0.05%)</title><rect x="185.3" y="1331.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="188.3" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (1 samples, 0.05%)</title><rect x="185.3" y="1315.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="188.3" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (1 samples, 0.05%)</title><rect x="185.3" y="1299.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="188.3" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="185.3" y="1283.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.3" y="1294.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="185.3" y="1267.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.3" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.valueFrom (2 samples, 0.09%)</title><rect x="185.8" y="1395.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="188.8" y="1406.0"></text>
</g>
<g>
<title>scala/math/BigInt.$amp (1 samples, 0.05%)</title><rect x="185.8" y="1379.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="188.8" y="1390.0"></text>
</g>
<g>
<title>java/math/BigInteger.and (1 samples, 0.05%)</title><rect x="185.8" y="1363.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="188.8" y="1374.0"></text>
</g>
<g>
<title>scala/math/BigInt.$less (1 samples, 0.05%)</title><rect x="186.4" y="1379.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.4" y="1390.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$ (1 samples, 0.05%)</title><rect x="186.4" y="1363.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.4" y="1374.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less (1 samples, 0.05%)</title><rect x="186.4" y="1347.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="189.4" y="1358.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (1 samples, 0.05%)</title><rect x="186.4" y="1331.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.4" y="1342.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (1 samples, 0.05%)</title><rect x="186.4" y="1315.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.4" y="1326.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (1 samples, 0.05%)</title><rect x="186.4" y="1299.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="189.4" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.raiseClock$1 (83 samples, 3.88%)</title><rect x="186.9" y="1427.0" width="45.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="189.9" y="1438.0">trea..</text>
</g>
<g>
<title>treadle/chronometry/UTC.incrementTime (8 samples, 0.37%)</title><rect x="186.9" y="1411.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="189.9" y="1422.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.runUntil (8 samples, 0.37%)</title><rect x="186.9" y="1395.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="189.9" y="1406.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.setTime (8 samples, 0.37%)</title><rect x="186.9" y="1379.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.9" y="1390.0"></text>
</g>
<g>
<title>treadle/TreadleTester$$Lambda$21863/1932728723.apply$mcV$sp (8 samples, 0.37%)</title><rect x="186.9" y="1363.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.9" y="1374.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$2 (8 samples, 0.37%)</title><rect x="186.9" y="1347.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="189.9" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.run (1 samples, 0.05%)</title><rect x="190.2" y="1331.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.2" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$21851/1209957610.apply$mcV$sp (1 samples, 0.05%)</title><rect x="190.8" y="1331.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="193.8" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (75 samples, 3.50%)</title><rect x="191.3" y="1411.0" width="41.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="194.3" y="1422.0">tre..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (75 samples, 3.50%)</title><rect x="191.3" y="1395.0" width="41.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.3" y="1406.0">tre..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (75 samples, 3.50%)</title><rect x="191.3" y="1379.0" width="41.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="194.3" y="1390.0">tre..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (75 samples, 3.50%)</title><rect x="191.3" y="1363.0" width="41.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="194.3" y="1374.0">tre..</text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner$$Lambda$21878/2041363392.apply$mcV$sp (9 samples, 0.42%)</title><rect x="191.3" y="1347.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="194.3" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.$anonfun$setLeanMode$2 (9 samples, 0.42%)</title><rect x="191.3" y="1331.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="194.3" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.runFull (9 samples, 0.42%)</title><rect x="191.3" y="1315.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.3" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.isVerbose (1 samples, 0.05%)</title><rect x="191.3" y="1299.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="194.3" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/package$Assigner.isVerbose$ (1 samples, 0.05%)</title><rect x="191.3" y="1283.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.3" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/package$Assigner.isVerbose (1 samples, 0.05%)</title><rect x="191.3" y="1267.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="194.3" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.treadle$executable$Assigner$$verboseAssign (1 samples, 0.05%)</title><rect x="191.3" y="1251.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="194.3" y="1262.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.05%)</title><rect x="191.3" y="1235.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="194.3" y="1246.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="191.3" y="1219.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="194.3" y="1230.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="191.3" y="1203.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="194.3" y="1214.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.05%)</title><rect x="191.3" y="1187.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="194.3" y="1198.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.05%)</title><rect x="191.3" y="1171.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="194.3" y="1182.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="191.3" y="1155.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="194.3" y="1166.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.05%)</title><rect x="191.3" y="1139.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="194.3" y="1150.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.05%)</title><rect x="191.3" y="1123.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="194.3" y="1134.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (1 samples, 0.05%)</title><rect x="191.3" y="1107.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="194.3" y="1118.0"></text>
</g>
<g>
<title>OopMapValue::read_from(CompressedReadStream*) (1 samples, 0.05%)</title><rect x="191.3" y="1091.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="194.3" y="1102.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$21915/849975120.apply$mcV$sp (8 samples, 0.37%)</title><rect x="191.9" y="1299.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="194.9" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (8 samples, 0.37%)</title><rect x="191.9" y="1283.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="194.9" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (8 samples, 0.37%)</title><rect x="191.9" y="1267.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.9" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.expression (1 samples, 0.05%)</title><rect x="191.9" y="1251.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="194.9" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.treadle$executable$DataStore$AssignLong$$$outer (1 samples, 0.05%)</title><rect x="192.4" y="1251.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.4" y="1262.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="192.4" y="1235.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="195.4" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (6 samples, 0.28%)</title><rect x="193.0" y="1251.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (6 samples, 0.28%)</title><rect x="193.0" y="1235.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.0" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (6 samples, 0.28%)</title><rect x="193.0" y="1219.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (6 samples, 0.28%)</title><rect x="193.0" y="1203.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="196.0" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.apply (6 samples, 0.28%)</title><rect x="193.0" y="1187.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.0" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (6 samples, 0.28%)</title><rect x="193.0" y="1171.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.0" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (6 samples, 0.28%)</title><rect x="193.0" y="1155.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.0" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (6 samples, 0.28%)</title><rect x="193.0" y="1139.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="196.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (3 samples, 0.14%)</title><rect x="193.5" y="1123.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (3 samples, 0.14%)</title><rect x="193.5" y="1107.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (3 samples, 0.14%)</title><rect x="193.5" y="1091.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (3 samples, 0.14%)</title><rect x="193.5" y="1075.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (2 samples, 0.09%)</title><rect x="193.5" y="1059.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (2 samples, 0.09%)</title><rect x="193.5" y="1043.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="196.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (2 samples, 0.09%)</title><rect x="193.5" y="1027.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="196.5" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="193.5" y="1011.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="196.5" y="1022.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (2 samples, 0.09%)</title><rect x="193.5" y="995.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.5" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="193.5" y="979.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="196.5" y="990.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.05%)</title><rect x="193.5" y="963.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="196.5" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="194.1" y="963.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.1" y="974.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="194.6" y="1059.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="197.6" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="194.6" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.6" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="194.6" y="1027.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.6" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="194.6" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="197.6" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="194.6" y="995.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.6" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="194.6" y="979.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="197.6" y="990.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (1 samples, 0.05%)</title><rect x="195.2" y="1123.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.2" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.05%)</title><rect x="195.2" y="1107.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.2" y="1118.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.05%)</title><rect x="195.2" y="1091.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.2" y="1102.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.05%)</title><rect x="195.2" y="1075.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.2" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (1 samples, 0.05%)</title><rect x="195.7" y="1123.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (1 samples, 0.05%)</title><rect x="195.7" y="1107.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="198.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="195.7" y="1091.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="195.7" y="1075.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="195.7" y="1059.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="195.7" y="1043.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.7" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$21877/517240099.apply$mcV$sp (12 samples, 0.56%)</title><rect x="196.3" y="1347.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="199.3" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (12 samples, 0.56%)</title><rect x="196.3" y="1331.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.3" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (12 samples, 0.56%)</title><rect x="196.3" y="1315.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.3" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (12 samples, 0.56%)</title><rect x="196.3" y="1299.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="199.3" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (12 samples, 0.56%)</title><rect x="196.3" y="1283.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="199.3" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (12 samples, 0.56%)</title><rect x="196.3" y="1267.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="199.3" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (12 samples, 0.56%)</title><rect x="196.3" y="1251.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="199.3" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.apply (12 samples, 0.56%)</title><rect x="196.3" y="1235.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.3" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (12 samples, 0.56%)</title><rect x="196.3" y="1219.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="199.3" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (12 samples, 0.56%)</title><rect x="196.3" y="1203.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.3" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (12 samples, 0.56%)</title><rect x="196.3" y="1187.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="199.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/generic/GenericCompanion.apply (1 samples, 0.05%)</title><rect x="196.3" y="1171.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="199.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (1 samples, 0.05%)</title><rect x="196.3" y="1155.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (1 samples, 0.05%)</title><rect x="196.3" y="1139.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="199.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet$.empty (1 samples, 0.05%)</title><rect x="196.3" y="1123.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="199.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="196.3" y="1107.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="199.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="196.3" y="1091.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="196.3" y="1075.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="199.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="196.3" y="1059.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="196.3" y="1043.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="199.3" y="1054.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="196.3" y="1027.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.3" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.05%)</title><rect x="196.8" y="1171.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="196.8" y="1155.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="199.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="196.8" y="1139.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="196.8" y="1123.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="199.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="196.8" y="1107.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="196.8" y="1091.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="196.8" y="1075.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="196.8" y="1059.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="199.8" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="196.8" y="1043.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="199.8" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="196.8" y="1027.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.8" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="196.8" y="1011.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="199.8" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (5 samples, 0.23%)</title><rect x="197.4" y="1171.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="200.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (5 samples, 0.23%)</title><rect x="197.4" y="1155.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="200.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (5 samples, 0.23%)</title><rect x="197.4" y="1139.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="200.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (5 samples, 0.23%)</title><rect x="197.4" y="1123.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="200.4" y="1134.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.14%)</title><rect x="197.9" y="1107.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="200.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="199.6" y="1107.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="199.6" y="1091.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="199.6" y="1075.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.6" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="199.6" y="1059.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.6" y="1070.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="199.6" y="1043.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.6" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="199.6" y="1027.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="202.6" y="1038.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.05%)</title><rect x="199.6" y="1011.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.6" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="199.6" y="995.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="202.6" y="1006.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="199.6" y="979.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.6" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="199.6" y="963.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.6" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="199.6" y="947.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.6" y="958.0"></text>
</g>
<g>
<title>firrtl/ir/IntWidth.hashCode (1 samples, 0.05%)</title><rect x="199.6" y="931.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.6" y="942.0"></text>
</g>
<g>
<title>scala/math/BigInt.toInt (1 samples, 0.05%)</title><rect x="199.6" y="915.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="202.6" y="926.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt$ (1 samples, 0.05%)</title><rect x="199.6" y="899.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.6" y="910.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt (1 samples, 0.05%)</title><rect x="199.6" y="883.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="202.6" y="894.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.05%)</title><rect x="199.6" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.6" y="878.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.05%)</title><rect x="199.6" y="851.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.6" y="862.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.05%)</title><rect x="199.6" y="835.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.6" y="846.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.currentMap (1 samples, 0.05%)</title><rect x="200.1" y="1171.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.05%)</title><rect x="200.1" y="1155.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="200.1" y="1139.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="200.1" y="1123.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="200.1" y="1107.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="203.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="200.1" y="1091.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="200.1" y="1075.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="200.1" y="1059.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="203.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="200.1" y="1043.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.1" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="200.1" y="1027.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.1" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="200.1" y="1011.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.1" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="200.1" y="995.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="203.1" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (1 samples, 0.05%)</title><rect x="200.7" y="1171.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.7" y="1182.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.05%)</title><rect x="200.7" y="1155.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="203.7" y="1166.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.05%)</title><rect x="200.7" y="1139.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.7" y="1150.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.05%)</title><rect x="200.7" y="1123.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.7" y="1134.0"></text>
</g>
<g>
<title>java/math/BigInteger.signInt (1 samples, 0.05%)</title><rect x="200.7" y="1107.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.7" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (3 samples, 0.14%)</title><rect x="201.2" y="1171.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (3 samples, 0.14%)</title><rect x="201.2" y="1155.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="204.2" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$21886/800006155.apply (3 samples, 0.14%)</title><rect x="201.2" y="1139.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.2" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (3 samples, 0.14%)</title><rect x="201.2" y="1123.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.2" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (3 samples, 0.14%)</title><rect x="201.2" y="1107.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="204.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (3 samples, 0.14%)</title><rect x="201.2" y="1091.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="204.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (3 samples, 0.14%)</title><rect x="201.2" y="1075.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="204.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (3 samples, 0.14%)</title><rect x="201.2" y="1059.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (3 samples, 0.14%)</title><rect x="201.2" y="1043.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="204.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (3 samples, 0.14%)</title><rect x="201.2" y="1027.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="204.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.elemToEntry$ (1 samples, 0.05%)</title><rect x="201.2" y="1011.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="204.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (2 samples, 0.09%)</title><rect x="201.8" y="1011.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.8" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (2 samples, 0.09%)</title><rect x="201.8" y="995.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="204.8" y="1006.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (2 samples, 0.09%)</title><rect x="201.8" y="979.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.8" y="990.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.09%)</title><rect x="201.8" y="963.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.8" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.09%)</title><rect x="201.8" y="947.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.8" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.09%)</title><rect x="201.8" y="931.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="204.8" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="201.8" y="915.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.8" y="926.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="202.3" y="899.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="205.3" y="910.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="202.3" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="205.3" y="894.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="202.3" y="867.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="205.3" y="878.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$21915/849975120.apply$mcV$sp (54 samples, 2.52%)</title><rect x="202.9" y="1347.0" width="29.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="205.9" y="1358.0">tr..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (54 samples, 2.52%)</title><rect x="202.9" y="1331.0" width="29.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="205.9" y="1342.0">tr..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (54 samples, 2.52%)</title><rect x="202.9" y="1315.0" width="29.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="205.9" y="1326.0">tr..</text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.05%)</title><rect x="202.9" y="1299.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="205.9" y="1310.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (1 samples, 0.05%)</title><rect x="202.9" y="1283.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.9" y="1294.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.05%)</title><rect x="202.9" y="1267.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.9" y="1278.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.05%)</title><rect x="202.9" y="1251.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="205.9" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (52 samples, 2.43%)</title><rect x="203.5" y="1299.0" width="28.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.5" y="1310.0">tr..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2144838275.linkToTargetMethod (1 samples, 0.05%)</title><rect x="203.5" y="1283.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/920459577.invokeStatic_LIL_L (1 samples, 0.05%)</title><rect x="203.5" y="1267.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.5" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.get$Lambda (1 samples, 0.05%)</title><rect x="203.5" y="1251.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.5" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (51 samples, 2.38%)</title><rect x="204.0" y="1283.0" width="28.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.0" y="1294.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (51 samples, 2.38%)</title><rect x="204.0" y="1267.0" width="28.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="207.0" y="1278.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (51 samples, 2.38%)</title><rect x="204.0" y="1251.0" width="28.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.0" y="1262.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.array (1 samples, 0.05%)</title><rect x="204.0" y="1235.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.0" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.apply (50 samples, 2.34%)</title><rect x="204.6" y="1235.0" width="27.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="207.6" y="1246.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (50 samples, 2.34%)</title><rect x="204.6" y="1219.0" width="27.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.6" y="1230.0">t..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (50 samples, 2.34%)</title><rect x="204.6" y="1203.0" width="27.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.6" y="1214.0">t..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (50 samples, 2.34%)</title><rect x="204.6" y="1187.0" width="27.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.6" y="1198.0">t..</text>
</g>
<g>
<title>scala/LowPriorityImplicits.wrapRefArray (2 samples, 0.09%)</title><rect x="205.1" y="1171.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.&lt;init&gt; (2 samples, 0.09%)</title><rect x="205.1" y="1155.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="208.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.&lt;init&gt; (2 samples, 0.09%)</title><rect x="205.1" y="1139.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSeq.&lt;init&gt; (2 samples, 0.09%)</title><rect x="205.1" y="1123.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.&lt;init&gt; (2 samples, 0.09%)</title><rect x="205.1" y="1107.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (2 samples, 0.09%)</title><rect x="205.1" y="1091.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (2 samples, 0.09%)</title><rect x="205.1" y="1075.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/Traversable.$init$ (1 samples, 0.05%)</title><rect x="205.7" y="1059.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/generic/GenericCompanion.apply (7 samples, 0.33%)</title><rect x="206.2" y="1171.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="209.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (6 samples, 0.28%)</title><rect x="206.8" y="1155.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="209.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (6 samples, 0.28%)</title><rect x="206.8" y="1139.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet$.empty (6 samples, 0.28%)</title><rect x="206.8" y="1123.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (3 samples, 0.14%)</title><rect x="208.4" y="1107.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="211.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (3 samples, 0.14%)</title><rect x="208.4" y="1091.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSet.&lt;init&gt; (2 samples, 0.09%)</title><rect x="208.4" y="1075.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.4" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractIterable.&lt;init&gt; (2 samples, 0.09%)</title><rect x="208.4" y="1059.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (2 samples, 0.09%)</title><rect x="208.4" y="1043.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.4" y="1054.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (2 samples, 0.09%)</title><rect x="208.4" y="1027.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="211.4" y="1038.0"></text>
</g>
<g>
<title>scala/collection/Parallelizable.$init$ (1 samples, 0.05%)</title><rect x="209.0" y="1011.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.$init$ (1 samples, 0.05%)</title><rect x="209.5" y="1075.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="212.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.initialCapacity (1 samples, 0.05%)</title><rect x="209.5" y="1059.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.capacity (1 samples, 0.05%)</title><rect x="209.5" y="1043.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.capacity$ (1 samples, 0.05%)</title><rect x="209.5" y="1027.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.5" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (6 samples, 0.28%)</title><rect x="210.1" y="1171.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (6 samples, 0.28%)</title><rect x="210.1" y="1155.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (6 samples, 0.28%)</title><rect x="210.1" y="1139.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="213.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (6 samples, 0.28%)</title><rect x="210.1" y="1123.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (3 samples, 0.14%)</title><rect x="210.1" y="1107.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="213.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (3 samples, 0.14%)</title><rect x="210.1" y="1091.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="213.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (3 samples, 0.14%)</title><rect x="210.1" y="1075.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="213.1" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.14%)</title><rect x="210.1" y="1059.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="213.1" y="1070.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (3 samples, 0.14%)</title><rect x="210.1" y="1043.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="213.1" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="210.1" y="1027.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="213.1" y="1038.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.05%)</title><rect x="210.6" y="1011.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="213.6" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="210.6" y="995.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="213.6" y="1006.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="210.6" y="979.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="213.6" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="210.6" y="963.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.6" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="210.6" y="947.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="213.6" y="958.0"></text>
</g>
<g>
<title>firrtl/ir/IntWidth.hashCode (1 samples, 0.05%)</title><rect x="210.6" y="931.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="213.6" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.05%)</title><rect x="211.2" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.05%)</title><rect x="211.2" y="1011.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="214.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (3 samples, 0.14%)</title><rect x="211.7" y="1107.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (3 samples, 0.14%)</title><rect x="211.7" y="1091.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (3 samples, 0.14%)</title><rect x="211.7" y="1075.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="214.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (3 samples, 0.14%)</title><rect x="211.7" y="1059.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="214.7" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (3 samples, 0.14%)</title><rect x="211.7" y="1043.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="214.7" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (3 samples, 0.14%)</title><rect x="211.7" y="1027.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="214.7" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (3 samples, 0.14%)</title><rect x="211.7" y="1011.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (21 samples, 0.98%)</title><rect x="213.4" y="1171.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (21 samples, 0.98%)</title><rect x="213.4" y="1155.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (21 samples, 0.98%)</title><rect x="213.4" y="1139.0" width="11.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (21 samples, 0.98%)</title><rect x="213.4" y="1123.0" width="11.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="216.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (9 samples, 0.42%)</title><rect x="213.4" y="1107.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="216.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (9 samples, 0.42%)</title><rect x="213.4" y="1091.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (9 samples, 0.42%)</title><rect x="213.4" y="1075.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.4" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (9 samples, 0.42%)</title><rect x="213.4" y="1059.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.4" y="1070.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (8 samples, 0.37%)</title><rect x="213.9" y="1043.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.9" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (5 samples, 0.23%)</title><rect x="213.9" y="1027.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.9" y="1038.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.09%)</title><rect x="215.6" y="1011.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="218.6" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.09%)</title><rect x="215.6" y="995.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="218.6" y="1006.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.09%)</title><rect x="215.6" y="979.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.6" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.09%)</title><rect x="215.6" y="963.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.6" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (2 samples, 0.09%)</title><rect x="215.6" y="947.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.6" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (2 samples, 0.09%)</title><rect x="215.6" y="931.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="218.6" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (2 samples, 0.09%)</title><rect x="216.7" y="1027.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="219.7" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (2 samples, 0.09%)</title><rect x="216.7" y="1011.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="219.7" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.05%)</title><rect x="217.8" y="1027.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="220.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.05%)</title><rect x="217.8" y="1011.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.8" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (9 samples, 0.42%)</title><rect x="218.3" y="1107.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (8 samples, 0.37%)</title><rect x="218.9" y="1091.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="221.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (7 samples, 0.33%)</title><rect x="219.4" y="1075.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="222.4" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (7 samples, 0.33%)</title><rect x="219.4" y="1059.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="222.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (7 samples, 0.33%)</title><rect x="219.4" y="1043.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.4" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (7 samples, 0.33%)</title><rect x="219.4" y="1027.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.4" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="219.4" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="222.4" y="1022.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (6 samples, 0.28%)</title><rect x="220.0" y="1011.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="223.0" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.19%)</title><rect x="220.0" y="995.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="223.0" y="1006.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.09%)</title><rect x="220.5" y="979.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="223.5" y="990.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="221.1" y="963.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.1" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="221.1" y="947.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.1" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="221.1" y="931.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="224.1" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="221.1" y="915.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="224.1" y="926.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="221.6" y="979.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="224.6" y="990.0"></text>
</g>
<g>
<title>firrtl/PortKind$.hashCode (1 samples, 0.05%)</title><rect x="221.6" y="963.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="224.6" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (2 samples, 0.09%)</title><rect x="222.2" y="995.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="225.2" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (2 samples, 0.09%)</title><rect x="222.2" y="979.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="225.2" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (3 samples, 0.14%)</title><rect x="223.3" y="1107.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="226.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (3 samples, 0.14%)</title><rect x="223.3" y="1091.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="226.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (3 samples, 0.14%)</title><rect x="223.3" y="1075.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (3 samples, 0.14%)</title><rect x="223.3" y="1059.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="226.3" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (3 samples, 0.14%)</title><rect x="223.3" y="1043.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="226.3" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (3 samples, 0.14%)</title><rect x="223.3" y="1027.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="226.3" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.09%)</title><rect x="223.8" y="1011.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.8" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (3 samples, 0.14%)</title><rect x="224.9" y="1171.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (3 samples, 0.14%)</title><rect x="224.9" y="1155.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (3 samples, 0.14%)</title><rect x="224.9" y="1139.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (3 samples, 0.14%)</title><rect x="224.9" y="1123.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (3 samples, 0.14%)</title><rect x="224.9" y="1107.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (3 samples, 0.14%)</title><rect x="224.9" y="1091.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (2 samples, 0.09%)</title><rect x="225.5" y="1075.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="228.5" y="1086.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (1 samples, 0.05%)</title><rect x="225.5" y="1059.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="228.5" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="225.5" y="1043.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="228.5" y="1054.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="225.5" y="1027.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="228.5" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="225.5" y="1011.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="228.5" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="225.5" y="995.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.5" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="225.5" y="979.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="228.5" y="990.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.name (1 samples, 0.05%)</title><rect x="225.5" y="963.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="228.5" y="974.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.index (1 samples, 0.05%)</title><rect x="226.0" y="1059.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="229.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index$ (1 samples, 0.05%)</title><rect x="226.0" y="1043.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.0" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index (1 samples, 0.05%)</title><rect x="226.0" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="229.0" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.improve (1 samples, 0.05%)</title><rect x="226.0" y="1011.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="229.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve$ (1 samples, 0.05%)</title><rect x="226.0" y="995.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="229.0" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.currentMap (1 samples, 0.05%)</title><rect x="226.6" y="1171.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="229.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.05%)</title><rect x="226.6" y="1155.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="226.6" y="1139.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="229.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="226.6" y="1123.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="229.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="226.6" y="1107.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="229.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="226.6" y="1091.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="229.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="226.6" y="1075.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="226.6" y="1059.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="229.6" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="226.6" y="1043.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="229.6" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="226.6" y="1027.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="229.6" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="226.6" y="1011.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="229.6" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="226.6" y="995.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="229.6" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (1 samples, 0.05%)</title><rect x="227.2" y="1171.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.2" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.05%)</title><rect x="227.2" y="1155.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="230.2" y="1166.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (1 samples, 0.05%)</title><rect x="227.2" y="1139.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="230.2" y="1150.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.05%)</title><rect x="227.2" y="1123.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="230.2" y="1134.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.05%)</title><rect x="227.2" y="1107.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.2" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (7 samples, 0.33%)</title><rect x="227.7" y="1171.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (7 samples, 0.33%)</title><rect x="227.7" y="1155.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.7" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$21886/800006155.apply (7 samples, 0.33%)</title><rect x="227.7" y="1139.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="230.7" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (7 samples, 0.33%)</title><rect x="227.7" y="1123.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.7" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (7 samples, 0.33%)</title><rect x="227.7" y="1107.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (7 samples, 0.33%)</title><rect x="227.7" y="1091.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (7 samples, 0.33%)</title><rect x="227.7" y="1075.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (7 samples, 0.33%)</title><rect x="227.7" y="1059.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (7 samples, 0.33%)</title><rect x="227.7" y="1043.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (7 samples, 0.33%)</title><rect x="227.7" y="1027.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (6 samples, 0.28%)</title><rect x="228.3" y="1011.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="231.3" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (6 samples, 0.28%)</title><rect x="228.3" y="995.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.3" y="1006.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (4 samples, 0.19%)</title><rect x="228.3" y="979.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.3" y="990.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (4 samples, 0.19%)</title><rect x="228.3" y="963.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="231.3" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (4 samples, 0.19%)</title><rect x="228.3" y="947.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="231.3" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (4 samples, 0.19%)</title><rect x="228.3" y="931.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="231.3" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.19%)</title><rect x="228.3" y="915.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="231.3" y="926.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (4 samples, 0.19%)</title><rect x="228.3" y="899.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.3" y="910.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.19%)</title><rect x="228.3" y="883.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.3" y="894.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.05%)</title><rect x="228.8" y="867.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="231.8" y="878.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="228.8" y="851.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.8" y="862.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="228.8" y="835.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.8" y="846.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="228.8" y="819.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="231.8" y="830.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (1 samples, 0.05%)</title><rect x="228.8" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.8" y="814.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (1 samples, 0.05%)</title><rect x="228.8" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="231.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="229.4" y="867.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="232.4" y="878.0"></text>
</g>
<g>
<title>firrtl/ir/NoInfo$.hashCode (1 samples, 0.05%)</title><rect x="229.4" y="851.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.4" y="862.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="229.9" y="867.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="232.9" y="878.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.09%)</title><rect x="230.5" y="979.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="233.5" y="990.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.09%)</title><rect x="230.5" y="963.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="233.5" y="974.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.09%)</title><rect x="230.5" y="947.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="233.5" y="958.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (2 samples, 0.09%)</title><rect x="230.5" y="931.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="233.5" y="942.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (1 samples, 0.05%)</title><rect x="231.6" y="1171.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="234.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (1 samples, 0.05%)</title><rect x="231.6" y="1155.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="234.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="231.6" y="1139.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="234.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="231.6" y="1123.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="234.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="231.6" y="1107.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="231.6" y="1091.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="234.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="231.6" y="1075.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="234.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="231.6" y="1059.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="234.6" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="231.6" y="1043.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="234.6" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="231.6" y="1027.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="234.6" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="231.6" y="1011.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="234.6" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="231.6" y="995.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="234.6" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$21904/1789022700.apply$mcJ$sp (1 samples, 0.05%)</title><rect x="232.1" y="1299.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.1" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$8 (1 samples, 0.05%)</title><rect x="232.1" y="1283.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="235.1" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/TailLongs.apply (1 samples, 0.05%)</title><rect x="232.1" y="1267.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.1" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$21910/1937486255.apply$mcJ$sp (1 samples, 0.05%)</title><rect x="232.1" y="1251.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.1" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$157 (1 samples, 0.05%)</title><rect x="232.1" y="1235.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/StringOps.format (1 samples, 0.05%)</title><rect x="232.7" y="1699.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="235.7" y="1710.0"></text>
</g>
<g>
<title>scala/collection/immutable/StringLike.format$ (1 samples, 0.05%)</title><rect x="232.7" y="1683.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.7" y="1694.0"></text>
</g>
<g>
<title>scala/collection/immutable/StringLike.format (1 samples, 0.05%)</title><rect x="232.7" y="1667.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="235.7" y="1678.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.05%)</title><rect x="232.7" y="1651.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="235.7" y="1662.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="232.7" y="1635.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="235.7" y="1646.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="232.7" y="1619.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.7" y="1630.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.foreach (1 samples, 0.05%)</title><rect x="232.7" y="1603.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="235.7" y="1614.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach$ (1 samples, 0.05%)</title><rect x="232.7" y="1587.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="235.7" y="1598.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach (1 samples, 0.05%)</title><rect x="232.7" y="1571.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.7" y="1582.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3577/1680023710.apply (1 samples, 0.05%)</title><rect x="232.7" y="1555.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="235.7" y="1566.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="232.7" y="1539.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.7" y="1550.0"></text>
</g>
<g>
<title>scala/collection/immutable/StringLike$$Lambda$5274/1139364855.apply (1 samples, 0.05%)</title><rect x="232.7" y="1523.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.7" y="1534.0"></text>
</g>
<g>
<title>scala/collection/immutable/StringLike.$anonfun$format$1 (1 samples, 0.05%)</title><rect x="232.7" y="1507.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="235.7" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="232.7" y="1491.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="235.7" y="1502.0"></text>
</g>
<g>
<title>ConstantPoolCacheEntry::set_direct_call(Bytecodes::Code, methodHandle, bool) (1 samples, 0.05%)</title><rect x="232.7" y="1475.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="235.7" y="1486.0"></text>
</g>
<g>
<title>ConstantPoolCacheEntry::set_direct_or_vtable_call(Bytecodes::Code, methodHandle, int, bool) (1 samples, 0.05%)</title><rect x="232.7" y="1459.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="235.7" y="1470.0"></text>
</g>
<g>
<title>Method::result_type() const (1 samples, 0.05%)</title><rect x="232.7" y="1443.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="235.7" y="1454.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_returntype() (1 samples, 0.05%)</title><rect x="232.7" y="1427.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="235.7" y="1438.0"></text>
</g>
<g>
<title>SignatureIterator::parse_type() (1 samples, 0.05%)</title><rect x="232.7" y="1411.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="235.7" y="1422.0"></text>
</g>
<g>
<title>treadle/TreadleTester$.apply (4 samples, 0.19%)</title><rect x="233.2" y="1699.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.2" y="1710.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$.transform (4 samples, 0.19%)</title><rect x="233.2" y="1683.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.2" y="1694.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (4 samples, 0.19%)</title><rect x="233.2" y="1667.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.2" y="1678.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (4 samples, 0.19%)</title><rect x="233.2" y="1651.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="236.2" y="1662.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (4 samples, 0.19%)</title><rect x="233.2" y="1635.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="236.2" y="1646.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$$$Lambda$21007/882178822.apply (4 samples, 0.19%)</title><rect x="233.2" y="1619.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.2" y="1630.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$.$anonfun$transform$2 (4 samples, 0.19%)</title><rect x="233.2" y="1603.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="236.2" y="1614.0"></text>
</g>
<g>
<title>treadle/stage/phases/CreateTester$.transform (2 samples, 0.09%)</title><rect x="233.2" y="1587.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="236.2" y="1598.0"></text>
</g>
<g>
<title>treadle/stage/phases/CreateTester$.transform (2 samples, 0.09%)</title><rect x="233.2" y="1571.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="236.2" y="1582.0"></text>
</g>
<g>
<title>treadle/TreadleTester.&lt;init&gt; (2 samples, 0.09%)</title><rect x="233.2" y="1555.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="236.2" y="1566.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$.apply (2 samples, 0.09%)</title><rect x="233.2" y="1539.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.2" y="1550.0"></text>
</g>
<g>
<title>treadle/chronometry/Timer.apply (2 samples, 0.09%)</title><rect x="233.2" y="1523.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.2" y="1534.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (2 samples, 0.09%)</title><rect x="233.2" y="1507.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.2" y="1518.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$$$Lambda$21814/2009740352.apply$mcV$sp (2 samples, 0.09%)</title><rect x="233.2" y="1491.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.2" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$.$anonfun$apply$8 (2 samples, 0.09%)</title><rect x="233.2" y="1475.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="236.2" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.compile (2 samples, 0.09%)</title><rect x="233.2" y="1459.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.2" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processModule (2 samples, 0.09%)</title><rect x="233.2" y="1443.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="236.2" y="1454.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processStatements (2 samples, 0.09%)</title><rect x="233.2" y="1427.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.2" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processStatements (2 samples, 0.09%)</title><rect x="233.2" y="1411.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.2" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.makeAssigner (1 samples, 0.05%)</title><rect x="233.2" y="1395.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.2" y="1406.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="233.2" y="1379.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="236.2" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="233.2" y="1363.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="236.2" y="1374.0"></text>
</g>
<g>
<title>sbt/internal/ManagedClassLoader.findClass (1 samples, 0.05%)</title><rect x="233.2" y="1347.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="236.2" y="1358.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="233.2" y="1331.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.2" y="1342.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="233.2" y="1315.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.2" y="1326.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="233.2" y="1299.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="236.2" y="1310.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="233.2" y="1283.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.2" y="1294.0"></text>
</g>
<g>
<title>sun/misc/URLClassPath.getResource (1 samples, 0.05%)</title><rect x="233.2" y="1267.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="236.2" y="1278.0"></text>
</g>
<g>
<title>sun/misc/URLClassPath$FileLoader.getResource (1 samples, 0.05%)</title><rect x="233.2" y="1251.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="236.2" y="1262.0"></text>
</g>
<g>
<title>java/io/File.exists (1 samples, 0.05%)</title><rect x="233.2" y="1235.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="236.2" y="1246.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.05%)</title><rect x="233.2" y="1219.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="236.2" y="1230.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.05%)</title><rect x="233.2" y="1203.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="236.2" y="1214.0"></text>
</g>
<g>
<title>stat64 (1 samples, 0.05%)</title><rect x="233.2" y="1187.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="236.2" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processExpression$1 (1 samples, 0.05%)</title><rect x="233.8" y="1395.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.8" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.binaryOps$1 (1 samples, 0.05%)</title><rect x="233.8" y="1379.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="236.8" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.handleLongResult$1 (1 samples, 0.05%)</title><rect x="233.8" y="1363.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.05%)</title><rect x="233.8" y="1347.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.8" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.05%)</title><rect x="233.8" y="1331.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.05%)</title><rect x="233.8" y="1315.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="236.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/657561241.invoke_MT (1 samples, 0.05%)</title><rect x="233.8" y="1299.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$BMH/163661913.reinvoke (1 samples, 0.05%)</title><rect x="233.8" y="1283.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="236.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/282432134.invokeStatic_L4_L (1 samples, 0.05%)</title><rect x="233.8" y="1267.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="236.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.05%)</title><rect x="233.8" y="1251.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.05%)</title><rect x="233.8" y="1235.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="236.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.05%)</title><rect x="233.8" y="1219.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.8" y="1230.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.defineAnonymousClass (1 samples, 0.05%)</title><rect x="233.8" y="1203.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.8" y="1214.0"></text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass (1 samples, 0.05%)</title><rect x="233.8" y="1187.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="236.8" y="1198.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, KlassHandle, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="233.8" y="1171.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="236.8" y="1182.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.05%)</title><rect x="233.8" y="1155.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="236.8" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.05%)</title><rect x="233.8" y="1139.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="236.8" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::link_methods(Thread*) (1 samples, 0.05%)</title><rect x="233.8" y="1123.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="236.8" y="1134.0"></text>
</g>
<g>
<title>Method::link_method(methodHandle, Thread*) (1 samples, 0.05%)</title><rect x="233.8" y="1107.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="236.8" y="1118.0"></text>
</g>
<g>
<title>AbstractInterpreter::entry_for_method(methodHandle) (1 samples, 0.05%)</title><rect x="233.8" y="1091.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="236.8" y="1102.0"></text>
</g>
<g>
<title>Method::is_empty_method() const (1 samples, 0.05%)</title><rect x="233.8" y="1075.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="236.8" y="1086.0"></text>
</g>
<g>
<title>treadle/stage/phases/GetFirrtlAst$.transform (1 samples, 0.05%)</title><rect x="234.3" y="1587.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.3" y="1598.0"></text>
</g>
<g>
<title>treadle/stage/phases/GetFirrtlAst$.transform (1 samples, 0.05%)</title><rect x="234.3" y="1571.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.3" y="1582.0"></text>
</g>
<g>
<title>scala/Option.getOrElse (1 samples, 0.05%)</title><rect x="234.3" y="1555.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.3" y="1566.0"></text>
</g>
<g>
<title>treadle/stage/phases/GetFirrtlAst$$$Lambda$21009/521225013.apply (1 samples, 0.05%)</title><rect x="234.3" y="1539.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.3" y="1550.0"></text>
</g>
<g>
<title>treadle/stage/phases/GetFirrtlAst$.$anonfun$transform$2 (1 samples, 0.05%)</title><rect x="234.3" y="1523.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.3" y="1534.0"></text>
</g>
<g>
<title>treadle/stage/phases/GetFirrtlAst$.handleFirrtlSource$1 (1 samples, 0.05%)</title><rect x="234.3" y="1507.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.3" y="1518.0"></text>
</g>
<g>
<title>firrtl/Parser$.parse (1 samples, 0.05%)</title><rect x="234.3" y="1491.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="237.3" y="1502.0"></text>
</g>
<g>
<title>firrtl/Parser$.parseString (1 samples, 0.05%)</title><rect x="234.3" y="1475.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.3" y="1486.0"></text>
</g>
<g>
<title>firrtl/Parser$.parseCharStream (1 samples, 0.05%)</title><rect x="234.3" y="1459.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.3" y="1470.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (1 samples, 0.05%)</title><rect x="234.3" y="1443.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.3" y="1454.0"></text>
</g>
<g>
<title>firrtl/Parser$$$Lambda$21010/883246950.apply (1 samples, 0.05%)</title><rect x="234.3" y="1427.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.3" y="1438.0"></text>
</g>
<g>
<title>firrtl/Parser$.$anonfun$parseCharStream$1 (1 samples, 0.05%)</title><rect x="234.3" y="1411.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.3" y="1422.0"></text>
</g>
<g>
<title>firrtl/antlr/FIRRTLParser.circuit (1 samples, 0.05%)</title><rect x="234.3" y="1395.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.3" y="1406.0"></text>
</g>
<g>
<title>firrtl/antlr/FIRRTLParser.module (1 samples, 0.05%)</title><rect x="234.3" y="1379.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.3" y="1390.0"></text>
</g>
<g>
<title>firrtl/antlr/FIRRTLParser.moduleBlock (1 samples, 0.05%)</title><rect x="234.3" y="1363.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.3" y="1374.0"></text>
</g>
<g>
<title>firrtl/antlr/FIRRTLParser.simple_stmt (1 samples, 0.05%)</title><rect x="234.3" y="1347.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.3" y="1358.0"></text>
</g>
<g>
<title>firrtl/antlr/FIRRTLParser.stmt (1 samples, 0.05%)</title><rect x="234.3" y="1331.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.3" y="1342.0"></text>
</g>
<g>
<title>firrtl/antlr/FIRRTLParser.type (1 samples, 0.05%)</title><rect x="234.3" y="1315.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.3" y="1326.0"></text>
</g>
<g>
<title>org/antlr/v4/runtime/Recognizer.setState (1 samples, 0.05%)</title><rect x="234.3" y="1299.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.3" y="1310.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="234.3" y="1283.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="237.3" y="1294.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="234.3" y="1267.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="237.3" y="1278.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="234.3" y="1251.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="237.3" y="1262.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="234.3" y="1235.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="237.3" y="1246.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.05%)</title><rect x="234.3" y="1219.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="237.3" y="1230.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.05%)</title><rect x="234.3" y="1203.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="237.3" y="1214.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*) (1 samples, 0.05%)</title><rect x="234.3" y="1187.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="237.3" y="1198.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*) (1 samples, 0.05%)</title><rect x="234.3" y="1171.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="237.3" y="1182.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.05%)</title><rect x="234.3" y="1155.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="237.3" y="1166.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.05%)</title><rect x="234.3" y="1139.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="237.3" y="1150.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.05%)</title><rect x="234.3" y="1123.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="237.3" y="1134.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.05%)</title><rect x="234.3" y="1107.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="237.3" y="1118.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.05%)</title><rect x="234.3" y="1091.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="237.3" y="1102.0"></text>
</g>
<g>
<title>treadle/stage/phases/PrepareAst$.transform (1 samples, 0.05%)</title><rect x="234.9" y="1587.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="237.9" y="1598.0"></text>
</g>
<g>
<title>treadle/stage/phases/PrepareAst$.transform (1 samples, 0.05%)</title><rect x="234.9" y="1571.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.9" y="1582.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.transform$ (1 samples, 0.05%)</title><rect x="234.9" y="1555.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.9" y="1566.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.transform (1 samples, 0.05%)</title><rect x="234.9" y="1539.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.9" y="1550.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.flatMap (1 samples, 0.05%)</title><rect x="234.9" y="1523.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.9" y="1534.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap$ (1 samples, 0.05%)</title><rect x="234.9" y="1507.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.9" y="1518.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap (1 samples, 0.05%)</title><rect x="234.9" y="1491.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.9" y="1502.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.05%)</title><rect x="234.9" y="1475.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.9" y="1486.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$4204/1202885598.apply (1 samples, 0.05%)</title><rect x="234.9" y="1459.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.9" y="1470.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$flatMap$1 (1 samples, 0.05%)</title><rect x="234.9" y="1443.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.9" y="1454.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase$$Lambda$21026/630470630.apply (1 samples, 0.05%)</title><rect x="234.9" y="1427.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.9" y="1438.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.$anonfun$transform$2 (1 samples, 0.05%)</title><rect x="234.9" y="1411.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="237.9" y="1422.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (1 samples, 0.05%)</title><rect x="234.9" y="1395.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.9" y="1406.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (1 samples, 0.05%)</title><rect x="234.9" y="1379.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.9" y="1390.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (1 samples, 0.05%)</title><rect x="234.9" y="1363.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.9" y="1374.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase$$Lambda$21027/1138740095.apply (1 samples, 0.05%)</title><rect x="234.9" y="1347.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.9" y="1358.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.$anonfun$transform$3 (1 samples, 0.05%)</title><rect x="234.9" y="1331.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.9" y="1342.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (1 samples, 0.05%)</title><rect x="234.9" y="1315.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="237.9" y="1326.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (1 samples, 0.05%)</title><rect x="234.9" y="1299.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.9" y="1310.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$21029/121264124.apply (1 samples, 0.05%)</title><rect x="234.9" y="1283.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.9" y="1294.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (1 samples, 0.05%)</title><rect x="234.9" y="1267.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.9" y="1278.0"></text>
</g>
<g>
<title>treadle/stage/phases/ChirrtlToLow.execute (1 samples, 0.05%)</title><rect x="234.9" y="1251.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.9" y="1262.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (1 samples, 0.05%)</title><rect x="234.9" y="1235.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.9" y="1246.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (1 samples, 0.05%)</title><rect x="234.9" y="1219.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.9" y="1230.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (1 samples, 0.05%)</title><rect x="234.9" y="1203.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.9" y="1214.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (1 samples, 0.05%)</title><rect x="234.9" y="1187.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (1 samples, 0.05%)</title><rect x="234.9" y="1171.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (1 samples, 0.05%)</title><rect x="234.9" y="1155.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (1 samples, 0.05%)</title><rect x="234.9" y="1139.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.9" y="1150.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$21030/969066331.apply (1 samples, 0.05%)</title><rect x="234.9" y="1123.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.9" y="1134.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (1 samples, 0.05%)</title><rect x="234.9" y="1107.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.9" y="1118.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (1 samples, 0.05%)</title><rect x="234.9" y="1091.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.9" y="1102.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (1 samples, 0.05%)</title><rect x="234.9" y="1075.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.9" y="1086.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$21029/121264124.apply (1 samples, 0.05%)</title><rect x="234.9" y="1059.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.9" y="1070.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (1 samples, 0.05%)</title><rect x="234.9" y="1043.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.9" y="1054.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (1 samples, 0.05%)</title><rect x="234.9" y="1027.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="237.9" y="1038.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (1 samples, 0.05%)</title><rect x="234.9" y="1011.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.9" y="1022.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (1 samples, 0.05%)</title><rect x="234.9" y="995.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.9" y="1006.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (1 samples, 0.05%)</title><rect x="234.9" y="979.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.9" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (1 samples, 0.05%)</title><rect x="234.9" y="963.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.9" y="974.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (1 samples, 0.05%)</title><rect x="234.9" y="947.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.9" y="958.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (1 samples, 0.05%)</title><rect x="234.9" y="931.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.9" y="942.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$21030/969066331.apply (1 samples, 0.05%)</title><rect x="234.9" y="915.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.9" y="926.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (1 samples, 0.05%)</title><rect x="234.9" y="899.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.9" y="910.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (1 samples, 0.05%)</title><rect x="234.9" y="883.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.9" y="894.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (1 samples, 0.05%)</title><rect x="234.9" y="867.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.9" y="878.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$21029/121264124.apply (1 samples, 0.05%)</title><rect x="234.9" y="851.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="237.9" y="862.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (1 samples, 0.05%)</title><rect x="234.9" y="835.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.9" y="846.0"></text>
</g>
<g>
<title>firrtl/transforms/CheckCombLoops.execute (1 samples, 0.05%)</title><rect x="234.9" y="819.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.9" y="830.0"></text>
</g>
<g>
<title>firrtl/transforms/CheckCombLoops.run (1 samples, 0.05%)</title><rect x="234.9" y="803.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="237.9" y="814.0"></text>
</g>
<g>
<title>firrtl/analyses/InstanceGraph.&lt;init&gt; (1 samples, 0.05%)</title><rect x="234.9" y="787.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.9" y="798.0"></text>
</g>
<g>
<title>scala/collection/mutable/IndexedSeqLike$$anon$1.map (1 samples, 0.05%)</title><rect x="234.9" y="771.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.9" y="782.0"></text>
</g>
<g>
<title>scala/collection/TraversableViewLike.map$ (1 samples, 0.05%)</title><rect x="234.9" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.9" y="766.0"></text>
</g>
<g>
<title>scala/collection/TraversableViewLike.map (1 samples, 0.05%)</title><rect x="234.9" y="739.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.9" y="750.0"></text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$20944/1745252874.apply$mcV$sp (168 samples, 7.85%)</title><rect x="235.4" y="1747.0" width="92.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.4" y="1758.0">treadle/GCD..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$new$3 (168 samples, 7.85%)</title><rect x="235.4" y="1731.0" width="92.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="238.4" y="1742.0">treadle/GCD..</text>
</g>
<g>
<title>treadle/GCDTester.sizableTest (168 samples, 7.85%)</title><rect x="235.4" y="1715.0" width="92.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.4" y="1726.0">treadle/GCD..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.foreach (164 samples, 7.66%)</title><rect x="235.4" y="1699.0" width="90.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="238.4" y="1710.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (164 samples, 7.66%)</title><rect x="235.4" y="1683.0" width="90.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.4" y="1694.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (164 samples, 7.66%)</title><rect x="235.4" y="1667.0" width="90.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="238.4" y="1678.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (164 samples, 7.66%)</title><rect x="235.4" y="1651.0" width="90.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.4" y="1662.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (164 samples, 7.66%)</title><rect x="235.4" y="1635.0" width="90.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.4" y="1646.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (164 samples, 7.66%)</title><rect x="235.4" y="1619.0" width="90.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="238.4" y="1630.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/Iterator.foreach (164 samples, 7.66%)</title><rect x="235.4" y="1603.0" width="90.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.4" y="1614.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter$$Lambda$3702/1735448379.apply (164 samples, 7.66%)</title><rect x="235.4" y="1587.0" width="90.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="238.4" y="1598.0">scala/coll..</text>
</g>
<g>
<title>scala/collection/TraversableLike$WithFilter.$anonfun$foreach$1 (164 samples, 7.66%)</title><rect x="235.4" y="1571.0" width="90.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="238.4" y="1582.0">scala/coll..</text>
</g>
<g>
<title>treadle/GCDTester$$Lambda$21883/1244445115.apply (164 samples, 7.66%)</title><rect x="235.4" y="1555.0" width="90.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="238.4" y="1566.0">treadle/GC..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$sizableTest$4$adapted (164 samples, 7.66%)</title><rect x="235.4" y="1539.0" width="90.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.4" y="1550.0">treadle/GC..</text>
</g>
<g>
<title>treadle/GCDTester.$anonfun$sizableTest$4 (164 samples, 7.66%)</title><rect x="235.4" y="1523.0" width="90.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.4" y="1534.0">treadle/GC..</text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.05%)</title><rect x="235.4" y="1507.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="238.4" y="1518.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.05%)</title><rect x="235.4" y="1491.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.4" y="1502.0"></text>
</g>
<g>
<title>scala/math/BigInt.&lt;init&gt; (1 samples, 0.05%)</title><rect x="235.4" y="1475.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.4" y="1486.0"></text>
</g>
<g>
<title>treadle/TreadleTester.peek (37 samples, 1.73%)</title><rect x="236.0" y="1507.0" width="20.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.0" y="1518.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (37 samples, 1.73%)</title><rect x="236.0" y="1491.0" width="20.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="239.0" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (37 samples, 1.73%)</title><rect x="236.0" y="1475.0" width="20.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.0" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (35 samples, 1.63%)</title><rect x="237.1" y="1459.0" width="19.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.1" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (35 samples, 1.63%)</title><rect x="237.1" y="1443.0" width="19.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="240.1" y="1454.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$21930/1261683543.apply$mcV$sp (27 samples, 1.26%)</title><rect x="237.1" y="1427.0" width="14.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.1" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (27 samples, 1.26%)</title><rect x="237.1" y="1411.0" width="14.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="240.1" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (27 samples, 1.26%)</title><rect x="237.1" y="1395.0" width="14.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="240.1" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (26 samples, 1.21%)</title><rect x="237.1" y="1379.0" width="14.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.1" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (26 samples, 1.21%)</title><rect x="237.1" y="1363.0" width="14.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.1" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (26 samples, 1.21%)</title><rect x="237.1" y="1347.0" width="14.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (26 samples, 1.21%)</title><rect x="237.1" y="1331.0" width="14.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="240.1" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.apply (26 samples, 1.21%)</title><rect x="237.1" y="1315.0" width="14.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="240.1" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (26 samples, 1.21%)</title><rect x="237.1" y="1299.0" width="14.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.1" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (26 samples, 1.21%)</title><rect x="237.1" y="1283.0" width="14.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.1" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (26 samples, 1.21%)</title><rect x="237.1" y="1267.0" width="14.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="240.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="237.1" y="1251.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="237.1" y="1235.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.05%)</title><rect x="237.1" y="1219.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="240.1" y="1230.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="237.1" y="1203.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="240.1" y="1214.0"></text>
</g>
<g>
<title>scala/LowPriorityImplicits.wrapRefArray (1 samples, 0.05%)</title><rect x="237.6" y="1251.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.&lt;init&gt; (1 samples, 0.05%)</title><rect x="237.6" y="1235.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="240.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.&lt;init&gt; (1 samples, 0.05%)</title><rect x="237.6" y="1219.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="240.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSeq.&lt;init&gt; (1 samples, 0.05%)</title><rect x="237.6" y="1203.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="240.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.&lt;init&gt; (1 samples, 0.05%)</title><rect x="237.6" y="1187.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="237.6" y="1171.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/generic/GenericCompanion.apply (4 samples, 0.19%)</title><rect x="238.2" y="1251.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="241.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (4 samples, 0.19%)</title><rect x="238.2" y="1235.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (3 samples, 0.14%)</title><rect x="238.7" y="1219.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet$.empty (3 samples, 0.14%)</title><rect x="238.7" y="1203.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="239.8" y="1187.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="242.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="239.8" y="1171.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="239.8" y="1155.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="242.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (5 samples, 0.23%)</title><rect x="240.4" y="1251.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.4" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (5 samples, 0.23%)</title><rect x="240.4" y="1235.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.4" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (5 samples, 0.23%)</title><rect x="240.4" y="1219.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="243.4" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (5 samples, 0.23%)</title><rect x="240.4" y="1203.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.4" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (4 samples, 0.19%)</title><rect x="240.4" y="1187.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="243.4" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (4 samples, 0.19%)</title><rect x="240.4" y="1171.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="243.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (4 samples, 0.19%)</title><rect x="240.4" y="1155.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.4" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.19%)</title><rect x="240.4" y="1139.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="243.4" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (3 samples, 0.14%)</title><rect x="240.9" y="1123.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.9" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="240.9" y="1107.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.9" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (1 samples, 0.05%)</title><rect x="241.5" y="1107.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="244.5" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (1 samples, 0.05%)</title><rect x="241.5" y="1091.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="244.5" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.05%)</title><rect x="242.0" y="1107.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.0" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.05%)</title><rect x="242.0" y="1091.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="245.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="242.6" y="1187.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.6" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.equals (1 samples, 0.05%)</title><rect x="242.6" y="1171.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="245.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (7 samples, 0.33%)</title><rect x="243.1" y="1251.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="246.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (7 samples, 0.33%)</title><rect x="243.1" y="1235.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="246.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (7 samples, 0.33%)</title><rect x="243.1" y="1219.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (7 samples, 0.33%)</title><rect x="243.1" y="1203.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.1" y="1214.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="243.1" y="1187.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="246.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (6 samples, 0.28%)</title><rect x="243.7" y="1187.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="246.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (6 samples, 0.28%)</title><rect x="243.7" y="1171.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="246.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (6 samples, 0.28%)</title><rect x="243.7" y="1155.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="246.7" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (6 samples, 0.28%)</title><rect x="243.7" y="1139.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="246.7" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (6 samples, 0.28%)</title><rect x="243.7" y="1123.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="246.7" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (5 samples, 0.23%)</title><rect x="243.7" y="1107.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="246.7" y="1118.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.09%)</title><rect x="243.7" y="1091.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="246.7" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="244.2" y="1075.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="247.2" y="1086.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="244.2" y="1059.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="247.2" y="1070.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="244.2" y="1043.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.2" y="1054.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (1 samples, 0.05%)</title><rect x="244.2" y="1027.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="247.2" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (1 samples, 0.05%)</title><rect x="244.2" y="1011.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="247.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="244.8" y="1091.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.8" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (2 samples, 0.09%)</title><rect x="245.3" y="1091.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="248.3" y="1102.0"></text>
</g>
<g>
<title>firrtl/RegKind$.hashCode (2 samples, 0.09%)</title><rect x="245.3" y="1075.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="248.3" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.05%)</title><rect x="246.4" y="1107.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="249.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (2 samples, 0.09%)</title><rect x="247.0" y="1251.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (2 samples, 0.09%)</title><rect x="247.0" y="1235.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="250.0" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (2 samples, 0.09%)</title><rect x="247.0" y="1219.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="250.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (2 samples, 0.09%)</title><rect x="247.0" y="1203.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="250.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (2 samples, 0.09%)</title><rect x="247.0" y="1187.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="250.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (2 samples, 0.09%)</title><rect x="247.0" y="1171.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (2 samples, 0.09%)</title><rect x="247.0" y="1155.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="250.0" y="1166.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (2 samples, 0.09%)</title><rect x="247.0" y="1139.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="250.0" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.09%)</title><rect x="247.0" y="1123.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.0" y="1134.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.09%)</title><rect x="247.0" y="1107.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="250.0" y="1118.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.09%)</title><rect x="247.0" y="1091.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.0" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="247.0" y="1075.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.0" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="247.5" y="1059.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="250.5" y="1070.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.dataSize (1 samples, 0.05%)</title><rect x="247.5" y="1043.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="250.5" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.currentMap (1 samples, 0.05%)</title><rect x="248.1" y="1251.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="251.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.05%)</title><rect x="248.1" y="1235.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="251.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="248.1" y="1219.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="251.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="248.1" y="1203.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="251.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="248.1" y="1187.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="248.1" y="1171.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="248.1" y="1155.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="248.1" y="1139.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="251.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="248.1" y="1123.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="251.1" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="248.1" y="1107.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.1" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="248.1" y="1091.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.1" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="248.1" y="1075.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.1" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (3 samples, 0.14%)</title><rect x="248.6" y="1251.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (3 samples, 0.14%)</title><rect x="248.6" y="1235.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="251.6" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$21886/800006155.apply (3 samples, 0.14%)</title><rect x="248.6" y="1219.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.6" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (3 samples, 0.14%)</title><rect x="248.6" y="1203.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.6" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (3 samples, 0.14%)</title><rect x="248.6" y="1187.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="251.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (3 samples, 0.14%)</title><rect x="248.6" y="1171.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (3 samples, 0.14%)</title><rect x="248.6" y="1155.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="251.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (3 samples, 0.14%)</title><rect x="248.6" y="1139.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (3 samples, 0.14%)</title><rect x="248.6" y="1123.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="251.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (3 samples, 0.14%)</title><rect x="248.6" y="1107.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="251.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (3 samples, 0.14%)</title><rect x="248.6" y="1091.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="251.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (3 samples, 0.14%)</title><rect x="248.6" y="1075.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.6" y="1086.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (3 samples, 0.14%)</title><rect x="248.6" y="1059.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="251.6" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (3 samples, 0.14%)</title><rect x="248.6" y="1043.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="251.6" y="1054.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (3 samples, 0.14%)</title><rect x="248.6" y="1027.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.6" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (3 samples, 0.14%)</title><rect x="248.6" y="1011.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="251.6" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.14%)</title><rect x="248.6" y="995.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.6" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (3 samples, 0.14%)</title><rect x="248.6" y="979.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.6" y="990.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.14%)</title><rect x="248.6" y="963.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="251.6" y="974.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.05%)</title><rect x="249.7" y="947.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="252.7" y="958.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (2 samples, 0.09%)</title><rect x="250.3" y="1251.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="253.3" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (2 samples, 0.09%)</title><rect x="250.3" y="1235.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.09%)</title><rect x="250.3" y="1219.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="253.3" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.09%)</title><rect x="250.3" y="1203.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="253.3" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.09%)</title><rect x="250.3" y="1187.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="253.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="250.9" y="1171.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.9" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$21919/412696273.apply (1 samples, 0.05%)</title><rect x="251.4" y="1379.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="254.4" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$15 (1 samples, 0.05%)</title><rect x="251.4" y="1363.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="254.4" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/SubBigs.apply (1 samples, 0.05%)</title><rect x="251.4" y="1347.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="254.4" y="1358.0"></text>
</g>
<g>
<title>scala/math/BigInt.$minus (1 samples, 0.05%)</title><rect x="251.4" y="1331.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.4" y="1342.0"></text>
</g>
<g>
<title>java/math/BigInteger.subtract (1 samples, 0.05%)</title><rect x="251.4" y="1315.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="254.4" y="1326.0"></text>
</g>
<g>
<title>java/math/BigInteger.subtract (1 samples, 0.05%)</title><rect x="251.4" y="1299.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.4" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$21877/517240099.apply$mcV$sp (8 samples, 0.37%)</title><rect x="252.0" y="1427.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.0" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (8 samples, 0.37%)</title><rect x="252.0" y="1411.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.0" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (8 samples, 0.37%)</title><rect x="252.0" y="1395.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.0" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (7 samples, 0.33%)</title><rect x="252.0" y="1379.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.0" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (7 samples, 0.33%)</title><rect x="252.0" y="1363.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.0" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (7 samples, 0.33%)</title><rect x="252.0" y="1347.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="255.0" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (7 samples, 0.33%)</title><rect x="252.0" y="1331.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.0" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.length$ (1 samples, 0.05%)</title><rect x="252.0" y="1315.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.0" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.apply (6 samples, 0.28%)</title><rect x="252.5" y="1315.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="255.5" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (6 samples, 0.28%)</title><rect x="252.5" y="1299.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="255.5" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (6 samples, 0.28%)</title><rect x="252.5" y="1283.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.5" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (6 samples, 0.28%)</title><rect x="252.5" y="1267.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="255.5" y="1278.0"></text>
</g>
<g>
<title>scala/LowPriorityImplicits.wrapRefArray (1 samples, 0.05%)</title><rect x="252.5" y="1251.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="255.5" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.&lt;init&gt; (1 samples, 0.05%)</title><rect x="252.5" y="1235.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="255.5" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.&lt;init&gt; (1 samples, 0.05%)</title><rect x="252.5" y="1219.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSeq.&lt;init&gt; (1 samples, 0.05%)</title><rect x="252.5" y="1203.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="255.5" y="1214.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.&lt;init&gt; (1 samples, 0.05%)</title><rect x="252.5" y="1187.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="252.5" y="1171.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.5" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.05%)</title><rect x="253.1" y="1251.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="256.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="253.1" y="1235.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="253.1" y="1219.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="253.1" y="1203.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="256.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="253.1" y="1187.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="253.1" y="1171.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="256.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="253.1" y="1155.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="253.1" y="1139.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.1" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="253.1" y="1123.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="256.1" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="253.1" y="1107.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.1" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="253.1" y="1091.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.1" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToInteger (1 samples, 0.05%)</title><rect x="253.6" y="1251.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="256.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.05%)</title><rect x="253.6" y="1235.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.6" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (1 samples, 0.05%)</title><rect x="254.2" y="1251.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.2" y="1262.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.05%)</title><rect x="254.2" y="1235.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="257.2" y="1246.0"></text>
</g>
<g>
<title>scala/math/BigInt.bigInteger (1 samples, 0.05%)</title><rect x="254.2" y="1219.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.2" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (2 samples, 0.09%)</title><rect x="254.7" y="1251.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (2 samples, 0.09%)</title><rect x="254.7" y="1235.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="257.7" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$21886/800006155.apply (2 samples, 0.09%)</title><rect x="254.7" y="1219.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="257.7" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (2 samples, 0.09%)</title><rect x="254.7" y="1203.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="257.7" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (2 samples, 0.09%)</title><rect x="254.7" y="1187.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (2 samples, 0.09%)</title><rect x="254.7" y="1171.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="257.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (2 samples, 0.09%)</title><rect x="254.7" y="1155.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (2 samples, 0.09%)</title><rect x="254.7" y="1139.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (2 samples, 0.09%)</title><rect x="254.7" y="1123.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (2 samples, 0.09%)</title><rect x="254.7" y="1107.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="257.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (1 samples, 0.05%)</title><rect x="255.3" y="1091.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (1 samples, 0.05%)</title><rect x="255.3" y="1075.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="258.3" y="1086.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (1 samples, 0.05%)</title><rect x="255.3" y="1059.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.3" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="255.3" y="1043.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="258.3" y="1054.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="255.3" y="1027.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="258.3" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="255.3" y="1011.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="258.3" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="255.3" y="995.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="258.3" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="255.3" y="979.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="258.3" y="990.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="255.3" y="963.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="258.3" y="974.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$21831/1518288657.apply$mcI$sp (1 samples, 0.05%)</title><rect x="255.8" y="1379.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.8" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$1 (1 samples, 0.05%)</title><rect x="255.8" y="1363.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.8" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/EqBigs.apply (1 samples, 0.05%)</title><rect x="255.8" y="1347.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.8" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$21928/1785283697.apply (1 samples, 0.05%)</title><rect x="255.8" y="1331.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.8" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$82 (1 samples, 0.05%)</title><rect x="255.8" y="1315.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.8" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/ToBig.apply (1 samples, 0.05%)</title><rect x="255.8" y="1299.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="258.8" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/package$Big$.apply (1 samples, 0.05%)</title><rect x="255.8" y="1283.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="258.8" y="1294.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.05%)</title><rect x="255.8" y="1267.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="258.8" y="1278.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="255.8" y="1251.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="258.8" y="1262.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="255.8" y="1235.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="258.8" y="1246.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.05%)</title><rect x="255.8" y="1219.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="258.8" y="1230.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.05%)</title><rect x="255.8" y="1203.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="258.8" y="1214.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="255.8" y="1187.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="258.8" y="1198.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.05%)</title><rect x="255.8" y="1171.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="258.8" y="1182.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.05%)</title><rect x="255.8" y="1155.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="258.8" y="1166.0"></text>
</g>
<g>
<title>treadle/TreadleTester.poke (4 samples, 0.19%)</title><rect x="256.4" y="1507.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="259.4" y="1518.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setValue (4 samples, 0.19%)</title><rect x="256.4" y="1491.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.4" y="1502.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (1 samples, 0.05%)</title><rect x="256.4" y="1475.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="259.4" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (1 samples, 0.05%)</title><rect x="256.4" y="1459.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="259.4" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (1 samples, 0.05%)</title><rect x="256.4" y="1443.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="259.4" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (1 samples, 0.05%)</title><rect x="256.4" y="1427.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.4" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (1 samples, 0.05%)</title><rect x="256.4" y="1411.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="259.4" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="256.4" y="1395.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="259.4" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="256.4" y="1379.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.4" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.update (1 samples, 0.05%)</title><rect x="256.9" y="1475.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="259.9" y="1486.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="256.9" y="1459.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="259.9" y="1470.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="256.9" y="1443.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="259.9" y="1454.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="256.9" y="1427.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="259.9" y="1438.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="256.9" y="1411.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="259.9" y="1422.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.05%)</title><rect x="256.9" y="1395.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="259.9" y="1406.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.05%)</title><rect x="256.9" y="1379.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="259.9" y="1390.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*) (1 samples, 0.05%)</title><rect x="256.9" y="1363.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="259.9" y="1374.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*) (1 samples, 0.05%)</title><rect x="256.9" y="1347.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="259.9" y="1358.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.05%)</title><rect x="256.9" y="1331.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="259.9" y="1342.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.05%)</title><rect x="256.9" y="1315.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="259.9" y="1326.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.05%)</title><rect x="256.9" y="1299.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="259.9" y="1310.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.05%)</title><rect x="256.9" y="1283.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="259.9" y="1294.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.05%)</title><rect x="256.9" y="1267.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="259.9" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.getOrElse (2 samples, 0.09%)</title><rect x="257.5" y="1475.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.5" y="1486.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.getOrElse (2 samples, 0.09%)</title><rect x="257.5" y="1459.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.5" y="1470.0"></text>
</g>
<g>
<title>scala/collection/MapLike.getOrElse$ (2 samples, 0.09%)</title><rect x="257.5" y="1443.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="260.5" y="1454.0"></text>
</g>
<g>
<title>scala/collection/MapLike.getOrElse (2 samples, 0.09%)</title><rect x="257.5" y="1427.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="260.5" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (2 samples, 0.09%)</title><rect x="257.5" y="1411.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="260.5" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.09%)</title><rect x="257.5" y="1395.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="260.5" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.09%)</title><rect x="257.5" y="1379.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.5" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.09%)</title><rect x="257.5" y="1363.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.5" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.09%)</title><rect x="257.5" y="1347.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="260.5" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="257.5" y="1331.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="260.5" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="258.0" y="1331.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.0" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="258.0" y="1315.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="261.0" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="258.0" y="1299.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="261.0" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="258.0" y="1283.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.0" y="1294.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="258.0" y="1267.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.0" y="1278.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="258.0" y="1251.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="261.0" y="1262.0"></text>
</g>
<g>
<title>treadle/TreadleTester.step (122 samples, 5.70%)</title><rect x="258.6" y="1507.0" width="67.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="261.6" y="1518.0">treadle..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.updateCycleMap (6 samples, 0.28%)</title><rect x="258.6" y="1491.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.6" y="1502.0"></text>
</g>
<g>
<title>scala/collection/generic/GenMapFactory.apply (2 samples, 0.09%)</title><rect x="258.6" y="1475.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="261.6" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractMap.$plus$plus$eq (2 samples, 0.09%)</title><rect x="258.6" y="1459.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="261.6" y="1470.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (2 samples, 0.09%)</title><rect x="258.6" y="1443.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="261.6" y="1454.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (2 samples, 0.09%)</title><rect x="258.6" y="1427.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.6" y="1438.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.loop$1 (2 samples, 0.09%)</title><rect x="258.6" y="1411.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="261.6" y="1422.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.09%)</title><rect x="258.6" y="1395.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="261.6" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (4 samples, 0.19%)</title><rect x="259.7" y="1475.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.7" y="1486.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (4 samples, 0.19%)</title><rect x="259.7" y="1459.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.7" y="1470.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (4 samples, 0.19%)</title><rect x="259.7" y="1443.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="262.7" y="1454.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (4 samples, 0.19%)</title><rect x="259.7" y="1427.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="262.7" y="1438.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (2 samples, 0.09%)</title><rect x="260.8" y="1411.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="263.8" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (2 samples, 0.09%)</title><rect x="260.8" y="1395.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="263.8" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="261.3" y="1379.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="264.3" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="261.3" y="1363.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="264.3" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="261.3" y="1347.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.3" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="261.3" y="1331.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.3" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="261.3" y="1315.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="264.3" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.run (116 samples, 5.42%)</title><rect x="261.9" y="1491.0" width="63.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="264.9" y="1502.0">treadle..</text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach$mVc$sp (116 samples, 5.42%)</title><rect x="261.9" y="1475.0" width="63.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.9" y="1486.0">scala/c..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper$$Lambda$21884/538115616.apply$mcVI$sp (116 samples, 5.42%)</title><rect x="261.9" y="1459.0" width="63.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="264.9" y="1470.0">treadle..</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.$anonfun$run$2 (116 samples, 5.42%)</title><rect x="261.9" y="1443.0" width="63.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="264.9" y="1454.0">treadle..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (4 samples, 0.19%)</title><rect x="261.9" y="1427.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="264.9" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (4 samples, 0.19%)</title><rect x="261.9" y="1411.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="264.9" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (4 samples, 0.19%)</title><rect x="261.9" y="1395.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.9" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (4 samples, 0.19%)</title><rect x="261.9" y="1379.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="264.9" y="1390.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$21930/1261683543.apply$mcV$sp (4 samples, 0.19%)</title><rect x="261.9" y="1363.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="264.9" y="1374.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (4 samples, 0.19%)</title><rect x="261.9" y="1347.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.9" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (4 samples, 0.19%)</title><rect x="261.9" y="1331.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="264.9" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (4 samples, 0.19%)</title><rect x="261.9" y="1315.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="264.9" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (4 samples, 0.19%)</title><rect x="261.9" y="1299.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="264.9" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (4 samples, 0.19%)</title><rect x="261.9" y="1283.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="264.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (4 samples, 0.19%)</title><rect x="261.9" y="1267.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.9" y="1278.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (1 samples, 0.05%)</title><rect x="261.9" y="1251.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="264.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.size$ (1 samples, 0.05%)</title><rect x="261.9" y="1235.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="264.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.size (1 samples, 0.05%)</title><rect x="261.9" y="1219.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="264.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.length (1 samples, 0.05%)</title><rect x="261.9" y="1203.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="264.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.length$ (1 samples, 0.05%)</title><rect x="261.9" y="1187.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="264.9" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.apply (3 samples, 0.14%)</title><rect x="262.4" y="1251.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="265.4" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (2 samples, 0.09%)</title><rect x="263.0" y="1235.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="266.0" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (2 samples, 0.09%)</title><rect x="263.0" y="1219.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="266.0" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (2 samples, 0.09%)</title><rect x="263.0" y="1203.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="266.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.05%)</title><rect x="263.0" y="1187.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="266.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="263.0" y="1171.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="266.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="263.0" y="1155.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="266.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="263.0" y="1139.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="263.0" y="1123.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="266.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="263.0" y="1107.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="266.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="263.0" y="1091.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.0" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="263.0" y="1075.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="266.0" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="263.0" y="1059.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="266.0" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="263.0" y="1043.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="266.0" y="1054.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.05%)</title><rect x="263.0" y="1027.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="266.0" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="263.0" y="1011.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="266.0" y="1022.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="263.0" y="995.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="266.0" y="1006.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="263.0" y="979.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="266.0" y="990.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="263.0" y="963.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.0" y="974.0"></text>
</g>
<g>
<title>firrtl/ir/IntWidth.hashCode (1 samples, 0.05%)</title><rect x="263.0" y="947.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="266.0" y="958.0"></text>
</g>
<g>
<title>scala/math/BigInt.toInt (1 samples, 0.05%)</title><rect x="263.0" y="931.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="266.0" y="942.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt$ (1 samples, 0.05%)</title><rect x="263.0" y="915.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="266.0" y="926.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt (1 samples, 0.05%)</title><rect x="263.0" y="899.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="266.0" y="910.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.05%)</title><rect x="263.0" y="883.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="266.0" y="894.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.05%)</title><rect x="263.0" y="867.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="266.0" y="878.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.05%)</title><rect x="263.0" y="851.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="266.0" y="862.0"></text>
</g>
<g>
<title>java/math/BigInteger.signInt (1 samples, 0.05%)</title><rect x="263.0" y="835.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="266.0" y="846.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (1 samples, 0.05%)</title><rect x="263.5" y="1187.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="266.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (1 samples, 0.05%)</title><rect x="263.5" y="1171.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="266.5" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="263.5" y="1155.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="266.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="263.5" y="1139.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="266.5" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="263.5" y="1123.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="263.5" y="1107.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="266.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="263.5" y="1091.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="266.5" y="1102.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.lowerClock$1 (2 samples, 0.09%)</title><rect x="264.1" y="1427.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.1" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setIntValue (2 samples, 0.09%)</title><rect x="264.1" y="1411.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.1" y="1422.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (2 samples, 0.09%)</title><rect x="264.1" y="1395.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="267.1" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (2 samples, 0.09%)</title><rect x="264.1" y="1379.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.1" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (2 samples, 0.09%)</title><rect x="264.1" y="1363.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.1" y="1374.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (2 samples, 0.09%)</title><rect x="264.1" y="1347.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="267.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (2 samples, 0.09%)</title><rect x="264.1" y="1331.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.1" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="264.1" y="1315.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="267.1" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="264.1" y="1299.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="267.1" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="264.1" y="1283.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="267.1" y="1294.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.05%)</title><rect x="264.1" y="1267.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="267.1" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="264.6" y="1315.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.6" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.05%)</title><rect x="264.6" y="1299.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="267.6" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.raiseClock$1 (110 samples, 5.14%)</title><rect x="265.2" y="1427.0" width="60.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="268.2" y="1438.0">treadl..</text>
</g>
<g>
<title>treadle/chronometry/UTC.incrementTime (9 samples, 0.42%)</title><rect x="265.2" y="1411.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="268.2" y="1422.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.runUntil (9 samples, 0.42%)</title><rect x="265.2" y="1395.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="268.2" y="1406.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.setTime (9 samples, 0.42%)</title><rect x="265.2" y="1379.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.2" y="1390.0"></text>
</g>
<g>
<title>treadle/TreadleTester$$Lambda$21863/1932728723.apply$mcV$sp (9 samples, 0.42%)</title><rect x="265.2" y="1363.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="268.2" y="1374.0"></text>
</g>
<g>
<title>treadle/TreadleTester.$anonfun$new$2 (9 samples, 0.42%)</title><rect x="265.2" y="1347.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.2" y="1358.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.09%)</title><rect x="268.5" y="1331.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="271.5" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.run (1 samples, 0.05%)</title><rect x="269.6" y="1331.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="272.6" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (100 samples, 4.67%)</title><rect x="270.1" y="1411.0" width="55.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="273.1" y="1422.0">tread..</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (100 samples, 4.67%)</title><rect x="270.1" y="1395.0" width="55.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="273.1" y="1406.0">tread..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (100 samples, 4.67%)</title><rect x="270.1" y="1379.0" width="55.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.1" y="1390.0">tread..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (100 samples, 4.67%)</title><rect x="270.1" y="1363.0" width="55.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="273.1" y="1374.0">tread..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.apply (2 samples, 0.09%)</title><rect x="270.1" y="1347.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="273.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply$ (2 samples, 0.09%)</title><rect x="270.1" y="1331.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="273.1" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner$$Lambda$21878/2041363392.apply$mcV$sp (11 samples, 0.51%)</title><rect x="271.2" y="1347.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="274.2" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.$anonfun$setLeanMode$2 (11 samples, 0.51%)</title><rect x="271.2" y="1331.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.2" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.runFull (11 samples, 0.51%)</title><rect x="271.2" y="1315.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.2" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$21930/1261683543.apply$mcV$sp (11 samples, 0.51%)</title><rect x="271.2" y="1299.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.2" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (11 samples, 0.51%)</title><rect x="271.2" y="1283.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.2" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (11 samples, 0.51%)</title><rect x="271.2" y="1267.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.2" y="1278.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (11 samples, 0.51%)</title><rect x="271.2" y="1251.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (11 samples, 0.51%)</title><rect x="271.2" y="1235.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="274.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (11 samples, 0.51%)</title><rect x="271.2" y="1219.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.2" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (11 samples, 0.51%)</title><rect x="271.2" y="1203.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="274.2" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.apply (11 samples, 0.51%)</title><rect x="271.2" y="1187.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.2" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (11 samples, 0.51%)</title><rect x="271.2" y="1171.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.2" y="1182.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (11 samples, 0.51%)</title><rect x="271.2" y="1155.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.2" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (11 samples, 0.51%)</title><rect x="271.2" y="1139.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="274.2" y="1150.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (1 samples, 0.05%)</title><rect x="271.2" y="1123.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/generic/GenericCompanion.apply (5 samples, 0.23%)</title><rect x="271.8" y="1123.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="274.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/GrowingBuilder.$plus$plus$eq (5 samples, 0.23%)</title><rect x="271.8" y="1107.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (5 samples, 0.23%)</title><rect x="271.8" y="1091.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (5 samples, 0.23%)</title><rect x="271.8" y="1075.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.8" y="1086.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.09%)</title><rect x="271.8" y="1059.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="274.8" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.foreach (3 samples, 0.14%)</title><rect x="272.9" y="1059.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="275.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach$ (3 samples, 0.14%)</title><rect x="272.9" y="1043.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.9" y="1054.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOptimized.foreach (3 samples, 0.14%)</title><rect x="272.9" y="1027.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.9" y="1038.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable$$Lambda$3497/63942083.apply (2 samples, 0.09%)</title><rect x="273.4" y="1011.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.4" y="1022.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$anonfun$$plus$plus$eq$1 (2 samples, 0.09%)</title><rect x="273.4" y="995.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.4" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/GrowingBuilder.$plus$eq (2 samples, 0.09%)</title><rect x="273.4" y="979.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="276.4" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/GrowingBuilder.$plus$eq (2 samples, 0.09%)</title><rect x="273.4" y="963.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.4" y="974.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$plus$eq (2 samples, 0.09%)</title><rect x="273.4" y="947.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.4" y="958.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$plus$eq (2 samples, 0.09%)</title><rect x="273.4" y="931.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="276.4" y="942.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (2 samples, 0.09%)</title><rect x="273.4" y="915.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.4" y="926.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (2 samples, 0.09%)</title><rect x="273.4" y="899.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="276.4" y="910.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (2 samples, 0.09%)</title><rect x="273.4" y="883.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="276.4" y="894.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (2 samples, 0.09%)</title><rect x="273.4" y="867.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="276.4" y="878.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (2 samples, 0.09%)</title><rect x="273.4" y="851.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.4" y="862.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (2 samples, 0.09%)</title><rect x="273.4" y="835.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.4" y="846.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (1 samples, 0.05%)</title><rect x="273.4" y="819.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="276.4" y="830.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="273.4" y="803.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.4" y="814.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="273.4" y="787.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="276.4" y="798.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="273.4" y="771.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="276.4" y="782.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="273.4" y="755.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="276.4" y="766.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (1 samples, 0.05%)</title><rect x="273.4" y="739.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="276.4" y="750.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="273.4" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="276.4" y="734.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.05%)</title><rect x="273.4" y="707.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="276.4" y="718.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="273.4" y="691.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="276.4" y="702.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="273.4" y="675.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.4" y="686.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="273.4" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="276.4" y="670.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mix (1 samples, 0.05%)</title><rect x="273.4" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="276.4" y="654.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="274.0" y="819.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="277.0" y="830.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="274.0" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="277.0" y="814.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="274.0" y="787.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="277.0" y="798.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.05%)</title><rect x="274.5" y="1123.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="277.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.05%)</title><rect x="274.5" y="1107.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="277.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.05%)</title><rect x="274.5" y="1091.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="274.5" y="1075.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="277.5" y="1086.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="274.5" y="1059.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="277.5" y="1070.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (2 samples, 0.09%)</title><rect x="275.1" y="1123.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (2 samples, 0.09%)</title><rect x="275.1" y="1107.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.09%)</title><rect x="275.1" y="1091.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.09%)</title><rect x="275.1" y="1075.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.09%)</title><rect x="275.1" y="1059.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="278.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.09%)</title><rect x="275.1" y="1043.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.1" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="275.7" y="1027.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="275.7" y="1011.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="278.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="275.7" y="995.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="278.7" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="275.7" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.7" y="990.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="275.7" y="963.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.7" y="974.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="275.7" y="947.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.7" y="958.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.get (2 samples, 0.09%)</title><rect x="276.2" y="1123.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (2 samples, 0.09%)</title><rect x="276.2" y="1107.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="276.8" y="1091.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="279.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="276.8" y="1075.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="276.8" y="1059.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.8" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="276.8" y="1043.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.8" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="276.8" y="1027.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.8" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="276.8" y="1011.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.8" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="276.8" y="995.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="279.8" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="276.8" y="979.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="279.8" y="990.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="276.8" y="963.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.8" y="974.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$21930/1261683543.apply$mcV$sp (61 samples, 2.85%)</title><rect x="277.3" y="1347.0" width="33.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="280.3" y="1358.0">tr..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (61 samples, 2.85%)</title><rect x="277.3" y="1331.0" width="33.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="280.3" y="1342.0">tr..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (61 samples, 2.85%)</title><rect x="277.3" y="1315.0" width="33.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.3" y="1326.0">tr..</text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (58 samples, 2.71%)</title><rect x="277.3" y="1299.0" width="32.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="280.3" y="1310.0">tr..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (58 samples, 2.71%)</title><rect x="277.3" y="1283.0" width="32.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="280.3" y="1294.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (58 samples, 2.71%)</title><rect x="277.3" y="1267.0" width="32.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.3" y="1278.0">sc..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (58 samples, 2.71%)</title><rect x="277.3" y="1251.0" width="32.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.3" y="1262.0">sc..</text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.apply (58 samples, 2.71%)</title><rect x="277.3" y="1235.0" width="32.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.3" y="1246.0">tr..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (58 samples, 2.71%)</title><rect x="277.3" y="1219.0" width="32.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="280.3" y="1230.0">tr..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (58 samples, 2.71%)</title><rect x="277.3" y="1203.0" width="32.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.3" y="1214.0">tr..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (58 samples, 2.71%)</title><rect x="277.3" y="1187.0" width="32.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="280.3" y="1198.0">tr..</text>
</g>
<g>
<title>scala/LowPriorityImplicits.wrapRefArray (1 samples, 0.05%)</title><rect x="277.3" y="1171.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.&lt;init&gt; (1 samples, 0.05%)</title><rect x="277.3" y="1155.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.&lt;init&gt; (1 samples, 0.05%)</title><rect x="277.3" y="1139.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="280.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSeq.&lt;init&gt; (1 samples, 0.05%)</title><rect x="277.3" y="1123.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.&lt;init&gt; (1 samples, 0.05%)</title><rect x="277.3" y="1107.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/generic/GenericCompanion.apply (6 samples, 0.28%)</title><rect x="277.9" y="1171.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (6 samples, 0.28%)</title><rect x="277.9" y="1155.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="280.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (6 samples, 0.28%)</title><rect x="277.9" y="1139.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet$.empty (6 samples, 0.28%)</title><rect x="277.9" y="1123.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="280.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (6 samples, 0.28%)</title><rect x="277.9" y="1107.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="280.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (6 samples, 0.28%)</title><rect x="277.9" y="1091.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="280.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSet.&lt;init&gt; (3 samples, 0.14%)</title><rect x="277.9" y="1075.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="280.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.$init$ (3 samples, 0.14%)</title><rect x="279.5" y="1075.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="282.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.initialCapacity (2 samples, 0.09%)</title><rect x="280.1" y="1059.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.capacity (2 samples, 0.09%)</title><rect x="280.1" y="1043.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.1" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.capacity$ (2 samples, 0.09%)</title><rect x="280.1" y="1027.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="283.1" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.capacity (1 samples, 0.05%)</title><rect x="280.6" y="1011.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.6" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (7 samples, 0.33%)</title><rect x="281.2" y="1171.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (7 samples, 0.33%)</title><rect x="281.2" y="1155.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (7 samples, 0.33%)</title><rect x="281.2" y="1139.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (7 samples, 0.33%)</title><rect x="281.2" y="1123.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (6 samples, 0.28%)</title><rect x="281.2" y="1107.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="284.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (6 samples, 0.28%)</title><rect x="281.2" y="1091.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="284.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (6 samples, 0.28%)</title><rect x="281.2" y="1075.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="284.2" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (6 samples, 0.28%)</title><rect x="281.2" y="1059.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.2" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="281.2" y="1043.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.2" y="1054.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (5 samples, 0.23%)</title><rect x="281.7" y="1043.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.7" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (5 samples, 0.23%)</title><rect x="281.7" y="1027.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="284.7" y="1038.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.05%)</title><rect x="283.4" y="1011.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="286.4" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="283.4" y="995.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.4" y="1006.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="283.4" y="979.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.4" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="283.4" y="963.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.4" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mix (1 samples, 0.05%)</title><rect x="283.4" y="947.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.4" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mixLast (1 samples, 0.05%)</title><rect x="283.4" y="931.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.4" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="283.9" y="1011.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.9" y="1022.0"></text>
</g>
<g>
<title>firrtl/NodeKind$.hashCode (1 samples, 0.05%)</title><rect x="283.9" y="995.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.9" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="284.5" y="1107.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="287.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="284.5" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="287.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="284.5" y="1075.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="287.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="284.5" y="1059.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.5" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="284.5" y="1043.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="287.5" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="284.5" y="1027.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="287.5" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="284.5" y="1011.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.5" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (23 samples, 1.07%)</title><rect x="285.0" y="1171.0" width="12.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (23 samples, 1.07%)</title><rect x="285.0" y="1155.0" width="12.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (23 samples, 1.07%)</title><rect x="285.0" y="1139.0" width="12.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="288.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (23 samples, 1.07%)</title><rect x="285.0" y="1123.0" width="12.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="288.0" y="1134.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.09%)</title><rect x="286.7" y="1107.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="289.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (9 samples, 0.42%)</title><rect x="287.8" y="1107.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (9 samples, 0.42%)</title><rect x="287.8" y="1091.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (9 samples, 0.42%)</title><rect x="287.8" y="1075.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.8" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (9 samples, 0.42%)</title><rect x="287.8" y="1059.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="290.8" y="1070.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (9 samples, 0.42%)</title><rect x="287.8" y="1043.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.8" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (8 samples, 0.37%)</title><rect x="287.8" y="1027.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.8" y="1038.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (5 samples, 0.23%)</title><rect x="288.9" y="1011.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.9" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (4 samples, 0.19%)</title><rect x="289.4" y="995.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="292.4" y="1006.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (4 samples, 0.19%)</title><rect x="289.4" y="979.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="292.4" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (4 samples, 0.19%)</title><rect x="289.4" y="963.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="292.4" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="289.4" y="947.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="292.4" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (2 samples, 0.09%)</title><rect x="290.5" y="947.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="293.5" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (2 samples, 0.09%)</title><rect x="290.5" y="931.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.5" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.05%)</title><rect x="291.6" y="1011.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.6" y="1022.0"></text>
</g>
<g>
<title>firrtl/RegKind$.hashCode (1 samples, 0.05%)</title><rect x="291.6" y="995.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.6" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.05%)</title><rect x="292.2" y="1027.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.2" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.05%)</title><rect x="292.2" y="1011.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="295.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.addEntry0 (7 samples, 0.33%)</title><rect x="292.7" y="1107.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.resize (7 samples, 0.33%)</title><rect x="292.7" y="1091.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="295.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (4 samples, 0.19%)</title><rect x="293.3" y="1075.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (4 samples, 0.19%)</title><rect x="293.3" y="1059.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (4 samples, 0.19%)</title><rect x="293.3" y="1043.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="296.3" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.19%)</title><rect x="293.3" y="1027.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.3" y="1038.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (4 samples, 0.19%)</title><rect x="293.3" y="1011.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.3" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="293.3" y="995.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="296.3" y="1006.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.05%)</title><rect x="293.8" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="296.8" y="990.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="293.8" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="296.8" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="293.8" y="947.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="296.8" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="293.8" y="931.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.8" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="293.8" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="296.8" y="926.0"></text>
</g>
<g>
<title>firrtl/ir/IntWidth.hashCode (1 samples, 0.05%)</title><rect x="293.8" y="899.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.8" y="910.0"></text>
</g>
<g>
<title>scala/math/BigInt.toInt (1 samples, 0.05%)</title><rect x="293.8" y="883.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="296.8" y="894.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt$ (1 samples, 0.05%)</title><rect x="293.8" y="867.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.8" y="878.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt (1 samples, 0.05%)</title><rect x="293.8" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.8" y="862.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.05%)</title><rect x="293.8" y="835.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="296.8" y="846.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.05%)</title><rect x="293.8" y="819.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="296.8" y="830.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.05%)</title><rect x="293.8" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.8" y="814.0"></text>
</g>
<g>
<title>java/math/BigInteger.signInt (1 samples, 0.05%)</title><rect x="293.8" y="787.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="296.8" y="798.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (1 samples, 0.05%)</title><rect x="294.4" y="995.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="297.4" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (1 samples, 0.05%)</title><rect x="294.4" y="979.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="297.4" y="990.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.05%)</title><rect x="294.9" y="995.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="297.9" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.05%)</title><rect x="294.9" y="979.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="297.9" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.nnSizeMapReset (2 samples, 0.09%)</title><rect x="295.5" y="1075.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.nnSizeMapReset$ (2 samples, 0.09%)</title><rect x="295.5" y="1059.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.nnSizeMapReset (1 samples, 0.05%)</title><rect x="296.0" y="1043.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="299.0" y="1054.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="296.0" y="1027.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="299.0" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.09%)</title><rect x="296.6" y="1107.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="299.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (2 samples, 0.09%)</title><rect x="296.6" y="1091.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="299.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (2 samples, 0.09%)</title><rect x="296.6" y="1075.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="299.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (2 samples, 0.09%)</title><rect x="296.6" y="1059.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="299.6" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.09%)</title><rect x="296.6" y="1043.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="299.6" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.09%)</title><rect x="296.6" y="1027.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.6" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="296.6" y="1011.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="299.6" y="1022.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.equals (1 samples, 0.05%)</title><rect x="297.1" y="1011.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="300.1" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (4 samples, 0.19%)</title><rect x="297.7" y="1171.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (4 samples, 0.19%)</title><rect x="297.7" y="1155.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="300.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (4 samples, 0.19%)</title><rect x="297.7" y="1139.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (4 samples, 0.19%)</title><rect x="297.7" y="1123.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (4 samples, 0.19%)</title><rect x="297.7" y="1107.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="300.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (4 samples, 0.19%)</title><rect x="297.7" y="1091.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (4 samples, 0.19%)</title><rect x="297.7" y="1075.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="300.7" y="1086.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (4 samples, 0.19%)</title><rect x="297.7" y="1059.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="300.7" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (4 samples, 0.19%)</title><rect x="297.7" y="1043.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="300.7" y="1054.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (4 samples, 0.19%)</title><rect x="297.7" y="1027.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="300.7" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (4 samples, 0.19%)</title><rect x="297.7" y="1011.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="300.7" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.19%)</title><rect x="297.7" y="995.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.7" y="1006.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (2 samples, 0.09%)</title><rect x="298.8" y="979.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="301.8" y="990.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="298.8" y="963.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="301.8" y="974.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.09%)</title><rect x="298.8" y="947.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="301.8" y="958.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.09%)</title><rect x="298.8" y="931.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="301.8" y="942.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.09%)</title><rect x="298.8" y="915.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="301.8" y="926.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.09%)</title><rect x="298.8" y="899.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="301.8" y="910.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (2 samples, 0.09%)</title><rect x="298.8" y="883.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="301.8" y="894.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (2 samples, 0.09%)</title><rect x="298.8" y="867.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="301.8" y="878.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.currentMap (1 samples, 0.05%)</title><rect x="299.9" y="1171.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.05%)</title><rect x="299.9" y="1155.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="302.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.05%)</title><rect x="299.9" y="1139.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="302.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.05%)</title><rect x="299.9" y="1123.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="302.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.05%)</title><rect x="299.9" y="1107.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="299.9" y="1091.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="302.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="299.9" y="1075.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="302.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="299.9" y="1059.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="302.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="299.9" y="1043.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="302.9" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="299.9" y="1027.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.9" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="299.9" y="1011.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="302.9" y="1022.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (2 samples, 0.09%)</title><rect x="300.5" y="1171.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="303.5" y="1182.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.05%)</title><rect x="300.5" y="1155.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="303.5" y="1166.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.05%)</title><rect x="300.5" y="1139.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="303.5" y="1150.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.05%)</title><rect x="300.5" y="1123.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.5" y="1134.0"></text>
</g>
<g>
<title>java/math/BigInteger.firstNonzeroIntNum (1 samples, 0.05%)</title><rect x="300.5" y="1107.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="303.5" y="1118.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.05%)</title><rect x="301.0" y="1155.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.0" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (7 samples, 0.33%)</title><rect x="301.6" y="1171.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (7 samples, 0.33%)</title><rect x="301.6" y="1155.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="304.6" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$21886/800006155.apply (7 samples, 0.33%)</title><rect x="301.6" y="1139.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="304.6" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (7 samples, 0.33%)</title><rect x="301.6" y="1123.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="304.6" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (7 samples, 0.33%)</title><rect x="301.6" y="1107.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (7 samples, 0.33%)</title><rect x="301.6" y="1091.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (7 samples, 0.33%)</title><rect x="301.6" y="1075.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (7 samples, 0.33%)</title><rect x="301.6" y="1059.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.6" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (7 samples, 0.33%)</title><rect x="301.6" y="1043.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="304.6" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (7 samples, 0.33%)</title><rect x="301.6" y="1027.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.6" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (7 samples, 0.33%)</title><rect x="301.6" y="1011.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="304.6" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (7 samples, 0.33%)</title><rect x="301.6" y="995.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.6" y="1006.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (5 samples, 0.23%)</title><rect x="301.6" y="979.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.6" y="990.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (5 samples, 0.23%)</title><rect x="301.6" y="963.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="304.6" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (5 samples, 0.23%)</title><rect x="301.6" y="947.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="304.6" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (5 samples, 0.23%)</title><rect x="301.6" y="931.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="304.6" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (5 samples, 0.23%)</title><rect x="301.6" y="915.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="304.6" y="926.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (5 samples, 0.23%)</title><rect x="301.6" y="899.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="304.6" y="910.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.14%)</title><rect x="301.6" y="883.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="304.6" y="894.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.09%)</title><rect x="302.1" y="867.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="305.1" y="878.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.09%)</title><rect x="302.1" y="851.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="305.1" y="862.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.09%)</title><rect x="302.1" y="835.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="305.1" y="846.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.09%)</title><rect x="302.1" y="819.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="305.1" y="830.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.finalizeHash (1 samples, 0.05%)</title><rect x="302.1" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="305.1" y="814.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.avalanche (1 samples, 0.05%)</title><rect x="302.1" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.1" y="798.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mix (1 samples, 0.05%)</title><rect x="302.7" y="803.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="305.7" y="814.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mixLast (1 samples, 0.05%)</title><rect x="302.7" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.7" y="798.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.05%)</title><rect x="302.7" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.7" y="782.0"></text>
</g>
<g>
<title>scala/runtime/Statics.finalizeHash (1 samples, 0.05%)</title><rect x="303.2" y="883.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.2" y="894.0"></text>
</g>
<g>
<title>scala/runtime/Statics.avalanche (1 samples, 0.05%)</title><rect x="303.2" y="867.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.2" y="878.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mix (1 samples, 0.05%)</title><rect x="303.8" y="883.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="306.8" y="894.0"></text>
</g>
<g>
<title>scala/runtime/Statics.mixLast (1 samples, 0.05%)</title><rect x="303.8" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.8" y="878.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.index (1 samples, 0.05%)</title><rect x="304.3" y="979.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="307.3" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index$ (1 samples, 0.05%)</title><rect x="304.3" y="963.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="307.3" y="974.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index (1 samples, 0.05%)</title><rect x="304.3" y="947.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="307.3" y="958.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.improve (1 samples, 0.05%)</title><rect x="304.3" y="931.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="307.3" y="942.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve$ (1 samples, 0.05%)</title><rect x="304.3" y="915.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="307.3" y="926.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve (1 samples, 0.05%)</title><rect x="304.3" y="899.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="307.3" y="910.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (1 samples, 0.05%)</title><rect x="304.3" y="883.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="307.3" y="894.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="304.9" y="979.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="307.9" y="990.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="304.9" y="963.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="307.9" y="974.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="304.9" y="947.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="307.9" y="958.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.05%)</title><rect x="304.9" y="931.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="307.9" y="942.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (7 samples, 0.33%)</title><rect x="305.4" y="1171.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="308.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (7 samples, 0.33%)</title><rect x="305.4" y="1155.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (7 samples, 0.33%)</title><rect x="305.4" y="1139.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (7 samples, 0.33%)</title><rect x="305.4" y="1123.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (7 samples, 0.33%)</title><rect x="305.4" y="1107.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (7 samples, 0.33%)</title><rect x="305.4" y="1091.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="308.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (5 samples, 0.23%)</title><rect x="306.0" y="1075.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.0" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (5 samples, 0.23%)</title><rect x="306.0" y="1059.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (5 samples, 0.23%)</title><rect x="306.0" y="1043.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.0" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (5 samples, 0.23%)</title><rect x="306.0" y="1027.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="309.0" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (5 samples, 0.23%)</title><rect x="306.0" y="1011.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="309.0" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (5 samples, 0.23%)</title><rect x="306.0" y="995.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="309.0" y="1006.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="308.7" y="1075.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="311.7" y="1086.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$21919/412696273.apply (3 samples, 0.14%)</title><rect x="309.3" y="1299.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="312.3" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$15 (3 samples, 0.14%)</title><rect x="309.3" y="1283.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="312.3" y="1294.0"></text>
</g>
<g>
<title>treadle/executable/TailBigs.apply (3 samples, 0.14%)</title><rect x="309.3" y="1267.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="312.3" y="1278.0"></text>
</g>
<g>
<title>scala/math/BigInt.$amp (3 samples, 0.14%)</title><rect x="309.3" y="1251.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="312.3" y="1262.0"></text>
</g>
<g>
<title>java/math/BigInteger.and (3 samples, 0.14%)</title><rect x="309.3" y="1235.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="312.3" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$21877/517240099.apply$mcV$sp (26 samples, 1.21%)</title><rect x="310.9" y="1347.0" width="14.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="313.9" y="1358.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (26 samples, 1.21%)</title><rect x="310.9" y="1331.0" width="14.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.9" y="1342.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (26 samples, 1.21%)</title><rect x="310.9" y="1315.0" width="14.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.9" y="1326.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.treadle$executable$DataStore$AssignInt$$$outer (2 samples, 0.09%)</title><rect x="310.9" y="1299.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="313.9" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.05%)</title><rect x="312.0" y="1299.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="315.0" y="1310.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (23 samples, 1.07%)</title><rect x="312.6" y="1299.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="315.6" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (23 samples, 1.07%)</title><rect x="312.6" y="1283.0" width="12.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.6" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (23 samples, 1.07%)</title><rect x="312.6" y="1267.0" width="12.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="315.6" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (23 samples, 1.07%)</title><rect x="312.6" y="1251.0" width="12.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="315.6" y="1262.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$21885/204967445.apply (23 samples, 1.07%)</title><rect x="312.6" y="1235.0" width="12.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="315.6" y="1246.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (23 samples, 1.07%)</title><rect x="312.6" y="1219.0" width="12.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.6" y="1230.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (23 samples, 1.07%)</title><rect x="312.6" y="1203.0" width="12.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="315.6" y="1214.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (23 samples, 1.07%)</title><rect x="312.6" y="1187.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="315.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="312.6" y="1171.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="315.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="312.6" y="1155.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="315.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.05%)</title><rect x="312.6" y="1139.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="315.6" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="312.6" y="1123.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="315.6" y="1134.0"></text>
</g>
<g>
<title>scala/LowPriorityImplicits.wrapRefArray (1 samples, 0.05%)</title><rect x="313.1" y="1171.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray$ofRef.&lt;init&gt; (1 samples, 0.05%)</title><rect x="313.1" y="1155.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="316.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/WrappedArray.&lt;init&gt; (1 samples, 0.05%)</title><rect x="313.1" y="1139.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSeq.&lt;init&gt; (1 samples, 0.05%)</title><rect x="313.1" y="1123.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.&lt;init&gt; (1 samples, 0.05%)</title><rect x="313.1" y="1107.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="313.1" y="1091.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="316.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="313.1" y="1075.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.05%)</title><rect x="313.1" y="1059.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/generic/GenericCompanion.apply (5 samples, 0.23%)</title><rect x="313.7" y="1171.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/generic/MutableSetFactory.newBuilder (1 samples, 0.05%)</title><rect x="313.7" y="1155.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="316.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (1 samples, 0.05%)</title><rect x="313.7" y="1139.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (1 samples, 0.05%)</title><rect x="313.7" y="1123.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="316.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet$.empty (1 samples, 0.05%)</title><rect x="313.7" y="1107.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="316.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="313.7" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="313.7" y="1075.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.$init$ (1 samples, 0.05%)</title><rect x="313.7" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="316.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.initialCapacity (1 samples, 0.05%)</title><rect x="313.7" y="1043.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.initialSize (1 samples, 0.05%)</title><rect x="313.7" y="1027.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="316.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (4 samples, 0.19%)</title><rect x="314.2" y="1155.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/Set$.empty (4 samples, 0.19%)</title><rect x="314.2" y="1139.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="317.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet$.empty (4 samples, 0.19%)</title><rect x="314.2" y="1123.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="317.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (4 samples, 0.19%)</title><rect x="314.2" y="1107.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.&lt;init&gt; (4 samples, 0.19%)</title><rect x="314.2" y="1091.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="314.2" y="1075.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="317.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="314.2" y="1059.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="317.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="314.2" y="1043.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="314.2" y="1027.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="317.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$init$ (1 samples, 0.05%)</title><rect x="314.2" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.$init$ (3 samples, 0.14%)</title><rect x="314.8" y="1075.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.initialCapacity (3 samples, 0.14%)</title><rect x="314.8" y="1059.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.8" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.capacity (1 samples, 0.05%)</title><rect x="314.8" y="1043.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.8" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.capacity$ (1 samples, 0.05%)</title><rect x="314.8" y="1027.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.8" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.initialSize (1 samples, 0.05%)</title><rect x="314.8" y="1011.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="317.8" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.initialSize (2 samples, 0.09%)</title><rect x="315.3" y="1043.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.3" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.initialSize$ (2 samples, 0.09%)</title><rect x="315.3" y="1027.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="318.3" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (3 samples, 0.14%)</title><rect x="316.4" y="1171.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="319.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (3 samples, 0.14%)</title><rect x="316.4" y="1155.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="319.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (3 samples, 0.14%)</title><rect x="316.4" y="1139.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="319.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (3 samples, 0.14%)</title><rect x="316.4" y="1123.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="319.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (2 samples, 0.09%)</title><rect x="316.4" y="1107.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="319.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (2 samples, 0.09%)</title><rect x="316.4" y="1091.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="319.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (2 samples, 0.09%)</title><rect x="316.4" y="1075.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="319.4" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="316.4" y="1059.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="319.4" y="1070.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (2 samples, 0.09%)</title><rect x="316.4" y="1043.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="319.4" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="316.4" y="1027.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="319.4" y="1038.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.09%)</title><rect x="316.4" y="1011.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="319.4" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.09%)</title><rect x="316.4" y="995.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="319.4" y="1006.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.09%)</title><rect x="316.4" y="979.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="319.4" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.09%)</title><rect x="316.4" y="963.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.4" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="316.4" y="947.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="319.4" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mix (1 samples, 0.05%)</title><rect x="317.0" y="947.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="320.0" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mixLast (1 samples, 0.05%)</title><rect x="317.0" y="931.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.0" y="942.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="317.5" y="1107.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="320.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.05%)</title><rect x="317.5" y="1091.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.05%)</title><rect x="317.5" y="1075.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="320.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.05%)</title><rect x="317.5" y="1059.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.5" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.05%)</title><rect x="317.5" y="1043.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="320.5" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.05%)</title><rect x="317.5" y="1027.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="320.5" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.05%)</title><rect x="317.5" y="1011.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="320.5" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (3 samples, 0.14%)</title><rect x="318.1" y="1171.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="321.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (3 samples, 0.14%)</title><rect x="318.1" y="1155.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="321.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (3 samples, 0.14%)</title><rect x="318.1" y="1139.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="321.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (3 samples, 0.14%)</title><rect x="318.1" y="1123.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="321.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (3 samples, 0.14%)</title><rect x="318.1" y="1107.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="321.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (3 samples, 0.14%)</title><rect x="318.1" y="1091.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="321.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (3 samples, 0.14%)</title><rect x="318.1" y="1075.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="321.1" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.14%)</title><rect x="318.1" y="1059.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.1" y="1070.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (3 samples, 0.14%)</title><rect x="318.1" y="1043.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="321.1" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.14%)</title><rect x="318.1" y="1027.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="321.1" y="1038.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (1 samples, 0.05%)</title><rect x="318.6" y="1011.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="321.6" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="318.6" y="995.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="321.6" y="1006.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="318.6" y="979.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="321.6" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="318.6" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="321.6" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mix (1 samples, 0.05%)</title><rect x="318.6" y="947.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.6" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mixLast (1 samples, 0.05%)</title><rect x="318.6" y="931.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="321.6" y="942.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.05%)</title><rect x="318.6" y="915.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="321.6" y="926.0"></text>
</g>
<g>
<title>treadle/executable/IntSize$.hashCode (1 samples, 0.05%)</title><rect x="319.2" y="1011.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="322.2" y="1022.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.reportAllAsUsed$1 (7 samples, 0.33%)</title><rect x="319.7" y="1171.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="322.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (7 samples, 0.33%)</title><rect x="319.7" y="1155.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="322.7" y="1166.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$21886/800006155.apply (7 samples, 0.33%)</title><rect x="319.7" y="1139.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="322.7" y="1150.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (7 samples, 0.33%)</title><rect x="319.7" y="1123.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="322.7" y="1134.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (7 samples, 0.33%)</title><rect x="319.7" y="1107.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="322.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (7 samples, 0.33%)</title><rect x="319.7" y="1091.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (7 samples, 0.33%)</title><rect x="319.7" y="1075.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="322.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (7 samples, 0.33%)</title><rect x="319.7" y="1059.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="322.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (7 samples, 0.33%)</title><rect x="319.7" y="1043.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (4 samples, 0.19%)</title><rect x="319.7" y="1027.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="322.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (4 samples, 0.19%)</title><rect x="319.7" y="1011.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="322.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (4 samples, 0.19%)</title><rect x="319.7" y="995.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="322.7" y="1006.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (4 samples, 0.19%)</title><rect x="319.7" y="979.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.7" y="990.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (4 samples, 0.19%)</title><rect x="319.7" y="963.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="322.7" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (4 samples, 0.19%)</title><rect x="319.7" y="947.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="322.7" y="958.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (4 samples, 0.19%)</title><rect x="319.7" y="931.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="322.7" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.19%)</title><rect x="319.7" y="915.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="322.7" y="926.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.hashCode (3 samples, 0.14%)</title><rect x="320.3" y="899.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="323.3" y="910.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (3 samples, 0.14%)</title><rect x="320.3" y="883.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="323.3" y="894.0"></text>
</g>
<g>
<title>firrtl/ir/UIntType.hashCode (2 samples, 0.09%)</title><rect x="320.3" y="867.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="323.3" y="878.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.05%)</title><rect x="320.8" y="851.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="323.8" y="862.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.05%)</title><rect x="320.8" y="835.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="323.8" y="846.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.05%)</title><rect x="320.8" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.8" y="830.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="320.8" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="323.8" y="814.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="321.4" y="867.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="324.4" y="878.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.elemToEntry (3 samples, 0.14%)</title><rect x="321.9" y="1027.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.9" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.elemToEntry$ (2 samples, 0.09%)</title><rect x="322.5" y="1011.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.5" y="1022.0"></text>
</g>
<g>
<title>treadle/executable/SymbolTable.contains (3 samples, 0.14%)</title><rect x="323.6" y="1171.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="326.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (3 samples, 0.14%)</title><rect x="323.6" y="1155.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (3 samples, 0.14%)</title><rect x="323.6" y="1139.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (3 samples, 0.14%)</title><rect x="323.6" y="1123.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="326.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.09%)</title><rect x="324.2" y="1107.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="327.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.05%)</title><rect x="324.2" y="1091.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="327.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.05%)</title><rect x="324.2" y="1075.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="327.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.05%)</title><rect x="324.2" y="1059.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="327.2" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.05%)</title><rect x="324.2" y="1043.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="327.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="324.2" y="1027.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="327.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.05%)</title><rect x="324.7" y="1091.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.7" y="1102.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setIntValue (1 samples, 0.05%)</title><rect x="325.3" y="1411.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="328.3" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.valueFrom (1 samples, 0.05%)</title><rect x="325.3" y="1395.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="328.3" y="1406.0"></text>
</g>
<g>
<title>scala/math/BigInt.$amp (1 samples, 0.05%)</title><rect x="325.3" y="1379.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.3" y="1390.0"></text>
</g>
<g>
<title>java/math/BigInteger.and (1 samples, 0.05%)</title><rect x="325.3" y="1363.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="328.3" y="1374.0"></text>
</g>
<g>
<title>treadle/TreadleTester$.apply (4 samples, 0.19%)</title><rect x="325.8" y="1699.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="328.8" y="1710.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$.transform (4 samples, 0.19%)</title><rect x="325.8" y="1683.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.8" y="1694.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (4 samples, 0.19%)</title><rect x="325.8" y="1667.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="328.8" y="1678.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (4 samples, 0.19%)</title><rect x="325.8" y="1651.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.8" y="1662.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (4 samples, 0.19%)</title><rect x="325.8" y="1635.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="328.8" y="1646.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$$$Lambda$21007/882178822.apply (4 samples, 0.19%)</title><rect x="325.8" y="1619.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.8" y="1630.0"></text>
</g>
<g>
<title>treadle/stage/TreadleTesterPhase$.$anonfun$transform$2 (4 samples, 0.19%)</title><rect x="325.8" y="1603.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="328.8" y="1614.0"></text>
</g>
<g>
<title>treadle/stage/phases/CreateTester$.transform (2 samples, 0.09%)</title><rect x="325.8" y="1587.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.8" y="1598.0"></text>
</g>
<g>
<title>treadle/stage/phases/CreateTester$.transform (2 samples, 0.09%)</title><rect x="325.8" y="1571.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="328.8" y="1582.0"></text>
</g>
<g>
<title>treadle/TreadleTester.&lt;init&gt; (2 samples, 0.09%)</title><rect x="325.8" y="1555.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.8" y="1566.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$.apply (2 samples, 0.09%)</title><rect x="325.8" y="1539.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="328.8" y="1550.0"></text>
</g>
<g>
<title>treadle/chronometry/Timer.apply (2 samples, 0.09%)</title><rect x="325.8" y="1523.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="328.8" y="1534.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (2 samples, 0.09%)</title><rect x="325.8" y="1507.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="328.8" y="1518.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$$$Lambda$21814/2009740352.apply$mcV$sp (2 samples, 0.09%)</title><rect x="325.8" y="1491.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.8" y="1502.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine$.$anonfun$apply$8 (2 samples, 0.09%)</title><rect x="325.8" y="1475.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.8" y="1486.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.compile (2 samples, 0.09%)</title><rect x="325.8" y="1459.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="328.8" y="1470.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processModule (2 samples, 0.09%)</title><rect x="325.8" y="1443.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="328.8" y="1454.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processStatements (2 samples, 0.09%)</title><rect x="325.8" y="1427.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.8" y="1438.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processStatements (2 samples, 0.09%)</title><rect x="325.8" y="1411.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="328.8" y="1422.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.makeGet (1 samples, 0.05%)</title><rect x="325.8" y="1395.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.8" y="1406.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="325.8" y="1379.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="328.8" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="325.8" y="1363.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.8" y="1374.0"></text>
</g>
<g>
<title>sbt/internal/ManagedClassLoader.findClass (1 samples, 0.05%)</title><rect x="325.8" y="1347.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="328.8" y="1358.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="325.8" y="1331.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.8" y="1342.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="325.8" y="1315.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.8" y="1326.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="325.8" y="1299.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="328.8" y="1310.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="325.8" y="1283.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="328.8" y="1294.0"></text>
</g>
<g>
<title>sun/misc/URLClassPath.getResource (1 samples, 0.05%)</title><rect x="325.8" y="1267.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.8" y="1278.0"></text>
</g>
<g>
<title>sun/misc/URLClassPath$FileLoader.getResource (1 samples, 0.05%)</title><rect x="325.8" y="1251.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="328.8" y="1262.0"></text>
</g>
<g>
<title>java/io/File.exists (1 samples, 0.05%)</title><rect x="325.8" y="1235.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="328.8" y="1246.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.05%)</title><rect x="325.8" y="1219.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="328.8" y="1230.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.05%)</title><rect x="325.8" y="1203.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="328.8" y="1214.0"></text>
</g>
<g>
<title>stat64 (1 samples, 0.05%)</title><rect x="325.8" y="1187.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="328.8" y="1198.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.processExpression$1 (1 samples, 0.05%)</title><rect x="326.4" y="1395.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="329.4" y="1406.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.oneArgOneParamOps$1 (1 samples, 0.05%)</title><rect x="326.4" y="1379.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.4" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.05%)</title><rect x="326.4" y="1363.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.4" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.05%)</title><rect x="326.4" y="1347.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.05%)</title><rect x="326.4" y="1331.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/230528013.invokeExact_MT (1 samples, 0.05%)</title><rect x="326.4" y="1315.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="329.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1861086228.invoker (1 samples, 0.05%)</title><rect x="326.4" y="1299.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="329.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$BMH/1824524646.reinvoke (1 samples, 0.05%)</title><rect x="326.4" y="1283.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.4" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/282432134.invokeStatic_L4_L (1 samples, 0.05%)</title><rect x="326.4" y="1267.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.05%)</title><rect x="326.4" y="1251.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.05%)</title><rect x="326.4" y="1235.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.05%)</title><rect x="326.4" y="1219.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.4" y="1230.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.defineAnonymousClass (1 samples, 0.05%)</title><rect x="326.4" y="1203.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="329.4" y="1214.0"></text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass (1 samples, 0.05%)</title><rect x="326.4" y="1187.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="329.4" y="1198.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, KlassHandle, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="326.4" y="1171.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="329.4" y="1182.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.05%)</title><rect x="326.4" y="1155.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="329.4" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.05%)</title><rect x="326.4" y="1139.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="329.4" y="1150.0"></text>
</g>
<g>
<title>Verifier::verify(instanceKlassHandle, Verifier::Mode, bool, Thread*) (1 samples, 0.05%)</title><rect x="326.4" y="1123.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="329.4" y="1134.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.05%)</title><rect x="326.4" y="1107.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="329.4" y="1118.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle, Thread*) (1 samples, 0.05%)</title><rect x="326.4" y="1091.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="329.4" y="1102.0"></text>
</g>
<g>
<title>RawBytecodeStream::RawBytecodeStream(methodHandle) (1 samples, 0.05%)</title><rect x="326.4" y="1075.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="329.4" y="1086.0"></text>
</g>
<g>
<title>BaseBytecodeStream::BaseBytecodeStream(methodHandle) (1 samples, 0.05%)</title><rect x="326.4" y="1059.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="329.4" y="1070.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.05%)</title><rect x="326.4" y="1043.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="329.4" y="1054.0"></text>
</g>
<g>
<title>treadle/stage/phases/PrepareAst$.transform (2 samples, 0.09%)</title><rect x="326.9" y="1587.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.9" y="1598.0"></text>
</g>
<g>
<title>treadle/stage/phases/PrepareAst$.transform (2 samples, 0.09%)</title><rect x="326.9" y="1571.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.9" y="1582.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.transform$ (2 samples, 0.09%)</title><rect x="326.9" y="1555.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="329.9" y="1566.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.transform (2 samples, 0.09%)</title><rect x="326.9" y="1539.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.9" y="1550.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.flatMap (2 samples, 0.09%)</title><rect x="326.9" y="1523.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.9" y="1534.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap$ (2 samples, 0.09%)</title><rect x="326.9" y="1507.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.9" y="1518.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.flatMap (2 samples, 0.09%)</title><rect x="326.9" y="1491.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.9" y="1502.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (2 samples, 0.09%)</title><rect x="326.9" y="1475.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.9" y="1486.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$4204/1202885598.apply (2 samples, 0.09%)</title><rect x="326.9" y="1459.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="329.9" y="1470.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$flatMap$1 (2 samples, 0.09%)</title><rect x="326.9" y="1443.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="329.9" y="1454.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase$$Lambda$21026/630470630.apply (2 samples, 0.09%)</title><rect x="326.9" y="1427.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="329.9" y="1438.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.$anonfun$transform$2 (2 samples, 0.09%)</title><rect x="326.9" y="1411.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.9" y="1422.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (2 samples, 0.09%)</title><rect x="326.9" y="1395.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.9" y="1406.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (2 samples, 0.09%)</title><rect x="326.9" y="1379.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="329.9" y="1390.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (2 samples, 0.09%)</title><rect x="326.9" y="1363.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.9" y="1374.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase$$Lambda$21027/1138740095.apply (2 samples, 0.09%)</title><rect x="326.9" y="1347.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="329.9" y="1358.0"></text>
</g>
<g>
<title>treadle/stage/phases/TreadlePhase.$anonfun$transform$3 (2 samples, 0.09%)</title><rect x="326.9" y="1331.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.9" y="1342.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (2 samples, 0.09%)</title><rect x="326.9" y="1315.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.9" y="1326.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (2 samples, 0.09%)</title><rect x="326.9" y="1299.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.9" y="1310.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$21029/121264124.apply (2 samples, 0.09%)</title><rect x="326.9" y="1283.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="329.9" y="1294.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (2 samples, 0.09%)</title><rect x="326.9" y="1267.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="329.9" y="1278.0"></text>
</g>
<g>
<title>treadle/stage/phases/ChirrtlToLow.execute (2 samples, 0.09%)</title><rect x="326.9" y="1251.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="329.9" y="1262.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (2 samples, 0.09%)</title><rect x="326.9" y="1235.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.9" y="1246.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (2 samples, 0.09%)</title><rect x="326.9" y="1219.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.9" y="1230.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (2 samples, 0.09%)</title><rect x="326.9" y="1203.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.9" y="1214.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (2 samples, 0.09%)</title><rect x="326.9" y="1187.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (2 samples, 0.09%)</title><rect x="326.9" y="1171.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (2 samples, 0.09%)</title><rect x="326.9" y="1155.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="329.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (2 samples, 0.09%)</title><rect x="326.9" y="1139.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="329.9" y="1150.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$21030/969066331.apply (2 samples, 0.09%)</title><rect x="326.9" y="1123.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.9" y="1134.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (2 samples, 0.09%)</title><rect x="326.9" y="1107.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.9" y="1118.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (2 samples, 0.09%)</title><rect x="326.9" y="1091.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.9" y="1102.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (2 samples, 0.09%)</title><rect x="326.9" y="1075.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="329.9" y="1086.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$21029/121264124.apply (2 samples, 0.09%)</title><rect x="326.9" y="1059.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.9" y="1070.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (2 samples, 0.09%)</title><rect x="326.9" y="1043.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.9" y="1054.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.execute (2 samples, 0.09%)</title><rect x="326.9" y="1027.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.9" y="1038.0"></text>
</g>
<g>
<title>firrtl/SeqTransform.runTransforms (2 samples, 0.09%)</title><rect x="326.9" y="1011.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.9" y="1022.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms$ (2 samples, 0.09%)</title><rect x="326.9" y="995.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.9" y="1006.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.runTransforms (2 samples, 0.09%)</title><rect x="326.9" y="979.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.9" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (2 samples, 0.09%)</title><rect x="326.9" y="963.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="329.9" y="974.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (2 samples, 0.09%)</title><rect x="326.9" y="947.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.9" y="958.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft (2 samples, 0.09%)</title><rect x="326.9" y="931.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.9" y="942.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased$$Lambda$21030/969066331.apply (2 samples, 0.09%)</title><rect x="326.9" y="915.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.9" y="926.0"></text>
</g>
<g>
<title>firrtl/SeqTransformBased.$anonfun$runTransforms$1 (2 samples, 0.09%)</title><rect x="326.9" y="899.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.9" y="910.0"></text>
</g>
<g>
<title>firrtl/Transform.runTransform (2 samples, 0.09%)</title><rect x="326.9" y="883.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.9" y="894.0"></text>
</g>
<g>
<title>firrtl/Utils$.time (2 samples, 0.09%)</title><rect x="326.9" y="867.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.9" y="878.0"></text>
</g>
<g>
<title>firrtl/Transform$$Lambda$21029/121264124.apply (2 samples, 0.09%)</title><rect x="326.9" y="851.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.9" y="862.0"></text>
</g>
<g>
<title>firrtl/Transform.$anonfun$runTransform$2 (2 samples, 0.09%)</title><rect x="326.9" y="835.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.9" y="846.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighForm$.execute (1 samples, 0.05%)</title><rect x="326.9" y="819.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.9" y="830.0"></text>
</g>
<g>
<title>firrtl/passes/Pass.execute$ (1 samples, 0.05%)</title><rect x="326.9" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.9" y="814.0"></text>
</g>
<g>
<title>firrtl/passes/Pass.execute (1 samples, 0.05%)</title><rect x="326.9" y="787.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.9" y="798.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighForm$.run (1 samples, 0.05%)</title><rect x="326.9" y="771.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.9" y="782.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike.run$ (1 samples, 0.05%)</title><rect x="326.9" y="755.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="329.9" y="766.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike.run (1 samples, 0.05%)</title><rect x="326.9" y="739.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.9" y="750.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="326.9" y="723.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="329.9" y="734.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="326.9" y="707.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="329.9" y="718.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="326.9" y="691.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.9" y="702.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike$$Lambda$21032/161628978.apply (1 samples, 0.05%)</title><rect x="326.9" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.9" y="686.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike.$anonfun$run$37$adapted (1 samples, 0.05%)</title><rect x="326.9" y="659.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="329.9" y="670.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike.$anonfun$run$37 (1 samples, 0.05%)</title><rect x="326.9" y="643.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.9" y="654.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike.checkHighFormM$1 (1 samples, 0.05%)</title><rect x="326.9" y="627.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.9" y="638.0"></text>
</g>
<g>
<title>firrtl/traversals/Foreachers$ModuleForeach$.foreach$extension (1 samples, 0.05%)</title><rect x="326.9" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="329.9" y="622.0"></text>
</g>
<g>
<title>firrtl/traversals/Foreachers$ModuleForMagnet$$anon$11.foreach (1 samples, 0.05%)</title><rect x="326.9" y="595.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.9" y="606.0"></text>
</g>
<g>
<title>firrtl/ir/Module.foreachStmt (1 samples, 0.05%)</title><rect x="326.9" y="579.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="329.9" y="590.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike$$Lambda$21039/1244172840.apply (1 samples, 0.05%)</title><rect x="326.9" y="563.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.9" y="574.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike.$anonfun$run$33$adapted (1 samples, 0.05%)</title><rect x="326.9" y="547.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="329.9" y="558.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike.$anonfun$run$33 (1 samples, 0.05%)</title><rect x="326.9" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.9" y="542.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike.checkHighFormS$1 (1 samples, 0.05%)</title><rect x="326.9" y="515.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="329.9" y="526.0"></text>
</g>
<g>
<title>firrtl/traversals/Foreachers$StmtForeach$.foreach$extension (1 samples, 0.05%)</title><rect x="326.9" y="499.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="329.9" y="510.0"></text>
</g>
<g>
<title>firrtl/traversals/Foreachers$StmtForMagnet$$anon$1.foreach (1 samples, 0.05%)</title><rect x="326.9" y="483.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.9" y="494.0"></text>
</g>
<g>
<title>firrtl/ir/Block.foreachStmt (1 samples, 0.05%)</title><rect x="326.9" y="467.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="329.9" y="478.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="326.9" y="451.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.9" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="326.9" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.9" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="326.9" y="419.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="329.9" y="430.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike$$Lambda$21047/2136518892.apply (1 samples, 0.05%)</title><rect x="326.9" y="403.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="329.9" y="414.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike.$anonfun$run$25$adapted (1 samples, 0.05%)</title><rect x="326.9" y="387.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.9" y="398.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike.$anonfun$run$25 (1 samples, 0.05%)</title><rect x="326.9" y="371.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.9" y="382.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike.checkHighFormS$1 (1 samples, 0.05%)</title><rect x="326.9" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.9" y="366.0"></text>
</g>
<g>
<title>firrtl/traversals/Foreachers$StmtForeach$.foreach$extension (1 samples, 0.05%)</title><rect x="326.9" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.9" y="350.0"></text>
</g>
<g>
<title>firrtl/traversals/Foreachers$StmtForMagnet$$anon$2.foreach (1 samples, 0.05%)</title><rect x="326.9" y="323.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="329.9" y="334.0"></text>
</g>
<g>
<title>firrtl/ir/DefNode.foreachExpr (1 samples, 0.05%)</title><rect x="326.9" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.9" y="318.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike$$Lambda$21045/1660648238.apply (1 samples, 0.05%)</title><rect x="326.9" y="291.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.9" y="302.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike.$anonfun$run$23$adapted (1 samples, 0.05%)</title><rect x="326.9" y="275.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="329.9" y="286.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike.$anonfun$run$23 (1 samples, 0.05%)</title><rect x="326.9" y="259.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.9" y="270.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike.checkHighFormE$1 (1 samples, 0.05%)</title><rect x="326.9" y="243.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.9" y="254.0"></text>
</g>
<g>
<title>firrtl/traversals/Foreachers$ExprForeach$.foreach$extension (1 samples, 0.05%)</title><rect x="326.9" y="227.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.9" y="238.0"></text>
</g>
<g>
<title>firrtl/traversals/Foreachers$ExprForMagnet$$anon$6.foreach (1 samples, 0.05%)</title><rect x="326.9" y="211.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.9" y="222.0"></text>
</g>
<g>
<title>firrtl/ir/DoPrim.foreachExpr (1 samples, 0.05%)</title><rect x="326.9" y="195.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.9" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="326.9" y="179.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="329.9" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="326.9" y="163.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.9" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="326.9" y="147.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.9" y="158.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike$$Lambda$21053/1859001270.apply (1 samples, 0.05%)</title><rect x="326.9" y="131.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.9" y="142.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike.$anonfun$run$16$adapted (1 samples, 0.05%)</title><rect x="326.9" y="115.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.9" y="126.0"></text>
</g>
<g>
<title>firrtl/passes/CheckHighFormLike.$anonfun$run$16 (1 samples, 0.05%)</title><rect x="326.9" y="99.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="329.9" y="110.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="326.9" y="83.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="329.9" y="94.0"></text>
</g>
<g>
<title>frame::interpreter_callee_receiver_addr(Symbol*) (1 samples, 0.05%)</title><rect x="326.9" y="67.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="329.9" y="78.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_parameters() (1 samples, 0.05%)</title><rect x="326.9" y="51.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="329.9" y="62.0"></text>
</g>
<g>
<title>SignatureIterator::parse_type() (1 samples, 0.05%)</title><rect x="326.9" y="35.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="329.9" y="46.0"></text>
</g>
<g>
<title>firrtl/passes/InferWidths.execute (1 samples, 0.05%)</title><rect x="327.5" y="819.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.5" y="830.0"></text>
</g>
<g>
<title>firrtl/passes/InferWidths.run (1 samples, 0.05%)</title><rect x="327.5" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.5" y="814.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="327.5" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.5" y="798.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="327.5" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.5" y="782.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="327.5" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.5" y="766.0"></text>
</g>
<g>
<title>firrtl/passes/InferWidths$$Lambda$21285/1769170910.apply (1 samples, 0.05%)</title><rect x="327.5" y="739.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.5" y="750.0"></text>
</g>
<g>
<title>firrtl/passes/InferWidths.$anonfun$run$1 (1 samples, 0.05%)</title><rect x="327.5" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="330.5" y="734.0"></text>
</g>
<g>
<title>firrtl/Mappers$ModuleMap$.map$extension (1 samples, 0.05%)</title><rect x="327.5" y="707.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.5" y="718.0"></text>
</g>
<g>
<title>firrtl/Mappers$ModuleMagnet$$anon$13.map (1 samples, 0.05%)</title><rect x="327.5" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="330.5" y="702.0"></text>
</g>
<g>
<title>firrtl/ir/Module.mapStmt (1 samples, 0.05%)</title><rect x="327.5" y="675.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.5" y="686.0"></text>
</g>
<g>
<title>firrtl/passes/InferWidths$$Lambda$21286/1280098658.apply (1 samples, 0.05%)</title><rect x="327.5" y="659.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="330.5" y="670.0"></text>
</g>
<g>
<title>firrtl/passes/InferWidths.$anonfun$run$2 (1 samples, 0.05%)</title><rect x="327.5" y="643.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.5" y="654.0"></text>
</g>
<g>
<title>firrtl/passes/InferWidths.addStmtConstraints (1 samples, 0.05%)</title><rect x="327.5" y="627.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="330.5" y="638.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMap$.map$extension (1 samples, 0.05%)</title><rect x="327.5" y="611.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="330.5" y="622.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMagnet$$anon$2.map (1 samples, 0.05%)</title><rect x="327.5" y="595.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.5" y="606.0"></text>
</g>
<g>
<title>firrtl/ir/Block.mapStmt (1 samples, 0.05%)</title><rect x="327.5" y="579.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.5" y="590.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (1 samples, 0.05%)</title><rect x="327.5" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.5" y="574.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="327.5" y="547.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="330.5" y="558.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="327.5" y="531.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.5" y="542.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (1 samples, 0.05%)</title><rect x="327.5" y="515.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="330.5" y="526.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3577/1680023710.apply (1 samples, 0.05%)</title><rect x="327.5" y="499.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="330.5" y="510.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="327.5" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.5" y="494.0"></text>
</g>
<g>
<title>firrtl/passes/InferWidths$$Lambda$21290/1824450279.apply (1 samples, 0.05%)</title><rect x="327.5" y="467.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.5" y="478.0"></text>
</g>
<g>
<title>firrtl/passes/InferWidths.$anonfun$addStmtConstraints$10 (1 samples, 0.05%)</title><rect x="327.5" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.5" y="462.0"></text>
</g>
<g>
<title>firrtl/passes/InferWidths.addStmtConstraints (1 samples, 0.05%)</title><rect x="327.5" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="330.5" y="446.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMap$.map$extension (1 samples, 0.05%)</title><rect x="327.5" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="330.5" y="430.0"></text>
</g>
<g>
<title>firrtl/Mappers$StmtMagnet$$anon$2.map (1 samples, 0.05%)</title><rect x="327.5" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.5" y="414.0"></text>
</g>
<g>
<title>firrtl/ir/Block.mapStmt (1 samples, 0.05%)</title><rect x="327.5" y="387.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.5" y="398.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.05%)</title><rect x="327.5" y="371.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="330.5" y="382.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.05%)</title><rect x="327.5" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.5" y="366.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.05%)</title><rect x="327.5" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="330.5" y="350.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (1 samples, 0.05%)</title><rect x="327.5" y="323.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.5" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (1 samples, 0.05%)</title><rect x="327.5" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="330.5" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (1 samples, 0.05%)</title><rect x="327.5" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.5" y="302.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$3577/1680023710.apply (1 samples, 0.05%)</title><rect x="327.5" y="275.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.5" y="286.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (1 samples, 0.05%)</title><rect x="327.5" y="259.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.5" y="270.0"></text>
</g>
<g>
<title>firrtl/passes/InferWidths$$Lambda$21290/1824450279.apply (1 samples, 0.05%)</title><rect x="327.5" y="243.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.5" y="254.0"></text>
</g>
<g>
<title>firrtl/passes/InferWidths.$anonfun$addStmtConstraints$10 (1 samples, 0.05%)</title><rect x="327.5" y="227.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.5" y="238.0"></text>
</g>
<g>
<title>firrtl/passes/InferWidths.addStmtConstraints (1 samples, 0.05%)</title><rect x="327.5" y="211.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.5" y="222.0"></text>
</g>
<g>
<title>firrtl/passes/InferWidths.addTypeConstraints (1 samples, 0.05%)</title><rect x="327.5" y="195.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="330.5" y="206.0"></text>
</g>
<g>
<title>firrtl/annotations/ReferenceTarget.prettyPrint (1 samples, 0.05%)</title><rect x="327.5" y="179.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.5" y="190.0"></text>
</g>
<g>
<title>firrtl/annotations/Target.prettyPrint$ (1 samples, 0.05%)</title><rect x="327.5" y="163.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.5" y="174.0"></text>
</g>
<g>
<title>firrtl/annotations/Target.prettyPrint (1 samples, 0.05%)</title><rect x="327.5" y="147.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="330.5" y="158.0"></text>
</g>
<g>
<title>firrtl/annotations/ReferenceTarget.tokens (1 samples, 0.05%)</title><rect x="327.5" y="131.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.5" y="142.0"></text>
</g>
<g>
<title>firrtl/annotations/IsComponent.tokens$ (1 samples, 0.05%)</title><rect x="327.5" y="115.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.5" y="126.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="327.5" y="99.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="330.5" y="110.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle, int, Bytecodes::Code, Thread*) (1 samples, 0.05%)</title><rect x="327.5" y="83.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="330.5" y="94.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::remove_at(int) (1 samples, 0.05%)</title><rect x="327.5" y="67.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="330.5" y="78.0"></text>
</g>
<g>
<title>org/scalatest/Suite$.reportTestSucceeded (1 samples, 0.05%)</title><rect x="328.0" y="1955.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="331.0" y="1966.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.05%)</title><rect x="328.0" y="1939.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="331.0" y="1950.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.05%)</title><rect x="328.0" y="1923.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="331.0" y="1934.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.05%)</title><rect x="328.0" y="1907.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="331.0" y="1918.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.05%)</title><rect x="328.0" y="1891.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="331.0" y="1902.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.05%)</title><rect x="328.0" y="1875.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="331.0" y="1886.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.05%)</title><rect x="328.0" y="1859.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="331.0" y="1870.0"></text>
</g>
<g>
<title>VM::ClassPrepare(_jvmtiEnv*, JNIEnv_*, _jobject*, _jclass*) (1 samples, 0.05%)</title><rect x="328.0" y="1843.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="331.0" y="1854.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods (1 samples, 0.05%)</title><rect x="328.0" y="1827.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="331.0" y="1838.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (1 samples, 0.05%)</title><rect x="328.0" y="1811.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="331.0" y="1822.0"></text>
</g>
<g>
<title>Method::jmethod_id() (1 samples, 0.05%)</title><rect x="328.0" y="1795.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="331.0" y="1806.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(instanceKlassHandle, methodHandle) (1 samples, 0.05%)</title><rect x="328.0" y="1779.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="331.0" y="1790.0"></text>
</g>
<g>
<title>Method::make_jmethod_id(ClassLoaderData*, Method*) (1 samples, 0.05%)</title><rect x="328.0" y="1763.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="331.0" y="1774.0"></text>
</g>
<g>
<title>JNIMethodBlock::add_method(Method*) (1 samples, 0.05%)</title><rect x="328.0" y="1747.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="331.0" y="1758.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress$ProgressThread.run (11 samples, 0.51%)</title><rect x="328.6" y="2899.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.6" y="2910.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress.sbt$internal$TaskProgress$$report (11 samples, 0.51%)</title><rect x="328.6" y="2883.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="331.6" y="2894.0"></text>
</g>
<g>
<title>sbt/internal/AbstractTaskExecuteProgress.activeTasks (1 samples, 0.05%)</title><rect x="328.6" y="2867.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.6" y="2878.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.toSet (1 samples, 0.05%)</title><rect x="328.6" y="2851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="331.6" y="2862.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.toSet$ (1 samples, 0.05%)</title><rect x="328.6" y="2835.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.6" y="2846.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.toSet (1 samples, 0.05%)</title><rect x="328.6" y="2819.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="331.6" y="2830.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.to (1 samples, 0.05%)</title><rect x="328.6" y="2803.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="331.6" y="2814.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.to$ (1 samples, 0.05%)</title><rect x="328.6" y="2787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.6" y="2798.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.to (1 samples, 0.05%)</title><rect x="328.6" y="2771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="331.6" y="2782.0"></text>
</g>
<g>
<title>scala/collection/mutable/SetBuilder.$plus$plus$eq (1 samples, 0.05%)</title><rect x="328.6" y="2755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="331.6" y="2766.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (1 samples, 0.05%)</title><rect x="328.6" y="2739.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.6" y="2750.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (1 samples, 0.05%)</title><rect x="328.6" y="2723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.6" y="2734.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (1 samples, 0.05%)</title><rect x="328.6" y="2707.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.6" y="2718.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (1 samples, 0.05%)</title><rect x="328.6" y="2691.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.6" y="2702.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (1 samples, 0.05%)</title><rect x="328.6" y="2675.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.6" y="2686.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (1 samples, 0.05%)</title><rect x="328.6" y="2659.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.6" y="2670.0"></text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (1 samples, 0.05%)</title><rect x="328.6" y="2643.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="331.6" y="2654.0"></text>
</g>
<g>
<title>scala/collection/Iterator.foreach (1 samples, 0.05%)</title><rect x="328.6" y="2627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.6" y="2638.0"></text>
</g>
<g>
<title>scala/collection/convert/Wrappers$JIteratorWrapper.hasNext (1 samples, 0.05%)</title><rect x="328.6" y="2611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="331.6" y="2622.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="328.6" y="2595.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="331.6" y="2606.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress.report0$1 (9 samples, 0.42%)</title><rect x="329.1" y="2867.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="332.1" y="2878.0"></text>
</g>
<g>
<title>java/lang/Class.getClassLoader (3 samples, 0.14%)</title><rect x="329.1" y="2851.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="332.1" y="2862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkClassLoaderPermission (1 samples, 0.05%)</title><rect x="329.1" y="2835.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.1" y="2846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.needsClassLoaderPermissionCheck (1 samples, 0.05%)</title><rect x="329.1" y="2819.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.1" y="2830.0"></text>
</g>
<g>
<title>sun/reflect/Reflection.getCallerClass (2 samples, 0.09%)</title><rect x="329.7" y="2835.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.7" y="2846.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (1 samples, 0.05%)</title><rect x="329.7" y="2819.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="332.7" y="2830.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.05%)</title><rect x="329.7" y="2803.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="332.7" y="2814.0"></text>
</g>
<g>
<title>JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*) (1 samples, 0.05%)</title><rect x="329.7" y="2787.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="332.7" y="2798.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.05%)</title><rect x="329.7" y="2771.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="332.7" y="2782.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="329.7" y="2755.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="332.7" y="2766.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.05%)</title><rect x="329.7" y="2739.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="332.7" y="2750.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.05%)</title><rect x="329.7" y="2723.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="332.7" y="2734.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.05%)</title><rect x="329.7" y="2707.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="332.7" y="2718.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.05%)</title><rect x="329.7" y="2691.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="332.7" y="2702.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="330.2" y="2819.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="333.2" y="2830.0"></text>
</g>
<g>
<title>sbt/internal/util/ManagedLogger.logEvent (4 samples, 0.19%)</title><rect x="330.8" y="2851.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.8" y="2862.0"></text>
</g>
<g>
<title>sbt/internal/util/ObjectEvent$.apply (1 samples, 0.05%)</title><rect x="330.8" y="2835.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="333.8" y="2846.0"></text>
</g>
<g>
<title>sjsonnew/support/scalajson/unsafe/Converter$.toJsonUnsafe (1 samples, 0.05%)</title><rect x="330.8" y="2819.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.8" y="2830.0"></text>
</g>
<g>
<title>sjsonnew/SupportConverter.toJsonUnsafe$ (1 samples, 0.05%)</title><rect x="330.8" y="2803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="333.8" y="2814.0"></text>
</g>
<g>
<title>sjsonnew/SupportConverter.toJsonUnsafe (1 samples, 0.05%)</title><rect x="330.8" y="2787.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="333.8" y="2798.0"></text>
</g>
<g>
<title>sbt/internal/util/codec/ProgressEventFormats$$anon$1.write (1 samples, 0.05%)</title><rect x="330.8" y="2771.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="333.8" y="2782.0"></text>
</g>
<g>
<title>sbt/internal/util/codec/ProgressEventFormats$$anon$1.write (1 samples, 0.05%)</title><rect x="330.8" y="2755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.8" y="2766.0"></text>
</g>
<g>
<title>sjsonnew/Builder.addField (1 samples, 0.05%)</title><rect x="330.8" y="2739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="333.8" y="2750.0"></text>
</g>
<g>
<title>sjsonnew/CollectionFormats$$anon$2.addField (1 samples, 0.05%)</title><rect x="330.8" y="2723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="333.8" y="2734.0"></text>
</g>
<g>
<title>sjsonnew/JsonWriter.addField$ (1 samples, 0.05%)</title><rect x="330.8" y="2707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.8" y="2718.0"></text>
</g>
<g>
<title>sjsonnew/JsonWriter.addField (1 samples, 0.05%)</title><rect x="330.8" y="2691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.8" y="2702.0"></text>
</g>
<g>
<title>sjsonnew/CollectionFormats$$anon$2.write (1 samples, 0.05%)</title><rect x="330.8" y="2675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="333.8" y="2686.0"></text>
</g>
<g>
<title>sjsonnew/CollectionFormats$$anon$2.write (1 samples, 0.05%)</title><rect x="330.8" y="2659.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.8" y="2670.0"></text>
</g>
<g>
<title>sjsonnew/Builder.endArray (1 samples, 0.05%)</title><rect x="330.8" y="2643.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="333.8" y="2654.0"></text>
</g>
<g>
<title>sjsonnew/support/scalajson/unsafe/Converter$FacadeImpl$$anon$2.finish (1 samples, 0.05%)</title><rect x="330.8" y="2627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.8" y="2638.0"></text>
</g>
<g>
<title>sjsonnew/support/scalajson/unsafe/Converter$FacadeImpl$$anon$2.finish (1 samples, 0.05%)</title><rect x="330.8" y="2611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.8" y="2622.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.toArray (1 samples, 0.05%)</title><rect x="330.8" y="2595.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.8" y="2606.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.apply (3 samples, 0.14%)</title><rect x="331.3" y="2835.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.3" y="2846.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.retry$1 (3 samples, 0.14%)</title><rect x="331.3" y="2819.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="334.3" y="2830.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.doApply$1 (3 samples, 0.14%)</title><rect x="331.3" y="2803.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.3" y="2814.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.typeToString (3 samples, 0.14%)</title><rect x="331.3" y="2787.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.3" y="2798.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$Type.toString (3 samples, 0.14%)</title><rect x="331.3" y="2771.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.3" y="2782.0"></text>
</g>
<g>
<title>scala/reflect/internal/Definitions$DefinitionsClass.fullyInitializeType (1 samples, 0.05%)</title><rect x="331.3" y="2755.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="334.3" y="2766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1822383117.linkToTargetMethod (1 samples, 0.05%)</title><rect x="331.3" y="2739.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="334.3" y="2750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/2014866032.invokeStatic_L_L (1 samples, 0.05%)</title><rect x="331.3" y="2723.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.3" y="2734.0"></text>
</g>
<g>
<title>scala/reflect/internal/Definitions$DefinitionsClass$$Lambda$2526/69373615.get$Lambda (1 samples, 0.05%)</title><rect x="331.3" y="2707.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="334.3" y="2718.0"></text>
</g>
<g>
<title>scala/reflect/internal/SymbolTable.typeToString (2 samples, 0.09%)</title><rect x="331.9" y="2755.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="334.9" y="2766.0"></text>
</g>
<g>
<title>scala/reflect/internal/tpe/TypeToStrings.typeToString$ (2 samples, 0.09%)</title><rect x="331.9" y="2739.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.9" y="2750.0"></text>
</g>
<g>
<title>scala/reflect/internal/tpe/TypeToStrings.typeToString (2 samples, 0.09%)</title><rect x="331.9" y="2723.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="334.9" y="2734.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$TypeRef.safeToString (2 samples, 0.09%)</title><rect x="331.9" y="2707.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.9" y="2718.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$TypeRef.preString (2 samples, 0.09%)</title><rect x="331.9" y="2691.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.9" y="2702.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$ThisType.prefixString (2 samples, 0.09%)</title><rect x="331.9" y="2675.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.9" y="2686.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.fullNameString (2 samples, 0.09%)</title><rect x="331.9" y="2659.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="334.9" y="2670.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.recur$1 (2 samples, 0.09%)</title><rect x="331.9" y="2643.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.9" y="2654.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.recur$1 (2 samples, 0.09%)</title><rect x="331.9" y="2627.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.9" y="2638.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.recur$1 (2 samples, 0.09%)</title><rect x="331.9" y="2611.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.9" y="2622.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.nameString (2 samples, 0.09%)</title><rect x="331.9" y="2595.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="334.9" y="2606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="331.9" y="2579.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.9" y="2590.0"></text>
</g>
<g>
<title>scala/reflect/internal/Symbols$Symbol.idString (1 samples, 0.05%)</title><rect x="332.4" y="2579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="335.4" y="2590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="332.4" y="2563.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="335.4" y="2574.0"></text>
</g>
<g>
<title>scala/reflect/api/TypeTags$TypeTag$.apply (2 samples, 0.09%)</title><rect x="333.0" y="2851.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="336.0" y="2862.0"></text>
</g>
<g>
<title>java/lang/String.contains (1 samples, 0.05%)</title><rect x="333.0" y="2835.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.0" y="2846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="333.0" y="2819.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="336.0" y="2830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="333.0" y="2803.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.0" y="2814.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors$JavaMirror.typeTag (1 samples, 0.05%)</title><rect x="333.5" y="2835.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="336.5" y="2846.0"></text>
</g>
<g>
<title>java/lang/ClassValue.get (1 samples, 0.05%)</title><rect x="333.5" y="2819.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="336.5" y="2830.0"></text>
</g>
<g>
<title>java/lang/ClassValue.getCacheCarefully (1 samples, 0.05%)</title><rect x="333.5" y="2803.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.5" y="2814.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.toVector (1 samples, 0.05%)</title><rect x="334.1" y="2867.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="337.1" y="2878.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.toVector$ (1 samples, 0.05%)</title><rect x="334.1" y="2851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.1" y="2862.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.toVector (1 samples, 0.05%)</title><rect x="334.1" y="2835.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="337.1" y="2846.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.to (1 samples, 0.05%)</title><rect x="334.1" y="2819.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="337.1" y="2830.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.to$ (1 samples, 0.05%)</title><rect x="334.1" y="2803.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="337.1" y="2814.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.to (1 samples, 0.05%)</title><rect x="334.1" y="2787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="337.1" y="2798.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.$plus$plus$eq (1 samples, 0.05%)</title><rect x="334.1" y="2771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="337.1" y="2782.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.$plus$plus$eq (1 samples, 0.05%)</title><rect x="334.1" y="2755.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="337.1" y="2766.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (1 samples, 0.05%)</title><rect x="334.1" y="2739.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="337.1" y="2750.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (1 samples, 0.05%)</title><rect x="334.1" y="2723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.1" y="2734.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.foreach (1 samples, 0.05%)</title><rect x="334.1" y="2707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="337.1" y="2718.0"></text>
</g>
<g>
<title>sbt/internal/classpath/ClassLoaderCache$CleanupThread.run (2 samples, 0.09%)</title><rect x="334.6" y="2899.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="337.6" y="2910.0"></text>
</g>
<g>
<title>InterpreterRuntime::at_safepoint(JavaThread*) (1 samples, 0.05%)</title><rect x="334.6" y="2883.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="337.6" y="2894.0"></text>
</g>
<g>
<title>ThreadInVMfromJava::~ThreadInVMfromJava() (1 samples, 0.05%)</title><rect x="334.6" y="2867.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="337.6" y="2878.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans(JavaThreadState, JavaThreadState) (1 samples, 0.05%)</title><rect x="334.6" y="2851.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="337.6" y="2862.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.05%)</title><rect x="334.6" y="2835.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="337.6" y="2846.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="334.6" y="2819.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="337.6" y="2830.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.05%)</title><rect x="334.6" y="2803.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="337.6" y="2814.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.05%)</title><rect x="334.6" y="2787.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="337.6" y="2798.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.05%)</title><rect x="334.6" y="2771.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="337.6" y="2782.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.05%)</title><rect x="334.6" y="2755.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="337.6" y="2766.0"></text>
</g>
<g>
<title>sbt/internal/classpath/ClassLoaderCache.sbt$internal$classpath$ClassLoaderCache$$clearExpiredLoaders (1 samples, 0.05%)</title><rect x="335.2" y="2883.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.2" y="2894.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.groupBy (1 samples, 0.05%)</title><rect x="335.2" y="2867.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.2" y="2878.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.groupBy$ (1 samples, 0.05%)</title><rect x="335.2" y="2851.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.2" y="2862.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.groupBy (1 samples, 0.05%)</title><rect x="335.2" y="2835.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.2" y="2846.0"></text>
</g>
<g>
<title>scala/collection/mutable/Map$.empty (1 samples, 0.05%)</title><rect x="335.2" y="2819.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="338.2" y="2830.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="335.2" y="2803.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.2" y="2814.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="335.2" y="2787.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.2" y="2798.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.$init$ (1 samples, 0.05%)</title><rect x="335.2" y="2771.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.2" y="2782.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.table_$eq (1 samples, 0.05%)</title><rect x="335.2" y="2755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.2" y="2766.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (2 samples, 0.09%)</title><rect x="335.7" y="2899.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.7" y="2910.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (2 samples, 0.09%)</title><rect x="335.7" y="2883.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.7" y="2894.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (2 samples, 0.09%)</title><rect x="335.7" y="2867.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.7" y="2878.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.09%)</title><rect x="335.7" y="2851.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.7" y="2862.0"></text>
</g>
<g>
<title>firrtl/ir/NoInfo$.hashCode (1 samples, 0.05%)</title><rect x="335.7" y="2835.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="338.7" y="2846.0"></text>
</g>
<g>
<title>treadle/executable/UnsignedInt$.hashCode (1 samples, 0.05%)</title><rect x="336.3" y="2835.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.3" y="2846.0"></text>
</g>
<g>
<title>thread_start (1,548 samples, 72.30%)</title><rect x="336.8" y="2899.0" width="853.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="339.8" y="2910.0">thread_start</text>
</g>
<g>
<title>_pthread_start (1,548 samples, 72.30%)</title><rect x="336.8" y="2883.0" width="853.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="339.8" y="2894.0">_pthread_start</text>
</g>
<g>
<title>_pthread_body (1,548 samples, 72.30%)</title><rect x="336.8" y="2867.0" width="853.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="339.8" y="2878.0">_pthread_body</text>
</g>
<g>
<title>java_start(Thread*) (1,548 samples, 72.30%)</title><rect x="336.8" y="2851.0" width="853.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="339.8" y="2862.0">java_start(Thread*)</text>
</g>
<g>
<title>GCTaskThread::run() (1,313 samples, 61.33%)</title><rect x="336.8" y="2835.0" width="723.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="339.8" y="2846.0">GCTaskThread::run()</text>
</g>
<g>
<title>DrainStacksCompactionTask::do_it(GCTaskManager*, unsigned int) (61 samples, 2.85%)</title><rect x="336.8" y="2819.0" width="33.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="339.8" y="2830.0">Dr..</text>
</g>
<g>
<title>ParCompactionManager::drain_region_stacks() (61 samples, 2.85%)</title><rect x="336.8" y="2803.0" width="33.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="339.8" y="2814.0">Pa..</text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (61 samples, 2.85%)</title><rect x="336.8" y="2787.0" width="33.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="339.8" y="2798.0">PS..</text>
</g>
<g>
<title>PSParallelCompact::skip_live_words(HeapWord*, HeapWord*, unsigned long) (4 samples, 0.19%)</title><rect x="336.8" y="2771.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="339.8" y="2782.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (57 samples, 2.66%)</title><rect x="339.0" y="2771.0" width="31.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="342.0" y="2782.0">Pa..</text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (55 samples, 2.57%)</title><rect x="340.1" y="2755.0" width="30.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="343.1" y="2766.0">Mo..</text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (33 samples, 1.54%)</title><rect x="342.9" y="2739.0" width="18.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="345.9" y="2750.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (30 samples, 1.40%)</title><rect x="344.5" y="2723.0" width="16.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="347.5" y="2734.0"></text>
</g>
<g>
<title>PSParallelCompact::fill_blocks(unsigned long) (16 samples, 0.75%)</title><rect x="344.5" y="2707.0" width="8.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="347.5" y="2718.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (14 samples, 0.65%)</title><rect x="353.4" y="2707.0" width="7.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="356.4" y="2718.0"></text>
</g>
<g>
<title>InstanceKlass::vtable_length() const (1 samples, 0.05%)</title><rect x="361.1" y="2739.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="364.1" y="2750.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (15 samples, 0.70%)</title><rect x="361.6" y="2739.0" width="8.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="364.6" y="2750.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (13 samples, 0.61%)</title><rect x="362.7" y="2723.0" width="7.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="365.7" y="2734.0"></text>
</g>
<g>
<title>PSParallelCompact::fill_blocks(unsigned long) (3 samples, 0.14%)</title><rect x="363.3" y="2707.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="366.3" y="2718.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (9 samples, 0.42%)</title><rect x="364.9" y="2707.0" width="5.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="367.9" y="2718.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="369.9" y="2739.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="372.9" y="2750.0"></text>
</g>
<g>
<title>GCTaskManager::get_task(unsigned int) (5 samples, 0.23%)</title><rect x="370.4" y="2819.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="373.4" y="2830.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (5 samples, 0.23%)</title><rect x="370.4" y="2803.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="373.4" y="2814.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (5 samples, 0.23%)</title><rect x="370.4" y="2787.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="373.4" y="2798.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (5 samples, 0.23%)</title><rect x="370.4" y="2771.0" width="2.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="373.4" y="2782.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (5 samples, 0.23%)</title><rect x="370.4" y="2755.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="373.4" y="2766.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 0.19%)</title><rect x="370.4" y="2739.0" width="2.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="373.4" y="2750.0"></text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.05%)</title><rect x="372.7" y="2739.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="375.7" y="2750.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.05%)</title><rect x="372.7" y="2723.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="375.7" y="2734.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.05%)</title><rect x="372.7" y="2707.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="375.7" y="2718.0"></text>
</g>
<g>
<title>GCTaskManager::note_completion(unsigned int) (2 samples, 0.09%)</title><rect x="373.2" y="2819.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="376.2" y="2830.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.09%)</title><rect x="373.2" y="2803.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="376.2" y="2814.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (2 samples, 0.09%)</title><rect x="373.2" y="2787.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="376.2" y="2798.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (2 samples, 0.09%)</title><rect x="373.2" y="2771.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="376.2" y="2782.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (2 samples, 0.09%)</title><rect x="373.2" y="2755.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="376.2" y="2766.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.09%)</title><rect x="373.2" y="2739.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="376.2" y="2750.0"></text>
</g>
<g>
<title>MarkFromRootsTask::do_it(GCTaskManager*, unsigned int) (7 samples, 0.33%)</title><rect x="374.3" y="2819.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="377.3" y="2830.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (7 samples, 0.33%)</title><rect x="374.3" y="2803.0" width="3.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="377.3" y="2814.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (5 samples, 0.23%)</title><rect x="374.9" y="2787.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="377.9" y="2798.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (5 samples, 0.23%)</title><rect x="374.9" y="2771.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="377.9" y="2782.0"></text>
</g>
<g>
<title>ParallelCompactData::add_obj(HeapWord*, unsigned long) (3 samples, 0.14%)</title><rect x="375.4" y="2755.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="378.4" y="2766.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.05%)</title><rect x="377.1" y="2755.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="380.1" y="2766.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (1 samples, 0.05%)</title><rect x="377.6" y="2787.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="380.6" y="2798.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.05%)</title><rect x="377.6" y="2771.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="380.6" y="2782.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.05%)</title><rect x="377.6" y="2755.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="380.6" y="2766.0"></text>
</g>
<g>
<title>OldToYoungRootsTask::do_it(GCTaskManager*, unsigned int) (69 samples, 3.22%)</title><rect x="378.2" y="2819.0" width="38.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="381.2" y="2830.0">Old..</text>
</g>
<g>
<title>CardTableExtension::scavenge_contents_parallel(ObjectStartArray*, MutableSpace*, HeapWord*, PSPromotionManager*, unsigned int, unsigned int) (67 samples, 3.13%)</title><rect x="378.2" y="2803.0" width="36.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="381.2" y="2814.0">Car..</text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (2 samples, 0.09%)</title><rect x="380.9" y="2787.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="383.9" y="2798.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (4 samples, 0.19%)</title><rect x="382.0" y="2787.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="385.0" y="2798.0"></text>
</g>
<g>
<title>ObjectStartArray::object_start(HeapWord*) const (5 samples, 0.23%)</title><rect x="384.2" y="2787.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="387.2" y="2798.0"></text>
</g>
<g>
<title>oopDesc::size() (5 samples, 0.23%)</title><rect x="384.2" y="2771.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="387.2" y="2782.0"></text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_cond_depth() (1 samples, 0.05%)</title><rect x="387.0" y="2787.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="390.0" y="2798.0"></text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (49 samples, 2.29%)</title><rect x="387.5" y="2787.0" width="27.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="390.5" y="2798.0">P..</text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (47 samples, 2.20%)</title><rect x="388.6" y="2771.0" width="25.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="391.6" y="2782.0">P..</text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="392.5" y="2755.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="395.5" y="2766.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (39 samples, 1.82%)</title><rect x="393.0" y="2755.0" width="21.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="396.0" y="2766.0">o..</text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (5 samples, 0.23%)</title><rect x="399.1" y="2739.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="402.1" y="2750.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (4 samples, 0.19%)</title><rect x="399.7" y="2723.0" width="2.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="402.7" y="2734.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (9 samples, 0.42%)</title><rect x="401.9" y="2739.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="404.9" y="2750.0"></text>
</g>
<g>
<title>InstanceKlass::vtable_length() const (1 samples, 0.05%)</title><rect x="406.3" y="2723.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="409.3" y="2734.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (11 samples, 0.51%)</title><rect x="406.8" y="2739.0" width="6.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="409.8" y="2750.0"></text>
</g>
<g>
<title>PSOldPromotionLAB::allocate(unsigned long) (1 samples, 0.05%)</title><rect x="412.9" y="2739.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="415.9" y="2750.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.09%)</title><rect x="413.4" y="2739.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="416.4" y="2750.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.05%)</title><rect x="414.5" y="2787.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="417.5" y="2798.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="415.1" y="2803.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="418.1" y="2814.0"></text>
</g>
<g>
<title>ObjectStartArray::object_starts_in_range(HeapWord*, HeapWord*) const (1 samples, 0.05%)</title><rect x="415.6" y="2803.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="418.6" y="2814.0"></text>
</g>
<g>
<title>PSParallelCompact::update_and_deadwood_in_dense_prefix(ParCompactionManager*, PSParallelCompact::SpaceId, unsigned long, unsigned long) (23 samples, 1.07%)</title><rect x="416.2" y="2819.0" width="12.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="419.2" y="2830.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, ParMarkBitMapClosure*, unsigned long, unsigned long, unsigned long) const (22 samples, 1.03%)</title><rect x="416.2" y="2803.0" width="12.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="419.2" y="2814.0"></text>
</g>
<g>
<title>UpdateOnlyClosure::do_addr(HeapWord*, unsigned long) (15 samples, 0.70%)</title><rect x="420.1" y="2787.0" width="8.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="423.1" y="2798.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (8 samples, 0.37%)</title><rect x="421.7" y="2771.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="424.7" y="2782.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (5 samples, 0.23%)</title><rect x="423.4" y="2755.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="426.4" y="2766.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (2 samples, 0.09%)</title><rect x="426.1" y="2771.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="429.1" y="2782.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="426.1" y="2755.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="429.1" y="2766.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.05%)</title><rect x="426.7" y="2755.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="429.7" y="2766.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (2 samples, 0.09%)</title><rect x="427.2" y="2771.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="430.2" y="2782.0"></text>
</g>
<g>
<title>UpdateOnlyClosure::do_addr(HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="428.3" y="2803.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="431.3" y="2814.0"></text>
</g>
<g>
<title>ScavengeRootsTask::do_it(GCTaskManager*, unsigned int) (27 samples, 1.26%)</title><rect x="428.9" y="2819.0" width="14.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="431.9" y="2830.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (1 samples, 0.05%)</title><rect x="428.9" y="2803.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="431.9" y="2814.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::oops_do(OopClosure*, KlassClosure*, bool) (26 samples, 1.21%)</title><rect x="429.4" y="2803.0" width="14.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="432.4" y="2814.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (10 samples, 0.47%)</title><rect x="429.4" y="2787.0" width="5.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="432.4" y="2798.0"></text>
</g>
<g>
<title>PSScavengeKlassClosure::do_klass(Klass*) (9 samples, 0.42%)</title><rect x="430.0" y="2771.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="433.0" y="2782.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (16 samples, 0.75%)</title><rect x="434.9" y="2787.0" width="8.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="437.9" y="2798.0"></text>
</g>
<g>
<title>JNIHandleBlock::oops_do(OopClosure*) (9 samples, 0.42%)</title><rect x="434.9" y="2771.0" width="5.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="437.9" y="2782.0"></text>
</g>
<g>
<title>void PSRootsClosure&lt;false&gt;::do_oop_work&lt;oopDesc*&gt;(oopDesc**) (7 samples, 0.33%)</title><rect x="439.9" y="2771.0" width="3.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="442.9" y="2782.0"></text>
</g>
<g>
<title>StealMarkingTask::do_it(GCTaskManager*, unsigned int) (461 samples, 21.53%)</title><rect x="443.8" y="2819.0" width="254.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="446.8" y="2830.0">StealMarkingTask::do_it(GCTaskMana..</text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (3 samples, 0.14%)</title><rect x="443.8" y="2803.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="446.8" y="2814.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (110 samples, 5.14%)</title><rect x="445.4" y="2803.0" width="60.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="448.4" y="2814.0">ParCom..</text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (38 samples, 1.77%)</title><rect x="453.1" y="2787.0" width="21.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="456.1" y="2798.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (2 samples, 0.09%)</title><rect x="456.4" y="2771.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="459.4" y="2782.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::oop_size(oopDesc*) const (1 samples, 0.05%)</title><rect x="457.5" y="2771.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="460.5" y="2782.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.05%)</title><rect x="458.1" y="2771.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="461.1" y="2782.0"></text>
</g>
<g>
<title>ParallelCompactData::add_obj(HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="458.6" y="2771.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="461.6" y="2782.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;oopDesc*&gt;(ParCompactionManager*, oopDesc**) (1 samples, 0.05%)</title><rect x="459.2" y="2771.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="462.2" y="2782.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (26 samples, 1.21%)</title><rect x="459.7" y="2771.0" width="14.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="462.7" y="2782.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (7 samples, 0.33%)</title><rect x="467.4" y="2755.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="470.4" y="2766.0"></text>
</g>
<g>
<title>ParallelCompactData::add_obj(HeapWord*, unsigned long) (2 samples, 0.09%)</title><rect x="471.3" y="2755.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="474.3" y="2766.0"></text>
</g>
<g>
<title>oopDesc::size() (3 samples, 0.14%)</title><rect x="472.4" y="2755.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="475.4" y="2766.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (52 samples, 2.43%)</title><rect x="474.1" y="2787.0" width="28.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="477.1" y="2798.0">Ob..</text>
</g>
<g>
<title>Klass::class_loader() const (3 samples, 0.14%)</title><rect x="474.6" y="2771.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="477.6" y="2782.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (47 samples, 2.20%)</title><rect x="476.3" y="2771.0" width="25.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="479.3" y="2782.0">v..</text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (42 samples, 1.96%)</title><rect x="479.0" y="2755.0" width="23.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="482.0" y="2766.0">v..</text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (9 samples, 0.42%)</title><rect x="488.9" y="2739.0" width="5.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="491.9" y="2750.0"></text>
</g>
<g>
<title>ParallelCompactData::add_obj(HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="493.9" y="2739.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="496.9" y="2750.0"></text>
</g>
<g>
<title>oopDesc::size() (14 samples, 0.65%)</title><rect x="494.5" y="2739.0" width="7.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="497.5" y="2750.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.05%)</title><rect x="502.2" y="2771.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="505.2" y="2782.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (4 samples, 0.19%)</title><rect x="502.7" y="2787.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="505.7" y="2798.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (4 samples, 0.19%)</title><rect x="502.7" y="2771.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="505.7" y="2782.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="503.3" y="2755.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="506.3" y="2766.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.09%)</title><rect x="503.8" y="2755.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="506.8" y="2766.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;oopDesc*&gt;(ParCompactionManager*, oopDesc**) (1 samples, 0.05%)</title><rect x="504.9" y="2787.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="507.9" y="2798.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.05%)</title><rect x="505.5" y="2787.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="508.5" y="2798.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (30 samples, 1.40%)</title><rect x="506.0" y="2803.0" width="16.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="509.0" y="2814.0"></text>
</g>
<g>
<title>xdrmem_ops_aligned (10 samples, 0.47%)</title><rect x="517.1" y="2787.0" width="5.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="520.1" y="2798.0"></text>
</g>
<g>
<title>SpinPause (317 samples, 14.81%)</title><rect x="522.6" y="2803.0" width="174.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="525.6" y="2814.0">SpinPause</text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (1 samples, 0.05%)</title><rect x="697.3" y="2803.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="700.3" y="2814.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.05%)</title><rect x="697.3" y="2787.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="700.3" y="2798.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.05%)</title><rect x="697.3" y="2771.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="700.3" y="2782.0"></text>
</g>
<g>
<title>StealRegionCompactionTask::do_it(GCTaskManager*, unsigned int) (380 samples, 17.75%)</title><rect x="697.8" y="2819.0" width="209.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="700.8" y="2830.0">StealRegionCompactionTask::..</text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (35 samples, 1.63%)</title><rect x="697.8" y="2803.0" width="19.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="700.8" y="2814.0"></text>
</g>
<g>
<title>PSParallelCompact::skip_live_words(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="697.8" y="2787.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="700.8" y="2798.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (34 samples, 1.59%)</title><rect x="698.4" y="2787.0" width="18.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="701.4" y="2798.0"></text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (33 samples, 1.54%)</title><rect x="698.9" y="2771.0" width="18.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="701.9" y="2782.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (18 samples, 0.84%)</title><rect x="700.6" y="2755.0" width="9.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="703.6" y="2766.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (16 samples, 0.75%)</title><rect x="701.7" y="2739.0" width="8.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="704.7" y="2750.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (14 samples, 0.65%)</title><rect x="702.8" y="2723.0" width="7.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="705.8" y="2734.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (11 samples, 0.51%)</title><rect x="710.5" y="2755.0" width="6.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="713.5" y="2766.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (8 samples, 0.37%)</title><rect x="712.2" y="2739.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="715.2" y="2750.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (8 samples, 0.37%)</title><rect x="712.2" y="2723.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="715.2" y="2734.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="716.6" y="2755.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="719.6" y="2766.0"></text>
</g>
<g>
<title>ParCompactionManager::drain_region_stacks() (199 samples, 9.29%)</title><rect x="717.1" y="2803.0" width="109.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="720.1" y="2814.0">ParCompaction..</text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (199 samples, 9.29%)</title><rect x="717.1" y="2787.0" width="109.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="720.1" y="2798.0">PSParallelCom..</text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (2 samples, 0.09%)</title><rect x="717.1" y="2771.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="720.1" y="2782.0"></text>
</g>
<g>
<title>PSParallelCompact::skip_live_words(HeapWord*, HeapWord*, unsigned long) (5 samples, 0.23%)</title><rect x="718.2" y="2771.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="721.2" y="2782.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (192 samples, 8.97%)</title><rect x="721.0" y="2771.0" width="105.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="724.0" y="2782.0">ParMarkBitMap..</text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (177 samples, 8.27%)</title><rect x="728.7" y="2755.0" width="97.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="731.7" y="2766.0">MoveAndUpda..</text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (106 samples, 4.95%)</title><rect x="734.8" y="2739.0" width="58.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="737.8" y="2750.0">Instan..</text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.05%)</title><rect x="737.0" y="2723.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="740.0" y="2734.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (101 samples, 4.72%)</title><rect x="737.5" y="2723.0" width="55.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="740.5" y="2734.0">Paral..</text>
</g>
<g>
<title>PSParallelCompact::fill_blocks(unsigned long) (6 samples, 0.28%)</title><rect x="738.6" y="2707.0" width="3.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="741.6" y="2718.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (93 samples, 4.34%)</title><rect x="741.9" y="2707.0" width="51.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="744.9" y="2718.0">ParMa..</text>
</g>
<g>
<title>InstanceKlass::vtable_length() const (2 samples, 0.09%)</title><rect x="793.2" y="2739.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="796.2" y="2750.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="794.3" y="2739.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="797.3" y="2750.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.05%)</title><rect x="794.3" y="2723.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="797.3" y="2734.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.05%)</title><rect x="794.3" y="2707.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="797.3" y="2718.0"></text>
</g>
<g>
<title>InstanceRefKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="794.8" y="2739.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="797.8" y="2750.0"></text>
</g>
<g>
<title>InstanceKlass::vtable_length() const (1 samples, 0.05%)</title><rect x="794.8" y="2723.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="797.8" y="2734.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (46 samples, 2.15%)</title><rect x="795.4" y="2739.0" width="25.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="798.4" y="2750.0">O..</text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (35 samples, 1.63%)</title><rect x="801.4" y="2723.0" width="19.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="804.4" y="2734.0"></text>
</g>
<g>
<title>PSParallelCompact::fill_blocks(unsigned long) (1 samples, 0.05%)</title><rect x="804.8" y="2707.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="807.8" y="2718.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (28 samples, 1.31%)</title><rect x="805.3" y="2707.0" width="15.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="808.3" y="2718.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (10 samples, 0.47%)</title><rect x="820.7" y="2739.0" width="5.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="823.7" y="2750.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="826.2" y="2755.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="829.2" y="2766.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (16 samples, 0.75%)</title><rect x="826.8" y="2803.0" width="8.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="829.8" y="2814.0"></text>
</g>
<g>
<title>sched_yield (1 samples, 0.05%)</title><rect x="832.9" y="2787.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="835.9" y="2798.0"></text>
</g>
<g>
<title>xdrmem_ops_aligned (4 samples, 0.19%)</title><rect x="833.4" y="2787.0" width="2.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="836.4" y="2798.0"></text>
</g>
<g>
<title>SpinPause (130 samples, 6.07%)</title><rect x="835.6" y="2803.0" width="71.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="838.6" y="2814.0">SpinPause</text>
</g>
<g>
<title>StealTask::do_it(GCTaskManager*, unsigned int) (253 samples, 11.82%)</title><rect x="907.3" y="2819.0" width="139.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="910.3" y="2830.0">StealTask::do_it(..</text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)1, 131072u&gt;, (MemoryType)1&gt;::steal(unsigned int, int*, StarTask&amp;) (2 samples, 0.09%)</title><rect x="907.3" y="2803.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="910.3" y="2814.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)1, 131072u&gt;, (MemoryType)1&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (2 samples, 0.09%)</title><rect x="907.3" y="2787.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="910.3" y="2798.0"></text>
</g>
<g>
<title>GenericTaskQueue&lt;StarTask, (MemoryType)1, 131072u&gt;::pop_global(StarTask volatile&amp;) (1 samples, 0.05%)</title><rect x="907.3" y="2771.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="910.3" y="2782.0"></text>
</g>
<g>
<title>TaskQueueSetSuper::randomParkAndMiller(int*) (1 samples, 0.05%)</title><rect x="907.8" y="2771.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="910.8" y="2782.0"></text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (240 samples, 11.21%)</title><rect x="908.4" y="2803.0" width="132.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="911.4" y="2814.0">PSPromotionManag..</text>
</g>
<g>
<title>GenericTaskQueue&lt;StarTask, (MemoryType)1, 131072u&gt;::pop_local_slow(unsigned int, TaskQueueSuper&lt;131072u, (MemoryType)1&gt;::Age) (2 samples, 0.09%)</title><rect x="920.5" y="2787.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="923.5" y="2798.0"></text>
</g>
<g>
<title>PSPromotionManager::process_array_chunk(oopDesc*) (1 samples, 0.05%)</title><rect x="921.6" y="2787.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="924.6" y="2798.0"></text>
</g>
<g>
<title>void PSPromotionManager::push_depth&lt;oopDesc*&gt;(oopDesc**) (1 samples, 0.05%)</title><rect x="921.6" y="2771.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="924.6" y="2782.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (213 samples, 9.95%)</title><rect x="922.1" y="2787.0" width="117.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="925.1" y="2798.0">PSPromotionMan..</text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="928.2" y="2771.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="931.2" y="2782.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="928.8" y="2771.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="931.8" y="2782.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (200 samples, 9.34%)</title><rect x="929.3" y="2771.0" width="110.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="932.3" y="2782.0">oopDesc* PSPr..</text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (35 samples, 1.63%)</title><rect x="961.3" y="2755.0" width="19.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="964.3" y="2766.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (19 samples, 0.89%)</title><rect x="970.1" y="2739.0" width="10.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="973.1" y="2750.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (37 samples, 1.73%)</title><rect x="980.6" y="2755.0" width="20.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="983.6" y="2766.0"></text>
</g>
<g>
<title>void PSPromotionManager::push_depth&lt;unsigned int&gt;(unsigned int*) (3 samples, 0.14%)</title><rect x="999.3" y="2739.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1002.3" y="2750.0"></text>
</g>
<g>
<title>InstanceKlass::vtable_length() const (1 samples, 0.05%)</title><rect x="1001.0" y="2755.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1004.0" y="2766.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (52 samples, 2.43%)</title><rect x="1001.5" y="2755.0" width="28.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1004.5" y="2766.0">Ob..</text>
</g>
<g>
<title>void PSPromotionManager::push_depth&lt;unsigned int&gt;(unsigned int*) (4 samples, 0.19%)</title><rect x="1028.0" y="2739.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1031.0" y="2750.0"></text>
</g>
<g>
<title>PSOldGen::cas_allocate(unsigned long) (1 samples, 0.05%)</title><rect x="1030.2" y="2755.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1033.2" y="2766.0"></text>
</g>
<g>
<title>PSOldGen::cas_allocate_noexpand(unsigned long) (1 samples, 0.05%)</title><rect x="1030.2" y="2739.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1033.2" y="2750.0"></text>
</g>
<g>
<title>MutableSpace::cas_allocate(unsigned long) (1 samples, 0.05%)</title><rect x="1030.2" y="2723.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1033.2" y="2734.0"></text>
</g>
<g>
<title>PSOldPromotionLAB::allocate(unsigned long) (1 samples, 0.05%)</title><rect x="1030.7" y="2755.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1033.7" y="2766.0"></text>
</g>
<g>
<title>_setcontext (1 samples, 0.05%)</title><rect x="1031.3" y="2755.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1034.3" y="2766.0"></text>
</g>
<g>
<title>oopDesc::size() (11 samples, 0.51%)</title><rect x="1031.8" y="2755.0" width="6.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1034.8" y="2766.0"></text>
</g>
<g>
<title>void PSPromotionManager::push_depth&lt;unsigned int&gt;(unsigned int*) (3 samples, 0.14%)</title><rect x="1037.9" y="2755.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1040.9" y="2766.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (2 samples, 0.09%)</title><rect x="1039.5" y="2787.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1042.5" y="2798.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (7 samples, 0.33%)</title><rect x="1040.6" y="2803.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1043.6" y="2814.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (5 samples, 0.23%)</title><rect x="1041.7" y="2787.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1044.7" y="2798.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (4 samples, 0.19%)</title><rect x="1042.3" y="2771.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1045.3" y="2782.0"></text>
</g>
<g>
<title>void PSPromotionManager::push_depth&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.05%)</title><rect x="1043.9" y="2755.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1046.9" y="2766.0"></text>
</g>
<g>
<title>void PSPromotionManager::process_array_chunk_work&lt;unsigned int&gt;(oopDesc*, int, int) (4 samples, 0.19%)</title><rect x="1044.5" y="2803.0" width="2.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1047.5" y="2814.0"></text>
</g>
<g>
<title>ThreadRootsMarkingTask::do_it(GCTaskManager*, unsigned int) (20 samples, 0.93%)</title><rect x="1046.7" y="2819.0" width="11.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1049.7" y="2830.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.05%)</title><rect x="1046.7" y="2803.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1049.7" y="2814.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, CLDClosure*, RegisterMap const*, bool) (1 samples, 0.05%)</title><rect x="1046.7" y="2787.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1049.7" y="2798.0"></text>
</g>
<g>
<title>Method::mask_for(int, InterpreterOopMap*) (1 samples, 0.05%)</title><rect x="1046.7" y="2771.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1049.7" y="2782.0"></text>
</g>
<g>
<title>InstanceKlass::mask_for(methodHandle, int, InterpreterOopMap*) (1 samples, 0.05%)</title><rect x="1046.7" y="2755.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1049.7" y="2766.0"></text>
</g>
<g>
<title>OopMapCache::lookup(methodHandle, int, InterpreterOopMap*) const (1 samples, 0.05%)</title><rect x="1046.7" y="2739.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1049.7" y="2750.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (19 samples, 0.89%)</title><rect x="1047.3" y="2803.0" width="10.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1050.3" y="2814.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.05%)</title><rect x="1048.4" y="2787.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1051.4" y="2798.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (13 samples, 0.61%)</title><rect x="1048.9" y="2787.0" width="7.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1051.9" y="2798.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (10 samples, 0.47%)</title><rect x="1050.6" y="2771.0" width="5.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1053.6" y="2782.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (6 samples, 0.28%)</title><rect x="1051.7" y="2755.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1054.7" y="2766.0"></text>
</g>
<g>
<title>ParallelCompactData::add_obj(HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="1055.0" y="2755.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1058.0" y="2766.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.05%)</title><rect x="1055.5" y="2755.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1058.5" y="2766.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="1056.1" y="2787.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1059.1" y="2798.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.05%)</title><rect x="1056.6" y="2787.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1059.6" y="2798.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (1 samples, 0.05%)</title><rect x="1056.6" y="2771.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1059.6" y="2782.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.05%)</title><rect x="1056.6" y="2755.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1059.6" y="2766.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="1056.6" y="2739.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1059.6" y="2750.0"></text>
</g>
<g>
<title>PSParallelCompact::follow_class_loader(ParCompactionManager*, ClassLoaderData*) (1 samples, 0.05%)</title><rect x="1057.2" y="2787.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1060.2" y="2798.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (1 samples, 0.05%)</title><rect x="1057.2" y="2771.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1060.2" y="2782.0"></text>
</g>
<g>
<title>PSParallelCompact::FollowKlassClosure::do_klass(Klass*) (1 samples, 0.05%)</title><rect x="1057.2" y="2755.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1060.2" y="2766.0"></text>
</g>
<g>
<title>ThreadRootsTask::do_it(GCTaskManager*, unsigned int) (4 samples, 0.19%)</title><rect x="1057.7" y="2819.0" width="2.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1060.7" y="2830.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (4 samples, 0.19%)</title><rect x="1057.7" y="2803.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1060.7" y="2814.0"></text>
</g>
<g>
<title>frame::oops_code_blob_do(OopClosure*, CodeBlobClosure*, RegisterMap const*) (1 samples, 0.05%)</title><rect x="1057.7" y="2787.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1060.7" y="2798.0"></text>
</g>
<g>
<title>OopMapSet::all_do(frame const*, RegisterMap const*, OopClosure*, void (*)(oopDesc**, oopDesc**), OopClosure*) (1 samples, 0.05%)</title><rect x="1057.7" y="2771.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1060.7" y="2782.0"></text>
</g>
<g>
<title>OopMapSet::find_map_at_offset(int) const (1 samples, 0.05%)</title><rect x="1057.7" y="2755.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1060.7" y="2766.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, CLDClosure*, RegisterMap const*, bool) (3 samples, 0.14%)</title><rect x="1058.3" y="2787.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1061.3" y="2798.0"></text>
</g>
<g>
<title>Method::mask_for(int, InterpreterOopMap*) (3 samples, 0.14%)</title><rect x="1058.3" y="2771.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1061.3" y="2782.0"></text>
</g>
<g>
<title>InstanceKlass::mask_for(methodHandle, int, InterpreterOopMap*) (3 samples, 0.14%)</title><rect x="1058.3" y="2755.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1061.3" y="2766.0"></text>
</g>
<g>
<title>OopMapCache::lookup(methodHandle, int, InterpreterOopMap*) const (3 samples, 0.14%)</title><rect x="1058.3" y="2739.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1061.3" y="2750.0"></text>
</g>
<g>
<title>InterpreterOopMap::resource_copy(OopMapCacheEntry*) (1 samples, 0.05%)</title><rect x="1058.8" y="2723.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1061.8" y="2734.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="1058.8" y="2707.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1061.8" y="2718.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.05%)</title><rect x="1059.4" y="2723.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1062.4" y="2734.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.05%)</title><rect x="1059.4" y="2707.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1062.4" y="2718.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.05%)</title><rect x="1059.4" y="2691.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1062.4" y="2702.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.05%)</title><rect x="1059.4" y="2675.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1062.4" y="2686.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.05%)</title><rect x="1059.4" y="2659.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1062.4" y="2670.0"></text>
</g>
<g>
<title>WaitForBarrierGCTask::do_it(GCTaskManager*, unsigned int) (1 samples, 0.05%)</title><rect x="1059.9" y="2819.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1062.9" y="2830.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.05%)</title><rect x="1059.9" y="2803.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1062.9" y="2814.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.05%)</title><rect x="1059.9" y="2787.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1062.9" y="2798.0"></text>
</g>
<g>
<title>JavaThread::run() (179 samples, 8.36%)</title><rect x="1060.5" y="2835.0" width="98.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1063.5" y="2846.0">JavaThread::..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (179 samples, 8.36%)</title><rect x="1060.5" y="2819.0" width="98.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1063.5" y="2830.0">JavaThread::..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (170 samples, 7.94%)</title><rect x="1060.5" y="2803.0" width="93.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1063.5" y="2814.0">CompileBrok..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (158 samples, 7.38%)</title><rect x="1060.5" y="2787.0" width="87.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1063.5" y="2798.0">CompileBro..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (137 samples, 6.40%)</title><rect x="1060.5" y="2771.0" width="75.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1063.5" y="2782.0">C2Compil..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (137 samples, 6.40%)</title><rect x="1060.5" y="2755.0" width="75.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1063.5" y="2766.0">Compile:..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (2 samples, 0.09%)</title><rect x="1060.5" y="2739.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1063.5" y="2750.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (2 samples, 0.09%)</title><rect x="1060.5" y="2723.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1063.5" y="2734.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.09%)</title><rect x="1060.5" y="2707.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1063.5" y="2718.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.09%)</title><rect x="1060.5" y="2691.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1063.5" y="2702.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.09%)</title><rect x="1060.5" y="2675.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1063.5" y="2686.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.09%)</title><rect x="1060.5" y="2659.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1063.5" y="2670.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.09%)</title><rect x="1060.5" y="2643.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1063.5" y="2654.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.09%)</title><rect x="1060.5" y="2627.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1063.5" y="2638.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (2 samples, 0.09%)</title><rect x="1060.5" y="2611.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1063.5" y="2622.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.09%)</title><rect x="1060.5" y="2595.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1063.5" y="2606.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.09%)</title><rect x="1060.5" y="2579.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1063.5" y="2590.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.09%)</title><rect x="1060.5" y="2563.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1063.5" y="2574.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(InstanceKlass*, InstanceKlass*, Symbol*, Symbol*, Bytecodes::Code) (2 samples, 0.09%)</title><rect x="1060.5" y="2547.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1063.5" y="2558.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(KlassHandle, Symbol*, Symbol*, KlassHandle, bool) (1 samples, 0.05%)</title><rect x="1060.5" y="2531.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1063.5" y="2542.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, Thread*) (1 samples, 0.05%)</title><rect x="1060.5" y="2515.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1063.5" y="2526.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="1060.5" y="2499.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1063.5" y="2510.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="1060.5" y="2483.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1063.5" y="2494.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol*, Symbol*, Klass::MethodLookupMode) const (1 samples, 0.05%)</title><rect x="1060.5" y="2467.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1063.5" y="2478.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_impl(Symbol*, Symbol*, bool) const (1 samples, 0.05%)</title><rect x="1060.5" y="2451.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1063.5" y="2462.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt;*, Symbol*, Symbol*, bool, bool) (1 samples, 0.05%)</title><rect x="1060.5" y="2435.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1063.5" y="2446.0"></text>
</g>
<g>
<title>binary_search(Array&lt;Method*&gt;*, Symbol*) (1 samples, 0.05%)</title><rect x="1060.5" y="2419.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1063.5" y="2430.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call_or_null(KlassHandle, Symbol*, Symbol*, KlassHandle, bool) (1 samples, 0.05%)</title><rect x="1061.0" y="2531.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1064.0" y="2542.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, KlassHandle&amp;, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="1061.0" y="2515.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1064.0" y="2526.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_static_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, Thread*) (1 samples, 0.05%)</title><rect x="1061.0" y="2499.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1064.0" y="2510.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="1061.0" y="2483.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1064.0" y="2494.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="1061.0" y="2467.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1064.0" y="2478.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol*, Symbol*, Klass::MethodLookupMode) const (1 samples, 0.05%)</title><rect x="1061.0" y="2451.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1064.0" y="2462.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_impl(Symbol*, Symbol*, bool) const (1 samples, 0.05%)</title><rect x="1061.0" y="2435.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1064.0" y="2446.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt;*, Symbol*, Symbol*, bool, bool) (1 samples, 0.05%)</title><rect x="1061.0" y="2419.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1064.0" y="2430.0"></text>
</g>
<g>
<title>binary_search(Array&lt;Method*&gt;*, Symbol*) (1 samples, 0.05%)</title><rect x="1061.0" y="2403.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1064.0" y="2414.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (70 samples, 3.27%)</title><rect x="1061.6" y="2739.0" width="38.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1064.6" y="2750.0">Com..</text>
</g>
<g>
<title>Compile::Output() (7 samples, 0.33%)</title><rect x="1061.6" y="2723.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1064.6" y="2734.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.05%)</title><rect x="1061.6" y="2707.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1064.6" y="2718.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (6 samples, 0.28%)</title><rect x="1062.1" y="2707.0" width="3.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1065.1" y="2718.0"></text>
</g>
<g>
<title>CodeBuffer::initialize(int, int) (2 samples, 0.09%)</title><rect x="1062.7" y="2691.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1065.7" y="2702.0"></text>
</g>
<g>
<title>BufferBlob::create(char const*, int) (2 samples, 0.09%)</title><rect x="1062.7" y="2675.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1065.7" y="2686.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (2 samples, 0.09%)</title><rect x="1062.7" y="2659.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1065.7" y="2670.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long, bool) (2 samples, 0.09%)</title><rect x="1062.7" y="2643.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1065.7" y="2654.0"></text>
</g>
<g>
<title>CodeHeap::search_freelist(unsigned long, bool) (2 samples, 0.09%)</title><rect x="1062.7" y="2627.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1065.7" y="2638.0"></text>
</g>
<g>
<title>Compile::init_scratch_buffer_blob(int) (1 samples, 0.05%)</title><rect x="1063.8" y="2691.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1066.8" y="2702.0"></text>
</g>
<g>
<title>BufferBlob::create(char const*, int) (1 samples, 0.05%)</title><rect x="1063.8" y="2675.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1066.8" y="2686.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (1 samples, 0.05%)</title><rect x="1063.8" y="2659.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1066.8" y="2670.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long, bool) (1 samples, 0.05%)</title><rect x="1063.8" y="2643.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1066.8" y="2654.0"></text>
</g>
<g>
<title>CodeHeap::search_freelist(unsigned long, bool) (1 samples, 0.05%)</title><rect x="1063.8" y="2627.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1066.8" y="2638.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.05%)</title><rect x="1064.3" y="2691.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1067.3" y="2702.0"></text>
</g>
<g>
<title>storeImmNKlassNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.05%)</title><rect x="1064.3" y="2675.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1067.3" y="2686.0"></text>
</g>
<g>
<title>jmpConUNode::size(PhaseRegAlloc*) const (1 samples, 0.05%)</title><rect x="1064.9" y="2691.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1067.9" y="2702.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (3 samples, 0.14%)</title><rect x="1065.4" y="2723.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1068.4" y="2734.0"></text>
</g>
<g>
<title>NonSafepointEmitter::observe_instruction(Node*, int) (2 samples, 0.09%)</title><rect x="1065.4" y="2707.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1068.4" y="2718.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (2 samples, 0.09%)</title><rect x="1065.4" y="2691.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1068.4" y="2702.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, ciMethod*, int, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (2 samples, 0.09%)</title><rect x="1065.4" y="2675.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1068.4" y="2686.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.09%)</title><rect x="1065.4" y="2659.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1068.4" y="2670.0"></text>
</g>
<g>
<title>DIR_Chunk::find_match(GrowableArray&lt;DIR_Chunk*&gt;*, int, DebugInformationRecorder*) (2 samples, 0.09%)</title><rect x="1065.4" y="2643.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1068.4" y="2654.0"></text>
</g>
<g>
<title>NonSafepointEmitter::observe_safepoint(JVMState*, int) (1 samples, 0.05%)</title><rect x="1066.5" y="2707.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1069.5" y="2718.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.05%)</title><rect x="1066.5" y="2691.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1069.5" y="2702.0"></text>
</g>
<g>
<title>Matcher::match() (10 samples, 0.47%)</title><rect x="1067.1" y="2723.0" width="5.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1070.1" y="2734.0"></text>
</g>
<g>
<title>Matcher::Fixup_Save_On_Entry() (1 samples, 0.05%)</title><rect x="1067.1" y="2707.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1070.1" y="2718.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.05%)</title><rect x="1067.6" y="2707.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1070.6" y="2718.0"></text>
</g>
<g>
<title>VectorSet::operator&lt;&lt;=(unsigned int) (1 samples, 0.05%)</title><rect x="1067.6" y="2691.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1070.6" y="2702.0"></text>
</g>
<g>
<title>VectorSet::grow(unsigned int) (1 samples, 0.05%)</title><rect x="1067.6" y="2675.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1070.6" y="2686.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1067.6" y="2659.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1070.6" y="2670.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (8 samples, 0.37%)</title><rect x="1068.2" y="2707.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1071.2" y="2718.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (1 samples, 0.05%)</title><rect x="1068.7" y="2691.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1071.7" y="2702.0"></text>
</g>
<g>
<title>CallNode::match_edge(unsigned int) const (1 samples, 0.05%)</title><rect x="1068.7" y="2675.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1071.7" y="2686.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.05%)</title><rect x="1069.3" y="2691.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1072.3" y="2702.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.05%)</title><rect x="1069.3" y="2675.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1072.3" y="2686.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.05%)</title><rect x="1069.3" y="2659.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1072.3" y="2670.0"></text>
</g>
<g>
<title>Matcher::ReduceOper(State*, int, Node*&amp;, MachNode*) (1 samples, 0.05%)</title><rect x="1069.3" y="2643.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1072.3" y="2654.0"></text>
</g>
<g>
<title>Node::add_out(Node*) (1 samples, 0.05%)</title><rect x="1069.9" y="2691.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1072.9" y="2702.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.05%)</title><rect x="1069.9" y="2675.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1072.9" y="2686.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1069.9" y="2659.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1072.9" y="2670.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="1069.9" y="2643.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1072.9" y="2654.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.05%)</title><rect x="1070.4" y="2691.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1073.4" y="2702.0"></text>
</g>
<g>
<title>Node::del_out(Node*) (1 samples, 0.05%)</title><rect x="1071.0" y="2691.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1074.0" y="2702.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.05%)</title><rect x="1071.5" y="2691.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1074.5" y="2702.0"></text>
</g>
<g>
<title>Node::del_out(Node*) (1 samples, 0.05%)</title><rect x="1071.5" y="2675.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1074.5" y="2686.0"></text>
</g>
<g>
<title>TypeNode::bottom_type() const (1 samples, 0.05%)</title><rect x="1072.1" y="2691.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1075.1" y="2702.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.05%)</title><rect x="1072.6" y="2723.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1075.6" y="2734.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.05%)</title><rect x="1072.6" y="2707.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1075.6" y="2718.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.05%)</title><rect x="1073.2" y="2723.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1076.2" y="2734.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.05%)</title><rect x="1073.2" y="2707.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1076.2" y="2718.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_List&amp;) (1 samples, 0.05%)</title><rect x="1073.2" y="2691.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1076.2" y="2702.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (48 samples, 2.24%)</title><rect x="1073.7" y="2723.0" width="26.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1076.7" y="2734.0">P..</text>
</g>
<g>
<title>LiveRangeMap::compress_uf_map_for_nodes() (1 samples, 0.05%)</title><rect x="1074.3" y="2707.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1077.3" y="2718.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.05%)</title><rect x="1074.8" y="2707.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1077.8" y="2718.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (3 samples, 0.14%)</title><rect x="1075.4" y="2707.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1078.4" y="2718.0"></text>
</g>
<g>
<title>Node_Array::insert(unsigned int, Node*) (1 samples, 0.05%)</title><rect x="1076.5" y="2691.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1079.5" y="2702.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.09%)</title><rect x="1077.0" y="2707.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1080.0" y="2718.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (2 samples, 0.09%)</title><rect x="1077.0" y="2691.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1080.0" y="2702.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.05%)</title><rect x="1077.0" y="2675.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1080.0" y="2686.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1077.6" y="2675.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1080.6" y="2686.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (6 samples, 0.28%)</title><rect x="1078.1" y="2707.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1081.1" y="2718.0"></text>
</g>
<g>
<title>Block::end_idx() const (1 samples, 0.05%)</title><rect x="1080.3" y="2691.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1083.3" y="2702.0"></text>
</g>
<g>
<title>RegMask::is_misaligned_pair() const (1 samples, 0.05%)</title><rect x="1080.9" y="2691.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1083.9" y="2702.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.05%)</title><rect x="1080.9" y="2675.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1083.9" y="2686.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (8 samples, 0.37%)</title><rect x="1081.4" y="2707.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1084.4" y="2718.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.05%)</title><rect x="1083.1" y="2691.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1086.1" y="2702.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1083.6" y="2691.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1086.6" y="2702.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (3 samples, 0.14%)</title><rect x="1084.2" y="2691.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1087.2" y="2702.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1084.7" y="2675.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1087.7" y="2686.0"></text>
</g>
<g>
<title>RegMask::overlap(RegMask const&amp;) const (1 samples, 0.05%)</title><rect x="1085.3" y="2675.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1088.3" y="2686.0"></text>
</g>
<g>
<title>PhaseChaitin::fixup_spills() (1 samples, 0.05%)</title><rect x="1085.8" y="2707.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1088.8" y="2718.0"></text>
</g>
<g>
<title>Block::end_idx() const (1 samples, 0.05%)</title><rect x="1085.8" y="2691.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1088.8" y="2702.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (9 samples, 0.42%)</title><rect x="1086.4" y="2707.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1089.4" y="2718.0"></text>
</g>
<g>
<title>RegMask::is_bound(unsigned int) const (1 samples, 0.05%)</title><rect x="1090.2" y="2691.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1093.2" y="2702.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (1 samples, 0.05%)</title><rect x="1090.2" y="2675.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1093.2" y="2686.0"></text>
</g>
<g>
<title>RegMask::is_misaligned_pair() const (1 samples, 0.05%)</title><rect x="1090.8" y="2691.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1093.8" y="2702.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.05%)</title><rect x="1090.8" y="2675.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1093.8" y="2686.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (6 samples, 0.28%)</title><rect x="1091.3" y="2707.0" width="3.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1094.3" y="2718.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.05%)</title><rect x="1092.4" y="2691.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1095.4" y="2702.0"></text>
</g>
<g>
<title>_setcontext (1 samples, 0.05%)</title><rect x="1092.4" y="2675.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1095.4" y="2686.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 0.09%)</title><rect x="1093.0" y="2691.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1096.0" y="2702.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) (1 samples, 0.05%)</title><rect x="1093.5" y="2675.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1096.5" y="2686.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) (1 samples, 0.05%)</title><rect x="1093.5" y="2659.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1096.5" y="2670.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.05%)</title><rect x="1093.5" y="2643.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1096.5" y="2654.0"></text>
</g>
<g>
<title>Node::del_out(Node*) (1 samples, 0.05%)</title><rect x="1093.5" y="2627.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1096.5" y="2638.0"></text>
</g>
<g>
<title>rFlagsRegOper::type() const (1 samples, 0.05%)</title><rect x="1094.1" y="2691.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1097.1" y="2702.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (2 samples, 0.09%)</title><rect x="1094.7" y="2707.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1097.7" y="2718.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="1095.2" y="2691.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1098.2" y="2702.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.05%)</title><rect x="1095.8" y="2707.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1098.8" y="2718.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.05%)</title><rect x="1095.8" y="2691.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1098.8" y="2702.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (1 samples, 0.05%)</title><rect x="1095.8" y="2675.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1098.8" y="2686.0"></text>
</g>
<g>
<title>Block::has_uncommon_code() const (1 samples, 0.05%)</title><rect x="1095.8" y="2659.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1098.8" y="2670.0"></text>
</g>
<g>
<title>Block::end() const (1 samples, 0.05%)</title><rect x="1095.8" y="2643.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1098.8" y="2654.0"></text>
</g>
<g>
<title>Block::end_idx() const (1 samples, 0.05%)</title><rect x="1095.8" y="2627.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1098.8" y="2638.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.05%)</title><rect x="1095.8" y="2611.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1098.8" y="2622.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (3 samples, 0.14%)</title><rect x="1096.3" y="2707.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1099.3" y="2718.0"></text>
</g>
<g>
<title>IndexSet::insert(unsigned int) (1 samples, 0.05%)</title><rect x="1096.3" y="2691.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1099.3" y="2702.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.05%)</title><rect x="1096.9" y="2691.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1099.9" y="2702.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1097.4" y="2691.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1100.4" y="2702.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (2 samples, 0.09%)</title><rect x="1098.0" y="2707.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1101.0" y="2718.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.05%)</title><rect x="1098.0" y="2691.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1101.0" y="2702.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="1098.5" y="2691.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1101.5" y="2702.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.09%)</title><rect x="1099.1" y="2707.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1102.1" y="2718.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.05%)</title><rect x="1099.6" y="2691.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1102.6" y="2702.0"></text>
</g>
<g>
<title>Compile::Optimize() (44 samples, 2.06%)</title><rect x="1100.2" y="2739.0" width="24.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1103.2" y="2750.0">C..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (2 samples, 0.09%)</title><rect x="1100.2" y="2723.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1103.2" y="2734.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (2 samples, 0.09%)</title><rect x="1100.2" y="2707.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1103.2" y="2718.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) (1 samples, 0.05%)</title><rect x="1100.7" y="2691.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1103.7" y="2702.0"></text>
</g>
<g>
<title>Node::replace_by(Node*) (1 samples, 0.05%)</title><rect x="1100.7" y="2675.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1103.7" y="2686.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) (1 samples, 0.05%)</title><rect x="1101.3" y="2723.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1104.3" y="2734.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.05%)</title><rect x="1101.8" y="2723.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1104.8" y="2734.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.05%)</title><rect x="1101.8" y="2707.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1104.8" y="2718.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.05%)</title><rect x="1101.8" y="2691.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1104.8" y="2702.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="1101.8" y="2675.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1104.8" y="2686.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (2 samples, 0.09%)</title><rect x="1102.4" y="2723.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1105.4" y="2734.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.05%)</title><rect x="1102.9" y="2707.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1105.9" y="2718.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypeOopPtr const*, int) (1 samples, 0.05%)</title><rect x="1102.9" y="2691.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1105.9" y="2702.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypeOopPtr const*, int) (1 samples, 0.05%)</title><rect x="1102.9" y="2675.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1105.9" y="2686.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.05%)</title><rect x="1102.9" y="2659.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1105.9" y="2670.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.05%)</title><rect x="1102.9" y="2643.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1105.9" y="2654.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (34 samples, 1.59%)</title><rect x="1103.5" y="2723.0" width="18.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1106.5" y="2734.0"></text>
</g>
<g>
<title>IdealLoopTree::beautify_loops(PhaseIdealLoop*) (1 samples, 0.05%)</title><rect x="1103.5" y="2707.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1106.5" y="2718.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.05%)</title><rect x="1103.5" y="2691.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1106.5" y="2702.0"></text>
</g>
<g>
<title>RegionNode::hash() const (1 samples, 0.05%)</title><rect x="1103.5" y="2675.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1106.5" y="2686.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.05%)</title><rect x="1104.0" y="2707.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1107.0" y="2718.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.05%)</title><rect x="1104.0" y="2691.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1107.0" y="2702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_counted_loop(Node*, IdealLoopTree*) (1 samples, 0.05%)</title><rect x="1104.0" y="2675.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1107.0" y="2686.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.05%)</title><rect x="1104.0" y="2659.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1107.0" y="2670.0"></text>
</g>
<g>
<title>AddNode::Value(PhaseTransform*) const (1 samples, 0.05%)</title><rect x="1104.0" y="2643.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1107.0" y="2654.0"></text>
</g>
<g>
<title>Node::pinned() const (1 samples, 0.05%)</title><rect x="1104.6" y="2707.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1107.6" y="2718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (3 samples, 0.14%)</title><rect x="1105.1" y="2707.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1108.1" y="2718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.14%)</title><rect x="1106.8" y="2707.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1109.8" y="2718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.05%)</title><rect x="1107.3" y="2691.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1110.3" y="2702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_node(Node*) const (1 samples, 0.05%)</title><rect x="1107.9" y="2691.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1110.9" y="2702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (20 samples, 0.93%)</title><rect x="1108.4" y="2707.0" width="11.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1111.4" y="2718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (14 samples, 0.65%)</title><rect x="1111.7" y="2691.0" width="7.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1114.7" y="2702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (14 samples, 0.65%)</title><rect x="1111.7" y="2675.0" width="7.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1114.7" y="2686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (1 samples, 0.05%)</title><rect x="1112.3" y="2659.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1115.3" y="2670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl(Node*, Node*, Node*) (1 samples, 0.05%)</title><rect x="1112.3" y="2643.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1115.3" y="2654.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.05%)</title><rect x="1112.3" y="2627.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1115.3" y="2638.0"></text>
</g>
<g>
<title>PhaseIdealLoop::idom_no_update(Node*) const (1 samples, 0.05%)</title><rect x="1112.3" y="2611.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1115.3" y="2622.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl(Node*, Node*, Node*) (1 samples, 0.05%)</title><rect x="1112.8" y="2659.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1115.8" y="2670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.05%)</title><rect x="1112.8" y="2643.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1115.8" y="2654.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const (1 samples, 0.05%)</title><rect x="1112.8" y="2627.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1115.8" y="2638.0"></text>
</g>
<g>
<title>PhaseIdealLoop::idom_no_update(Node*) const (1 samples, 0.05%)</title><rect x="1113.4" y="2659.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1116.4" y="2670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (10 samples, 0.47%)</title><rect x="1113.9" y="2659.0" width="5.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1116.9" y="2670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::idom_no_update(Node*) const (8 samples, 0.37%)</title><rect x="1115.0" y="2643.0" width="4.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1118.0" y="2654.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (2 samples, 0.09%)</title><rect x="1119.5" y="2707.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1122.5" y="2718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.05%)</title><rect x="1120.0" y="2691.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1123.0" y="2702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.09%)</title><rect x="1120.6" y="2707.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1123.6" y="2718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (1 samples, 0.05%)</title><rect x="1120.6" y="2691.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1123.6" y="2702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_region(Node*, Node*) (1 samples, 0.05%)</title><rect x="1120.6" y="2675.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1123.6" y="2686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::set_idom(Node*, Node*, unsigned int) (1 samples, 0.05%)</title><rect x="1120.6" y="2659.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1123.6" y="2670.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1120.6" y="2643.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1123.6" y="2654.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="1120.6" y="2627.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1123.6" y="2638.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*) (1 samples, 0.05%)</title><rect x="1121.1" y="2691.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1124.1" y="2702.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (1 samples, 0.05%)</title><rect x="1121.7" y="2707.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1124.7" y="2718.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.14%)</title><rect x="1122.2" y="2723.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1125.2" y="2734.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.14%)</title><rect x="1122.2" y="2707.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1125.2" y="2718.0"></text>
</g>
<g>
<title>NodeHash::hash_delete(Node const*) (1 samples, 0.05%)</title><rect x="1122.2" y="2691.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1125.2" y="2702.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.05%)</title><rect x="1122.8" y="2691.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1125.8" y="2702.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.05%)</title><rect x="1123.3" y="2691.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1126.3" y="2702.0"></text>
</g>
<g>
<title>Compile::copy_node_notes_to(Node*, Node*) (1 samples, 0.05%)</title><rect x="1123.3" y="2675.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1126.3" y="2686.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.05%)</title><rect x="1123.9" y="2723.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1126.9" y="2734.0"></text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.05%)</title><rect x="1123.9" y="2707.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1126.9" y="2718.0"></text>
</g>
<g>
<title>Chunk::operator delete(void*) (1 samples, 0.05%)</title><rect x="1123.9" y="2691.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1126.9" y="2702.0"></text>
</g>
<g>
<title>free_large (1 samples, 0.05%)</title><rect x="1123.9" y="2675.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1126.9" y="2686.0"></text>
</g>
<g>
<title>mvm_deallocate_pages (1 samples, 0.05%)</title><rect x="1123.9" y="2659.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1126.9" y="2670.0"></text>
</g>
<g>
<title>si_module_static_search.search_vtable (1 samples, 0.05%)</title><rect x="1123.9" y="2643.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1126.9" y="2654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 0.70%)</title><rect x="1124.4" y="2739.0" width="8.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1127.4" y="2750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 0.70%)</title><rect x="1124.4" y="2723.0" width="8.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1127.4" y="2734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (15 samples, 0.70%)</title><rect x="1124.4" y="2707.0" width="8.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1127.4" y="2718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (15 samples, 0.70%)</title><rect x="1124.4" y="2691.0" width="8.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1127.4" y="2702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (15 samples, 0.70%)</title><rect x="1124.4" y="2675.0" width="8.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1127.4" y="2686.0"></text>
</g>
<g>
<title>Parse::do_call() (14 samples, 0.65%)</title><rect x="1124.4" y="2659.0" width="7.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1127.4" y="2670.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.09%)</title><rect x="1124.4" y="2643.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1127.4" y="2654.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.09%)</title><rect x="1124.4" y="2627.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1127.4" y="2638.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (2 samples, 0.09%)</title><rect x="1124.4" y="2611.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1127.4" y="2622.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.09%)</title><rect x="1124.4" y="2595.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1127.4" y="2606.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.09%)</title><rect x="1124.4" y="2579.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1127.4" y="2590.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.09%)</title><rect x="1124.4" y="2563.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1127.4" y="2574.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.09%)</title><rect x="1124.4" y="2547.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1127.4" y="2558.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.05%)</title><rect x="1124.4" y="2531.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1127.4" y="2542.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1125.0" y="2531.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1128.0" y="2542.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.05%)</title><rect x="1125.0" y="2515.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1128.0" y="2526.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.05%)</title><rect x="1125.0" y="2499.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1128.0" y="2510.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.05%)</title><rect x="1125.0" y="2483.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1128.0" y="2494.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1125.0" y="2467.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1128.0" y="2478.0"></text>
</g>
<g>
<title>MethodHandles::signature_polymorphic_name_id(Klass*, Symbol*) (1 samples, 0.05%)</title><rect x="1125.0" y="2451.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1128.0" y="2462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.56%)</title><rect x="1125.5" y="2643.0" width="6.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1128.5" y="2654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.56%)</title><rect x="1125.5" y="2627.0" width="6.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1128.5" y="2638.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.05%)</title><rect x="1125.5" y="2611.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1128.5" y="2622.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.05%)</title><rect x="1125.5" y="2595.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1128.5" y="2606.0"></text>
</g>
<g>
<title>JVMState::clone_shallow(Compile*) const (1 samples, 0.05%)</title><rect x="1125.5" y="2579.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1128.5" y="2590.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1125.5" y="2563.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1128.5" y="2574.0"></text>
</g>
<g>
<title>Chunk::operator new(unsigned long, AllocFailStrategy::AllocFailEnum, unsigned long) (1 samples, 0.05%)</title><rect x="1125.5" y="2547.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1128.5" y="2558.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1125.5" y="2531.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1128.5" y="2542.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.05%)</title><rect x="1125.5" y="2515.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1128.5" y="2526.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.05%)</title><rect x="1125.5" y="2499.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1128.5" y="2510.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.05%)</title><rect x="1125.5" y="2483.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1128.5" y="2494.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="1125.5" y="2467.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1128.5" y="2478.0"></text>
</g>
<g>
<title>small_malloc_should_clear (1 samples, 0.05%)</title><rect x="1125.5" y="2451.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1128.5" y="2462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.51%)</title><rect x="1126.1" y="2611.0" width="6.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1129.1" y="2622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.51%)</title><rect x="1126.1" y="2595.0" width="6.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1129.1" y="2606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.51%)</title><rect x="1126.1" y="2579.0" width="6.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1129.1" y="2590.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.47%)</title><rect x="1126.1" y="2563.0" width="5.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1129.1" y="2574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.42%)</title><rect x="1126.1" y="2547.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1129.1" y="2558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.42%)</title><rect x="1126.1" y="2531.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1129.1" y="2542.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.05%)</title><rect x="1126.1" y="2515.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1129.1" y="2526.0"></text>
</g>
<g>
<title>GraphKit::null_check_receiver_before_call(ciMethod*) (1 samples, 0.05%)</title><rect x="1126.1" y="2499.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1129.1" y="2510.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**) (1 samples, 0.05%)</title><rect x="1126.1" y="2483.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1129.1" y="2494.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1126.1" y="2467.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1129.1" y="2478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.37%)</title><rect x="1126.6" y="2515.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1129.6" y="2526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.37%)</title><rect x="1126.6" y="2499.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1129.6" y="2510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.37%)</title><rect x="1126.6" y="2483.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1129.6" y="2494.0"></text>
</g>
<g>
<title>Parse::array_load(BasicType) (1 samples, 0.05%)</title><rect x="1126.6" y="2467.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1129.6" y="2478.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const**) (1 samples, 0.05%)</title><rect x="1126.6" y="2451.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1129.6" y="2462.0"></text>
</g>
<g>
<title>GraphKit::array_element_address(Node*, Node*, BasicType, TypeInt const*, Node*) (1 samples, 0.05%)</title><rect x="1126.6" y="2435.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1129.6" y="2446.0"></text>
</g>
<g>
<title>Compile::constrained_convI2L(PhaseGVN*, Node*, TypeInt const*, Node*) (1 samples, 0.05%)</title><rect x="1126.6" y="2419.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1129.6" y="2430.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1126.6" y="2403.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1129.6" y="2414.0"></text>
</g>
<g>
<title>TypeLong::singleton() const (1 samples, 0.05%)</title><rect x="1126.6" y="2387.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1129.6" y="2398.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.23%)</title><rect x="1127.2" y="2467.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1130.2" y="2478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.23%)</title><rect x="1127.2" y="2451.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1130.2" y="2462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.23%)</title><rect x="1127.2" y="2435.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1130.2" y="2446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.23%)</title><rect x="1127.2" y="2419.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1130.2" y="2430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.23%)</title><rect x="1127.2" y="2403.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1130.2" y="2414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.23%)</title><rect x="1127.2" y="2387.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1130.2" y="2398.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.23%)</title><rect x="1127.2" y="2371.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1130.2" y="2382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.23%)</title><rect x="1127.2" y="2355.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1130.2" y="2366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.23%)</title><rect x="1127.2" y="2339.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1130.2" y="2350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.23%)</title><rect x="1127.2" y="2323.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1130.2" y="2334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.23%)</title><rect x="1127.2" y="2307.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1130.2" y="2318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.23%)</title><rect x="1127.2" y="2291.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1130.2" y="2302.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.23%)</title><rect x="1127.2" y="2275.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1130.2" y="2286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.23%)</title><rect x="1127.2" y="2259.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1130.2" y="2270.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.23%)</title><rect x="1127.2" y="2243.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1130.2" y="2254.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.23%)</title><rect x="1127.2" y="2227.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1130.2" y="2238.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.23%)</title><rect x="1127.2" y="2211.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1130.2" y="2222.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.23%)</title><rect x="1127.2" y="2195.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1130.2" y="2206.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.23%)</title><rect x="1127.2" y="2179.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1130.2" y="2190.0"></text>
</g>
<g>
<title>Compile::optimize_virtual_call(ciMethod*, int, ciInstanceKlass*, ciKlass*, ciMethod*, TypeOopPtr const*, bool, bool&amp;, int&amp;, bool) (1 samples, 0.05%)</title><rect x="1127.2" y="2163.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1130.2" y="2174.0"></text>
</g>
<g>
<title>Compile::optimize_inlining(ciMethod*, int, ciInstanceKlass*, ciMethod*, TypeOopPtr const*, bool) (1 samples, 0.05%)</title><rect x="1127.2" y="2147.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1130.2" y="2158.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.05%)</title><rect x="1127.2" y="2131.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1130.2" y="2142.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.05%)</title><rect x="1127.2" y="2115.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1130.2" y="2126.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.05%)</title><rect x="1127.2" y="2099.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1130.2" y="2110.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.05%)</title><rect x="1127.2" y="2083.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1130.2" y="2094.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1127.2" y="2067.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1130.2" y="2078.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle, ciSymbol*) (1 samples, 0.05%)</title><rect x="1127.2" y="2051.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1130.2" y="2062.0"></text>
</g>
<g>
<title>GrowableArray&lt;ciType*&gt;::GrowableArray(Arena*, int, int, ciType* const&amp;) (1 samples, 0.05%)</title><rect x="1127.2" y="2035.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1130.2" y="2046.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.19%)</title><rect x="1127.7" y="2163.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1130.7" y="2174.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.19%)</title><rect x="1127.7" y="2147.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1130.7" y="2158.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.19%)</title><rect x="1127.7" y="2131.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1130.7" y="2142.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.19%)</title><rect x="1127.7" y="2115.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1130.7" y="2126.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.19%)</title><rect x="1127.7" y="2099.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1130.7" y="2110.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.19%)</title><rect x="1127.7" y="2083.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1130.7" y="2094.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.14%)</title><rect x="1127.7" y="2067.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1130.7" y="2078.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.14%)</title><rect x="1127.7" y="2051.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1130.7" y="2062.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.14%)</title><rect x="1127.7" y="2035.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1130.7" y="2046.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.14%)</title><rect x="1127.7" y="2019.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1130.7" y="2030.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.14%)</title><rect x="1127.7" y="2003.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1130.7" y="2014.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.14%)</title><rect x="1127.7" y="1987.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1130.7" y="1998.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.14%)</title><rect x="1127.7" y="1971.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1130.7" y="1982.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.14%)</title><rect x="1127.7" y="1955.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1130.7" y="1966.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.05%)</title><rect x="1127.7" y="1939.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1130.7" y="1950.0"></text>
</g>
<g>
<title>GraphKit::null_check_receiver_before_call(ciMethod*) (1 samples, 0.05%)</title><rect x="1127.7" y="1923.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1130.7" y="1934.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**) (1 samples, 0.05%)</title><rect x="1127.7" y="1907.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1130.7" y="1918.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.05%)</title><rect x="1127.7" y="1891.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1130.7" y="1902.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.05%)</title><rect x="1127.7" y="1875.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1130.7" y="1886.0"></text>
</g>
<g>
<title>GraphKit::set_predefined_output_for_runtime_call(Node*, Node*, TypePtr const*) (1 samples, 0.05%)</title><rect x="1127.7" y="1859.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1130.7" y="1870.0"></text>
</g>
<g>
<title>GraphKit::set_all_memory(Node*) (1 samples, 0.05%)</title><rect x="1127.7" y="1843.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1130.7" y="1854.0"></text>
</g>
<g>
<title>MergeMemNode::make(Compile*, Node*) (1 samples, 0.05%)</title><rect x="1127.7" y="1827.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1130.7" y="1838.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.05%)</title><rect x="1127.7" y="1811.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1130.7" y="1822.0"></text>
</g>
<g>
<title>MergeMemStream::MergeMemStream(MergeMemNode*, MergeMemNode const*) (1 samples, 0.05%)</title><rect x="1127.7" y="1795.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1130.7" y="1806.0"></text>
</g>
<g>
<title>MergeMemNode::iteration_setup(MergeMemNode const*) (1 samples, 0.05%)</title><rect x="1127.7" y="1779.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1130.7" y="1790.0"></text>
</g>
<g>
<title>MergeMemNode::grow_to_match(MergeMemNode const*) (1 samples, 0.05%)</title><rect x="1127.7" y="1763.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1130.7" y="1774.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.05%)</title><rect x="1127.7" y="1747.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1130.7" y="1758.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1128.3" y="1939.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1131.3" y="1950.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1128.3" y="1923.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1131.3" y="1934.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1128.3" y="1907.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1131.3" y="1918.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1128.3" y="1891.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1131.3" y="1902.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.05%)</title><rect x="1128.3" y="1875.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1131.3" y="1886.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.05%)</title><rect x="1128.3" y="1859.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1131.3" y="1870.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.05%)</title><rect x="1128.3" y="1843.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1131.3" y="1854.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.05%)</title><rect x="1128.3" y="1827.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1131.3" y="1838.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.05%)</title><rect x="1128.3" y="1811.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1131.3" y="1822.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.05%)</title><rect x="1128.3" y="1795.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1131.3" y="1806.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1128.3" y="1779.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1131.3" y="1790.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1128.3" y="1763.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1131.3" y="1774.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.05%)</title><rect x="1128.3" y="1747.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1131.3" y="1758.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.05%)</title><rect x="1128.3" y="1731.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1131.3" y="1742.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.05%)</title><rect x="1128.3" y="1715.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1131.3" y="1726.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1128.3" y="1699.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1131.3" y="1710.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1128.3" y="1683.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1131.3" y="1694.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.05%)</title><rect x="1128.3" y="1667.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1131.3" y="1678.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.05%)</title><rect x="1128.3" y="1651.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1131.3" y="1662.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1128.3" y="1635.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1131.3" y="1646.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle, ciSymbol*) (1 samples, 0.05%)</title><rect x="1128.3" y="1619.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1131.3" y="1630.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle, ciSymbol*, bool) (1 samples, 0.05%)</title><rect x="1128.3" y="1603.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1131.3" y="1614.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1128.3" y="1587.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1131.3" y="1598.0"></text>
</g>
<g>
<title>SystemDictionary::find_instance_or_array_klass(Symbol*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1128.3" y="1571.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1131.3" y="1582.0"></text>
</g>
<g>
<title>SystemDictionary::find(Symbol*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1128.3" y="1555.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1131.3" y="1566.0"></text>
</g>
<g>
<title>Dictionary::find(int, unsigned int, Symbol*, ClassLoaderData*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1128.3" y="1539.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1131.3" y="1550.0"></text>
</g>
<g>
<title>Dictionary::get_entry(int, unsigned int, Symbol*, ClassLoaderData*) (1 samples, 0.05%)</title><rect x="1128.3" y="1523.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1131.3" y="1534.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.05%)</title><rect x="1128.8" y="1939.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1131.8" y="1950.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1128.8" y="1923.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1131.8" y="1934.0"></text>
</g>
<g>
<title>PhiNode::unique_input(PhaseTransform*) (1 samples, 0.05%)</title><rect x="1128.8" y="1907.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1131.8" y="1918.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1129.4" y="2067.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1132.4" y="2078.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1129.4" y="2051.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1132.4" y="2062.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1129.4" y="2035.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1132.4" y="2046.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1129.4" y="2019.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1132.4" y="2030.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1129.4" y="2003.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1132.4" y="2014.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1129.4" y="1987.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1132.4" y="1998.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1129.4" y="1971.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1132.4" y="1982.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1129.4" y="1955.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1132.4" y="1966.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1129.4" y="1939.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1132.4" y="1950.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1129.4" y="1923.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1132.4" y="1934.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1129.4" y="1907.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1132.4" y="1918.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1129.4" y="1891.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1132.4" y="1902.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1129.4" y="1875.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1132.4" y="1886.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1129.4" y="1859.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1132.4" y="1870.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1129.4" y="1843.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1132.4" y="1854.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1129.4" y="1827.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1132.4" y="1838.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1129.4" y="1811.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1132.4" y="1822.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1129.4" y="1795.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1132.4" y="1806.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1129.4" y="1779.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1132.4" y="1790.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.05%)</title><rect x="1129.4" y="1763.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1132.4" y="1774.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.05%)</title><rect x="1129.4" y="1747.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1132.4" y="1758.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.05%)</title><rect x="1129.4" y="1731.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1132.4" y="1742.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.05%)</title><rect x="1129.4" y="1715.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1132.4" y="1726.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.05%)</title><rect x="1129.4" y="1699.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1132.4" y="1710.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.05%)</title><rect x="1129.4" y="1683.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1132.4" y="1694.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1129.4" y="1667.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1132.4" y="1678.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1129.4" y="1651.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1132.4" y="1662.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::successors(ciBytecodeStream*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1129.4" y="1635.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1132.4" y="1646.0"></text>
</g>
<g>
<title>ciTypeFlow::get_block_for(int, ciTypeFlow::JsrSet*, ciTypeFlow::CreateOption) (1 samples, 0.05%)</title><rect x="1129.4" y="1619.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1132.4" y="1630.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::Block(ciTypeFlow*, ciBlock*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1129.4" y="1603.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1132.4" y="1614.0"></text>
</g>
<g>
<title>Parse::do_new() (1 samples, 0.05%)</title><rect x="1129.9" y="2467.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1132.9" y="2478.0"></text>
</g>
<g>
<title>GraphKit::new_instance(Node*, Node*, Node**, bool) (1 samples, 0.05%)</title><rect x="1129.9" y="2451.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1132.9" y="2462.0"></text>
</g>
<g>
<title>GraphKit::set_output_for_allocation(AllocateNode*, TypeOopPtr const*, bool) (1 samples, 0.05%)</title><rect x="1129.9" y="2435.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1132.9" y="2446.0"></text>
</g>
<g>
<title>MergeMemNode::make(Compile*, Node*) (1 samples, 0.05%)</title><rect x="1129.9" y="2419.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1132.9" y="2430.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.05%)</title><rect x="1129.9" y="2403.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1132.9" y="2414.0"></text>
</g>
<g>
<title>SubNode::Identity(PhaseTransform*) (1 samples, 0.05%)</title><rect x="1130.5" y="2467.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1133.5" y="2478.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1131.0" y="2547.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1134.0" y="2558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1131.0" y="2531.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1134.0" y="2542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1131.0" y="2515.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1134.0" y="2526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1131.0" y="2499.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1134.0" y="2510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1131.0" y="2483.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1134.0" y="2494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1131.0" y="2467.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1134.0" y="2478.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1131.0" y="2451.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.0" y="2462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1131.0" y="2435.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1134.0" y="2446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1131.0" y="2419.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1134.0" y="2430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1131.0" y="2403.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1134.0" y="2414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1131.0" y="2387.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1134.0" y="2398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1131.0" y="2371.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1134.0" y="2382.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1131.0" y="2355.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1134.0" y="2366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1131.0" y="2339.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1134.0" y="2350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1131.0" y="2323.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1134.0" y="2334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1131.0" y="2307.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1134.0" y="2318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1131.0" y="2291.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1134.0" y="2302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1131.0" y="2275.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1134.0" y="2286.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1131.0" y="2259.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1134.0" y="2270.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1131.0" y="2243.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1134.0" y="2254.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1131.0" y="2227.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1134.0" y="2238.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1131.0" y="2211.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1134.0" y="2222.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1131.0" y="2195.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1134.0" y="2206.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1131.0" y="2179.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1134.0" y="2190.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1131.0" y="2163.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1134.0" y="2174.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1131.0" y="2147.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1134.0" y="2158.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1131.0" y="2131.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1134.0" y="2142.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1131.0" y="2115.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1134.0" y="2126.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1131.0" y="2099.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1134.0" y="2110.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1131.0" y="2083.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1134.0" y="2094.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1131.0" y="2067.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1134.0" y="2078.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.05%)</title><rect x="1131.0" y="2051.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1134.0" y="2062.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.05%)</title><rect x="1131.0" y="2035.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1134.0" y="2046.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.05%)</title><rect x="1131.0" y="2019.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1134.0" y="2030.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.05%)</title><rect x="1131.0" y="2003.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1134.0" y="2014.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.05%)</title><rect x="1131.0" y="1987.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1134.0" y="1998.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.05%)</title><rect x="1131.0" y="1971.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1134.0" y="1982.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1131.0" y="1955.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1134.0" y="1966.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1131.0" y="1939.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1134.0" y="1950.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.05%)</title><rect x="1131.0" y="1923.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1134.0" y="1934.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.05%)</title><rect x="1131.0" y="1907.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.0" y="1918.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.05%)</title><rect x="1131.0" y="1891.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1134.0" y="1902.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.05%)</title><rect x="1131.0" y="1875.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1134.0" y="1886.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.05%)</title><rect x="1131.0" y="1859.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1134.0" y="1870.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.05%)</title><rect x="1131.0" y="1843.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.0" y="1854.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index(constantPoolHandle, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1131.0" y="1827.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.0" y="1838.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1131.0" y="1811.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1134.0" y="1822.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle, ciSymbol*, bool) (1 samples, 0.05%)</title><rect x="1131.0" y="1795.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1134.0" y="1806.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle, ciSymbol*, bool) (1 samples, 0.05%)</title><rect x="1131.0" y="1779.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1134.0" y="1790.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.05%)</title><rect x="1131.0" y="1763.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1134.0" y="1774.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.05%)</title><rect x="1131.0" y="1747.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1134.0" y="1758.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.05%)</title><rect x="1131.0" y="1731.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1134.0" y="1742.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.05%)</title><rect x="1131.0" y="1715.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1134.0" y="1726.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.05%)</title><rect x="1131.0" y="1699.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1134.0" y="1710.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (1 samples, 0.05%)</title><rect x="1131.6" y="2563.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1134.6" y="2574.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (1 samples, 0.05%)</title><rect x="1131.6" y="2547.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1134.6" y="2558.0"></text>
</g>
<g>
<title>GraphKit::null_check_oop(Node*, Node**, bool, bool) (1 samples, 0.05%)</title><rect x="1131.6" y="2531.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1134.6" y="2542.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**) (1 samples, 0.05%)</title><rect x="1131.6" y="2515.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1134.6" y="2526.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1131.6" y="2499.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1134.6" y="2510.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (1 samples, 0.05%)</title><rect x="1132.1" y="2659.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1135.1" y="2670.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (1 samples, 0.05%)</title><rect x="1132.1" y="2643.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1135.1" y="2654.0"></text>
</g>
<g>
<title>GraphKit::maybe_cast_profiled_receiver(Node*, ciKlass*, ciKlass*, bool) (1 samples, 0.05%)</title><rect x="1132.1" y="2627.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1135.1" y="2638.0"></text>
</g>
<g>
<title>GraphKit::type_check_receiver(Node*, ciKlass*, float, Node**) (1 samples, 0.05%)</title><rect x="1132.1" y="2611.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1135.1" y="2622.0"></text>
</g>
<g>
<title>GraphKit::load_object_klass(Node*) (1 samples, 0.05%)</title><rect x="1132.1" y="2595.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1135.1" y="2606.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1132.1" y="2579.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1135.1" y="2590.0"></text>
</g>
<g>
<title>Node::hash() const (1 samples, 0.05%)</title><rect x="1132.1" y="2563.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1135.1" y="2574.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (1 samples, 0.05%)</title><rect x="1132.7" y="2739.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1135.7" y="2750.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.05%)</title><rect x="1133.2" y="2739.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1136.2" y="2750.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.05%)</title><rect x="1133.2" y="2723.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1136.2" y="2734.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.05%)</title><rect x="1133.2" y="2707.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1136.2" y="2718.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="1133.2" y="2691.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1136.2" y="2702.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (2 samples, 0.09%)</title><rect x="1133.8" y="2739.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1136.8" y="2750.0"></text>
</g>
<g>
<title>CodeBuffer::free_blob() (1 samples, 0.05%)</title><rect x="1133.8" y="2723.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1136.8" y="2734.0"></text>
</g>
<g>
<title>BufferBlob::free(BufferBlob*) (1 samples, 0.05%)</title><rect x="1133.8" y="2707.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1136.8" y="2718.0"></text>
</g>
<g>
<title>CodeHeap::add_to_freelist(HeapBlock*) (1 samples, 0.05%)</title><rect x="1133.8" y="2691.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1136.8" y="2702.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (1 samples, 0.05%)</title><rect x="1134.3" y="2723.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1137.3" y="2734.0"></text>
</g>
<g>
<title>InstanceKlass::add_dependent_nmethod(nmethod*) (1 samples, 0.05%)</title><rect x="1134.3" y="2707.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1137.3" y="2718.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (2 samples, 0.09%)</title><rect x="1134.9" y="2739.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1137.9" y="2750.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle) (1 samples, 0.05%)</title><rect x="1134.9" y="2723.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1137.9" y="2734.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.05%)</title><rect x="1134.9" y="2707.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1137.9" y="2718.0"></text>
</g>
<g>
<title>ciMethodData::next_data(ProfileData*) (1 samples, 0.05%)</title><rect x="1134.9" y="2691.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1137.9" y="2702.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.05%)</title><rect x="1135.4" y="2723.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1138.4" y="2734.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (18 samples, 0.84%)</title><rect x="1136.0" y="2771.0" width="9.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1139.0" y="2782.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (18 samples, 0.84%)</title><rect x="1136.0" y="2755.0" width="9.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1139.0" y="2766.0"></text>
</g>
<g>
<title>Compilation::compile_method() (18 samples, 0.84%)</title><rect x="1136.0" y="2739.0" width="9.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1139.0" y="2750.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (8 samples, 0.37%)</title><rect x="1136.0" y="2723.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1139.0" y="2734.0"></text>
</g>
<g>
<title>Compilation::build_hir() (2 samples, 0.09%)</title><rect x="1136.0" y="2707.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1139.0" y="2718.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (2 samples, 0.09%)</title><rect x="1136.0" y="2691.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1139.0" y="2702.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (2 samples, 0.09%)</title><rect x="1136.0" y="2675.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1139.0" y="2686.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (2 samples, 0.09%)</title><rect x="1136.0" y="2659.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1139.0" y="2670.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.09%)</title><rect x="1136.0" y="2643.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1139.0" y="2654.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.09%)</title><rect x="1136.0" y="2627.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1139.0" y="2638.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.09%)</title><rect x="1136.0" y="2611.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1139.0" y="2622.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (2 samples, 0.09%)</title><rect x="1136.0" y="2595.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1139.0" y="2606.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (2 samples, 0.09%)</title><rect x="1136.0" y="2579.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1139.0" y="2590.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.09%)</title><rect x="1136.0" y="2563.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1139.0" y="2574.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.09%)</title><rect x="1136.0" y="2547.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1139.0" y="2558.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1136.0" y="2531.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1139.0" y="2542.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.05%)</title><rect x="1136.0" y="2515.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1139.0" y="2526.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.05%)</title><rect x="1136.0" y="2499.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1139.0" y="2510.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.05%)</title><rect x="1136.0" y="2483.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1139.0" y="2494.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.05%)</title><rect x="1136.0" y="2467.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1139.0" y="2478.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index(constantPoolHandle, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1136.0" y="2451.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1139.0" y="2462.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1136.0" y="2435.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1139.0" y="2446.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle, ciSymbol*, bool) (1 samples, 0.05%)</title><rect x="1136.0" y="2419.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1139.0" y="2430.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.05%)</title><rect x="1136.0" y="2403.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1139.0" y="2414.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol*) (1 samples, 0.05%)</title><rect x="1136.0" y="2387.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1139.0" y="2398.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1136.5" y="2531.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1139.5" y="2542.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1136.5" y="2515.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1139.5" y="2526.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1136.5" y="2499.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1139.5" y="2510.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.05%)</title><rect x="1136.5" y="2483.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1139.5" y="2494.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.05%)</title><rect x="1136.5" y="2467.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1139.5" y="2478.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*) (1 samples, 0.05%)</title><rect x="1136.5" y="2451.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1139.5" y="2462.0"></text>
</g>
<g>
<title>ValueStack::copy_for_parsing() (1 samples, 0.05%)</title><rect x="1136.5" y="2435.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1139.5" y="2446.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.05%)</title><rect x="1136.5" y="2419.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1139.5" y="2430.0"></text>
</g>
<g>
<title>Values::push_all(Values const*) (1 samples, 0.05%)</title><rect x="1136.5" y="2403.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1139.5" y="2414.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (2 samples, 0.09%)</title><rect x="1137.1" y="2707.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1140.1" y="2718.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (2 samples, 0.09%)</title><rect x="1137.1" y="2691.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1140.1" y="2702.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_lir_list(LIR_List*) (2 samples, 0.09%)</title><rect x="1137.1" y="2675.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1140.1" y="2686.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op0(LIR_Op0*) (1 samples, 0.05%)</title><rect x="1137.1" y="2659.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1140.1" y="2670.0"></text>
</g>
<g>
<title>LIR_Assembler::check_icache() (1 samples, 0.05%)</title><rect x="1137.1" y="2643.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1140.1" y="2654.0"></text>
</g>
<g>
<title>MacroAssembler::verify_oop(RegisterImpl*, char const*) (1 samples, 0.05%)</title><rect x="1137.1" y="2627.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1140.1" y="2638.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_profile_call(LIR_OpProfileCall*) (1 samples, 0.05%)</title><rect x="1137.6" y="2659.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1140.6" y="2670.0"></text>
</g>
<g>
<title>ciMethodData::data_at(int) (1 samples, 0.05%)</title><rect x="1137.6" y="2643.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1140.6" y="2654.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (4 samples, 0.19%)</title><rect x="1138.2" y="2707.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1141.2" y="2718.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (3 samples, 0.14%)</title><rect x="1138.2" y="2691.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.2" y="2702.0"></text>
</g>
<g>
<title>LIRGenerator::block_do(BlockBegin*) (3 samples, 0.14%)</title><rect x="1138.2" y="2675.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1141.2" y="2686.0"></text>
</g>
<g>
<title>LIRGenerator::do_root(Instruction*) (3 samples, 0.14%)</title><rect x="1138.2" y="2659.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1141.2" y="2670.0"></text>
</g>
<g>
<title>LIRGenerator::do_Base(Base*) (1 samples, 0.05%)</title><rect x="1138.2" y="2643.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.2" y="2654.0"></text>
</g>
<g>
<title>Values::grow(int, Instruction*) (1 samples, 0.05%)</title><rect x="1138.2" y="2627.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1141.2" y="2638.0"></text>
</g>
<g>
<title>LIRGenerator::do_NewInstance(NewInstance*) (1 samples, 0.05%)</title><rect x="1138.7" y="2643.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1141.7" y="2654.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (1 samples, 0.05%)</title><rect x="1138.7" y="2627.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1141.7" y="2638.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileCall(ProfileCall*) (1 samples, 0.05%)</title><rect x="1139.3" y="2643.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1142.3" y="2654.0"></text>
</g>
<g>
<title>LIRGenerator::profile_arguments(ProfileCall*) (1 samples, 0.05%)</title><rect x="1139.3" y="2627.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1142.3" y="2638.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.05%)</title><rect x="1139.3" y="2611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1142.3" y="2622.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.05%)</title><rect x="1139.8" y="2691.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1142.8" y="2702.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (1 samples, 0.05%)</title><rect x="1139.8" y="2675.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1142.8" y="2686.0"></text>
</g>
<g>
<title>LinearScan::add_def(int, int, IntervalUseKind, BasicType) (1 samples, 0.05%)</title><rect x="1139.8" y="2659.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1142.8" y="2670.0"></text>
</g>
<g>
<title>pthread_getspecific (1 samples, 0.05%)</title><rect x="1139.8" y="2643.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1142.8" y="2654.0"></text>
</g>
<g>
<title>Compilation::install_code(int) (10 samples, 0.47%)</title><rect x="1140.4" y="2723.0" width="5.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1143.4" y="2734.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (10 samples, 0.47%)</title><rect x="1140.4" y="2707.0" width="5.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1143.4" y="2718.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (9 samples, 0.42%)</title><rect x="1140.4" y="2691.0" width="5.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1143.4" y="2702.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (7 samples, 0.33%)</title><rect x="1140.4" y="2675.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1143.4" y="2686.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long, bool) (7 samples, 0.33%)</title><rect x="1140.4" y="2659.0" width="3.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1143.4" y="2670.0"></text>
</g>
<g>
<title>CodeHeap::search_freelist(unsigned long, bool) (7 samples, 0.33%)</title><rect x="1140.4" y="2643.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1143.4" y="2654.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (2 samples, 0.09%)</title><rect x="1144.3" y="2675.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1147.3" y="2686.0"></text>
</g>
<g>
<title>CodeBlob::CodeBlob(char const*, CodeBuffer*, int, int, int, int, OopMapSet*) (1 samples, 0.05%)</title><rect x="1144.3" y="2659.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1147.3" y="2670.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (1 samples, 0.05%)</title><rect x="1144.3" y="2643.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1147.3" y="2654.0"></text>
</g>
<g>
<title>CodeBuffer::relocate_code_to(CodeBuffer*) const (1 samples, 0.05%)</title><rect x="1144.3" y="2627.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1147.3" y="2638.0"></text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="1144.3" y="2611.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1147.3" y="2622.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="1144.3" y="2595.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1147.3" y="2606.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.05%)</title><rect x="1144.8" y="2659.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1147.8" y="2670.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.05%)</title><rect x="1145.4" y="2691.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1148.4" y="2702.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.05%)</title><rect x="1145.4" y="2675.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1148.4" y="2686.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (1 samples, 0.05%)</title><rect x="1145.9" y="2771.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1148.9" y="2782.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (1 samples, 0.05%)</title><rect x="1145.9" y="2755.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1148.9" y="2766.0"></text>
</g>
<g>
<title>ciObjectFactory::find_non_perm(oopDesc*) (1 samples, 0.05%)</title><rect x="1145.9" y="2739.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1148.9" y="2750.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.05%)</title><rect x="1145.9" y="2723.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1148.9" y="2734.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.05%)</title><rect x="1145.9" y="2707.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1148.9" y="2718.0"></text>
</g>
<g>
<title>ciInstanceKlass::ciInstanceKlass(KlassHandle) (1 samples, 0.05%)</title><rect x="1145.9" y="2691.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1148.9" y="2702.0"></text>
</g>
<g>
<title>ciEnv::~ciEnv() (2 samples, 0.09%)</title><rect x="1146.5" y="2771.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1149.5" y="2782.0"></text>
</g>
<g>
<title>ciObjectFactory::remove_symbols() (2 samples, 0.09%)</title><rect x="1146.5" y="2755.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1149.5" y="2766.0"></text>
</g>
<g>
<title>Symbol::decrement_refcount() (1 samples, 0.05%)</title><rect x="1147.0" y="2739.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1150.0" y="2750.0"></text>
</g>
<g>
<title>CompileQueue::get() (12 samples, 0.56%)</title><rect x="1147.6" y="2787.0" width="6.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.6" y="2798.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (11 samples, 0.51%)</title><rect x="1148.1" y="2771.0" width="6.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.1" y="2782.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (11 samples, 0.51%)</title><rect x="1148.1" y="2755.0" width="6.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1151.1" y="2766.0"></text>
</g>
<g>
<title>NMethodSweeper::process_nmethod(nmethod*) (11 samples, 0.51%)</title><rect x="1148.1" y="2739.0" width="6.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.1" y="2750.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.05%)</title><rect x="1149.2" y="2723.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.2" y="2734.0"></text>
</g>
<g>
<title>Monitor::TryFast() (1 samples, 0.05%)</title><rect x="1149.2" y="2707.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.2" y="2718.0"></text>
</g>
<g>
<title>nmethod::cleanup_inline_caches() (7 samples, 0.33%)</title><rect x="1149.8" y="2723.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1152.8" y="2734.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.05%)</title><rect x="1149.8" y="2707.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1152.8" y="2718.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.05%)</title><rect x="1149.8" y="2691.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1152.8" y="2702.0"></text>
</g>
<g>
<title>CompiledIC::ic_destination() const (1 samples, 0.05%)</title><rect x="1150.3" y="2707.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.3" y="2718.0"></text>
</g>
<g>
<title>NativeCall::destination() const (1 samples, 0.05%)</title><rect x="1150.3" y="2691.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.3" y="2702.0"></text>
</g>
<g>
<title>RelocIterator::next() (4 samples, 0.19%)</title><rect x="1150.9" y="2707.0" width="2.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1153.9" y="2718.0"></text>
</g>
<g>
<title>RelocIterator::advance_over_prefix() (1 samples, 0.05%)</title><rect x="1152.5" y="2691.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.5" y="2702.0"></text>
</g>
<g>
<title>RelocIterator::set_limits(unsigned char*, unsigned char*) (1 samples, 0.05%)</title><rect x="1153.1" y="2707.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.1" y="2718.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.05%)</title><rect x="1153.1" y="2691.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1156.1" y="2702.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1153.6" y="2723.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1156.6" y="2734.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (9 samples, 0.42%)</title><rect x="1154.2" y="2803.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.2" y="2814.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (5 samples, 0.23%)</title><rect x="1154.2" y="2787.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1157.2" y="2798.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (4 samples, 0.19%)</title><rect x="1154.2" y="2771.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.2" y="2782.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (3 samples, 0.14%)</title><rect x="1154.2" y="2755.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1157.2" y="2766.0"></text>
</g>
<g>
<title>Method::jmethod_id() (1 samples, 0.05%)</title><rect x="1154.2" y="2739.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.2" y="2750.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(instanceKlassHandle, methodHandle) (1 samples, 0.05%)</title><rect x="1154.2" y="2723.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1157.2" y="2734.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (2 samples, 0.09%)</title><rect x="1154.7" y="2739.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.7" y="2750.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.05%)</title><rect x="1154.7" y="2723.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.7" y="2734.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1155.3" y="2723.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1158.3" y="2734.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1155.8" y="2755.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1158.8" y="2766.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_unload(_jmethodID*, void const*) (1 samples, 0.05%)</title><rect x="1156.4" y="2771.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1159.4" y="2782.0"></text>
</g>
<g>
<title>Profiler::removeJavaMethod(void const*, _jmethodID*) (1 samples, 0.05%)</title><rect x="1156.4" y="2755.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.4" y="2766.0"></text>
</g>
<g>
<title>CodeCache::remove(void const*, _jmethodID*) (1 samples, 0.05%)</title><rect x="1156.4" y="2739.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1159.4" y="2750.0"></text>
</g>
<g>
<title>JvmtiDeferredEventQueue::dequeue() (1 samples, 0.05%)</title><rect x="1156.9" y="2787.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.9" y="2798.0"></text>
</g>
<g>
<title>free_tiny (1 samples, 0.05%)</title><rect x="1156.9" y="2771.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1159.9" y="2782.0"></text>
</g>
<g>
<title>tiny_free_no_lock (1 samples, 0.05%)</title><rect x="1156.9" y="2755.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1159.9" y="2766.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 0.14%)</title><rect x="1157.5" y="2787.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1160.5" y="2798.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (3 samples, 0.14%)</title><rect x="1157.5" y="2771.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1160.5" y="2782.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (3 samples, 0.14%)</title><rect x="1157.5" y="2755.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1160.5" y="2766.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (3 samples, 0.14%)</title><rect x="1157.5" y="2739.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1160.5" y="2750.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.14%)</title><rect x="1157.5" y="2723.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1160.5" y="2734.0"></text>
</g>
<g>
<title>VMThread::run() (54 samples, 2.52%)</title><rect x="1159.1" y="2835.0" width="29.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.1" y="2846.0">VM..</text>
</g>
<g>
<title>VMThread::loop() (54 samples, 2.52%)</title><rect x="1159.1" y="2819.0" width="29.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1162.1" y="2830.0">VM..</text>
</g>
<g>
<title>SafepointSynchronize::begin() (3 samples, 0.14%)</title><rect x="1159.1" y="2803.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.1" y="2814.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (2 samples, 0.09%)</title><rect x="1159.1" y="2787.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1162.1" y="2798.0"></text>
</g>
<g>
<title>NMethodSweeper::mark_active_nmethods() (1 samples, 0.05%)</title><rect x="1159.1" y="2771.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.1" y="2782.0"></text>
</g>
<g>
<title>CodeCache::first_nmethod() (1 samples, 0.05%)</title><rect x="1159.1" y="2755.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.1" y="2766.0"></text>
</g>
<g>
<title>CodeHeap::next_free(HeapBlock*) const (1 samples, 0.05%)</title><rect x="1159.1" y="2739.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.1" y="2750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::deflate_idle_monitors() (1 samples, 0.05%)</title><rect x="1159.7" y="2771.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1162.7" y="2782.0"></text>
</g>
<g>
<title>TemplateInterpreter::notice_safepoints() (1 samples, 0.05%)</title><rect x="1160.2" y="2787.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1163.2" y="2798.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (51 samples, 2.38%)</title><rect x="1160.8" y="2803.0" width="28.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.8" y="2814.0">VM..</text>
</g>
<g>
<title>VM_Operation::evaluate() (51 samples, 2.38%)</title><rect x="1160.8" y="2787.0" width="28.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1163.8" y="2798.0">VM..</text>
</g>
<g>
<title>VM_ParallelGCFailedAllocation::doit() (51 samples, 2.38%)</title><rect x="1160.8" y="2771.0" width="28.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1163.8" y="2782.0">VM..</text>
</g>
<g>
<title>ParallelScavengeHeap::failed_mem_allocate(unsigned long) (51 samples, 2.38%)</title><rect x="1160.8" y="2755.0" width="28.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.8" y="2766.0">Pa..</text>
</g>
<g>
<title>PSScavenge::invoke() (51 samples, 2.38%)</title><rect x="1160.8" y="2739.0" width="28.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.8" y="2750.0">PS..</text>
</g>
<g>
<title>PSParallelCompact::invoke_no_policy(bool) (50 samples, 2.34%)</title><rect x="1160.8" y="2723.0" width="27.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.8" y="2734.0">P..</text>
</g>
<g>
<title>PSParallelCompact::adjust_roots() (21 samples, 0.98%)</title><rect x="1160.8" y="2707.0" width="11.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.8" y="2718.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::oops_do(OopClosure*, KlassClosure*, bool) (5 samples, 0.23%)</title><rect x="1160.8" y="2691.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.8" y="2702.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (2 samples, 0.09%)</title><rect x="1160.8" y="2675.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.8" y="2686.0"></text>
</g>
<g>
<title>PSParallelCompact::AdjustPointerClosure::do_oop(oopDesc**) (2 samples, 0.09%)</title><rect x="1160.8" y="2659.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.8" y="2670.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (2 samples, 0.09%)</title><rect x="1160.8" y="2643.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.8" y="2654.0"></text>
</g>
<g>
<title>PSParallelCompact::fill_blocks(unsigned long) (1 samples, 0.05%)</title><rect x="1161.3" y="2627.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1164.3" y="2638.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (3 samples, 0.14%)</title><rect x="1161.9" y="2675.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1164.9" y="2686.0"></text>
</g>
<g>
<title>ClassLoaderData::claim() (1 samples, 0.05%)</title><rect x="1161.9" y="2659.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.9" y="2670.0"></text>
</g>
<g>
<title>JNIHandleBlock::oops_do(OopClosure*) (1 samples, 0.05%)</title><rect x="1162.4" y="2659.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1165.4" y="2670.0"></text>
</g>
<g>
<title>PSParallelCompact::AdjustPointerClosure::do_oop(oopDesc**) (1 samples, 0.05%)</title><rect x="1163.0" y="2659.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1166.0" y="2670.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.05%)</title><rect x="1163.0" y="2643.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1166.0" y="2654.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.05%)</title><rect x="1163.0" y="2627.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.0" y="2638.0"></text>
</g>
<g>
<title>CodeCache::blobs_do(CodeBlobClosure*) (13 samples, 0.61%)</title><rect x="1163.5" y="2691.0" width="7.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1166.5" y="2702.0"></text>
</g>
<g>
<title>CodeBlobToOopClosure::do_nmethod(nmethod*) (5 samples, 0.23%)</title><rect x="1163.5" y="2675.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.5" y="2686.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (5 samples, 0.23%)</title><rect x="1163.5" y="2659.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.5" y="2670.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.05%)</title><rect x="1164.6" y="2643.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.6" y="2654.0"></text>
</g>
<g>
<title>RelocIterator::set_limits(unsigned char*, unsigned char*) (1 samples, 0.05%)</title><rect x="1165.2" y="2643.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.2" y="2654.0"></text>
</g>
<g>
<title>oop_Relocation::oop_value() (1 samples, 0.05%)</title><rect x="1165.7" y="2643.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.7" y="2654.0"></text>
</g>
<g>
<title>Assembler::locate_operand(unsigned char*, Assembler::WhichOperand) (1 samples, 0.05%)</title><rect x="1165.7" y="2627.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1168.7" y="2638.0"></text>
</g>
<g>
<title>CodeHeap::next_free(HeapBlock*) const (1 samples, 0.05%)</title><rect x="1166.3" y="2675.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.3" y="2686.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (7 samples, 0.33%)</title><rect x="1166.9" y="2675.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.9" y="2686.0"></text>
</g>
<g>
<title>RelocIterator::next() (3 samples, 0.14%)</title><rect x="1168.0" y="2659.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1171.0" y="2670.0"></text>
</g>
<g>
<title>Relocation::unpack_2_ints(int&amp;, int&amp;) (2 samples, 0.09%)</title><rect x="1169.6" y="2659.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.6" y="2670.0"></text>
</g>
<g>
<title>JNIHandleBlock::weak_oops_do(BoolObjectClosure*, OopClosure*) (1 samples, 0.05%)</title><rect x="1170.7" y="2691.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.7" y="2702.0"></text>
</g>
<g>
<title>PSParallelCompact::AdjustPointerClosure::do_oop(oopDesc**) (1 samples, 0.05%)</title><rect x="1170.7" y="2675.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.7" y="2686.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.05%)</title><rect x="1170.7" y="2659.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1173.7" y="2670.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.05%)</title><rect x="1170.7" y="2643.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.7" y="2654.0"></text>
</g>
<g>
<title>Threads::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (2 samples, 0.09%)</title><rect x="1171.3" y="2691.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.3" y="2702.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (2 samples, 0.09%)</title><rect x="1171.3" y="2675.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1174.3" y="2686.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, CLDClosure*, RegisterMap const*, bool) (2 samples, 0.09%)</title><rect x="1171.3" y="2659.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.3" y="2670.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (2 samples, 0.09%)</title><rect x="1171.3" y="2643.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.3" y="2654.0"></text>
</g>
<g>
<title>KlassToOopClosure::do_klass(Klass*) (1 samples, 0.05%)</title><rect x="1171.3" y="2627.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.3" y="2638.0"></text>
</g>
<g>
<title>PSParallelCompact::AdjustPointerClosure::do_oop(oopDesc**) (1 samples, 0.05%)</title><rect x="1171.8" y="2627.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.8" y="2638.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.05%)</title><rect x="1171.8" y="2611.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.8" y="2622.0"></text>
</g>
<g>
<title>PSParallelCompact::fill_blocks(unsigned long) (1 samples, 0.05%)</title><rect x="1171.8" y="2595.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.8" y="2606.0"></text>
</g>
<g>
<title>PSParallelCompact::compact() (2 samples, 0.09%)</title><rect x="1172.4" y="2707.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.4" y="2718.0"></text>
</g>
<g>
<title>PSParallelCompact::update_deferred_objects(ParCompactionManager*, PSParallelCompact::SpaceId) (2 samples, 0.09%)</title><rect x="1172.4" y="2691.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.4" y="2702.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (2 samples, 0.09%)</title><rect x="1172.4" y="2675.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.4" y="2686.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.05%)</title><rect x="1172.9" y="2659.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.9" y="2670.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.05%)</title><rect x="1172.9" y="2643.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.9" y="2654.0"></text>
</g>
<g>
<title>PSParallelCompact::marking_phase(ParCompactionManager*, bool, ParallelOldTracer*) (26 samples, 1.21%)</title><rect x="1173.5" y="2707.0" width="14.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.5" y="2718.0"></text>
</g>
<g>
<title>CodeCache::do_unloading(BoolObjectClosure*, bool) (5 samples, 0.23%)</title><rect x="1173.5" y="2691.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.5" y="2702.0"></text>
</g>
<g>
<title>nmethod::do_unloading(BoolObjectClosure*, bool) (5 samples, 0.23%)</title><rect x="1173.5" y="2675.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.5" y="2686.0"></text>
</g>
<g>
<title>RelocIterator::next() (2 samples, 0.09%)</title><rect x="1174.0" y="2659.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1177.0" y="2670.0"></text>
</g>
<g>
<title>oop_Relocation::oop_value() (2 samples, 0.09%)</title><rect x="1175.1" y="2659.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1178.1" y="2670.0"></text>
</g>
<g>
<title>Assembler::locate_operand(unsigned char*, Assembler::WhichOperand) (2 samples, 0.09%)</title><rect x="1175.1" y="2643.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.1" y="2654.0"></text>
</g>
<g>
<title>Klass::clean_weak_klass_links(BoolObjectClosure*, bool) (11 samples, 0.51%)</title><rect x="1176.2" y="2691.0" width="6.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.2" y="2702.0"></text>
</g>
<g>
<title>InstanceKlass::clean_weak_instanceklass_links(BoolObjectClosure*) (11 samples, 0.51%)</title><rect x="1176.2" y="2675.0" width="6.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1179.2" y="2686.0"></text>
</g>
<g>
<title>InstanceKlass::clean_method_data(BoolObjectClosure*) (11 samples, 0.51%)</title><rect x="1176.2" y="2659.0" width="6.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.2" y="2670.0"></text>
</g>
<g>
<title>MethodData::clean_method_data(BoolObjectClosure*) (5 samples, 0.23%)</title><rect x="1179.5" y="2643.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.5" y="2654.0"></text>
</g>
<g>
<title>ReceiverTypeData::clean_weak_klass_links(BoolObjectClosure*) (2 samples, 0.09%)</title><rect x="1180.1" y="2627.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.1" y="2638.0"></text>
</g>
<g>
<title>Klass::is_loader_alive(BoolObjectClosure*) (2 samples, 0.09%)</title><rect x="1180.1" y="2611.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.1" y="2622.0"></text>
</g>
<g>
<title>ReturnTypeEntry::clean_weak_klass_links(BoolObjectClosure*) (1 samples, 0.05%)</title><rect x="1181.2" y="2627.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.2" y="2638.0"></text>
</g>
<g>
<title>Klass::is_loader_alive(BoolObjectClosure*) (1 samples, 0.05%)</title><rect x="1181.2" y="2611.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.2" y="2622.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1181.7" y="2627.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.7" y="2638.0"></text>
</g>
<g>
<title>SymbolTable::unlink(int*, int*) (8 samples, 0.37%)</title><rect x="1182.3" y="2691.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.3" y="2702.0"></text>
</g>
<g>
<title>SymbolTable::buckets_unlink(int, int, int*, int*, unsigned long*) (8 samples, 0.37%)</title><rect x="1182.3" y="2675.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.3" y="2686.0"></text>
</g>
<g>
<title>SystemDictionary::do_unloading(BoolObjectClosure*, bool) (2 samples, 0.09%)</title><rect x="1186.7" y="2691.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.7" y="2702.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::do_unloading(BoolObjectClosure*, bool) (2 samples, 0.09%)</title><rect x="1186.7" y="2675.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.7" y="2686.0"></text>
</g>
<g>
<title>ClassLoaderData::is_alive(BoolObjectClosure*) const (1 samples, 0.05%)</title><rect x="1186.7" y="2659.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.7" y="2670.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::clean_metaspaces() (1 samples, 0.05%)</title><rect x="1187.2" y="2659.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.2" y="2670.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::free_deallocate_lists() (1 samples, 0.05%)</title><rect x="1187.2" y="2643.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.2" y="2654.0"></text>
</g>
<g>
<title>ClassLoaderData::free_deallocate_list() (1 samples, 0.05%)</title><rect x="1187.2" y="2627.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.2" y="2638.0"></text>
</g>
<g>
<title>PSParallelCompact::post_compact() (1 samples, 0.05%)</title><rect x="1187.8" y="2707.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.8" y="2718.0"></text>
</g>
<g>
<title>PSParallelCompact::clear_data_covering_space(PSParallelCompact::SpaceId) (1 samples, 0.05%)</title><rect x="1187.8" y="2691.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.8" y="2702.0"></text>
</g>
<g>
<title>BitMap::clear_range(unsigned long, unsigned long) (1 samples, 0.05%)</title><rect x="1187.8" y="2675.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.8" y="2686.0"></text>
</g>
<g>
<title>PSScavenge::invoke_no_policy() (1 samples, 0.05%)</title><rect x="1188.3" y="2723.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.3" y="2734.0"></text>
</g>
<g>
<title>GCTraceTime::~GCTraceTime() (1 samples, 0.05%)</title><rect x="1188.3" y="2707.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.3" y="2718.0"></text>
</g>
<g>
<title>os::elapsed_counter() (1 samples, 0.05%)</title><rect x="1188.3" y="2691.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.3" y="2702.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.09%)</title><rect x="1188.9" y="2835.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.9" y="2846.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.09%)</title><rect x="1188.9" y="2819.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.9" y="2830.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.09%)</title><rect x="1188.9" y="2803.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.9" y="2814.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.09%)</title><rect x="1188.9" y="2787.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.9" y="2798.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.09%)</title><rect x="1188.9" y="2771.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.9" y="2782.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.09%)</title><rect x="1188.9" y="2755.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1191.9" y="2766.0"></text>
</g>
</g>
</svg>
