<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1878" onload="init(evt)" viewBox="0 0 1200 1878" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1861"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1861"> </text>
<g id="frames">
<g>
<title>all (1,041 samples, 100.00%)</title><rect x="10.0" y="1827.0" width="1180.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="13.0" y="1838.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.19%)</title><rect x="10.0" y="1811.0" width="2.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="1822.0"></text>
</g>
<g>
<title>[unknown_Java] (75 samples, 7.20%)</title><rect x="12.3" y="1811.0" width="85.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="15.3" y="1822.0">[unknown_J..</text>
</g>
<g>
<title>java/lang/Thread.run (768 samples, 73.78%)</title><rect x="97.3" y="1811.0" width="870.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.3" y="1822.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (768 samples, 73.78%)</title><rect x="97.3" y="1795.0" width="870.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.3" y="1806.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (768 samples, 73.78%)</title><rect x="97.3" y="1779.0" width="870.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.3" y="1790.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (768 samples, 73.78%)</title><rect x="97.3" y="1763.0" width="870.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.3" y="1774.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (768 samples, 73.78%)</title><rect x="97.3" y="1747.0" width="870.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="100.3" y="1758.0">java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (768 samples, 73.78%)</title><rect x="97.3" y="1731.0" width="870.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="100.3" y="1742.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>sbt/CompletionService$$anon$2.call (768 samples, 73.78%)</title><rect x="97.3" y="1715.0" width="870.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="100.3" y="1726.0">sbt/CompletionService$$anon$2.call</text>
</g>
<g>
<title>sbt/ConcurrentRestrictions$$anon$4$$Lambda$2191/1300497562.apply (768 samples, 73.78%)</title><rect x="97.3" y="1699.0" width="870.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.3" y="1710.0">sbt/ConcurrentRestrictions$$anon$4$$Lambda$2191/1300497562.apply</text>
</g>
<g>
<title>sbt/ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1 (768 samples, 73.78%)</title><rect x="97.3" y="1683.0" width="870.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="100.3" y="1694.0">sbt/ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1</text>
</g>
<g>
<title>sbt/Execute$$Lambda$2184/984235065.apply (768 samples, 73.78%)</title><rect x="97.3" y="1667.0" width="870.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.3" y="1678.0">sbt/Execute$$Lambda$2184/984235065.apply</text>
</g>
<g>
<title>sbt/Execute.$anonfun$submit$1 (768 samples, 73.78%)</title><rect x="97.3" y="1651.0" width="870.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="100.3" y="1662.0">sbt/Execute.$anonfun$submit$1</text>
</g>
<g>
<title>sbt/Execute.work (768 samples, 73.78%)</title><rect x="97.3" y="1635.0" width="870.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.3" y="1646.0">sbt/Execute.work</text>
</g>
<g>
<title>sbt/internal/util/ErrorHandling$.wideConvert (768 samples, 73.78%)</title><rect x="97.3" y="1619.0" width="870.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.3" y="1630.0">sbt/internal/util/ErrorHandling$.wideConvert</text>
</g>
<g>
<title>sbt/Execute$$Lambda$2193/61875392.apply (768 samples, 73.78%)</title><rect x="97.3" y="1603.0" width="870.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.3" y="1614.0">sbt/Execute$$Lambda$2193/61875392.apply</text>
</g>
<g>
<title>sbt/Execute.$anonfun$submit$2 (768 samples, 73.78%)</title><rect x="97.3" y="1587.0" width="870.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.3" y="1598.0">sbt/Execute.$anonfun$submit$2</text>
</g>
<g>
<title>sbt/std/Transform$$anon$4.work (768 samples, 73.78%)</title><rect x="97.3" y="1571.0" width="870.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="100.3" y="1582.0">sbt/std/Transform$$anon$4.work</text>
</g>
<g>
<title>sbt/std/Transform$$anon$3$$Lambda$2182/1761011037.apply (768 samples, 73.78%)</title><rect x="97.3" y="1555.0" width="870.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.3" y="1566.0">sbt/std/Transform$$anon$3$$Lambda$2182/1761011037.apply</text>
</g>
<g>
<title>sbt/std/Transform$$anon$3.$anonfun$apply$2 (768 samples, 73.78%)</title><rect x="97.3" y="1539.0" width="870.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.3" y="1550.0">sbt/std/Transform$$anon$3.$anonfun$apply$2</text>
</g>
<g>
<title>sbt/Tests$$$Lambda$7646/140452379.apply (768 samples, 73.78%)</title><rect x="97.3" y="1523.0" width="870.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.3" y="1534.0">sbt/Tests$$$Lambda$7646/140452379.apply</text>
</g>
<g>
<title>sbt/Tests$.$anonfun$toTask$1 (768 samples, 73.78%)</title><rect x="97.3" y="1507.0" width="870.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.3" y="1518.0">sbt/Tests$.$anonfun$toTask$1</text>
</g>
<g>
<title>sbt/TestFunction.apply (768 samples, 73.78%)</title><rect x="97.3" y="1491.0" width="870.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.3" y="1502.0">sbt/TestFunction.apply</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply (768 samples, 73.78%)</title><rect x="97.3" y="1475.0" width="870.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.3" y="1486.0">sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply (768 samples, 73.78%)</title><rect x="97.3" y="1459.0" width="870.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.3" y="1470.0">sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply</text>
</g>
<g>
<title>sbt/TestFramework$.sbt$TestFramework$$withContextLoader (768 samples, 73.78%)</title><rect x="97.3" y="1443.0" width="870.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.3" y="1454.0">sbt/TestFramework$.sbt$TestFramework$$withContextLoader</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1$$Lambda$7667/1404171443.apply (768 samples, 73.78%)</title><rect x="97.3" y="1427.0" width="870.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.3" y="1438.0">sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1$$Lambda$7667/1404171443.apply</text>
</g>
<g>
<title>sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1 (768 samples, 73.78%)</title><rect x="97.3" y="1411.0" width="870.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.3" y="1422.0">sbt/TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1</text>
</g>
<g>
<title>sbt/TestRunner.run (768 samples, 73.78%)</title><rect x="97.3" y="1395.0" width="870.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.3" y="1406.0">sbt/TestRunner.run</text>
</g>
<g>
<title>sbt/TestRunner.runTest$1 (768 samples, 73.78%)</title><rect x="97.3" y="1379.0" width="870.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="100.3" y="1390.0">sbt/TestRunner.runTest$1</text>
</g>
<g>
<title>org/scalatest/tools/Framework$ScalaTestTask.execute (768 samples, 73.78%)</title><rect x="97.3" y="1363.0" width="870.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.3" y="1374.0">org/scalatest/tools/Framework$ScalaTestTask.execute</text>
</g>
<g>
<title>org/scalatest/tools/Framework.org$scalatest$tools$Framework$$runSuite (768 samples, 73.78%)</title><rect x="97.3" y="1347.0" width="870.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.3" y="1358.0">org/scalatest/tools/Framework.org$scalatest$tools$Framework$$runSuite</text>
</g>
<g>
<title>org/scalatest/FreeSpec.run (768 samples, 73.78%)</title><rect x="97.3" y="1331.0" width="870.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.3" y="1342.0">org/scalatest/FreeSpec.run</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.run$ (768 samples, 73.78%)</title><rect x="97.3" y="1315.0" width="870.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.3" y="1326.0">org/scalatest/FreeSpecLike.run$</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.run (768 samples, 73.78%)</title><rect x="97.3" y="1299.0" width="870.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="100.3" y="1310.0">org/scalatest/FreeSpecLike.run</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runImpl (768 samples, 73.78%)</title><rect x="97.3" y="1283.0" width="870.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.3" y="1294.0">org/scalatest/SuperEngine.runImpl</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike$$Lambda$21218/1400540066.apply (768 samples, 73.78%)</title><rect x="97.3" y="1267.0" width="870.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.3" y="1278.0">org/scalatest/FreeSpecLike$$Lambda$21218/1400540066.apply</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.$anonfun$run$1 (768 samples, 73.78%)</title><rect x="97.3" y="1251.0" width="870.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.3" y="1262.0">org/scalatest/FreeSpecLike.$anonfun$run$1</text>
</g>
<g>
<title>org/scalatest/FreeSpec.org$scalatest$FreeSpecLike$$super$run (768 samples, 73.78%)</title><rect x="97.3" y="1235.0" width="870.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.3" y="1246.0">org/scalatest/FreeSpec.org$scalatest$FreeSpecLike$$super$run</text>
</g>
<g>
<title>org/scalatest/Suite.run$ (768 samples, 73.78%)</title><rect x="97.3" y="1219.0" width="870.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.3" y="1230.0">org/scalatest/Suite.run$</text>
</g>
<g>
<title>org/scalatest/Suite.run (768 samples, 73.78%)</title><rect x="97.3" y="1203.0" width="870.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.3" y="1214.0">org/scalatest/Suite.run</text>
</g>
<g>
<title>org/scalatest/FreeSpec.runTests (768 samples, 73.78%)</title><rect x="97.3" y="1187.0" width="870.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.3" y="1198.0">org/scalatest/FreeSpec.runTests</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.runTests$ (768 samples, 73.78%)</title><rect x="97.3" y="1171.0" width="870.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="100.3" y="1182.0">org/scalatest/FreeSpecLike.runTests$</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.runTests (768 samples, 73.78%)</title><rect x="97.3" y="1155.0" width="870.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.3" y="1166.0">org/scalatest/FreeSpecLike.runTests</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestsImpl (768 samples, 73.78%)</title><rect x="97.3" y="1139.0" width="870.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.3" y="1150.0">org/scalatest/SuperEngine.runTestsImpl</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestsInBranch (768 samples, 73.78%)</title><rect x="97.3" y="1123.0" width="870.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.3" y="1134.0">org/scalatest/SuperEngine.runTestsInBranch</text>
</g>
<g>
<title>org/scalatest/SuperEngine.traverseSubNodes$1 (768 samples, 73.78%)</title><rect x="97.3" y="1107.0" width="870.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.3" y="1118.0">org/scalatest/SuperEngine.traverseSubNodes$1</text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (768 samples, 73.78%)</title><rect x="97.3" y="1091.0" width="870.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.3" y="1102.0">scala/collection/immutable/List.foreach</text>
</g>
<g>
<title>org/scalatest/SuperEngine$$Lambda$21226/1104108406.apply (768 samples, 73.78%)</title><rect x="97.3" y="1075.0" width="870.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="100.3" y="1086.0">org/scalatest/SuperEngine$$Lambda$21226/1104108406.apply</text>
</g>
<g>
<title>org/scalatest/SuperEngine.$anonfun$runTestsInBranch$1 (768 samples, 73.78%)</title><rect x="97.3" y="1059.0" width="870.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="100.3" y="1070.0">org/scalatest/SuperEngine.$anonfun$runTestsInBranch$1</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike$$Lambda$21225/1290553845.apply (768 samples, 73.78%)</title><rect x="97.3" y="1043.0" width="870.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.3" y="1054.0">org/scalatest/FreeSpecLike$$Lambda$21225/1290553845.apply</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.$anonfun$runTests$1 (768 samples, 73.78%)</title><rect x="97.3" y="1027.0" width="870.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="100.3" y="1038.0">org/scalatest/FreeSpecLike.$anonfun$runTests$1</text>
</g>
<g>
<title>org/scalatest/FreeSpec.runTest (768 samples, 73.78%)</title><rect x="97.3" y="1011.0" width="870.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.3" y="1022.0">org/scalatest/FreeSpec.runTest</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.runTest$ (768 samples, 73.78%)</title><rect x="97.3" y="995.0" width="870.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.3" y="1006.0">org/scalatest/FreeSpecLike.runTest$</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.runTest (768 samples, 73.78%)</title><rect x="97.3" y="979.0" width="870.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.3" y="990.0">org/scalatest/FreeSpecLike.runTest</text>
</g>
<g>
<title>org/scalatest/SuperEngine.runTestImpl (768 samples, 73.78%)</title><rect x="97.3" y="963.0" width="870.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.3" y="974.0">org/scalatest/SuperEngine.runTestImpl</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike$$Lambda$21240/2051794472.apply (768 samples, 73.78%)</title><rect x="97.3" y="947.0" width="870.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.3" y="958.0">org/scalatest/FreeSpecLike$$Lambda$21240/2051794472.apply</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.$anonfun$runTest$1 (768 samples, 73.78%)</title><rect x="97.3" y="931.0" width="870.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.3" y="942.0">org/scalatest/FreeSpecLike.$anonfun$runTest$1</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike.invokeWithFixture$1 (768 samples, 73.78%)</title><rect x="97.3" y="915.0" width="870.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.3" y="926.0">org/scalatest/FreeSpecLike.invokeWithFixture$1</text>
</g>
<g>
<title>org/scalatest/FreeSpec.withFixture (768 samples, 73.78%)</title><rect x="97.3" y="899.0" width="870.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.3" y="910.0">org/scalatest/FreeSpec.withFixture</text>
</g>
<g>
<title>org/scalatest/TestSuite.withFixture$ (768 samples, 73.78%)</title><rect x="97.3" y="883.0" width="870.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="100.3" y="894.0">org/scalatest/TestSuite.withFixture$</text>
</g>
<g>
<title>org/scalatest/TestSuite.withFixture (768 samples, 73.78%)</title><rect x="97.3" y="867.0" width="870.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.3" y="878.0">org/scalatest/TestSuite.withFixture</text>
</g>
<g>
<title>org/scalatest/FreeSpecLike$$anon$1.apply (768 samples, 73.78%)</title><rect x="97.3" y="851.0" width="870.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.3" y="862.0">org/scalatest/FreeSpecLike$$anon$1.apply</text>
</g>
<g>
<title>org/scalatest/Transformer.apply (768 samples, 73.78%)</title><rect x="97.3" y="835.0" width="870.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.3" y="846.0">org/scalatest/Transformer.apply</text>
</g>
<g>
<title>org/scalatest/Transformer.apply (768 samples, 73.78%)</title><rect x="97.3" y="819.0" width="870.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.3" y="830.0">org/scalatest/Transformer.apply</text>
</g>
<g>
<title>org/scalatest/OutcomeOf$.outcomeOf (768 samples, 73.78%)</title><rect x="97.3" y="803.0" width="870.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="100.3" y="814.0">org/scalatest/OutcomeOf$.outcomeOf</text>
</g>
<g>
<title>org/scalatest/OutcomeOf.outcomeOf$ (768 samples, 73.78%)</title><rect x="97.3" y="787.0" width="870.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.3" y="798.0">org/scalatest/OutcomeOf.outcomeOf$</text>
</g>
<g>
<title>org/scalatest/OutcomeOf.outcomeOf (768 samples, 73.78%)</title><rect x="97.3" y="771.0" width="870.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.3" y="782.0">org/scalatest/OutcomeOf.outcomeOf</text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (768 samples, 73.78%)</title><rect x="97.3" y="755.0" width="870.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="100.3" y="766.0">scala/runtime/java8/JFunction0$mcV$sp.apply</text>
</g>
<g>
<title>treadle/wireusage/RVMiniDatapath$$Lambda$21204/2033418096.apply$mcV$sp (768 samples, 73.78%)</title><rect x="97.3" y="739.0" width="870.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.3" y="750.0">treadle/wireusage/RVMiniDatapath$$Lambda$21204/2033418096.apply$mcV$sp</text>
</g>
<g>
<title>treadle/wireusage/RVMiniDatapath.$anonfun$new$1 (768 samples, 73.78%)</title><rect x="97.3" y="723.0" width="870.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="100.3" y="734.0">treadle/wireusage/RVMiniDatapath.$anonfun$new$1</text>
</g>
<g>
<title>treadle/TreadleTester.step (768 samples, 73.78%)</title><rect x="97.3" y="707.0" width="870.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="100.3" y="718.0">treadle/TreadleTester.step</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.run (768 samples, 73.78%)</title><rect x="97.3" y="691.0" width="870.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="100.3" y="702.0">treadle/executable/SimpleSingleClockStepper.run</text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach$mVc$sp (768 samples, 73.78%)</title><rect x="97.3" y="675.0" width="870.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.3" y="686.0">scala/collection/immutable/Range.foreach$mVc$sp</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper$$Lambda$22405/774932752.apply$mcVI$sp (768 samples, 73.78%)</title><rect x="97.3" y="659.0" width="870.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.3" y="670.0">treadle/executable/SimpleSingleClockStepper$$Lambda$22405/774932752.apply$mcVI$sp</text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.$anonfun$run$2 (768 samples, 73.78%)</title><rect x="97.3" y="643.0" width="870.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.3" y="654.0">treadle/executable/SimpleSingleClockStepper.$anonfun$run$2</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (344 samples, 33.05%)</title><rect x="98.4" y="627.0" width="389.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.4" y="638.0">treadle/executable/ExecutionEngine.evaluateCircuit</text>
</g>
<g>
<title>scala/collection/mutable/HashSet.clear (1 samples, 0.10%)</title><rect x="98.4" y="611.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.4" y="622.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.clearTable (1 samples, 0.10%)</title><rect x="98.4" y="595.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.4" y="606.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.clearTable$ (1 samples, 0.10%)</title><rect x="98.4" y="579.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.4" y="590.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.clearTable (1 samples, 0.10%)</title><rect x="98.4" y="563.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.4" y="574.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (343 samples, 32.95%)</title><rect x="99.5" y="611.0" width="388.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.5" y="622.0">treadle/executable/ExecutionEngine.runAssigns</text>
</g>
<g>
<title>treadle/executable/DataStore.saveData (1 samples, 0.10%)</title><rect x="108.6" y="595.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="111.6" y="606.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.lastStopResult (8 samples, 0.77%)</title><rect x="109.8" y="595.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.8" y="606.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (326 samples, 31.32%)</title><rect x="118.8" y="595.0" width="369.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.8" y="606.0">treadle/executable/Scheduler.executeCombinationalA..</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (326 samples, 31.32%)</title><rect x="118.8" y="579.0" width="369.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.8" y="590.0">treadle/executable/Scheduler.executeAssigners</text>
</g>
<g>
<title>itable stub (6 samples, 0.58%)</title><rect x="123.4" y="563.0" width="6.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="126.4" y="574.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.apply (1 samples, 0.10%)</title><rect x="130.2" y="563.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.2" y="574.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply$ (1 samples, 0.10%)</title><rect x="130.2" y="547.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.2" y="558.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.apply (1 samples, 0.10%)</title><rect x="130.2" y="531.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.2" y="542.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$22399/1154248524.apply$mcV$sp (121 samples, 11.62%)</title><rect x="131.3" y="563.0" width="137.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.3" y="574.0">treadle/executabl..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (121 samples, 11.62%)</title><rect x="131.3" y="547.0" width="137.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.3" y="558.0">treadle/executabl..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (121 samples, 11.62%)</title><rect x="131.3" y="531.0" width="137.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.3" y="542.0">treadle/executabl..</text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="131.3" y="515.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="134.3" y="526.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.symbol (2 samples, 0.19%)</title><rect x="132.4" y="515.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="135.4" y="526.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.10%)</title><rect x="133.6" y="499.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.6" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (4 samples, 0.38%)</title><rect x="134.7" y="515.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.7" y="526.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (2 samples, 0.19%)</title><rect x="137.0" y="499.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.0" y="510.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (2 samples, 0.19%)</title><rect x="137.0" y="483.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.0" y="494.0"></text>
</g>
<g>
<title>scala/math/BigInt$.minCached (2 samples, 0.19%)</title><rect x="137.0" y="467.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="140.0" y="478.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (107 samples, 10.28%)</title><rect x="139.2" y="515.0" width="121.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.2" y="526.0">treadle/executa..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (107 samples, 10.28%)</title><rect x="139.2" y="499.0" width="121.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.2" y="510.0">scala/collectio..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (107 samples, 10.28%)</title><rect x="139.2" y="483.0" width="121.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.2" y="494.0">scala/collectio..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (107 samples, 10.28%)</title><rect x="139.2" y="467.0" width="121.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="142.2" y="478.0">scala/collectio..</text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$22406/745475904.apply (107 samples, 10.28%)</title><rect x="139.2" y="451.0" width="121.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="142.2" y="462.0">treadle/executa..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (106 samples, 10.18%)</title><rect x="140.4" y="435.0" width="120.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.4" y="446.0">treadle/executa..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (106 samples, 10.18%)</title><rect x="140.4" y="419.0" width="120.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.4" y="430.0">treadle/executa..</text>
</g>
<g>
<title>SharedRuntime::raw_exception_handler_for_return_address(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="141.5" y="403.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="144.5" y="414.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.10%)</title><rect x="141.5" y="387.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="144.5" y="398.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.10%)</title><rect x="141.5" y="371.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="144.5" y="382.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.10%)</title><rect x="141.5" y="355.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="144.5" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$22408/370601809.apply (3 samples, 0.29%)</title><rect x="142.6" y="403.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.6" y="414.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (47 samples, 4.51%)</title><rect x="146.0" y="403.0" width="53.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.0" y="414.0">tread..</text>
</g>
<g>
<title>scala/Option.foreach (25 samples, 2.40%)</title><rect x="146.0" y="387.0" width="28.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.0" y="398.0">sc..</text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$22408/370601809.apply (25 samples, 2.40%)</title><rect x="146.0" y="371.0" width="28.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.0" y="382.0">tr..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (24 samples, 2.31%)</title><rect x="147.2" y="355.0" width="27.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.2" y="366.0">t..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (24 samples, 2.31%)</title><rect x="147.2" y="339.0" width="27.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.2" y="350.0">t..</text>
</g>
<g>
<title>scala/collection/immutable/List.apply (4 samples, 0.38%)</title><rect x="149.4" y="323.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.4" y="334.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.apply$ (4 samples, 0.38%)</title><rect x="149.4" y="307.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="152.4" y="318.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.apply (4 samples, 0.38%)</title><rect x="149.4" y="291.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="152.4" y="302.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (4 samples, 0.38%)</title><rect x="149.4" y="275.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.4" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (4 samples, 0.38%)</title><rect x="149.4" y="259.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.4" y="270.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.19%)</title><rect x="149.4" y="243.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="152.4" y="254.0"></text>
</g>
<g>
<title>treadle/executable/StaticDependencyBundle.totalSources (2 samples, 0.19%)</title><rect x="151.7" y="243.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.7" y="254.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.addAntiDependency (18 samples, 1.73%)</title><rect x="154.0" y="323.0" width="20.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.0" y="334.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.apply (15 samples, 1.44%)</title><rect x="154.0" y="307.0" width="17.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="157.0" y="318.0"></text>
</g>
<g>
<title>scala/collection/MapLike.apply$ (15 samples, 1.44%)</title><rect x="154.0" y="291.0" width="17.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="157.0" y="302.0"></text>
</g>
<g>
<title>scala/collection/MapLike.apply (15 samples, 1.44%)</title><rect x="154.0" y="275.0" width="17.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.0" y="286.0"></text>
</g>
<g>
<title>scala/collection/Map$WithDefault.default (3 samples, 0.29%)</title><rect x="154.0" y="259.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.0" y="270.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$22403/1395992911.apply (3 samples, 0.29%)</title><rect x="154.0" y="243.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.0" y="254.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$newCycleMap$1$adapted (3 samples, 0.29%)</title><rect x="154.0" y="227.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.0" y="238.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$newCycleMap$1 (3 samples, 0.29%)</title><rect x="154.0" y="211.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.0" y="222.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.newBitSet (3 samples, 0.29%)</title><rect x="154.0" y="195.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.0" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet$.apply (3 samples, 0.29%)</title><rect x="154.0" y="179.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="157.0" y="190.0"></text>
</g>
<g>
<title>scala/collection/generic/BitSetFactory.apply$ (3 samples, 0.29%)</title><rect x="154.0" y="163.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.0" y="174.0"></text>
</g>
<g>
<title>scala/collection/generic/BitSetFactory.apply (3 samples, 0.29%)</title><rect x="154.0" y="147.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.0" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet$.empty (3 samples, 0.29%)</title><rect x="154.0" y="131.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.0" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet$.empty (3 samples, 0.29%)</title><rect x="154.0" y="115.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.0" y="126.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.&lt;init&gt; (1 samples, 0.10%)</title><rect x="156.2" y="99.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="159.2" y="110.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.&lt;init&gt; (1 samples, 0.10%)</title><rect x="156.2" y="83.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.2" y="94.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.&lt;init&gt; (1 samples, 0.10%)</title><rect x="156.2" y="67.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.2" y="78.0"></text>
</g>
<g>
<title>scala/collection/Map$WithDefault.get (12 samples, 1.15%)</title><rect x="157.4" y="259.0" width="13.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.4" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (12 samples, 1.15%)</title><rect x="157.4" y="243.0" width="13.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="160.4" y="254.0"></text>
</g>
<g>
<title>scala/Some.&lt;init&gt; (2 samples, 0.19%)</title><rect x="157.4" y="227.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.4" y="238.0"></text>
</g>
<g>
<title>scala/Option.&lt;init&gt; (1 samples, 0.10%)</title><rect x="158.5" y="211.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.5" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (10 samples, 0.96%)</title><rect x="159.6" y="227.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.6" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (10 samples, 0.96%)</title><rect x="159.6" y="211.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.6" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (10 samples, 0.96%)</title><rect x="159.6" y="195.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="162.6" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (3 samples, 0.29%)</title><rect x="159.6" y="179.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.6" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (3 samples, 0.29%)</title><rect x="159.6" y="163.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.6" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.10%)</title><rect x="161.9" y="147.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="164.9" y="158.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.10%)</title><rect x="161.9" y="131.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="164.9" y="142.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.10%)</title><rect x="161.9" y="115.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="164.9" y="126.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (6 samples, 0.58%)</title><rect x="163.0" y="179.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="166.0" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (6 samples, 0.58%)</title><rect x="163.0" y="163.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.0" y="174.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="165.3" y="147.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="168.3" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (3 samples, 0.29%)</title><rect x="166.4" y="147.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="169.4" y="158.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.19%)</title><rect x="166.4" y="131.0" width="2.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="169.4" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.seedvalue (1 samples, 0.10%)</title><rect x="168.7" y="131.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.7" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.10%)</title><rect x="169.8" y="179.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.8" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.add (3 samples, 0.29%)</title><rect x="171.0" y="307.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.0" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.updateWord (2 samples, 0.19%)</title><rect x="171.0" y="291.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.0" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.ensureCapacity (2 samples, 0.19%)</title><rect x="171.0" y="275.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.0" y="286.0"></text>
</g>
<g>
<title>scala/Array$.copy (2 samples, 0.19%)</title><rect x="171.0" y="259.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.0" y="270.0"></text>
</g>
<g>
<title>scala/Array$.slowcopy (2 samples, 0.19%)</title><rect x="171.0" y="243.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.0" y="254.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$.array_update (2 samples, 0.19%)</title><rect x="171.0" y="227.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.0" y="238.0"></text>
</g>
<g>
<title>generic_arraycopy (1 samples, 0.10%)</title><rect x="172.1" y="211.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="175.1" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.word (1 samples, 0.10%)</title><rect x="173.2" y="291.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="176.2" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.nwords (1 samples, 0.10%)</title><rect x="173.2" y="275.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="176.2" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.10%)</title><rect x="173.2" y="259.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.2" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (21 samples, 2.02%)</title><rect x="174.4" y="387.0" width="23.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="177.4" y="398.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (20 samples, 1.92%)</title><rect x="175.5" y="371.0" width="22.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.5" y="382.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (20 samples, 1.92%)</title><rect x="175.5" y="355.0" width="22.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="178.5" y="366.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (20 samples, 1.92%)</title><rect x="175.5" y="339.0" width="22.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.5" y="350.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.10%)</title><rect x="175.5" y="323.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="178.5" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.10%)</title><rect x="175.5" y="307.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.5" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.10%)</title><rect x="175.5" y="291.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.5" y="302.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.10%)</title><rect x="175.5" y="275.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.5" y="286.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.10%)</title><rect x="175.5" y="259.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="178.5" y="270.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="175.5" y="243.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="178.5" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.10%)</title><rect x="176.6" y="323.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="179.6" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.10%)</title><rect x="176.6" y="307.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.6" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.10%)</title><rect x="176.6" y="291.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.6" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.table (1 samples, 0.10%)</title><rect x="176.6" y="275.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="179.6" y="286.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.10%)</title><rect x="176.6" y="259.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="179.6" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (18 samples, 1.73%)</title><rect x="177.8" y="323.0" width="20.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="180.8" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (12 samples, 1.15%)</title><rect x="184.6" y="307.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.6" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (12 samples, 1.15%)</title><rect x="184.6" y="291.0" width="13.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="187.6" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (6 samples, 0.58%)</title><rect x="184.6" y="275.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.6" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (6 samples, 0.58%)</title><rect x="191.4" y="275.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="194.4" y="286.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (6 samples, 0.58%)</title><rect x="191.4" y="259.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.4" y="270.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (5 samples, 0.48%)</title><rect x="192.5" y="243.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="195.5" y="254.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (5 samples, 0.48%)</title><rect x="192.5" y="227.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="195.5" y="238.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (5 samples, 0.48%)</title><rect x="192.5" y="211.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.5" y="222.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (5 samples, 0.48%)</title><rect x="192.5" y="195.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="195.5" y="206.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (5 samples, 0.48%)</title><rect x="192.5" y="179.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.5" y="190.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (5 samples, 0.48%)</title><rect x="192.5" y="163.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.5" y="174.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (5 samples, 0.48%)</title><rect x="192.5" y="147.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.5" y="158.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (1 samples, 0.10%)</title><rect x="198.2" y="387.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.2" y="398.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.10%)</title><rect x="198.2" y="371.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="201.2" y="382.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.10%)</title><rect x="198.2" y="355.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.2" y="366.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.10%)</title><rect x="198.2" y="339.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.2" y="350.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.run (54 samples, 5.19%)</title><rect x="199.3" y="403.0" width="61.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="202.3" y="414.0">treadl..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/288442918.linkToTargetMethod (3 samples, 0.29%)</title><rect x="199.3" y="387.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/789219251.invokeStatic_LL_L (3 samples, 0.29%)</title><rect x="199.3" y="371.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.3" y="382.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$22407/1753583965.get$Lambda (3 samples, 0.29%)</title><rect x="199.3" y="355.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.3" y="366.0"></text>
</g>
<g>
<title>scala/Option.foreach (49 samples, 4.71%)</title><rect x="202.7" y="387.0" width="55.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.7" y="398.0">scala..</text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$22407/1753583965.apply (49 samples, 4.71%)</title><rect x="202.7" y="371.0" width="55.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.7" y="382.0">tread..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5$adapted (49 samples, 4.71%)</title><rect x="202.7" y="355.0" width="55.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="205.7" y="366.0">tread..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5 (49 samples, 4.71%)</title><rect x="202.7" y="339.0" width="55.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="205.7" y="350.0">tread..</text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (48 samples, 4.61%)</title><rect x="203.8" y="323.0" width="54.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.8" y="334.0">tread..</text>
</g>
<g>
<title>logger/Logger.info (3 samples, 0.29%)</title><rect x="205.0" y="307.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.0" y="318.0"></text>
</g>
<g>
<title>logger/Logger$.logger$Logger$$showMessage (3 samples, 0.29%)</title><rect x="205.0" y="291.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.0" y="302.0"></text>
</g>
<g>
<title>logger/Logger$.state (1 samples, 0.10%)</title><rect x="206.1" y="275.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.1" y="286.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (1 samples, 0.10%)</title><rect x="206.1" y="259.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="209.1" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.10%)</title><rect x="206.1" y="243.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.1" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.10%)</title><rect x="206.1" y="227.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.1" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.10%)</title><rect x="206.1" y="211.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="209.1" y="222.0"></text>
</g>
<g>
<title>logger/Logger$.testPackageNameMatch (1 samples, 0.10%)</title><rect x="207.2" y="275.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.2" y="286.0"></text>
</g>
<g>
<title>logger/Logger$.state (1 samples, 0.10%)</title><rect x="207.2" y="259.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="210.2" y="270.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (1 samples, 0.10%)</title><rect x="207.2" y="243.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.2" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.10%)</title><rect x="207.2" y="227.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.2" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.10%)</title><rect x="207.2" y="211.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.2" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.10%)</title><rect x="207.2" y="195.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.2" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (1 samples, 0.10%)</title><rect x="208.4" y="307.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.4" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.10%)</title><rect x="208.4" y="291.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.4" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.10%)</title><rect x="208.4" y="275.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="211.4" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.10%)</title><rect x="208.4" y="259.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.4" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.10%)</title><rect x="208.4" y="243.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="211.4" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.10%)</title><rect x="208.4" y="227.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="211.4" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.10%)</title><rect x="208.4" y="211.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.4" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (1 samples, 0.10%)</title><rect x="208.4" y="195.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="211.4" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$plus$eq (3 samples, 0.29%)</title><rect x="209.5" y="307.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="212.5" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (3 samples, 0.29%)</title><rect x="209.5" y="291.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.5" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (3 samples, 0.29%)</title><rect x="209.5" y="275.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.5" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (3 samples, 0.29%)</title><rect x="209.5" y="259.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="212.5" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (3 samples, 0.29%)</title><rect x="209.5" y="243.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.5" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (3 samples, 0.29%)</title><rect x="209.5" y="227.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.5" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (2 samples, 0.19%)</title><rect x="210.6" y="211.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="213.6" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.table (2 samples, 0.19%)</title><rect x="210.6" y="195.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="213.6" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (17 samples, 1.63%)</title><rect x="212.9" y="307.0" width="19.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="215.9" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (17 samples, 1.63%)</title><rect x="212.9" y="291.0" width="19.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="215.9" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (17 samples, 1.63%)</title><rect x="212.9" y="275.0" width="19.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="215.9" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (17 samples, 1.63%)</title><rect x="212.9" y="259.0" width="19.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="215.9" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (17 samples, 1.63%)</title><rect x="212.9" y="243.0" width="19.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="215.9" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.index (10 samples, 0.96%)</title><rect x="215.2" y="227.0" width="11.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.2" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index$ (10 samples, 0.96%)</title><rect x="215.2" y="211.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="218.2" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index (10 samples, 0.96%)</title><rect x="215.2" y="195.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="218.2" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.improve (10 samples, 0.96%)</title><rect x="215.2" y="179.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.2" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve$ (10 samples, 0.96%)</title><rect x="215.2" y="163.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="218.2" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve (10 samples, 0.96%)</title><rect x="215.2" y="147.0" width="11.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.29%)</title><rect x="222.0" y="131.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="225.0" y="142.0"></text>
</g>
<g>
<title>scala/util/hashing/package$.byteswap32 (1 samples, 0.10%)</title><rect x="225.4" y="131.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="228.4" y="142.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (5 samples, 0.48%)</title><rect x="226.5" y="227.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="229.5" y="238.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (5 samples, 0.48%)</title><rect x="226.5" y="211.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.5" y="222.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.10%)</title><rect x="227.6" y="195.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.6" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (3 samples, 0.29%)</title><rect x="228.8" y="195.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.8" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (3 samples, 0.29%)</title><rect x="228.8" y="179.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.8" y="190.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isNewValue (2 samples, 0.19%)</title><rect x="232.2" y="307.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="235.2" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (2 samples, 0.19%)</title><rect x="232.2" y="291.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.2" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.19%)</title><rect x="232.2" y="275.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="235.2" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.19%)</title><rect x="232.2" y="259.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="235.2" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.19%)</title><rect x="232.2" y="243.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.2" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.19%)</title><rect x="232.2" y="227.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.2" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.10%)</title><rect x="233.3" y="211.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.3" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (1 samples, 0.10%)</title><rect x="233.3" y="195.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="236.3" y="206.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isTempWire (18 samples, 1.73%)</title><rect x="234.4" y="307.0" width="20.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.split (17 samples, 1.63%)</title><rect x="234.4" y="291.0" width="19.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.4" y="302.0"></text>
</g>
<g>
<title>java/lang/String.split (17 samples, 1.63%)</title><rect x="234.4" y="275.0" width="19.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.4" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (9 samples, 0.86%)</title><rect x="240.1" y="259.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.1" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList$1.next (3 samples, 0.29%)</title><rect x="246.9" y="243.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.9" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.19%)</title><rect x="250.3" y="259.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="253.3" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (2 samples, 0.19%)</title><rect x="250.3" y="243.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.3" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (2 samples, 0.19%)</title><rect x="250.3" y="227.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="253.3" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.19%)</title><rect x="250.3" y="211.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.3" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.19%)</title><rect x="250.3" y="195.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="253.3" y="206.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.10%)</title><rect x="252.6" y="259.0" width="1.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="255.6" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.&lt;init&gt; (1 samples, 0.10%)</title><rect x="253.7" y="291.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.7" y="302.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.updateInfo$1 (3 samples, 0.29%)</title><rect x="254.8" y="307.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.8" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (1 samples, 0.10%)</title><rect x="254.8" y="291.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="257.8" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.10%)</title><rect x="254.8" y="275.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="257.8" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.10%)</title><rect x="254.8" y="259.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="257.8" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.10%)</title><rect x="254.8" y="243.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="257.8" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.10%)</title><rect x="254.8" y="227.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="257.8" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.update (2 samples, 0.19%)</title><rect x="256.0" y="291.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="259.0" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (2 samples, 0.19%)</title><rect x="256.0" y="275.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="259.0" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (2 samples, 0.19%)</title><rect x="256.0" y="259.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="259.0" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (2 samples, 0.19%)</title><rect x="256.0" y="243.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.0" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (2 samples, 0.19%)</title><rect x="256.0" y="227.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="259.0" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.19%)</title><rect x="256.0" y="211.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="259.0" y="222.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.19%)</title><rect x="256.0" y="195.0" width="2.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="259.0" y="206.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (2 samples, 0.19%)</title><rect x="258.2" y="387.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.2" y="398.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.10%)</title><rect x="258.2" y="371.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.2" y="382.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.10%)</title><rect x="258.2" y="355.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.2" y="366.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.index (1 samples, 0.10%)</title><rect x="259.4" y="371.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.4" y="382.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22221/313231000.apply$mcI$sp (1 samples, 0.10%)</title><rect x="260.5" y="515.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="263.5" y="526.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$3 (1 samples, 0.10%)</title><rect x="260.5" y="499.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="263.5" y="510.0"></text>
</g>
<g>
<title>treadle/executable/ToInt.apply (1 samples, 0.10%)</title><rect x="260.5" y="483.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="263.5" y="494.0"></text>
</g>
<g>
<title>scala/math/BigInt.toInt (1 samples, 0.10%)</title><rect x="260.5" y="467.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.5" y="478.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt$ (1 samples, 0.10%)</title><rect x="260.5" y="451.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.5" y="462.0"></text>
</g>
<g>
<title>scala/math/ScalaNumericAnyConversions.toInt (1 samples, 0.10%)</title><rect x="260.5" y="435.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="263.5" y="446.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.10%)</title><rect x="260.5" y="419.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="263.5" y="430.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.10%)</title><rect x="260.5" y="403.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="263.5" y="414.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.10%)</title><rect x="260.5" y="387.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="263.5" y="398.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22243/1704523794.apply$mcI$sp (5 samples, 0.48%)</title><rect x="261.6" y="515.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.6" y="526.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$1 (5 samples, 0.48%)</title><rect x="261.6" y="499.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="264.6" y="510.0"></text>
</g>
<g>
<title>treadle/executable/BitsInts.apply (1 samples, 0.10%)</title><rect x="261.6" y="483.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="264.6" y="494.0"></text>
</g>
<g>
<title>treadle/executable/MuxInts.apply (2 samples, 0.19%)</title><rect x="262.8" y="483.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.8" y="494.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22242/796882860.apply$mcI$sp (1 samples, 0.10%)</title><rect x="263.9" y="467.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="266.9" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$190 (1 samples, 0.10%)</title><rect x="263.9" y="451.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="266.9" y="462.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$GetInt.apply (1 samples, 0.10%)</title><rect x="263.9" y="435.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="266.9" y="446.0"></text>
</g>
<g>
<title>treadle/executable/OrInts.apply (1 samples, 0.10%)</title><rect x="265.0" y="483.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="268.0" y="494.0"></text>
</g>
<g>
<title>treadle/executable/TailInts.apply (1 samples, 0.10%)</title><rect x="266.2" y="483.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="269.2" y="494.0"></text>
</g>
<g>
<title>treadle/executable/MuxInts.apply (1 samples, 0.10%)</title><rect x="267.3" y="515.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="270.3" y="526.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.run (4 samples, 0.38%)</title><rect x="268.4" y="563.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.4" y="574.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$22398/450609576.apply$mcV$sp (189 samples, 18.16%)</title><rect x="273.0" y="563.0" width="214.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="276.0" y="574.0">treadle/executable/DataStore..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (188 samples, 18.06%)</title><rect x="274.1" y="547.0" width="213.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.1" y="558.0">treadle/executable/DataStore..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (188 samples, 18.06%)</title><rect x="274.1" y="531.0" width="213.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="277.1" y="542.0">treadle/executable/DataStore..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.treadle$executable$DataStore$AssignLong$$$outer (4 samples, 0.38%)</title><rect x="275.2" y="515.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="278.2" y="526.0"></text>
</g>
<g>
<title>treadle/executable/OrLongs.apply (1 samples, 0.10%)</title><rect x="276.4" y="499.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="279.4" y="510.0"></text>
</g>
<g>
<title>treadle/executable/SubLongs.apply (1 samples, 0.10%)</title><rect x="277.5" y="499.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="280.5" y="510.0"></text>
</g>
<g>
<title>treadle/executable/TailLongs.apply (1 samples, 0.10%)</title><rect x="278.6" y="499.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.6" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (5 samples, 0.48%)</title><rect x="279.8" y="515.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.8" y="526.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (1 samples, 0.10%)</title><rect x="283.2" y="499.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="286.2" y="510.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.10%)</title><rect x="283.2" y="483.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.2" y="494.0"></text>
</g>
<g>
<title>scala/math/BigInt$.minCached (1 samples, 0.10%)</title><rect x="283.2" y="467.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="286.2" y="478.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.dataSize (1 samples, 0.10%)</title><rect x="284.3" y="499.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="287.3" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (167 samples, 16.04%)</title><rect x="285.4" y="515.0" width="189.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.4" y="526.0">treadle/executable/DataSt..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (167 samples, 16.04%)</title><rect x="285.4" y="499.0" width="189.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.4" y="510.0">scala/collection/mutable/..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (167 samples, 16.04%)</title><rect x="285.4" y="483.0" width="189.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.4" y="494.0">scala/collection/mutable/..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (167 samples, 16.04%)</title><rect x="285.4" y="467.0" width="189.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.4" y="478.0">scala/collection/mutable/..</text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$22406/745475904.apply (166 samples, 15.95%)</title><rect x="286.6" y="451.0" width="188.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.6" y="462.0">treadle/executable/DataS..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (165 samples, 15.85%)</title><rect x="287.7" y="435.0" width="187.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="290.7" y="446.0">treadle/executable/DataS..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (165 samples, 15.85%)</title><rect x="287.7" y="419.0" width="187.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.7" y="430.0">treadle/executable/DataS..</text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (1 samples, 0.10%)</title><rect x="288.8" y="403.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="291.8" y="414.0"></text>
</g>
<g>
<title>frame::is_deoptimized_frame() const (1 samples, 0.10%)</title><rect x="288.8" y="387.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="291.8" y="398.0"></text>
</g>
<g>
<title>SharedRuntime::raw_exception_handler_for_return_address(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="290.0" y="403.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="293.0" y="414.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.10%)</title><rect x="290.0" y="387.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="293.0" y="398.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.10%)</title><rect x="290.0" y="371.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="293.0" y="382.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.10%)</title><rect x="290.0" y="355.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="293.0" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (87 samples, 8.36%)</title><rect x="291.1" y="403.0" width="98.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="294.1" y="414.0">treadle/exec..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1714595028.linkToTargetMethod (1 samples, 0.10%)</title><rect x="291.1" y="387.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1560312237.invokeStatic_LLIL_L (1 samples, 0.10%)</title><rect x="291.1" y="371.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.1" y="382.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$22408/370601809.get$Lambda (1 samples, 0.10%)</title><rect x="291.1" y="355.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="294.1" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$22408/370601809.&lt;init&gt; (1 samples, 0.10%)</title><rect x="291.1" y="339.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="294.1" y="350.0"></text>
</g>
<g>
<title>scala/Option.foreach (64 samples, 6.15%)</title><rect x="292.2" y="387.0" width="72.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.2" y="398.0">scala/Op..</text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$22408/370601809.apply (64 samples, 6.15%)</title><rect x="292.2" y="371.0" width="72.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="295.2" y="382.0">treadle/..</text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (2 samples, 0.19%)</title><rect x="292.2" y="355.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="295.2" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (62 samples, 5.96%)</title><rect x="294.5" y="355.0" width="70.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.5" y="366.0">treadle/..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (62 samples, 5.96%)</title><rect x="294.5" y="339.0" width="70.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="297.5" y="350.0">treadle/..</text>
</g>
<g>
<title>scala/collection/immutable/List.apply (5 samples, 0.48%)</title><rect x="297.9" y="323.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="300.9" y="334.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.apply$ (5 samples, 0.48%)</title><rect x="297.9" y="307.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="300.9" y="318.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.apply (5 samples, 0.48%)</title><rect x="297.9" y="291.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="300.9" y="302.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (5 samples, 0.48%)</title><rect x="297.9" y="275.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.9" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (5 samples, 0.48%)</title><rect x="297.9" y="259.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.9" y="270.0"></text>
</g>
<g>
<title>treadle/executable/StaticDependencyBundle.totalSources (1 samples, 0.10%)</title><rect x="302.4" y="243.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.4" y="254.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.last (3 samples, 0.29%)</title><rect x="303.6" y="323.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.6" y="334.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.last$ (3 samples, 0.29%)</title><rect x="303.6" y="307.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="306.6" y="318.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.last (3 samples, 0.29%)</title><rect x="303.6" y="291.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.6" y="302.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.addAntiDependency (46 samples, 4.42%)</title><rect x="307.0" y="323.0" width="52.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="310.0" y="334.0">tread..</text>
</g>
<g>
<title>scala/collection/AbstractMap.apply (40 samples, 3.84%)</title><rect x="307.0" y="307.0" width="45.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.0" y="318.0">scal..</text>
</g>
<g>
<title>scala/collection/MapLike.apply$ (40 samples, 3.84%)</title><rect x="307.0" y="291.0" width="45.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.0" y="302.0">scal..</text>
</g>
<g>
<title>scala/collection/MapLike.apply (40 samples, 3.84%)</title><rect x="307.0" y="275.0" width="45.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.0" y="286.0">scal..</text>
</g>
<g>
<title>scala/collection/Map$WithDefault.default (6 samples, 0.58%)</title><rect x="307.0" y="259.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.0" y="270.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$22403/1395992911.apply (6 samples, 0.58%)</title><rect x="307.0" y="243.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="310.0" y="254.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$newCycleMap$1$adapted (6 samples, 0.58%)</title><rect x="307.0" y="227.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="310.0" y="238.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$newCycleMap$1 (6 samples, 0.58%)</title><rect x="307.0" y="211.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="310.0" y="222.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.newBitSet (6 samples, 0.58%)</title><rect x="307.0" y="195.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.0" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet$.apply (5 samples, 0.48%)</title><rect x="308.1" y="179.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.1" y="190.0"></text>
</g>
<g>
<title>scala/collection/generic/BitSetFactory.apply$ (5 samples, 0.48%)</title><rect x="308.1" y="163.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.1" y="174.0"></text>
</g>
<g>
<title>scala/collection/generic/BitSetFactory.apply (5 samples, 0.48%)</title><rect x="308.1" y="147.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.1" y="158.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.$div$colon (1 samples, 0.10%)</title><rect x="309.3" y="131.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.3" y="142.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.$div$colon$ (1 samples, 0.10%)</title><rect x="309.3" y="115.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="312.3" y="126.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.$div$colon (1 samples, 0.10%)</title><rect x="309.3" y="99.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="312.3" y="110.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (1 samples, 0.10%)</title><rect x="309.3" y="83.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="312.3" y="94.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (1 samples, 0.10%)</title><rect x="309.3" y="67.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.3" y="78.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet$.empty (3 samples, 0.29%)</title><rect x="310.4" y="131.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.4" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet$.empty (3 samples, 0.29%)</title><rect x="310.4" y="115.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.4" y="126.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.&lt;init&gt; (2 samples, 0.19%)</title><rect x="311.5" y="99.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="314.5" y="110.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.&lt;init&gt; (2 samples, 0.19%)</title><rect x="311.5" y="83.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="314.5" y="94.0"></text>
</g>
<g>
<title>scala/collection/Map$WithDefault.get (34 samples, 3.27%)</title><rect x="313.8" y="259.0" width="38.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="316.8" y="270.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (34 samples, 3.27%)</title><rect x="313.8" y="243.0" width="38.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.8" y="254.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (34 samples, 3.27%)</title><rect x="313.8" y="227.0" width="38.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.8" y="238.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (34 samples, 3.27%)</title><rect x="313.8" y="211.0" width="38.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.8" y="222.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (34 samples, 3.27%)</title><rect x="313.8" y="195.0" width="38.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.8" y="206.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.10%)</title><rect x="313.8" y="179.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.8" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.10%)</title><rect x="313.8" y="163.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.8" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (32 samples, 3.07%)</title><rect x="314.9" y="179.0" width="36.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.9" y="190.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.10%)</title><rect x="314.9" y="163.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.9" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (31 samples, 2.98%)</title><rect x="316.1" y="163.0" width="35.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="319.1" y="174.0">sca..</text>
</g>
<g>
<title>itable stub (3 samples, 0.29%)</title><rect x="317.2" y="147.0" width="3.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="320.2" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.improve (2 samples, 0.19%)</title><rect x="320.6" y="147.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="323.6" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (25 samples, 2.40%)</title><rect x="322.9" y="147.0" width="28.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.9" y="158.0">sc..</text>
</g>
<g>
<title>itable stub (17 samples, 1.63%)</title><rect x="325.1" y="131.0" width="19.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="328.1" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.seedvalue (1 samples, 0.10%)</title><rect x="344.4" y="131.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="347.4" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.table (5 samples, 0.48%)</title><rect x="345.5" y="131.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="348.5" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.10%)</title><rect x="351.2" y="179.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.2" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.add (5 samples, 0.48%)</title><rect x="352.3" y="307.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="355.3" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.updateWord (5 samples, 0.48%)</title><rect x="352.3" y="291.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="355.3" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.ensureCapacity (5 samples, 0.48%)</title><rect x="352.3" y="275.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="355.3" y="286.0"></text>
</g>
<g>
<title>scala/Array$.copy (4 samples, 0.38%)</title><rect x="352.3" y="259.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="355.3" y="270.0"></text>
</g>
<g>
<title>scala/Array$.slowcopy (4 samples, 0.38%)</title><rect x="352.3" y="243.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="355.3" y="254.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$.array_update (4 samples, 0.38%)</title><rect x="352.3" y="227.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="355.3" y="238.0"></text>
</g>
<g>
<title>generic_arraycopy (1 samples, 0.10%)</title><rect x="353.5" y="211.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="356.5" y="222.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.19%)</title><rect x="354.6" y="211.0" width="2.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="357.6" y="222.0"></text>
</g>
<g>
<title>scala/runtime/RichInt$.min$extension (1 samples, 0.10%)</title><rect x="356.9" y="259.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.9" y="270.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToInteger (1 samples, 0.10%)</title><rect x="358.0" y="307.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="361.0" y="318.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.10%)</title><rect x="358.0" y="291.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="361.0" y="302.0"></text>
</g>
<g>
<title>java/lang/Integer.&lt;init&gt; (1 samples, 0.10%)</title><rect x="358.0" y="275.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="361.0" y="286.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (4 samples, 0.38%)</title><rect x="359.1" y="323.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.1" y="334.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (4 samples, 0.38%)</title><rect x="359.1" y="307.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="362.1" y="318.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.10%)</title><rect x="362.5" y="291.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="365.5" y="302.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.10%)</title><rect x="362.5" y="275.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="365.5" y="286.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.totalWireCount (1 samples, 0.10%)</title><rect x="363.7" y="323.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="366.7" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (19 samples, 1.83%)</title><rect x="364.8" y="387.0" width="21.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.8" y="398.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (18 samples, 1.73%)</title><rect x="365.9" y="371.0" width="20.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="368.9" y="382.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (18 samples, 1.73%)</title><rect x="365.9" y="355.0" width="20.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.9" y="366.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (18 samples, 1.73%)</title><rect x="365.9" y="339.0" width="20.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="368.9" y="350.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.10%)</title><rect x="365.9" y="323.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="368.9" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.10%)</title><rect x="365.9" y="307.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="368.9" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (1 samples, 0.10%)</title><rect x="365.9" y="291.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="368.9" y="302.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.10%)</title><rect x="365.9" y="275.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.9" y="286.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (1 samples, 0.10%)</title><rect x="365.9" y="259.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="368.9" y="270.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="365.9" y="243.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="368.9" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.10%)</title><rect x="367.1" y="323.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="370.1" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.10%)</title><rect x="367.1" y="307.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="370.1" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.10%)</title><rect x="367.1" y="291.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="370.1" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.table (1 samples, 0.10%)</title><rect x="367.1" y="275.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="370.1" y="286.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.10%)</title><rect x="367.1" y="259.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.1" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (16 samples, 1.54%)</title><rect x="368.2" y="323.0" width="18.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.2" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (1 samples, 0.10%)</title><rect x="372.7" y="307.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.7" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (10 samples, 0.96%)</title><rect x="373.9" y="307.0" width="11.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="376.9" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (10 samples, 0.96%)</title><rect x="373.9" y="291.0" width="11.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="376.9" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (5 samples, 0.48%)</title><rect x="373.9" y="275.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.9" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (5 samples, 0.48%)</title><rect x="379.5" y="275.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.5" y="286.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (5 samples, 0.48%)</title><rect x="379.5" y="259.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="382.5" y="270.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (5 samples, 0.48%)</title><rect x="379.5" y="243.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.5" y="254.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (5 samples, 0.48%)</title><rect x="379.5" y="227.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.5" y="238.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (5 samples, 0.48%)</title><rect x="379.5" y="211.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="382.5" y="222.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (5 samples, 0.48%)</title><rect x="379.5" y="195.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.5" y="206.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (3 samples, 0.29%)</title><rect x="379.5" y="179.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.5" y="190.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (3 samples, 0.29%)</title><rect x="379.5" y="163.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.5" y="174.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (3 samples, 0.29%)</title><rect x="379.5" y="147.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="382.5" y="158.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.19%)</title><rect x="382.9" y="179.0" width="2.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="385.9" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.table (1 samples, 0.10%)</title><rect x="385.2" y="307.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.2" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.improve (1 samples, 0.10%)</title><rect x="385.2" y="291.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.2" y="302.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (3 samples, 0.29%)</title><rect x="386.3" y="387.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="389.3" y="398.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (3 samples, 0.29%)</title><rect x="386.3" y="371.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="389.3" y="382.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.run (75 samples, 7.20%)</title><rect x="389.7" y="403.0" width="85.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="392.7" y="414.0">treadle/ex..</text>
</g>
<g>
<title>scala/Option.foreach (71 samples, 6.82%)</title><rect x="389.7" y="387.0" width="80.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="392.7" y="398.0">scala/Opt..</text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$22407/1753583965.apply (71 samples, 6.82%)</title><rect x="389.7" y="371.0" width="80.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="392.7" y="382.0">treadle/e..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5$adapted (71 samples, 6.82%)</title><rect x="389.7" y="355.0" width="80.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="392.7" y="366.0">treadle/e..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5 (71 samples, 6.82%)</title><rect x="389.7" y="339.0" width="80.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="392.7" y="350.0">treadle/e..</text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (71 samples, 6.82%)</title><rect x="389.7" y="323.0" width="80.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="392.7" y="334.0">treadle/v..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1588412915.linkToTargetMethod (1 samples, 0.10%)</title><rect x="392.0" y="307.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="395.0" y="318.0"></text>
</g>
<g>
<title>logger/Logger.info (2 samples, 0.19%)</title><rect x="393.1" y="307.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="396.1" y="318.0"></text>
</g>
<g>
<title>logger/Logger$.logger$Logger$$showMessage (1 samples, 0.10%)</title><rect x="394.3" y="291.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="397.3" y="302.0"></text>
</g>
<g>
<title>logger/Logger$.testPackageNameMatch (1 samples, 0.10%)</title><rect x="394.3" y="275.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="397.3" y="286.0"></text>
</g>
<g>
<title>logger/Logger$.state (1 samples, 0.10%)</title><rect x="394.3" y="259.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="397.3" y="270.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (1 samples, 0.10%)</title><rect x="394.3" y="243.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.3" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.10%)</title><rect x="394.3" y="227.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.3" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.10%)</title><rect x="394.3" y="211.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="397.3" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.10%)</title><rect x="394.3" y="195.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="397.3" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (7 samples, 0.67%)</title><rect x="395.4" y="307.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.4" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (7 samples, 0.67%)</title><rect x="395.4" y="291.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="398.4" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (7 samples, 0.67%)</title><rect x="395.4" y="275.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="398.4" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (7 samples, 0.67%)</title><rect x="395.4" y="259.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="398.4" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (2 samples, 0.19%)</title><rect x="395.4" y="243.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="398.4" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (2 samples, 0.19%)</title><rect x="395.4" y="227.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="398.4" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (2 samples, 0.19%)</title><rect x="395.4" y="211.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="398.4" y="222.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.19%)</title><rect x="395.4" y="195.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="398.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.10%)</title><rect x="396.5" y="179.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.5" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (5 samples, 0.48%)</title><rect x="397.7" y="243.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="400.7" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (3 samples, 0.29%)</title><rect x="399.9" y="227.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="402.9" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (3 samples, 0.29%)</title><rect x="399.9" y="211.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="402.9" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (1 samples, 0.10%)</title><rect x="399.9" y="195.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="402.9" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (2 samples, 0.19%)</title><rect x="401.1" y="195.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="404.1" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.10%)</title><rect x="402.2" y="179.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="405.2" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.10%)</title><rect x="402.2" y="163.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="405.2" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.10%)</title><rect x="402.2" y="147.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="405.2" y="158.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.10%)</title><rect x="402.2" y="131.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.2" y="142.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (1 samples, 0.10%)</title><rect x="402.2" y="115.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="405.2" y="126.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="402.2" y="99.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="405.2" y="110.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$plus$eq (2 samples, 0.19%)</title><rect x="403.3" y="307.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="406.3" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (2 samples, 0.19%)</title><rect x="403.3" y="291.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.3" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (2 samples, 0.19%)</title><rect x="403.3" y="275.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="406.3" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (2 samples, 0.19%)</title><rect x="403.3" y="259.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="406.3" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (2 samples, 0.19%)</title><rect x="403.3" y="243.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="406.3" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (2 samples, 0.19%)</title><rect x="403.3" y="227.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="406.3" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (2 samples, 0.19%)</title><rect x="403.3" y="211.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.3" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.table (2 samples, 0.19%)</title><rect x="403.3" y="195.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="406.3" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (14 samples, 1.34%)</title><rect x="405.6" y="307.0" width="15.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="408.6" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (14 samples, 1.34%)</title><rect x="405.6" y="291.0" width="15.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="408.6" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (14 samples, 1.34%)</title><rect x="405.6" y="275.0" width="15.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="408.6" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (14 samples, 1.34%)</title><rect x="405.6" y="259.0" width="15.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="408.6" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (14 samples, 1.34%)</title><rect x="405.6" y="243.0" width="15.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="408.6" y="254.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.10%)</title><rect x="406.7" y="227.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="409.7" y="238.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.10%)</title><rect x="407.9" y="227.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="410.9" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.index (9 samples, 0.86%)</title><rect x="409.0" y="227.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="412.0" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index$ (9 samples, 0.86%)</title><rect x="409.0" y="211.0" width="10.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="412.0" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index (9 samples, 0.86%)</title><rect x="409.0" y="195.0" width="10.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="412.0" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.improve (9 samples, 0.86%)</title><rect x="409.0" y="179.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="412.0" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve$ (9 samples, 0.86%)</title><rect x="409.0" y="163.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="412.0" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve (9 samples, 0.86%)</title><rect x="409.0" y="147.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="412.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.10%)</title><rect x="416.9" y="131.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="419.9" y="142.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="418.1" y="131.0" width="1.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="421.1" y="142.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.19%)</title><rect x="419.2" y="227.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="422.2" y="238.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.19%)</title><rect x="419.2" y="211.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.2" y="222.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.19%)</title><rect x="419.2" y="195.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.2" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (2 samples, 0.19%)</title><rect x="419.2" y="179.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.2" y="190.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isNewValue (10 samples, 0.96%)</title><rect x="421.5" y="307.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.5" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (5 samples, 0.48%)</title><rect x="421.5" y="291.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.5" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (5 samples, 0.48%)</title><rect x="421.5" y="275.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.5" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (5 samples, 0.48%)</title><rect x="421.5" y="259.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="424.5" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (5 samples, 0.48%)</title><rect x="421.5" y="243.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="424.5" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (3 samples, 0.29%)</title><rect x="421.5" y="227.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="424.5" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (3 samples, 0.29%)</title><rect x="421.5" y="211.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.5" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.10%)</title><rect x="423.7" y="195.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="426.7" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.19%)</title><rect x="424.9" y="227.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="427.9" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (2 samples, 0.19%)</title><rect x="424.9" y="211.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.9" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (1 samples, 0.10%)</title><rect x="424.9" y="195.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="427.9" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.10%)</title><rect x="426.0" y="195.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="429.0" y="206.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (5 samples, 0.48%)</title><rect x="427.1" y="291.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.1" y="302.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (3 samples, 0.29%)</title><rect x="427.1" y="275.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.1" y="286.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (3 samples, 0.29%)</title><rect x="427.1" y="259.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.1" y="270.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (3 samples, 0.29%)</title><rect x="427.1" y="243.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="430.1" y="254.0"></text>
</g>
<g>
<title>scala/math/BigInt.isValidLong (2 samples, 0.19%)</title><rect x="430.5" y="275.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="433.5" y="286.0"></text>
</g>
<g>
<title>scala/math/BigInt.$greater$eq (2 samples, 0.19%)</title><rect x="430.5" y="259.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.5" y="270.0"></text>
</g>
<g>
<title>scala/math/Ordered.$greater$eq$ (2 samples, 0.19%)</title><rect x="430.5" y="243.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.5" y="254.0"></text>
</g>
<g>
<title>scala/math/Ordered.$greater$eq (2 samples, 0.19%)</title><rect x="430.5" y="227.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.5" y="238.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (2 samples, 0.19%)</title><rect x="430.5" y="211.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.5" y="222.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (2 samples, 0.19%)</title><rect x="430.5" y="195.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.5" y="206.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (2 samples, 0.19%)</title><rect x="430.5" y="179.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="433.5" y="190.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isTempWire (33 samples, 3.17%)</title><rect x="432.8" y="307.0" width="37.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="435.8" y="318.0">tre..</text>
</g>
<g>
<title>java/lang/String.split (32 samples, 3.07%)</title><rect x="432.8" y="291.0" width="36.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="435.8" y="302.0">jav..</text>
</g>
<g>
<title>java/lang/String.split (32 samples, 3.07%)</title><rect x="432.8" y="275.0" width="36.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="435.8" y="286.0">jav..</text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (18 samples, 1.73%)</title><rect x="441.9" y="259.0" width="20.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="444.9" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList$1.hasNext (2 samples, 0.19%)</title><rect x="453.2" y="243.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.2" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList$1.next (4 samples, 0.38%)</title><rect x="455.5" y="243.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="458.5" y="254.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.19%)</title><rect x="460.0" y="243.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="463.0" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.19%)</title><rect x="462.3" y="259.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="465.3" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (2 samples, 0.19%)</title><rect x="462.3" y="243.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="465.3" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (2 samples, 0.19%)</title><rect x="462.3" y="227.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="465.3" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.19%)</title><rect x="462.3" y="211.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.3" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.19%)</title><rect x="462.3" y="195.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.3" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.compile (3 samples, 0.29%)</title><rect x="464.5" y="259.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="467.5" y="270.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.&lt;init&gt; (3 samples, 0.29%)</title><rect x="464.5" y="243.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="467.5" y="254.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.10%)</title><rect x="467.9" y="259.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="470.9" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.&lt;init&gt; (1 samples, 0.10%)</title><rect x="469.1" y="291.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.1" y="302.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (4 samples, 0.38%)</title><rect x="470.2" y="387.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="473.2" y="398.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (2 samples, 0.19%)</title><rect x="472.5" y="371.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="475.5" y="382.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (2 samples, 0.19%)</title><rect x="472.5" y="355.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="475.5" y="366.0"></text>
</g>
<g>
<title>scala/math/BigInt$.minCached (1 samples, 0.10%)</title><rect x="473.6" y="339.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.6" y="350.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22234/1807336163.apply$mcJ$sp (11 samples, 1.06%)</title><rect x="474.7" y="515.0" width="12.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.7" y="526.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$8 (11 samples, 1.06%)</title><rect x="474.7" y="499.0" width="12.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.7" y="510.0"></text>
</g>
<g>
<title>treadle/executable/CatLongs.apply (3 samples, 0.29%)</title><rect x="474.7" y="483.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.7" y="494.0"></text>
</g>
<g>
<title>treadle/executable/CatLongs.f2 (2 samples, 0.19%)</title><rect x="474.7" y="467.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.7" y="478.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.19%)</title><rect x="474.7" y="451.0" width="2.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="477.7" y="462.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22250/1973354957.apply$mcJ$sp (1 samples, 0.10%)</title><rect x="477.0" y="467.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.0" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$70 (1 samples, 0.10%)</title><rect x="477.0" y="451.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.0" y="462.0"></text>
</g>
<g>
<title>treadle/executable/MuxLongs.apply (8 samples, 0.77%)</title><rect x="478.1" y="483.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.1" y="494.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22233/1365620662.apply$mcJ$sp (1 samples, 0.10%)</title><rect x="480.4" y="467.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.4" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$205 (1 samples, 0.10%)</title><rect x="480.4" y="451.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.4" y="462.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22254/1950570528.apply$mcI$sp (2 samples, 0.19%)</title><rect x="481.5" y="467.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.5" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22296/1831743809.apply$mcI$sp (1 samples, 0.10%)</title><rect x="483.8" y="467.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.8" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22299/1605652277.apply$mcJ$sp (1 samples, 0.10%)</title><rect x="484.9" y="467.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.9" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$194 (1 samples, 0.10%)</title><rect x="484.9" y="451.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="487.9" y="462.0"></text>
</g>
<g>
<title>treadle/executable/MuxLongs.condition (1 samples, 0.10%)</title><rect x="486.1" y="467.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.1" y="478.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.run (1 samples, 0.10%)</title><rect x="487.2" y="563.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.2" y="574.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.handlePossibleReset$1 (1 samples, 0.10%)</title><rect x="488.3" y="627.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="491.3" y="638.0"></text>
</g>
<g>
<title>treadle/chronometry/UTC.currentTime (1 samples, 0.10%)</title><rect x="488.3" y="611.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.3" y="622.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.lowerClock$1 (1 samples, 0.10%)</title><rect x="489.5" y="627.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="492.5" y="638.0"></text>
</g>
<g>
<title>treadle/executable/SimpleSingleClockStepper.raiseClock$1 (421 samples, 40.44%)</title><rect x="490.6" y="627.0" width="477.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.6" y="638.0">treadle/executable/SimpleSingleClockStepper.raiseClock$1</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.evaluateCircuit (418 samples, 40.15%)</title><rect x="492.9" y="611.0" width="473.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="495.9" y="622.0">treadle/executable/ExecutionEngine.evaluateCircuit</text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.runAssigns (418 samples, 40.15%)</title><rect x="492.9" y="595.0" width="473.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="495.9" y="606.0">treadle/executable/ExecutionEngine.runAssigns</text>
</g>
<g>
<title>scala/Option.isDefined (1 samples, 0.10%)</title><rect x="492.9" y="579.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="495.9" y="590.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.saveData (1 samples, 0.10%)</title><rect x="494.0" y="579.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="497.0" y="590.0"></text>
</g>
<g>
<title>treadle/executable/Scheduler.executeCombinationalAssigns (416 samples, 39.96%)</title><rect x="495.1" y="579.0" width="471.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.1" y="590.0">treadle/executable/Scheduler.executeCombinationalAssigns</text>
</g>
<g>
<title>treadle/executable/Scheduler.executeAssigners (416 samples, 39.96%)</title><rect x="495.1" y="563.0" width="471.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="498.1" y="574.0">treadle/executable/Scheduler.executeAssigners</text>
</g>
<g>
<title>itable stub (4 samples, 0.38%)</title><rect x="500.8" y="547.0" width="4.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="503.8" y="558.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner$$Lambda$22400/102966613.apply$mcV$sp (17 samples, 1.63%)</title><rect x="505.4" y="547.0" width="19.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.4" y="558.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.$anonfun$setLeanMode$2 (17 samples, 1.63%)</title><rect x="505.4" y="531.0" width="19.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.4" y="542.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.runFull (17 samples, 1.63%)</title><rect x="505.4" y="515.0" width="19.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="508.4" y="526.0"></text>
</g>
<g>
<title>treadle/executable/ClockTransitionGetter.transition (1 samples, 0.10%)</title><rect x="506.5" y="499.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="509.5" y="510.0"></text>
</g>
<g>
<title>treadle/executable/ClockTransitionGetter.isPosEdge (1 samples, 0.10%)</title><rect x="506.5" y="483.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="509.5" y="494.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$22399/1154248524.apply$mcV$sp (7 samples, 0.67%)</title><rect x="507.6" y="499.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.6" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (7 samples, 0.67%)</title><rect x="507.6" y="483.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="510.6" y="494.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (7 samples, 0.67%)</title><rect x="507.6" y="467.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="510.6" y="478.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (7 samples, 0.67%)</title><rect x="507.6" y="451.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="510.6" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (7 samples, 0.67%)</title><rect x="507.6" y="435.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="510.6" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (7 samples, 0.67%)</title><rect x="507.6" y="419.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.6" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (7 samples, 0.67%)</title><rect x="507.6" y="403.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="510.6" y="414.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$22406/745475904.apply (7 samples, 0.67%)</title><rect x="507.6" y="387.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.6" y="398.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (7 samples, 0.67%)</title><rect x="507.6" y="371.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="510.6" y="382.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (7 samples, 0.67%)</title><rect x="507.6" y="355.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.6" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (2 samples, 0.19%)</title><rect x="507.6" y="339.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="510.6" y="350.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (2 samples, 0.19%)</title><rect x="507.6" y="323.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.6" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.19%)</title><rect x="507.6" y="307.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.6" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.19%)</title><rect x="507.6" y="291.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.6" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.19%)</title><rect x="507.6" y="275.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="510.6" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.19%)</title><rect x="507.6" y="259.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="510.6" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.10%)</title><rect x="508.8" y="243.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.8" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.10%)</title><rect x="508.8" y="227.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="511.8" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.10%)</title><rect x="508.8" y="211.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.8" y="222.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.10%)</title><rect x="508.8" y="195.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.8" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.10%)</title><rect x="508.8" y="179.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="511.8" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.10%)</title><rect x="508.8" y="163.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="511.8" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.10%)</title><rect x="508.8" y="147.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="511.8" y="158.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (1 samples, 0.10%)</title><rect x="508.8" y="131.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="511.8" y="142.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (1 samples, 0.10%)</title><rect x="508.8" y="115.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.8" y="126.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (1 samples, 0.10%)</title><rect x="508.8" y="99.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="511.8" y="110.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (1 samples, 0.10%)</title><rect x="508.8" y="83.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.8" y="94.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.run (5 samples, 0.48%)</title><rect x="509.9" y="339.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="512.9" y="350.0"></text>
</g>
<g>
<title>scala/Option.foreach (5 samples, 0.48%)</title><rect x="509.9" y="323.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.9" y="334.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$22407/1753583965.apply (5 samples, 0.48%)</title><rect x="509.9" y="307.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="512.9" y="318.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5$adapted (5 samples, 0.48%)</title><rect x="509.9" y="291.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.9" y="302.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5 (5 samples, 0.48%)</title><rect x="509.9" y="275.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="512.9" y="286.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (5 samples, 0.48%)</title><rect x="509.9" y="259.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="512.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1588412915.linkToTargetMethod (1 samples, 0.10%)</title><rect x="509.9" y="243.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="512.9" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (1 samples, 0.10%)</title><rect x="511.0" y="243.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="514.0" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.10%)</title><rect x="511.0" y="227.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.0" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.10%)</title><rect x="511.0" y="211.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="514.0" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.10%)</title><rect x="511.0" y="195.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.0" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.10%)</title><rect x="511.0" y="179.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="514.0" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.10%)</title><rect x="511.0" y="163.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="514.0" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.10%)</title><rect x="511.0" y="147.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.0" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (1 samples, 0.10%)</title><rect x="511.0" y="131.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.0" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (1 samples, 0.10%)</title><rect x="512.2" y="243.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.2" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (1 samples, 0.10%)</title><rect x="512.2" y="227.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="515.2" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (1 samples, 0.10%)</title><rect x="512.2" y="211.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.2" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (1 samples, 0.10%)</title><rect x="512.2" y="195.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.2" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (1 samples, 0.10%)</title><rect x="512.2" y="179.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.2" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.index (1 samples, 0.10%)</title><rect x="512.2" y="163.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.2" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index$ (1 samples, 0.10%)</title><rect x="512.2" y="147.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.2" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index (1 samples, 0.10%)</title><rect x="512.2" y="131.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.2" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.improve (1 samples, 0.10%)</title><rect x="512.2" y="115.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.2" y="126.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve$ (1 samples, 0.10%)</title><rect x="512.2" y="99.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.2" y="110.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve (1 samples, 0.10%)</title><rect x="512.2" y="83.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="515.2" y="94.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isTempWire (2 samples, 0.19%)</title><rect x="513.3" y="243.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.split (2 samples, 0.19%)</title><rect x="513.3" y="227.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.split (2 samples, 0.19%)</title><rect x="513.3" y="211.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.3" y="222.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.19%)</title><rect x="513.3" y="195.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="516.3" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList$1.next (1 samples, 0.10%)</title><rect x="514.4" y="179.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="517.4" y="190.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$22398/450609576.apply$mcV$sp (8 samples, 0.77%)</title><rect x="515.6" y="499.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.6" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (8 samples, 0.77%)</title><rect x="515.6" y="483.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.6" y="494.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (8 samples, 0.77%)</title><rect x="515.6" y="467.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.6" y="478.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (8 samples, 0.77%)</title><rect x="515.6" y="451.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.6" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (8 samples, 0.77%)</title><rect x="515.6" y="435.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="518.6" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (8 samples, 0.77%)</title><rect x="515.6" y="419.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.6" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (8 samples, 0.77%)</title><rect x="515.6" y="403.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.6" y="414.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (1 samples, 0.10%)</title><rect x="515.6" y="387.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.6" y="398.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.size$ (1 samples, 0.10%)</title><rect x="515.6" y="371.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="518.6" y="382.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.length (1 samples, 0.10%)</title><rect x="515.6" y="355.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="518.6" y="366.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$22406/745475904.apply (7 samples, 0.67%)</title><rect x="516.7" y="387.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.7" y="398.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (7 samples, 0.67%)</title><rect x="516.7" y="371.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.7" y="382.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (7 samples, 0.67%)</title><rect x="516.7" y="355.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.7" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (2 samples, 0.19%)</title><rect x="516.7" y="339.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="519.7" y="350.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.10%)</title><rect x="516.7" y="323.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="519.7" y="334.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.10%)</title><rect x="516.7" y="307.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="519.7" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.10%)</title><rect x="516.7" y="291.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.7" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.10%)</title><rect x="516.7" y="275.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.7" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.10%)</title><rect x="516.7" y="259.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="519.7" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.10%)</title><rect x="516.7" y="243.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.7" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.10%)</title><rect x="516.7" y="227.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.7" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (1 samples, 0.10%)</title><rect x="516.7" y="211.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.7" y="222.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (1 samples, 0.10%)</title><rect x="517.8" y="323.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="520.8" y="334.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.10%)</title><rect x="517.8" y="307.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="520.8" y="318.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.10%)</title><rect x="517.8" y="291.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="520.8" y="302.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.10%)</title><rect x="517.8" y="275.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.8" y="286.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.run (5 samples, 0.48%)</title><rect x="519.0" y="339.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="522.0" y="350.0"></text>
</g>
<g>
<title>scala/Option.foreach (5 samples, 0.48%)</title><rect x="519.0" y="323.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.0" y="334.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$22407/1753583965.apply (5 samples, 0.48%)</title><rect x="519.0" y="307.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="522.0" y="318.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5$adapted (5 samples, 0.48%)</title><rect x="519.0" y="291.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.0" y="302.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5 (5 samples, 0.48%)</title><rect x="519.0" y="275.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="522.0" y="286.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (5 samples, 0.48%)</title><rect x="519.0" y="259.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="522.0" y="270.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isNewValue (1 samples, 0.10%)</title><rect x="519.0" y="243.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.0" y="254.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (1 samples, 0.10%)</title><rect x="519.0" y="227.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.0" y="238.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (1 samples, 0.10%)</title><rect x="519.0" y="211.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.0" y="222.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (1 samples, 0.10%)</title><rect x="519.0" y="195.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="522.0" y="206.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (1 samples, 0.10%)</title><rect x="519.0" y="179.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.0" y="190.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isTempWire (4 samples, 0.38%)</title><rect x="520.1" y="243.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="523.1" y="254.0"></text>
</g>
<g>
<title>java/lang/String.split (4 samples, 0.38%)</title><rect x="520.1" y="227.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.split (4 samples, 0.38%)</title><rect x="520.1" y="211.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.1" y="222.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.19%)</title><rect x="522.4" y="195.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="525.4" y="206.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.10%)</title><rect x="523.5" y="179.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="526.5" y="190.0"></text>
</g>
<g>
<title>treadle/executable/ClockBasedAssigner.run (1 samples, 0.10%)</title><rect x="524.6" y="547.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="527.6" y="558.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig$$Lambda$22401/790643451.apply$mcV$sp (1 samples, 0.10%)</title><rect x="525.8" y="547.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.8" y="558.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.$anonfun$setLeanMode$6 (1 samples, 0.10%)</title><rect x="525.8" y="531.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="528.8" y="542.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignBig.runFull (1 samples, 0.10%)</title><rect x="525.8" y="515.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.8" y="526.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22333/727217201.apply (1 samples, 0.10%)</title><rect x="525.8" y="499.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="528.8" y="510.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$15 (1 samples, 0.10%)</title><rect x="525.8" y="483.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="528.8" y="494.0"></text>
</g>
<g>
<title>treadle/executable/DshlBigs.apply (1 samples, 0.10%)</title><rect x="525.8" y="467.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="528.8" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22331/1427043075.apply (1 samples, 0.10%)</title><rect x="525.8" y="451.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="528.8" y="462.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$93 (1 samples, 0.10%)</title><rect x="525.8" y="435.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="528.8" y="446.0"></text>
</g>
<g>
<title>treadle/executable/LongToBig.apply (1 samples, 0.10%)</title><rect x="525.8" y="419.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="528.8" y="430.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt$$Lambda$22399/1154248524.apply$mcV$sp (128 samples, 12.30%)</title><rect x="526.9" y="547.0" width="145.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="529.9" y="558.0">treadle/executable..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.$anonfun$setLeanMode$2 (128 samples, 12.30%)</title><rect x="526.9" y="531.0" width="145.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="529.9" y="542.0">treadle/executable..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.runFull (128 samples, 12.30%)</title><rect x="526.9" y="515.0" width="145.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.9" y="526.0">treadle/executable..</text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="530.3" y="499.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="533.3" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.treadle$executable$DataStore$AssignInt$$$outer (1 samples, 0.10%)</title><rect x="531.4" y="499.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.4" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$GetInt.apply (2 samples, 0.19%)</title><rect x="532.6" y="499.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="535.6" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (5 samples, 0.48%)</title><rect x="534.8" y="499.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="537.8" y="510.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (2 samples, 0.19%)</title><rect x="537.1" y="483.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="540.1" y="494.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (2 samples, 0.19%)</title><rect x="537.1" y="467.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="540.1" y="478.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.dataSize (1 samples, 0.10%)</title><rect x="539.4" y="483.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="542.4" y="494.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (111 samples, 10.66%)</title><rect x="540.5" y="499.0" width="125.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.5" y="510.0">treadle/executa..</text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (111 samples, 10.66%)</title><rect x="540.5" y="483.0" width="125.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.5" y="494.0">scala/collectio..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (111 samples, 10.66%)</title><rect x="540.5" y="467.0" width="125.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="543.5" y="478.0">scala/collectio..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (111 samples, 10.66%)</title><rect x="540.5" y="451.0" width="125.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.5" y="462.0">scala/collectio..</text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$22406/745475904.apply (111 samples, 10.66%)</title><rect x="540.5" y="435.0" width="125.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="543.5" y="446.0">treadle/executa..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (110 samples, 10.57%)</title><rect x="541.6" y="419.0" width="124.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.6" y="430.0">treadle/executa..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (110 samples, 10.57%)</title><rect x="541.6" y="403.0" width="124.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="544.6" y="414.0">treadle/executa..</text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$22408/370601809.apply (1 samples, 0.10%)</title><rect x="542.8" y="387.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="545.8" y="398.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (60 samples, 5.76%)</title><rect x="543.9" y="387.0" width="68.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.9" y="398.0">treadle..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1714595028.linkToTargetMethod (3 samples, 0.29%)</title><rect x="545.0" y="371.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1560312237.invokeStatic_LLIL_L (3 samples, 0.29%)</title><rect x="545.0" y="355.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.0" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$22408/370601809.get$Lambda (3 samples, 0.29%)</title><rect x="545.0" y="339.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.0" y="350.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$22408/370601809.&lt;init&gt; (1 samples, 0.10%)</title><rect x="547.3" y="323.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.3" y="334.0"></text>
</g>
<g>
<title>scala/Option.foreach (32 samples, 3.07%)</title><rect x="548.4" y="371.0" width="36.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.4" y="382.0">sca..</text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$22408/370601809.apply (32 samples, 3.07%)</title><rect x="548.4" y="355.0" width="36.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.4" y="366.0">tre..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (30 samples, 2.88%)</title><rect x="550.7" y="339.0" width="34.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.7" y="350.0">tr..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (30 samples, 2.88%)</title><rect x="550.7" y="323.0" width="34.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.7" y="334.0">tr..</text>
</g>
<g>
<title>scala/collection/immutable/List.apply (6 samples, 0.58%)</title><rect x="553.0" y="307.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.0" y="318.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.apply$ (6 samples, 0.58%)</title><rect x="553.0" y="291.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="556.0" y="302.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.apply (6 samples, 0.58%)</title><rect x="553.0" y="275.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="556.0" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (5 samples, 0.48%)</title><rect x="554.1" y="259.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.1" y="270.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (5 samples, 0.48%)</title><rect x="554.1" y="243.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.1" y="254.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="557.5" y="227.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="560.5" y="238.0"></text>
</g>
<g>
<title>treadle/executable/StaticDependencyBundle.totalSources (1 samples, 0.10%)</title><rect x="558.6" y="227.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="561.6" y="238.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.last (1 samples, 0.10%)</title><rect x="559.8" y="307.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.8" y="318.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.last$ (1 samples, 0.10%)</title><rect x="559.8" y="291.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.8" y="302.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.last (1 samples, 0.10%)</title><rect x="559.8" y="275.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="562.8" y="286.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.addAntiDependency (19 samples, 1.83%)</title><rect x="560.9" y="307.0" width="21.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.9" y="318.0">t..</text>
</g>
<g>
<title>scala/collection/AbstractMap.apply (16 samples, 1.54%)</title><rect x="560.9" y="291.0" width="18.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="563.9" y="302.0"></text>
</g>
<g>
<title>scala/collection/MapLike.apply$ (16 samples, 1.54%)</title><rect x="560.9" y="275.0" width="18.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="563.9" y="286.0"></text>
</g>
<g>
<title>scala/collection/MapLike.apply (16 samples, 1.54%)</title><rect x="560.9" y="259.0" width="18.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="563.9" y="270.0"></text>
</g>
<g>
<title>scala/collection/Map$WithDefault.default (2 samples, 0.19%)</title><rect x="562.0" y="243.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.0" y="254.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$22403/1395992911.apply (2 samples, 0.19%)</title><rect x="562.0" y="227.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="565.0" y="238.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$newCycleMap$1$adapted (2 samples, 0.19%)</title><rect x="562.0" y="211.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="565.0" y="222.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$newCycleMap$1 (2 samples, 0.19%)</title><rect x="562.0" y="195.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.0" y="206.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.newBitSet (2 samples, 0.19%)</title><rect x="562.0" y="179.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.0" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet$.apply (2 samples, 0.19%)</title><rect x="562.0" y="163.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.0" y="174.0"></text>
</g>
<g>
<title>scala/collection/generic/BitSetFactory.apply$ (2 samples, 0.19%)</title><rect x="562.0" y="147.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="565.0" y="158.0"></text>
</g>
<g>
<title>scala/collection/generic/BitSetFactory.apply (2 samples, 0.19%)</title><rect x="562.0" y="131.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.0" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet$.empty (2 samples, 0.19%)</title><rect x="562.0" y="115.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="565.0" y="126.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet$.empty (2 samples, 0.19%)</title><rect x="562.0" y="99.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.0" y="110.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.&lt;init&gt; (2 samples, 0.19%)</title><rect x="562.0" y="83.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="565.0" y="94.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.&lt;init&gt; (2 samples, 0.19%)</title><rect x="562.0" y="67.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="565.0" y="78.0"></text>
</g>
<g>
<title>scala/collection/Map$WithDefault.get (13 samples, 1.25%)</title><rect x="564.3" y="243.0" width="14.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.3" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (13 samples, 1.25%)</title><rect x="564.3" y="227.0" width="14.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.3" y="238.0"></text>
</g>
<g>
<title>scala/Some.&lt;init&gt; (1 samples, 0.10%)</title><rect x="564.3" y="211.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.3" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (12 samples, 1.15%)</title><rect x="565.4" y="211.0" width="13.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.4" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (12 samples, 1.15%)</title><rect x="565.4" y="195.0" width="13.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.4" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (12 samples, 1.15%)</title><rect x="565.4" y="179.0" width="13.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="568.4" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.10%)</title><rect x="565.4" y="163.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.4" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.10%)</title><rect x="565.4" y="147.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.4" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (9 samples, 0.86%)</title><rect x="566.6" y="163.0" width="10.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="569.6" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (9 samples, 0.86%)</title><rect x="566.6" y="147.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.6" y="158.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.19%)</title><rect x="567.7" y="131.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="570.7" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.improve (1 samples, 0.10%)</title><rect x="570.0" y="131.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.0" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (5 samples, 0.48%)</title><rect x="571.1" y="131.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.1" y="142.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.29%)</title><rect x="571.1" y="115.0" width="3.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="574.1" y="126.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.table (2 samples, 0.19%)</title><rect x="574.5" y="115.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.5" y="126.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (2 samples, 0.19%)</title><rect x="576.8" y="163.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="579.8" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.add (3 samples, 0.29%)</title><rect x="579.0" y="291.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.0" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.updateWord (3 samples, 0.29%)</title><rect x="579.0" y="275.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.0" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.ensureCapacity (3 samples, 0.29%)</title><rect x="579.0" y="259.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.0" y="270.0"></text>
</g>
<g>
<title>scala/Array$.copy (1 samples, 0.10%)</title><rect x="581.3" y="243.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="584.3" y="254.0"></text>
</g>
<g>
<title>scala/Array$.slowcopy (1 samples, 0.10%)</title><rect x="581.3" y="227.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="584.3" y="238.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$.array_update (1 samples, 0.10%)</title><rect x="581.3" y="211.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.3" y="222.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.10%)</title><rect x="581.3" y="195.0" width="1.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="584.3" y="206.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (2 samples, 0.19%)</title><rect x="582.4" y="307.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="585.4" y="318.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (2 samples, 0.19%)</title><rect x="582.4" y="291.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="585.4" y="302.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.10%)</title><rect x="583.6" y="275.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="586.6" y="286.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.10%)</title><rect x="583.6" y="259.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="586.6" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (19 samples, 1.83%)</title><rect x="584.7" y="371.0" width="21.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="587.7" y="382.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (19 samples, 1.83%)</title><rect x="584.7" y="355.0" width="21.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="587.7" y="366.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (19 samples, 1.83%)</title><rect x="584.7" y="339.0" width="21.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="587.7" y="350.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (19 samples, 1.83%)</title><rect x="584.7" y="323.0" width="21.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="587.7" y="334.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.10%)</title><rect x="584.7" y="307.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="587.7" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.10%)</title><rect x="584.7" y="291.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="587.7" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.10%)</title><rect x="584.7" y="275.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="587.7" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.table (1 samples, 0.10%)</title><rect x="584.7" y="259.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="587.7" y="270.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.10%)</title><rect x="584.7" y="243.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="587.7" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (18 samples, 1.73%)</title><rect x="585.8" y="307.0" width="20.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="588.8" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (15 samples, 1.44%)</title><rect x="589.2" y="291.0" width="17.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="592.2" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (15 samples, 1.44%)</title><rect x="589.2" y="275.0" width="17.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="592.2" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (5 samples, 0.48%)</title><rect x="589.2" y="259.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="592.2" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (10 samples, 0.96%)</title><rect x="594.9" y="259.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="597.9" y="270.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (10 samples, 0.96%)</title><rect x="594.9" y="243.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="597.9" y="254.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (9 samples, 0.86%)</title><rect x="596.0" y="227.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="599.0" y="238.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (9 samples, 0.86%)</title><rect x="596.0" y="211.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="599.0" y="222.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (9 samples, 0.86%)</title><rect x="596.0" y="195.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.0" y="206.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (9 samples, 0.86%)</title><rect x="596.0" y="179.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.0" y="190.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (8 samples, 0.77%)</title><rect x="596.0" y="163.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.0" y="174.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (8 samples, 0.77%)</title><rect x="596.0" y="147.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.0" y="158.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (8 samples, 0.77%)</title><rect x="596.0" y="131.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="599.0" y="142.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.equals (1 samples, 0.10%)</title><rect x="605.1" y="163.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="608.1" y="174.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (5 samples, 0.48%)</title><rect x="606.2" y="371.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="609.2" y="382.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (5 samples, 0.48%)</title><rect x="606.2" y="355.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.2" y="366.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (4 samples, 0.38%)</title><rect x="606.2" y="339.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="609.2" y="350.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (4 samples, 0.38%)</title><rect x="606.2" y="323.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="609.2" y="334.0"></text>
</g>
<g>
<title>java/math/BigInteger.signInt (3 samples, 0.29%)</title><rect x="607.4" y="307.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="610.4" y="318.0"></text>
</g>
<g>
<title>scala/math/BigInt.bigInteger (1 samples, 0.10%)</title><rect x="610.8" y="339.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="613.8" y="350.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.10%)</title><rect x="610.8" y="323.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="613.8" y="334.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.run (48 samples, 4.61%)</title><rect x="611.9" y="387.0" width="54.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.9" y="398.0">tread..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/288442918.linkToTargetMethod (1 samples, 0.10%)</title><rect x="611.9" y="371.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="614.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/789219251.invokeStatic_LL_L (1 samples, 0.10%)</title><rect x="611.9" y="355.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="614.9" y="366.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$22407/1753583965.get$Lambda (1 samples, 0.10%)</title><rect x="611.9" y="339.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="614.9" y="350.0"></text>
</g>
<g>
<title>scala/Option.foreach (46 samples, 4.42%)</title><rect x="613.0" y="371.0" width="52.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.0" y="382.0">scala..</text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$22407/1753583965.apply (46 samples, 4.42%)</title><rect x="613.0" y="355.0" width="52.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="616.0" y="366.0">tread..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5$adapted (46 samples, 4.42%)</title><rect x="613.0" y="339.0" width="52.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="616.0" y="350.0">tread..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5 (46 samples, 4.42%)</title><rect x="613.0" y="323.0" width="52.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.0" y="334.0">tread..</text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (45 samples, 4.32%)</title><rect x="614.2" y="307.0" width="51.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="617.2" y="318.0">tread..</text>
</g>
<g>
<title>logger/Logger.info (7 samples, 0.67%)</title><rect x="614.2" y="291.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.2" y="302.0"></text>
</g>
<g>
<title>logger/Logger$.logger$Logger$$showMessage (7 samples, 0.67%)</title><rect x="614.2" y="275.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.2" y="286.0"></text>
</g>
<g>
<title>logger/Logger$.state (5 samples, 0.48%)</title><rect x="614.2" y="259.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="617.2" y="270.0"></text>
</g>
<g>
<title>scala/Some.get (2 samples, 0.19%)</title><rect x="614.2" y="243.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="617.2" y="254.0"></text>
</g>
<g>
<title>scala/Some.value (2 samples, 0.19%)</title><rect x="614.2" y="227.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.2" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (1 samples, 0.10%)</title><rect x="615.3" y="211.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.3" y="222.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (3 samples, 0.29%)</title><rect x="616.4" y="243.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.4" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.29%)</title><rect x="616.4" y="227.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="619.4" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (3 samples, 0.29%)</title><rect x="616.4" y="211.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="619.4" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.29%)</title><rect x="616.4" y="195.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.4" y="206.0"></text>
</g>
<g>
<title>logger/Logger$.testPackageNameMatch (2 samples, 0.19%)</title><rect x="619.8" y="259.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="622.8" y="270.0"></text>
</g>
<g>
<title>logger/Logger$.state (2 samples, 0.19%)</title><rect x="619.8" y="243.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="622.8" y="254.0"></text>
</g>
<g>
<title>logger/Logger$.updatableLoggerState (1 samples, 0.10%)</title><rect x="619.8" y="227.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="622.8" y="238.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (1 samples, 0.10%)</title><rect x="621.0" y="227.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.0" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.10%)</title><rect x="621.0" y="211.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="624.0" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.10%)</title><rect x="621.0" y="195.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="624.0" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.10%)</title><rect x="621.0" y="179.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.0" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (2 samples, 0.19%)</title><rect x="622.1" y="291.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="625.1" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (2 samples, 0.19%)</title><rect x="622.1" y="275.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.1" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (2 samples, 0.19%)</title><rect x="622.1" y="259.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="625.1" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (2 samples, 0.19%)</title><rect x="622.1" y="243.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.1" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.10%)</title><rect x="623.2" y="227.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="626.2" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.10%)</title><rect x="623.2" y="211.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.2" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.10%)</title><rect x="623.2" y="195.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.2" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.10%)</title><rect x="623.2" y="179.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="626.2" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.10%)</title><rect x="623.2" y="163.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.2" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.10%)</title><rect x="623.2" y="147.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.2" y="158.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.10%)</title><rect x="623.2" y="131.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="626.2" y="142.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.10%)</title><rect x="623.2" y="115.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="626.2" y="126.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (1 samples, 0.10%)</title><rect x="623.2" y="99.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.2" y="110.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="623.2" y="83.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="626.2" y="94.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$plus$eq (1 samples, 0.10%)</title><rect x="624.4" y="291.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.4" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (1 samples, 0.10%)</title><rect x="624.4" y="275.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.4" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (1 samples, 0.10%)</title><rect x="624.4" y="259.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.4" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (1 samples, 0.10%)</title><rect x="624.4" y="243.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.4" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (1 samples, 0.10%)</title><rect x="624.4" y="227.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.4" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (1 samples, 0.10%)</title><rect x="624.4" y="211.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.4" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (1 samples, 0.10%)</title><rect x="624.4" y="195.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="627.4" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (12 samples, 1.15%)</title><rect x="625.5" y="291.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.5" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (12 samples, 1.15%)</title><rect x="625.5" y="275.0" width="13.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.5" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (12 samples, 1.15%)</title><rect x="625.5" y="259.0" width="13.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.5" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (12 samples, 1.15%)</title><rect x="625.5" y="243.0" width="13.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="628.5" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (12 samples, 1.15%)</title><rect x="625.5" y="227.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.5" y="238.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.10%)</title><rect x="626.6" y="211.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.6" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.index (8 samples, 0.77%)</title><rect x="627.8" y="211.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.8" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index$ (8 samples, 0.77%)</title><rect x="627.8" y="195.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.8" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index (8 samples, 0.77%)</title><rect x="627.8" y="179.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="630.8" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.improve (8 samples, 0.77%)</title><rect x="627.8" y="163.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="630.8" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve$ (8 samples, 0.77%)</title><rect x="627.8" y="147.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.8" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve (8 samples, 0.77%)</title><rect x="627.8" y="131.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.19%)</title><rect x="633.4" y="115.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.4" y="126.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="635.7" y="115.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="638.7" y="126.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.19%)</title><rect x="636.8" y="211.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="639.8" y="222.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.19%)</title><rect x="636.8" y="195.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="639.8" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.19%)</title><rect x="636.8" y="179.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.8" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (2 samples, 0.19%)</title><rect x="636.8" y="163.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.8" y="174.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isNewValue (3 samples, 0.29%)</title><rect x="639.1" y="291.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.1" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.10%)</title><rect x="639.1" y="275.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.1" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.10%)</title><rect x="639.1" y="259.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.1" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (1 samples, 0.10%)</title><rect x="639.1" y="243.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="642.1" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (1 samples, 0.10%)</title><rect x="639.1" y="227.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.1" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (1 samples, 0.10%)</title><rect x="639.1" y="211.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.1" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (1 samples, 0.10%)</title><rect x="639.1" y="195.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.1" y="206.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (2 samples, 0.19%)</title><rect x="640.2" y="275.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.2" y="286.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (2 samples, 0.19%)</title><rect x="640.2" y="259.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.2" y="270.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (2 samples, 0.19%)</title><rect x="640.2" y="243.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.2" y="254.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (2 samples, 0.19%)</title><rect x="640.2" y="227.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.2" y="238.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isTempWire (19 samples, 1.83%)</title><rect x="642.5" y="291.0" width="21.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.5" y="302.0">t..</text>
</g>
<g>
<title>java/lang/String.split (18 samples, 1.73%)</title><rect x="642.5" y="275.0" width="20.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="645.5" y="286.0"></text>
</g>
<g>
<title>java/lang/String.split (18 samples, 1.73%)</title><rect x="642.5" y="259.0" width="20.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="645.5" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (10 samples, 0.96%)</title><rect x="645.9" y="243.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.9" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList$1.hasNext (1 samples, 0.10%)</title><rect x="653.8" y="227.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList$1.next (2 samples, 0.19%)</title><rect x="655.0" y="227.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.0" y="238.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.compile (5 samples, 0.48%)</title><rect x="657.2" y="243.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="660.2" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.&lt;init&gt; (5 samples, 0.48%)</title><rect x="657.2" y="227.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.10%)</title><rect x="662.9" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="665.9" y="286.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.10%)</title><rect x="662.9" y="259.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.9" y="270.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.updateInfo$1 (1 samples, 0.10%)</title><rect x="664.0" y="291.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.0" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$minus$eq (1 samples, 0.10%)</title><rect x="664.0" y="275.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="667.0" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.removeElem (1 samples, 0.10%)</title><rect x="664.0" y="259.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.0" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.removeElem$ (1 samples, 0.10%)</title><rect x="664.0" y="243.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="667.0" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.removeElem (1 samples, 0.10%)</title><rect x="664.0" y="227.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="667.0" y="238.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.10%)</title><rect x="665.2" y="371.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="668.2" y="382.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.10%)</title><rect x="665.2" y="355.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.2" y="366.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.10%)</title><rect x="665.2" y="339.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.2" y="350.0"></text>
</g>
<g>
<title>scala/math/BigInt$.minCached (1 samples, 0.10%)</title><rect x="665.2" y="323.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.2" y="334.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22243/1704523794.apply$mcI$sp (4 samples, 0.38%)</title><rect x="666.3" y="499.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="669.3" y="510.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$1 (4 samples, 0.38%)</title><rect x="666.3" y="483.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.3" y="494.0"></text>
</g>
<g>
<title>treadle/executable/EqInts.apply (2 samples, 0.19%)</title><rect x="666.3" y="467.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.3" y="478.0"></text>
</g>
<g>
<title>treadle/executable/MuxInts.apply (2 samples, 0.19%)</title><rect x="668.6" y="467.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.6" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22240/1979407308.apply$mcI$sp (1 samples, 0.10%)</title><rect x="668.6" y="451.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="671.6" y="462.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$188 (1 samples, 0.10%)</title><rect x="668.6" y="435.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="671.6" y="446.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$GetInt.apply (1 samples, 0.10%)</title><rect x="668.6" y="419.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="671.6" y="430.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$GetInt.index (1 samples, 0.10%)</title><rect x="668.6" y="403.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="671.6" y="414.0"></text>
</g>
<g>
<title>treadle/executable/MuxInts.trueClause (1 samples, 0.10%)</title><rect x="669.7" y="451.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="672.7" y="462.0"></text>
</g>
<g>
<title>treadle/executable/MuxInts.apply (1 samples, 0.10%)</title><rect x="670.8" y="499.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="673.8" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignInt.run (3 samples, 0.29%)</title><rect x="672.0" y="547.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="675.0" y="558.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong$$Lambda$22398/450609576.apply$mcV$sp (256 samples, 24.59%)</title><rect x="675.4" y="547.0" width="290.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="678.4" y="558.0">treadle/executable/DataStore$AssignLong..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.$anonfun$setLeanMode$4 (256 samples, 24.59%)</title><rect x="675.4" y="531.0" width="290.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="678.4" y="542.0">treadle/executable/DataStore$AssignLong..</text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.runFull (256 samples, 24.59%)</title><rect x="675.4" y="515.0" width="290.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="678.4" y="526.0">treadle/executable/DataStore$AssignLong..</text>
</g>
<g>
<title>scala/Option.isDefined (1 samples, 0.10%)</title><rect x="676.5" y="499.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.5" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.symbol (1 samples, 0.10%)</title><rect x="677.6" y="499.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.6" y="510.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.treadle$executable$DataStore$AssignLong$$$outer (3 samples, 0.29%)</title><rect x="678.8" y="499.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.8" y="510.0"></text>
</g>
<g>
<title>treadle/executable/BitsLongs.apply (1 samples, 0.10%)</title><rect x="679.9" y="483.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="682.9" y="494.0"></text>
</g>
<g>
<title>treadle/executable/CatLongs.apply (1 samples, 0.10%)</title><rect x="681.0" y="483.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.0" y="494.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (7 samples, 0.67%)</title><rect x="682.2" y="499.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.2" y="510.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (4 samples, 0.38%)</title><rect x="684.4" y="483.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="687.4" y="494.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (4 samples, 0.38%)</title><rect x="684.4" y="467.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.4" y="478.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (2 samples, 0.19%)</title><rect x="685.6" y="451.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="688.6" y="462.0"></text>
</g>
<g>
<title>scala/math/BigInt$.minCached (1 samples, 0.10%)</title><rect x="687.8" y="451.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.8" y="462.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.dataSize (1 samples, 0.10%)</title><rect x="689.0" y="483.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.0" y="494.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.runPlugins (235 samples, 22.57%)</title><rect x="690.1" y="499.0" width="266.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.1" y="510.0">treadle/executable/DataStore.runPlug..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/523310038.linkToTargetMethod (2 samples, 0.19%)</title><rect x="690.1" y="483.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1964254873.invokeStatic_LIL_L (2 samples, 0.19%)</title><rect x="690.1" y="467.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.1" y="478.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$22406/745475904.get$Lambda (2 samples, 0.19%)</title><rect x="690.1" y="451.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="693.1" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.foreach (233 samples, 22.38%)</title><rect x="692.4" y="483.0" width="264.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.4" y="494.0">scala/collection/mutable/ArrayBuffe..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach$ (233 samples, 22.38%)</title><rect x="692.4" y="467.0" width="264.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.4" y="478.0">scala/collection/mutable/ResizableA..</text>
</g>
<g>
<title>scala/collection/mutable/ResizableArray.foreach (233 samples, 22.38%)</title><rect x="692.4" y="451.0" width="264.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.4" y="462.0">scala/collection/mutable/ResizableA..</text>
</g>
<g>
<title>treadle/executable/DataStore$$Lambda$22406/745475904.apply (231 samples, 22.19%)</title><rect x="694.6" y="435.0" width="261.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.6" y="446.0">treadle/executable/DataStore$$Lambd..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1$adapted (230 samples, 22.09%)</title><rect x="695.8" y="419.0" width="260.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.8" y="430.0">treadle/executable/DataStore.$anonf..</text>
</g>
<g>
<title>treadle/executable/DataStore.$anonfun$runPlugins$1 (230 samples, 22.09%)</title><rect x="695.8" y="403.0" width="260.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.8" y="414.0">treadle/executable/DataStore.$anonf..</text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (2 samples, 0.19%)</title><rect x="695.8" y="387.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="698.8" y="398.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C_helper(JavaThread*, nmethod*&amp;) (1 samples, 0.10%)</title><rect x="695.8" y="371.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="698.8" y="382.0"></text>
</g>
<g>
<title>nmethod::handler_for_exception_and_pc(Handle, unsigned char*) (1 samples, 0.10%)</title><rect x="695.8" y="355.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="698.8" y="366.0"></text>
</g>
<g>
<title>ExceptionCache::match(Handle, unsigned char*) (1 samples, 0.10%)</title><rect x="695.8" y="339.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="698.8" y="350.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.10%)</title><rect x="696.9" y="371.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="699.9" y="382.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.10%)</title><rect x="696.9" y="355.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="699.9" y="366.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.10%)</title><rect x="696.9" y="339.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="699.9" y="350.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.10%)</title><rect x="696.9" y="323.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="699.9" y="334.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.10%)</title><rect x="696.9" y="307.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="699.9" y="318.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.10%)</title><rect x="698.0" y="387.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="701.0" y="398.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$22408/370601809.apply (2 samples, 0.19%)</title><rect x="699.2" y="387.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.2" y="398.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.run (119 samples, 11.43%)</title><rect x="701.5" y="387.0" width="134.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="704.5" y="398.0">treadle/executabl..</text>
</g>
<g>
<title>scala/Option.foreach (93 samples, 8.93%)</title><rect x="701.5" y="371.0" width="105.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.5" y="382.0">scala/Option...</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.10%)</title><rect x="701.5" y="355.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.5" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$22408/370601809.apply (1 samples, 0.10%)</title><rect x="701.5" y="339.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.5" y="350.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$22408/370601809.apply (92 samples, 8.84%)</title><rect x="702.6" y="355.0" width="104.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.6" y="366.0">treadle/exec..</text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (4 samples, 0.38%)</title><rect x="702.6" y="339.0" width="4.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="705.6" y="350.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.10%)</title><rect x="702.6" y="323.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="705.6" y="334.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.10%)</title><rect x="702.6" y="307.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="705.6" y="318.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C_helper(JavaThread*, nmethod*&amp;) (2 samples, 0.19%)</title><rect x="703.7" y="323.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="706.7" y="334.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.10%)</title><rect x="703.7" y="307.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="706.7" y="318.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.10%)</title><rect x="703.7" y="291.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="706.7" y="302.0"></text>
</g>
<g>
<title>JavaThread::reguard_stack() (1 samples, 0.10%)</title><rect x="704.9" y="307.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="707.9" y="318.0"></text>
</g>
<g>
<title>JavaThread::reguard_stack(unsigned char*) (1 samples, 0.10%)</title><rect x="704.9" y="291.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="707.9" y="302.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.10%)</title><rect x="706.0" y="323.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="709.0" y="334.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.10%)</title><rect x="706.0" y="307.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="709.0" y="318.0"></text>
</g>
<g>
<title>nmethod::is_nmethod() const (1 samples, 0.10%)</title><rect x="706.0" y="291.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="709.0" y="302.0"></text>
</g>
<g>
<title>SharedRuntime::raw_exception_handler_for_return_address(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="707.1" y="339.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="710.1" y="350.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.10%)</title><rect x="707.1" y="323.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="710.1" y="334.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.10%)</title><rect x="707.1" y="307.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="710.1" y="318.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.10%)</title><rect x="707.1" y="291.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="710.1" y="302.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1$adapted (87 samples, 8.36%)</title><rect x="708.3" y="339.0" width="98.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="711.3" y="350.0">treadle/exec..</text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$run$1 (87 samples, 8.36%)</title><rect x="708.3" y="323.0" width="98.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.3" y="334.0">treadle/exec..</text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (1 samples, 0.10%)</title><rect x="711.7" y="307.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.7" y="318.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.size$ (1 samples, 0.10%)</title><rect x="711.7" y="291.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.7" y="302.0"></text>
</g>
<g>
<title>scala/collection/SeqLike.size (1 samples, 0.10%)</title><rect x="711.7" y="275.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.7" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.length (1 samples, 0.10%)</title><rect x="711.7" y="259.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.7" y="270.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.length$ (1 samples, 0.10%)</title><rect x="711.7" y="243.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.7" y="254.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.length (1 samples, 0.10%)</title><rect x="711.7" y="227.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.7" y="238.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.apply (12 samples, 1.15%)</title><rect x="712.8" y="307.0" width="13.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="715.8" y="318.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.apply$ (12 samples, 1.15%)</title><rect x="712.8" y="291.0" width="13.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.8" y="302.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.apply (12 samples, 1.15%)</title><rect x="712.8" y="275.0" width="13.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.8" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (12 samples, 1.15%)</title><rect x="712.8" y="259.0" width="13.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.8" y="270.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (10 samples, 0.96%)</title><rect x="715.1" y="243.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="718.1" y="254.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.29%)</title><rect x="721.9" y="227.0" width="3.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="724.9" y="238.0"></text>
</g>
<g>
<title>treadle/executable/StaticDependencyBundle.totalSources (1 samples, 0.10%)</title><rect x="725.3" y="227.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="728.3" y="238.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.last (1 samples, 0.10%)</title><rect x="726.4" y="307.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="729.4" y="318.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.last$ (1 samples, 0.10%)</title><rect x="726.4" y="291.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="729.4" y="302.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.last (1 samples, 0.10%)</title><rect x="726.4" y="275.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="729.4" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.reverse (1 samples, 0.10%)</title><rect x="727.5" y="307.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="730.5" y="318.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.addAntiDependency (64 samples, 6.15%)</title><rect x="728.7" y="307.0" width="72.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="731.7" y="318.0">treadle/..</text>
</g>
<g>
<title>scala/collection/AbstractMap.apply (48 samples, 4.61%)</title><rect x="728.7" y="291.0" width="54.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.7" y="302.0">scala..</text>
</g>
<g>
<title>scala/collection/MapLike.apply$ (48 samples, 4.61%)</title><rect x="728.7" y="275.0" width="54.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.7" y="286.0">scala..</text>
</g>
<g>
<title>scala/collection/MapLike.apply (48 samples, 4.61%)</title><rect x="728.7" y="259.0" width="54.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.7" y="270.0">scala..</text>
</g>
<g>
<title>scala/collection/Map$WithDefault.default (8 samples, 0.77%)</title><rect x="728.7" y="243.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="731.7" y="254.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage$$Lambda$22403/1395992911.apply (8 samples, 0.77%)</title><rect x="728.7" y="227.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.7" y="238.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$newCycleMap$1$adapted (8 samples, 0.77%)</title><rect x="728.7" y="211.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.7" y="222.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.$anonfun$newCycleMap$1 (8 samples, 0.77%)</title><rect x="728.7" y="195.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.7" y="206.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.newBitSet (8 samples, 0.77%)</title><rect x="728.7" y="179.0" width="9.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.7" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet$.apply (8 samples, 0.77%)</title><rect x="728.7" y="163.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="731.7" y="174.0"></text>
</g>
<g>
<title>scala/collection/generic/BitSetFactory.apply$ (8 samples, 0.77%)</title><rect x="728.7" y="147.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.7" y="158.0"></text>
</g>
<g>
<title>scala/collection/generic/BitSetFactory.apply (8 samples, 0.77%)</title><rect x="728.7" y="131.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.7" y="142.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.$div$colon (3 samples, 0.29%)</title><rect x="728.7" y="115.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.7" y="126.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.$div$colon$ (3 samples, 0.29%)</title><rect x="728.7" y="99.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.7" y="110.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.$div$colon (3 samples, 0.29%)</title><rect x="728.7" y="83.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.7" y="94.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (3 samples, 0.29%)</title><rect x="728.7" y="67.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.7" y="78.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOptimized.foldLeft$ (3 samples, 0.29%)</title><rect x="728.7" y="51.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.7" y="62.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet$.empty (5 samples, 0.48%)</title><rect x="732.1" y="115.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.1" y="126.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet$.empty (4 samples, 0.38%)</title><rect x="733.2" y="99.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="736.2" y="110.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.&lt;init&gt; (4 samples, 0.38%)</title><rect x="733.2" y="83.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="736.2" y="94.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.&lt;init&gt; (4 samples, 0.38%)</title><rect x="733.2" y="67.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="736.2" y="78.0"></text>
</g>
<g>
<title>scala/runtime/RichInt$.max$extension (1 samples, 0.10%)</title><rect x="736.6" y="51.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="739.6" y="62.0"></text>
</g>
<g>
<title>scala/collection/Map$WithDefault.get (40 samples, 3.84%)</title><rect x="737.7" y="243.0" width="45.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.7" y="254.0">scal..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (39 samples, 3.75%)</title><rect x="738.9" y="227.0" width="44.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.9" y="238.0">scal..</text>
</g>
<g>
<title>scala/Some.&lt;init&gt; (2 samples, 0.19%)</title><rect x="738.9" y="211.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.9" y="222.0"></text>
</g>
<g>
<title>scala/Option.&lt;init&gt; (2 samples, 0.19%)</title><rect x="738.9" y="195.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="741.9" y="206.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.10%)</title><rect x="740.0" y="179.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.0" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (37 samples, 3.55%)</title><rect x="741.1" y="211.0" width="42.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.1" y="222.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (36 samples, 3.46%)</title><rect x="742.3" y="195.0" width="40.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.3" y="206.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (36 samples, 3.46%)</title><rect x="742.3" y="179.0" width="40.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.3" y="190.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (34 samples, 3.27%)</title><rect x="743.4" y="163.0" width="38.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.4" y="174.0">sca..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (34 samples, 3.27%)</title><rect x="743.4" y="147.0" width="38.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="746.4" y="158.0">sca..</text>
</g>
<g>
<title>itable stub (8 samples, 0.77%)</title><rect x="744.5" y="131.0" width="9.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="747.5" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.improve (1 samples, 0.10%)</title><rect x="753.6" y="131.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.6" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (24 samples, 2.31%)</title><rect x="754.7" y="131.0" width="27.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="757.7" y="142.0">s..</text>
</g>
<g>
<title>itable stub (18 samples, 1.73%)</title><rect x="757.0" y="115.0" width="20.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="760.0" y="126.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.table (4 samples, 0.38%)</title><rect x="777.4" y="115.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.4" y="126.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.10%)</title><rect x="781.9" y="163.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.9" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.add (14 samples, 1.34%)</title><rect x="783.1" y="291.0" width="15.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="786.1" y="302.0"></text>
</g>
<g>
<title>scala/Array$.copy (2 samples, 0.19%)</title><rect x="784.2" y="275.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="787.2" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.contains (2 samples, 0.19%)</title><rect x="786.5" y="275.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.5" y="286.0"></text>
</g>
<g>
<title>scala/collection/BitSetLike.contains$ (2 samples, 0.19%)</title><rect x="786.5" y="259.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="789.5" y="270.0"></text>
</g>
<g>
<title>scala/collection/BitSetLike.contains (2 samples, 0.19%)</title><rect x="786.5" y="243.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="789.5" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.word (2 samples, 0.19%)</title><rect x="786.5" y="227.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="789.5" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.nwords (1 samples, 0.10%)</title><rect x="786.5" y="211.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="789.5" y="222.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.10%)</title><rect x="787.6" y="211.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="790.6" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.updateWord (9 samples, 0.86%)</title><rect x="788.7" y="275.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="791.7" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/BitSet.ensureCapacity (9 samples, 0.86%)</title><rect x="788.7" y="259.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.7" y="270.0"></text>
</g>
<g>
<title>scala/Array$.copy (8 samples, 0.77%)</title><rect x="789.9" y="243.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.9" y="254.0"></text>
</g>
<g>
<title>scala/Array$.slowcopy (8 samples, 0.77%)</title><rect x="789.9" y="227.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.9" y="238.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$.array_update (8 samples, 0.77%)</title><rect x="789.9" y="211.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.9" y="222.0"></text>
</g>
<g>
<title>generic_arraycopy (2 samples, 0.19%)</title><rect x="791.0" y="195.0" width="2.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="794.0" y="206.0"></text>
</g>
<g>
<title>jlong_arraycopy (2 samples, 0.19%)</title><rect x="793.3" y="195.0" width="2.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="796.3" y="206.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.29%)</title><rect x="795.5" y="195.0" width="3.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="798.5" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToInteger (2 samples, 0.19%)</title><rect x="798.9" y="291.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.9" y="302.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.19%)</title><rect x="798.9" y="275.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="801.9" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.&lt;init&gt; (1 samples, 0.10%)</title><rect x="800.1" y="259.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="803.1" y="270.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (5 samples, 0.48%)</title><rect x="801.2" y="307.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="804.2" y="318.0"></text>
</g>
<g>
<title>scala/math/BigInt.intValue (1 samples, 0.10%)</title><rect x="801.2" y="291.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.2" y="302.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (1 samples, 0.10%)</title><rect x="801.2" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="804.2" y="286.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (1 samples, 0.10%)</title><rect x="801.2" y="259.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.2" y="270.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (4 samples, 0.38%)</title><rect x="802.3" y="291.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="805.3" y="302.0"></text>
</g>
<g>
<title>scala/math/BigInt$.int2bigInt (1 samples, 0.10%)</title><rect x="804.6" y="275.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="807.6" y="286.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (1 samples, 0.10%)</title><rect x="805.7" y="275.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.7" y="286.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.10%)</title><rect x="805.7" y="259.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.7" y="270.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.10%)</title><rect x="805.7" y="243.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.7" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (22 samples, 2.11%)</title><rect x="806.9" y="371.0" width="24.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.9" y="382.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (20 samples, 1.92%)</title><rect x="809.1" y="355.0" width="22.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.1" y="366.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (20 samples, 1.92%)</title><rect x="809.1" y="339.0" width="22.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.1" y="350.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (20 samples, 1.92%)</title><rect x="809.1" y="323.0" width="22.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.1" y="334.0">s..</text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (2 samples, 0.19%)</title><rect x="809.1" y="307.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.1" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (2 samples, 0.19%)</title><rect x="809.1" y="291.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.1" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (2 samples, 0.19%)</title><rect x="809.1" y="275.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.1" y="286.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.10%)</title><rect x="810.3" y="259.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.3" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.10%)</title><rect x="811.4" y="307.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="814.4" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.10%)</title><rect x="811.4" y="291.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.4" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.10%)</title><rect x="811.4" y="275.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="814.4" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.table (1 samples, 0.10%)</title><rect x="811.4" y="259.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="814.4" y="270.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.10%)</title><rect x="811.4" y="243.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="814.4" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (17 samples, 1.63%)</title><rect x="812.5" y="307.0" width="19.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="815.5" y="318.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (1 samples, 0.10%)</title><rect x="814.8" y="291.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="817.8" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (14 samples, 1.34%)</title><rect x="815.9" y="291.0" width="15.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="818.9" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (14 samples, 1.34%)</title><rect x="815.9" y="275.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.9" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (8 samples, 0.77%)</title><rect x="817.1" y="259.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.1" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (5 samples, 0.48%)</title><rect x="826.1" y="259.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.1" y="270.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (5 samples, 0.48%)</title><rect x="826.1" y="243.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="829.1" y="254.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (5 samples, 0.48%)</title><rect x="826.1" y="227.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.1" y="238.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (5 samples, 0.48%)</title><rect x="826.1" y="211.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="829.1" y="222.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (5 samples, 0.48%)</title><rect x="826.1" y="195.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="829.1" y="206.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (5 samples, 0.48%)</title><rect x="826.1" y="179.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="829.1" y="190.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (4 samples, 0.38%)</title><rect x="826.1" y="163.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.1" y="174.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (4 samples, 0.38%)</title><rect x="826.1" y="147.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.1" y="158.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (4 samples, 0.38%)</title><rect x="826.1" y="131.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="829.1" y="142.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.equals (1 samples, 0.10%)</title><rect x="830.7" y="163.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="833.7" y="174.0"></text>
</g>
<g>
<title>treadle/executable/ReportUsage.getSymbolVal (4 samples, 0.38%)</title><rect x="831.8" y="371.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.8" y="382.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (4 samples, 0.38%)</title><rect x="831.8" y="355.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.8" y="366.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (3 samples, 0.29%)</title><rect x="831.8" y="339.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="834.8" y="350.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (3 samples, 0.29%)</title><rect x="831.8" y="323.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="834.8" y="334.0"></text>
</g>
<g>
<title>java/math/BigInteger.valueOf (1 samples, 0.10%)</title><rect x="831.8" y="307.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="834.8" y="318.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (2 samples, 0.19%)</title><rect x="832.9" y="307.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.9" y="318.0"></text>
</g>
<g>
<title>treadle/executable/Symbol.dataSize (1 samples, 0.10%)</title><rect x="835.2" y="339.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="838.2" y="350.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.run (106 samples, 10.18%)</title><rect x="836.3" y="387.0" width="120.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="839.3" y="398.0">treadle/executa..</text>
</g>
<g>
<title>scala/Option.foreach (103 samples, 9.89%)</title><rect x="837.5" y="371.0" width="116.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.5" y="382.0">scala/Option.f..</text>
</g>
<g>
<title>treadle/executable/VcdHook$$Lambda$22407/1753583965.apply (102 samples, 9.80%)</title><rect x="838.6" y="355.0" width="115.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="841.6" y="366.0">treadle/execut..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5$adapted (102 samples, 9.80%)</title><rect x="838.6" y="339.0" width="115.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="841.6" y="350.0">treadle/execut..</text>
</g>
<g>
<title>treadle/executable/VcdHook.$anonfun$run$5 (102 samples, 9.80%)</title><rect x="838.6" y="323.0" width="115.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.6" y="334.0">treadle/execut..</text>
</g>
<g>
<title>treadle/vcd/VCD.wireChanged (102 samples, 9.80%)</title><rect x="838.6" y="307.0" width="115.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="841.6" y="318.0">treadle/vcd/VC..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1588412915.linkToTargetMethod (1 samples, 0.10%)</title><rect x="840.9" y="291.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/832279283.invokeStatic_L3_L (1 samples, 0.10%)</title><rect x="840.9" y="275.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="843.9" y="286.0"></text>
</g>
<g>
<title>treadle/vcd/VCD$$Lambda$22395/545002807.get$Lambda (1 samples, 0.10%)</title><rect x="840.9" y="259.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.9" y="270.0"></text>
</g>
<g>
<title>treadle/vcd/VCD$$Lambda$22395/545002807.&lt;init&gt; (1 samples, 0.10%)</title><rect x="840.9" y="243.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="843.9" y="254.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (1 samples, 0.10%)</title><rect x="840.9" y="227.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="843.9" y="238.0"></text>
</g>
<g>
<title>logger/Logger.info (6 samples, 0.58%)</title><rect x="842.0" y="291.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="845.0" y="302.0"></text>
</g>
<g>
<title>logger/Logger$.logger$Logger$$showMessage (5 samples, 0.48%)</title><rect x="843.1" y="275.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="846.1" y="286.0"></text>
</g>
<g>
<title>logger/Logger$.state (1 samples, 0.10%)</title><rect x="844.3" y="259.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="847.3" y="270.0"></text>
</g>
<g>
<title>scala/Some.get (1 samples, 0.10%)</title><rect x="844.3" y="243.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.3" y="254.0"></text>
</g>
<g>
<title>scala/Some.value (1 samples, 0.10%)</title><rect x="844.3" y="227.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="847.3" y="238.0"></text>
</g>
<g>
<title>logger/Logger$.testPackageNameMatch (3 samples, 0.29%)</title><rect x="845.4" y="259.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="848.4" y="270.0"></text>
</g>
<g>
<title>logger/Logger$.state (3 samples, 0.29%)</title><rect x="845.4" y="243.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="848.4" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.10%)</title><rect x="845.4" y="227.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.4" y="238.0"></text>
</g>
<g>
<title>scala/util/DynamicVariable.value (2 samples, 0.19%)</title><rect x="846.5" y="227.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="849.5" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.19%)</title><rect x="846.5" y="211.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="849.5" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (2 samples, 0.19%)</title><rect x="846.5" y="195.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="849.5" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.10%)</title><rect x="847.7" y="179.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.7" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.contains (6 samples, 0.58%)</title><rect x="848.8" y="291.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.8" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (6 samples, 0.58%)</title><rect x="848.8" y="275.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="851.8" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (6 samples, 0.58%)</title><rect x="848.8" y="259.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.8" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (6 samples, 0.58%)</title><rect x="848.8" y="243.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="851.8" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.10%)</title><rect x="848.8" y="227.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="851.8" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.10%)</title><rect x="848.8" y="211.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="851.8" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.10%)</title><rect x="848.8" y="195.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="851.8" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.improve (1 samples, 0.10%)</title><rect x="848.8" y="179.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="851.8" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve$ (1 samples, 0.10%)</title><rect x="848.8" y="163.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="851.8" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.improve (1 samples, 0.10%)</title><rect x="848.8" y="147.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.8" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (5 samples, 0.48%)</title><rect x="849.9" y="227.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="852.9" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (5 samples, 0.48%)</title><rect x="849.9" y="211.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="852.9" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (5 samples, 0.48%)</title><rect x="849.9" y="195.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="852.9" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (2 samples, 0.19%)</title><rect x="849.9" y="179.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="852.9" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (3 samples, 0.29%)</title><rect x="852.2" y="179.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.2" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.19%)</title><rect x="853.3" y="163.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.3" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.19%)</title><rect x="853.3" y="147.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.3" y="158.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.19%)</title><rect x="853.3" y="131.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.3" y="142.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (2 samples, 0.19%)</title><rect x="853.3" y="115.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="856.3" y="126.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (2 samples, 0.19%)</title><rect x="853.3" y="99.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.3" y="110.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (2 samples, 0.19%)</title><rect x="853.3" y="83.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.3" y="94.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (2 samples, 0.19%)</title><rect x="853.3" y="67.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="856.3" y="78.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (2 samples, 0.19%)</title><rect x="853.3" y="51.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.3" y="62.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$plus$eq (9 samples, 0.86%)</title><rect x="855.6" y="291.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="858.6" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (9 samples, 0.86%)</title><rect x="855.6" y="275.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="858.6" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (9 samples, 0.86%)</title><rect x="855.6" y="259.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="858.6" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (9 samples, 0.86%)</title><rect x="855.6" y="243.0" width="10.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="858.6" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (7 samples, 0.67%)</title><rect x="855.6" y="227.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="858.6" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (7 samples, 0.67%)</title><rect x="855.6" y="211.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="858.6" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (7 samples, 0.67%)</title><rect x="855.6" y="195.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="858.6" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.update (1 samples, 0.10%)</title><rect x="857.9" y="179.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="860.9" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.table (4 samples, 0.38%)</title><rect x="859.0" y="179.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="862.0" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.elemToEntry (2 samples, 0.19%)</title><rect x="863.5" y="227.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="866.5" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.elemToEntry$ (1 samples, 0.10%)</title><rect x="863.5" y="211.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="866.5" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.elemToEntry (1 samples, 0.10%)</title><rect x="863.5" y="195.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="866.5" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.getOrElseUpdate (1 samples, 0.10%)</title><rect x="864.7" y="211.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="867.7" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (18 samples, 1.73%)</title><rect x="865.8" y="291.0" width="20.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="868.8" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (18 samples, 1.73%)</title><rect x="865.8" y="275.0" width="20.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="868.8" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (18 samples, 1.73%)</title><rect x="865.8" y="259.0" width="20.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="868.8" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (18 samples, 1.73%)</title><rect x="865.8" y="243.0" width="20.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="868.8" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (18 samples, 1.73%)</title><rect x="865.8" y="227.0" width="20.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="868.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.10%)</title><rect x="868.1" y="211.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="871.1" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.index (11 samples, 1.06%)</title><rect x="869.2" y="211.0" width="12.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="872.2" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index$ (11 samples, 1.06%)</title><rect x="869.2" y="195.0" width="12.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="872.2" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index (11 samples, 1.06%)</title><rect x="869.2" y="179.0" width="12.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="872.2" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.improve (11 samples, 1.06%)</title><rect x="869.2" y="163.0" width="12.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="872.2" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve$ (11 samples, 1.06%)</title><rect x="869.2" y="147.0" width="12.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="872.2" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve (11 samples, 1.06%)</title><rect x="869.2" y="131.0" width="12.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="872.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.10%)</title><rect x="879.4" y="115.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="882.4" y="126.0"></text>
</g>
<g>
<title>scala/util/hashing/package$.byteswap32 (1 samples, 0.10%)</title><rect x="880.5" y="115.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="883.5" y="126.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (4 samples, 0.38%)</title><rect x="881.7" y="211.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.7" y="222.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (4 samples, 0.38%)</title><rect x="881.7" y="195.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="884.7" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (3 samples, 0.29%)</title><rect x="882.8" y="179.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="885.8" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (3 samples, 0.29%)</title><rect x="882.8" y="163.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="885.8" y="174.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isNewValue (17 samples, 1.63%)</title><rect x="886.2" y="291.0" width="19.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="889.2" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (14 samples, 1.34%)</title><rect x="886.2" y="275.0" width="15.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="889.2" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (14 samples, 1.34%)</title><rect x="886.2" y="259.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="889.2" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry$ (14 samples, 1.34%)</title><rect x="886.2" y="243.0" width="15.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="889.2" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry (14 samples, 1.34%)</title><rect x="886.2" y="227.0" width="15.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="889.2" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemHashCode (5 samples, 0.48%)</title><rect x="886.2" y="211.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="889.2" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode$ (5 samples, 0.48%)</title><rect x="886.2" y="195.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.2" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable$HashUtils.elemHashCode (5 samples, 0.48%)</title><rect x="886.2" y="179.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.2" y="190.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (5 samples, 0.48%)</title><rect x="886.2" y="163.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="889.2" y="174.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.10%)</title><rect x="888.5" y="147.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="891.5" y="158.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHashNumber (2 samples, 0.19%)</title><rect x="889.6" y="147.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="892.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.19%)</title><rect x="889.6" y="131.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="892.6" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.10%)</title><rect x="891.9" y="211.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="894.9" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index$ (1 samples, 0.10%)</title><rect x="891.9" y="195.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.9" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.index (1 samples, 0.10%)</title><rect x="891.9" y="179.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="894.9" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (8 samples, 0.77%)</title><rect x="893.0" y="211.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.0" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (8 samples, 0.77%)</title><rect x="893.0" y="195.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="896.0" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/DefaultEntry.key (5 samples, 0.48%)</title><rect x="893.0" y="179.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="896.0" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (3 samples, 0.29%)</title><rect x="898.7" y="179.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.7" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (2 samples, 0.19%)</title><rect x="899.8" y="163.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="902.8" y="174.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.19%)</title><rect x="899.8" y="147.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="902.8" y="158.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.19%)</title><rect x="899.8" y="131.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="902.8" y="142.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (2 samples, 0.19%)</title><rect x="899.8" y="115.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.8" y="126.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (2 samples, 0.19%)</title><rect x="899.8" y="99.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.8" y="110.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (2 samples, 0.19%)</title><rect x="899.8" y="83.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="902.8" y="94.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (1 samples, 0.10%)</title><rect x="901.0" y="67.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.0" y="78.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (1 samples, 0.10%)</title><rect x="901.0" y="51.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="904.0" y="62.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (1 samples, 0.10%)</title><rect x="901.0" y="35.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.0" y="46.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (3 samples, 0.29%)</title><rect x="902.1" y="275.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.1" y="286.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (1 samples, 0.10%)</title><rect x="902.1" y="259.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="905.1" y="270.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (1 samples, 0.10%)</title><rect x="902.1" y="243.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="905.1" y="254.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (1 samples, 0.10%)</title><rect x="902.1" y="227.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="905.1" y="238.0"></text>
</g>
<g>
<title>scala/math/BigInt.isValidLong (2 samples, 0.19%)</title><rect x="903.2" y="259.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.2" y="270.0"></text>
</g>
<g>
<title>scala/math/BigInt.$greater$eq (2 samples, 0.19%)</title><rect x="903.2" y="243.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.2" y="254.0"></text>
</g>
<g>
<title>scala/math/Ordered.$greater$eq$ (2 samples, 0.19%)</title><rect x="903.2" y="227.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.2" y="238.0"></text>
</g>
<g>
<title>scala/math/Ordered.$greater$eq (2 samples, 0.19%)</title><rect x="903.2" y="211.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="906.2" y="222.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (2 samples, 0.19%)</title><rect x="903.2" y="195.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="906.2" y="206.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (2 samples, 0.19%)</title><rect x="903.2" y="179.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.2" y="190.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (2 samples, 0.19%)</title><rect x="903.2" y="163.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="906.2" y="174.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.isTempWire (37 samples, 3.55%)</title><rect x="905.5" y="291.0" width="41.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.5" y="302.0">tre..</text>
</g>
<g>
<title>java/lang/String.split (33 samples, 3.17%)</title><rect x="905.5" y="275.0" width="37.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="908.5" y="286.0">jav..</text>
</g>
<g>
<title>java/lang/String.split (33 samples, 3.17%)</title><rect x="905.5" y="259.0" width="37.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="908.5" y="270.0">jav..</text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (16 samples, 1.54%)</title><rect x="916.8" y="243.0" width="18.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="919.8" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList$1.hasNext (2 samples, 0.19%)</title><rect x="929.3" y="227.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="932.3" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList$1.next (3 samples, 0.29%)</title><rect x="931.6" y="227.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="934.6" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.38%)</title><rect x="935.0" y="243.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="938.0" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (4 samples, 0.38%)</title><rect x="935.0" y="227.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="938.0" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (4 samples, 0.38%)</title><rect x="935.0" y="211.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="938.0" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.38%)</title><rect x="935.0" y="195.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="938.0" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.38%)</title><rect x="935.0" y="179.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="938.0" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.compile (1 samples, 0.10%)</title><rect x="939.5" y="243.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="942.5" y="254.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.&lt;init&gt; (1 samples, 0.10%)</title><rect x="939.5" y="227.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="942.5" y="238.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.19%)</title><rect x="940.6" y="243.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="943.6" y="254.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.10%)</title><rect x="942.9" y="275.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="945.9" y="286.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.10%)</title><rect x="942.9" y="259.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="945.9" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayOps$ofRef.&lt;init&gt; (3 samples, 0.29%)</title><rect x="944.0" y="275.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="947.0" y="286.0"></text>
</g>
<g>
<title>treadle/vcd/VCD.updateInfo$1 (6 samples, 0.58%)</title><rect x="947.4" y="291.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.4" y="302.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.apply (1 samples, 0.10%)</title><rect x="947.4" y="275.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.4" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.getOrElseUpdate (1 samples, 0.10%)</title><rect x="948.6" y="275.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="951.6" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findEntry (1 samples, 0.10%)</title><rect x="948.6" y="259.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="951.6" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.notFound (1 samples, 0.10%)</title><rect x="948.6" y="243.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="951.6" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.elemEquals (1 samples, 0.10%)</title><rect x="948.6" y="227.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="951.6" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals$ (1 samples, 0.10%)</title><rect x="948.6" y="211.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.6" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.elemEquals (1 samples, 0.10%)</title><rect x="948.6" y="195.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="951.6" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.update (1 samples, 0.10%)</title><rect x="949.7" y="275.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="952.7" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.put (1 samples, 0.10%)</title><rect x="949.7" y="259.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="952.7" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.findOrAddEntry (1 samples, 0.10%)</title><rect x="949.7" y="243.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="952.7" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry$ (1 samples, 0.10%)</title><rect x="949.7" y="227.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="952.7" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findOrAddEntry (1 samples, 0.10%)</title><rect x="949.7" y="211.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="952.7" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashTable.findEntry0 (1 samples, 0.10%)</title><rect x="949.7" y="195.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="952.7" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.index (1 samples, 0.10%)</title><rect x="949.7" y="179.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="952.7" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$minus$eq (1 samples, 0.10%)</title><rect x="950.8" y="275.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="953.8" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.removeElem (1 samples, 0.10%)</title><rect x="950.8" y="259.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="953.8" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.removeElem$ (1 samples, 0.10%)</title><rect x="950.8" y="243.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="953.8" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.removeElem (1 samples, 0.10%)</title><rect x="950.8" y="227.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.8" y="238.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.10%)</title><rect x="950.8" y="211.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="953.8" y="222.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.10%)</title><rect x="950.8" y="195.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="953.8" y="206.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumObject (1 samples, 0.10%)</title><rect x="950.8" y="179.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.8" y="190.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsNumNum (1 samples, 0.10%)</title><rect x="950.8" y="163.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="953.8" y="174.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (1 samples, 0.10%)</title><rect x="950.8" y="147.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="953.8" y="158.0"></text>
</g>
<g>
<title>scala/math/BigInt.equals (1 samples, 0.10%)</title><rect x="950.8" y="131.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="953.8" y="142.0"></text>
</g>
<g>
<title>scala/math/BigInt.compare (1 samples, 0.10%)</title><rect x="950.8" y="115.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="953.8" y="126.0"></text>
</g>
<g>
<title>java/math/BigInteger.compareTo (1 samples, 0.10%)</title><rect x="950.8" y="99.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="953.8" y="110.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.$plus$eq (2 samples, 0.19%)</title><rect x="952.0" y="275.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="955.0" y="286.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addElem (2 samples, 0.19%)</title><rect x="952.0" y="259.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="955.0" y="270.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem$ (2 samples, 0.19%)</title><rect x="952.0" y="243.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="955.0" y="254.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addElem (2 samples, 0.19%)</title><rect x="952.0" y="227.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="955.0" y="238.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (2 samples, 0.19%)</title><rect x="952.0" y="211.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="955.0" y="222.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (2 samples, 0.19%)</title><rect x="952.0" y="195.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="955.0" y="206.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (2 samples, 0.19%)</title><rect x="952.0" y="179.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="955.0" y="190.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.growTable (1 samples, 0.10%)</title><rect x="952.0" y="163.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="955.0" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addEntry (1 samples, 0.10%)</title><rect x="952.0" y="147.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="955.0" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry$ (1 samples, 0.10%)</title><rect x="952.0" y="131.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="955.0" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.addEntry (1 samples, 0.10%)</title><rect x="952.0" y="115.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="955.0" y="126.0"></text>
</g>
<g>
<title>treadle/vcd/Change.hashCode (1 samples, 0.10%)</title><rect x="952.0" y="99.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="955.0" y="110.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.10%)</title><rect x="952.0" y="83.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="955.0" y="94.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.index (1 samples, 0.10%)</title><rect x="953.1" y="163.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="956.1" y="174.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index$ (1 samples, 0.10%)</title><rect x="953.1" y="147.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="956.1" y="158.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index (1 samples, 0.10%)</title><rect x="953.1" y="131.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="956.1" y="142.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.improve (1 samples, 0.10%)</title><rect x="953.1" y="115.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="956.1" y="126.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve$ (1 samples, 0.10%)</title><rect x="953.1" y="99.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="956.1" y="110.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.10%)</title><rect x="954.2" y="371.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="957.2" y="382.0"></text>
</g>
<g>
<title>scala/math/BigInt$.long2bigInt (1 samples, 0.10%)</title><rect x="954.2" y="355.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="957.2" y="366.0"></text>
</g>
<g>
<title>scala/math/BigInt$.apply (1 samples, 0.10%)</title><rect x="954.2" y="339.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="957.2" y="350.0"></text>
</g>
<g>
<title>treadle/executable/VcdHook.executionEngine (1 samples, 0.10%)</title><rect x="955.4" y="371.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="958.4" y="382.0"></text>
</g>
<g>
<title>treadle/executable/DataStore.apply (1 samples, 0.10%)</title><rect x="955.4" y="355.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="958.4" y="366.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22234/1807336163.apply$mcJ$sp (7 samples, 0.67%)</title><rect x="956.5" y="499.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="959.5" y="510.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$8 (7 samples, 0.67%)</title><rect x="956.5" y="483.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="959.5" y="494.0"></text>
</g>
<g>
<title>treadle/executable/CatLongs.apply (3 samples, 0.29%)</title><rect x="956.5" y="467.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="959.5" y="478.0"></text>
</g>
<g>
<title>treadle/executable/CatLongs.f2 (3 samples, 0.29%)</title><rect x="956.5" y="451.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="959.5" y="462.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.19%)</title><rect x="956.5" y="435.0" width="2.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="959.5" y="446.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22247/1112855820.apply$mcI$sp (1 samples, 0.10%)</title><rect x="958.8" y="435.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="961.8" y="446.0"></text>
</g>
<g>
<title>treadle/executable/DshrLongs.apply (1 samples, 0.10%)</title><rect x="959.9" y="467.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="962.9" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22325/881814143.apply$mcJ$sp (1 samples, 0.10%)</title><rect x="959.9" y="451.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="962.9" y="462.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$62 (1 samples, 0.10%)</title><rect x="959.9" y="435.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="962.9" y="446.0"></text>
</g>
<g>
<title>treadle/executable/ToLong.apply (1 samples, 0.10%)</title><rect x="959.9" y="419.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="962.9" y="430.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22275/979910845.apply$mcI$sp (1 samples, 0.10%)</title><rect x="959.9" y="403.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="962.9" y="414.0"></text>
</g>
<g>
<title>treadle/executable/MuxLongs.apply (2 samples, 0.19%)</title><rect x="961.0" y="467.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="964.0" y="478.0"></text>
</g>
<g>
<title>treadle/executable/MuxLongs.trueClause (1 samples, 0.10%)</title><rect x="962.2" y="451.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="965.2" y="462.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22299/1605652277.apply$mcJ$sp (1 samples, 0.10%)</title><rect x="962.2" y="435.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="965.2" y="446.0"></text>
</g>
<g>
<title>treadle/executable/XorLongs.apply (1 samples, 0.10%)</title><rect x="963.3" y="467.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="966.3" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22326/471014678.apply$mcJ$sp (1 samples, 0.10%)</title><rect x="963.3" y="451.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="966.3" y="462.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$processStatements$67 (1 samples, 0.10%)</title><rect x="963.3" y="435.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="966.3" y="446.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22339/859110452.apply$mcJ$sp (1 samples, 0.10%)</title><rect x="964.4" y="499.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.4" y="510.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$10 (1 samples, 0.10%)</title><rect x="964.4" y="483.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="967.4" y="494.0"></text>
</g>
<g>
<title>treadle/executable/BigToLong.apply (1 samples, 0.10%)</title><rect x="964.4" y="467.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.4" y="478.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler$$Lambda$22338/1397830454.apply (1 samples, 0.10%)</title><rect x="964.4" y="451.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="967.4" y="462.0"></text>
</g>
<g>
<title>treadle/executable/ExpressionCompiler.$anonfun$makeAssigner$9 (1 samples, 0.10%)</title><rect x="964.4" y="435.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="967.4" y="446.0"></text>
</g>
<g>
<title>treadle/executable/BitsBigs.apply (1 samples, 0.10%)</title><rect x="964.4" y="419.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.4" y="430.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.10%)</title><rect x="964.4" y="403.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.4" y="414.0"></text>
</g>
<g>
<title>treadle/executable/DataStore$AssignLong.run (1 samples, 0.10%)</title><rect x="965.6" y="547.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="968.6" y="558.0"></text>
</g>
<g>
<title>treadle/executable/ExecutionEngine.setIntValue (1 samples, 0.10%)</title><rect x="966.7" y="611.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="969.7" y="622.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (1 samples, 0.10%)</title><rect x="966.7" y="595.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="969.7" y="606.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.containsElem (1 samples, 0.10%)</title><rect x="966.7" y="579.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="969.7" y="590.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem$ (1 samples, 0.10%)</title><rect x="966.7" y="563.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="969.7" y="574.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.containsElem (1 samples, 0.10%)</title><rect x="966.7" y="547.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="969.7" y="558.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.findElemImpl (1 samples, 0.10%)</title><rect x="966.7" y="531.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="969.7" y="542.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.index (1 samples, 0.10%)</title><rect x="966.7" y="515.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="969.7" y="526.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index$ (1 samples, 0.10%)</title><rect x="966.7" y="499.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="969.7" y="510.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable.index (1 samples, 0.10%)</title><rect x="966.7" y="483.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="969.7" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.improve (1 samples, 0.10%)</title><rect x="966.7" y="467.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="969.7" y="478.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve$ (1 samples, 0.10%)</title><rect x="966.7" y="451.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="969.7" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/FlatHashTable$HashUtils.improve (1 samples, 0.10%)</title><rect x="966.7" y="435.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.7" y="446.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer$FinalizerThread.run (1 samples, 0.10%)</title><rect x="967.8" y="1811.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="970.8" y="1822.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (1 samples, 0.10%)</title><rect x="967.8" y="1795.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.8" y="1806.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (1 samples, 0.10%)</title><rect x="967.8" y="1779.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.8" y="1790.0"></text>
</g>
<g>
<title>java/lang/Object.wait (1 samples, 0.10%)</title><rect x="967.8" y="1763.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="970.8" y="1774.0"></text>
</g>
<g>
<title>JVM_MonitorWait (1 samples, 0.10%)</title><rect x="967.8" y="1747.0" width="1.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="970.8" y="1758.0"></text>
</g>
<g>
<title>ObjectSynchronizer::wait(Handle, long, Thread*) (1 samples, 0.10%)</title><rect x="967.8" y="1731.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="970.8" y="1742.0"></text>
</g>
<g>
<title>ObjectMonitor::wait(long, bool, Thread*) (1 samples, 0.10%)</title><rect x="967.8" y="1715.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="970.8" y="1726.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.10%)</title><rect x="967.8" y="1699.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="970.8" y="1710.0"></text>
</g>
<g>
<title>java/lang/ref/Reference$ReferenceHandler.run (1 samples, 0.10%)</title><rect x="969.0" y="1811.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="972.0" y="1822.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.tryHandlePending (1 samples, 0.10%)</title><rect x="969.0" y="1795.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="972.0" y="1806.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.enqueue (1 samples, 0.10%)</title><rect x="969.0" y="1779.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="972.0" y="1790.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.10%)</title><rect x="969.0" y="1763.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="972.0" y="1774.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.10%)</title><rect x="969.0" y="1747.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="972.0" y="1758.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress$ProgressThread.run (31 samples, 2.98%)</title><rect x="970.1" y="1811.0" width="35.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="973.1" y="1822.0">sbt..</text>
</g>
<g>
<title>sbt/internal/TaskProgress.sbt$internal$TaskProgress$$report (31 samples, 2.98%)</title><rect x="970.1" y="1795.0" width="35.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="973.1" y="1806.0">sbt..</text>
</g>
<g>
<title>sbt/internal/AbstractTaskExecuteProgress.activeTasks (1 samples, 0.10%)</title><rect x="970.1" y="1779.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="973.1" y="1790.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.toSet (1 samples, 0.10%)</title><rect x="970.1" y="1763.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="973.1" y="1774.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.toSet$ (1 samples, 0.10%)</title><rect x="970.1" y="1747.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="973.1" y="1758.0"></text>
</g>
<g>
<title>scala/collection/TraversableOnce.toSet (1 samples, 0.10%)</title><rect x="970.1" y="1731.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.1" y="1742.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.to (1 samples, 0.10%)</title><rect x="970.1" y="1715.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.1" y="1726.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.to$ (1 samples, 0.10%)</title><rect x="970.1" y="1699.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.1" y="1710.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.to (1 samples, 0.10%)</title><rect x="970.1" y="1683.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.1" y="1694.0"></text>
</g>
<g>
<title>scala/collection/mutable/SetBuilder.$plus$plus$eq (1 samples, 0.10%)</title><rect x="970.1" y="1667.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="973.1" y="1678.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq$ (1 samples, 0.10%)</title><rect x="970.1" y="1651.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="973.1" y="1662.0"></text>
</g>
<g>
<title>scala/collection/generic/Growable.$plus$plus$eq (1 samples, 0.10%)</title><rect x="970.1" y="1635.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="973.1" y="1646.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (1 samples, 0.10%)</title><rect x="970.1" y="1619.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="973.1" y="1630.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (1 samples, 0.10%)</title><rect x="970.1" y="1603.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="973.1" y="1614.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (1 samples, 0.10%)</title><rect x="970.1" y="1587.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.1" y="1598.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (1 samples, 0.10%)</title><rect x="970.1" y="1571.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="973.1" y="1582.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress.containsSkipTasks (3 samples, 0.29%)</title><rect x="971.2" y="1779.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="974.2" y="1790.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (2 samples, 0.19%)</title><rect x="971.2" y="1763.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="974.2" y="1774.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.exists$ (2 samples, 0.19%)</title><rect x="971.2" y="1747.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="974.2" y="1758.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.exists (2 samples, 0.19%)</title><rect x="971.2" y="1731.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="974.2" y="1742.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.exists (2 samples, 0.19%)</title><rect x="971.2" y="1715.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="974.2" y="1726.0"></text>
</g>
<g>
<title>scala/collection/Iterator.exists$ (2 samples, 0.19%)</title><rect x="971.2" y="1699.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="974.2" y="1710.0"></text>
</g>
<g>
<title>scala/collection/Iterator.exists (2 samples, 0.19%)</title><rect x="971.2" y="1683.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="974.2" y="1694.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress$$Lambda$2160/675312365.apply (2 samples, 0.19%)</title><rect x="971.2" y="1667.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="974.2" y="1678.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress.$anonfun$containsSkipTasks$2$adapted (2 samples, 0.19%)</title><rect x="971.2" y="1651.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="974.2" y="1662.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress.$anonfun$containsSkipTasks$2 (2 samples, 0.19%)</title><rect x="971.2" y="1635.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.2" y="1646.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/194706439.linkToTargetMethod (1 samples, 0.10%)</title><rect x="971.2" y="1619.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="974.2" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/233996206.invokeStatic_L_L (1 samples, 0.10%)</title><rect x="971.2" y="1603.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="974.2" y="1614.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress$$Lambda$2608/2099754208.get$Lambda (1 samples, 0.10%)</title><rect x="971.2" y="1587.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="974.2" y="1598.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (1 samples, 0.10%)</title><rect x="972.4" y="1619.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="975.4" y="1630.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.exists$ (1 samples, 0.10%)</title><rect x="972.4" y="1603.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.4" y="1614.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.exists (1 samples, 0.10%)</title><rect x="972.4" y="1587.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="975.4" y="1598.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.exists (1 samples, 0.10%)</title><rect x="972.4" y="1571.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.4" y="1582.0"></text>
</g>
<g>
<title>scala/collection/Iterator.exists$ (1 samples, 0.10%)</title><rect x="972.4" y="1555.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="975.4" y="1566.0"></text>
</g>
<g>
<title>scala/collection/Iterator.exists (1 samples, 0.10%)</title><rect x="972.4" y="1539.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="975.4" y="1550.0"></text>
</g>
<g>
<title>scala/tools/nsc/transform/SpecializeTypes$$Lambda$3959/747343328.apply (1 samples, 0.10%)</title><rect x="972.4" y="1523.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="975.4" y="1534.0"></text>
</g>
<g>
<title>scala/tools/nsc/transform/SpecializeTypes.$anonfun$hasUnspecializableAnnotation$1$adapted (1 samples, 0.10%)</title><rect x="972.4" y="1507.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="975.4" y="1518.0"></text>
</g>
<g>
<title>scala/tools/nsc/transform/SpecializeTypes.$anonfun$hasUnspecializableAnnotation$1 (1 samples, 0.10%)</title><rect x="972.4" y="1491.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="975.4" y="1502.0"></text>
</g>
<g>
<title>scala/reflect/internal/Definitions$DefinitionsClass.UnspecializedClass (1 samples, 0.10%)</title><rect x="972.4" y="1475.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="975.4" y="1486.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (1 samples, 0.10%)</title><rect x="973.5" y="1763.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="976.5" y="1774.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (1 samples, 0.10%)</title><rect x="973.5" y="1747.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="976.5" y="1758.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (1 samples, 0.10%)</title><rect x="973.5" y="1731.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="976.5" y="1742.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (1 samples, 0.10%)</title><rect x="973.5" y="1715.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="976.5" y="1726.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (1 samples, 0.10%)</title><rect x="973.5" y="1699.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="976.5" y="1710.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (1 samples, 0.10%)</title><rect x="973.5" y="1683.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="976.5" y="1694.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (1 samples, 0.10%)</title><rect x="973.5" y="1667.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="976.5" y="1678.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress.report0$1 (27 samples, 2.59%)</title><rect x="974.6" y="1779.0" width="30.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="977.6" y="1790.0">sb..</text>
</g>
<g>
<title>java/lang/Class.getClassLoader (3 samples, 0.29%)</title><rect x="978.0" y="1763.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="981.0" y="1774.0"></text>
</g>
<g>
<title>sun/reflect/Reflection.getCallerClass (3 samples, 0.29%)</title><rect x="978.0" y="1747.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="981.0" y="1758.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (3 samples, 0.29%)</title><rect x="978.0" y="1731.0" width="3.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="981.0" y="1742.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.10%)</title><rect x="978.0" y="1715.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="981.0" y="1726.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.10%)</title><rect x="978.0" y="1699.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="981.0" y="1710.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.10%)</title><rect x="978.0" y="1683.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="981.0" y="1694.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.10%)</title><rect x="978.0" y="1667.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="981.0" y="1678.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.10%)</title><rect x="978.0" y="1651.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="981.0" y="1662.0"></text>
</g>
<g>
<title>vframeStreamCommon::next() (2 samples, 0.19%)</title><rect x="979.2" y="1715.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="982.2" y="1726.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.10%)</title><rect x="979.2" y="1699.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="982.2" y="1710.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.10%)</title><rect x="979.2" y="1683.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="982.2" y="1694.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.10%)</title><rect x="979.2" y="1667.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="982.2" y="1678.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.10%)</title><rect x="979.2" y="1651.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="982.2" y="1662.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.10%)</title><rect x="979.2" y="1635.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="982.2" y="1646.0"></text>
</g>
<g>
<title>nmethod::find_pc_desc_internal(unsigned char*, bool) (1 samples, 0.10%)</title><rect x="980.3" y="1699.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="983.3" y="1710.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/194706439.linkToTargetMethod (1 samples, 0.10%)</title><rect x="981.4" y="1763.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="984.4" y="1774.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/233996206.invokeStatic_L_L (1 samples, 0.10%)</title><rect x="981.4" y="1747.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="984.4" y="1758.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress$$Lambda$2161/156403609.get$Lambda (1 samples, 0.10%)</title><rect x="981.4" y="1731.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="984.4" y="1742.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress$$typecreator1$2.&lt;init&gt; (1 samples, 0.10%)</title><rect x="982.6" y="1763.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="985.6" y="1774.0"></text>
</g>
<g>
<title>sbt/internal/util/ManagedLogger.logEvent (10 samples, 0.96%)</title><rect x="983.7" y="1763.0" width="11.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="986.7" y="1774.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/spi/AbstractLogger.log (1 samples, 0.10%)</title><rect x="986.0" y="1747.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="989.0" y="1758.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/spi/AbstractLogger.logIfEnabled (1 samples, 0.10%)</title><rect x="986.0" y="1731.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="989.0" y="1742.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/spi/AbstractLogger.logMessageSafely (1 samples, 0.10%)</title><rect x="986.0" y="1715.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="989.0" y="1726.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/spi/AbstractLogger.logMessageTrackRecursion (1 samples, 0.10%)</title><rect x="986.0" y="1699.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="989.0" y="1710.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/spi/AbstractLogger.tryLogMessage (1 samples, 0.10%)</title><rect x="986.0" y="1683.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="989.0" y="1694.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/Logger.logMessage (1 samples, 0.10%)</title><rect x="986.0" y="1667.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="989.0" y="1678.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/AwaitCompletionReliabilityStrategy.log (1 samples, 0.10%)</title><rect x="986.0" y="1651.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="989.0" y="1662.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/LoggerConfig.log (1 samples, 0.10%)</title><rect x="986.0" y="1635.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="989.0" y="1646.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/LoggerConfig.log (1 samples, 0.10%)</title><rect x="986.0" y="1619.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="989.0" y="1630.0"></text>
</g>
<g>
<title>org/apache/logging/log4j/core/config/LoggerConfig.processLogEvent (1 samples, 0.10%)</title><rect x="986.0" y="1603.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="989.0" y="1614.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.apply (7 samples, 0.67%)</title><rect x="987.1" y="1747.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="990.1" y="1758.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.retry$1 (7 samples, 0.67%)</title><rect x="987.1" y="1731.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="990.1" y="1742.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.doApply$1 (7 samples, 0.67%)</title><rect x="987.1" y="1715.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="990.1" y="1726.0"></text>
</g>
<g>
<title>sbt/internal/util/StringTypeTag$.typeToString (7 samples, 0.67%)</title><rect x="987.1" y="1699.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="990.1" y="1710.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.10%)</title><rect x="987.1" y="1683.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="990.1" y="1694.0"></text>
</g>
<g>
<title>scala/Some.isEmpty (1 samples, 0.10%)</title><rect x="988.2" y="1683.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="991.2" y="1694.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$Type.toString (4 samples, 0.38%)</title><rect x="989.4" y="1683.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.4" y="1694.0"></text>
</g>
<g>
<title>scala/reflect/internal/SymbolTable.typeToString (4 samples, 0.38%)</title><rect x="989.4" y="1667.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="992.4" y="1678.0"></text>
</g>
<g>
<title>scala/reflect/internal/tpe/TypeToStrings.typeToString$ (4 samples, 0.38%)</title><rect x="989.4" y="1651.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="992.4" y="1662.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (2 samples, 0.19%)</title><rect x="989.4" y="1635.0" width="2.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="992.4" y="1646.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle, int, Bytecodes::Code, Thread*) (1 samples, 0.10%)</title><rect x="990.5" y="1619.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="993.5" y="1630.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokespecial(CallInfo&amp;, Handle, constantPoolHandle, int, Thread*) (1 samples, 0.10%)</title><rect x="990.5" y="1603.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="993.5" y="1614.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call(CallInfo&amp;, Handle, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, Thread*) (1 samples, 0.10%)</title><rect x="990.5" y="1587.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="993.5" y="1598.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_special_method(CallInfo&amp;, methodHandle, KlassHandle, KlassHandle, Handle, bool, Thread*) (1 samples, 0.10%)</title><rect x="990.5" y="1571.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="993.5" y="1582.0"></text>
</g>
<g>
<title>CallInfo::set_common(KlassHandle, KlassHandle, methodHandle, methodHandle, CallInfo::CallKind, int, Thread*) (1 samples, 0.10%)</title><rect x="990.5" y="1555.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="993.5" y="1566.0"></text>
</g>
<g>
<title>scala/reflect/internal/tpe/TypeToStrings.typeToString (2 samples, 0.19%)</title><rect x="991.6" y="1635.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="994.6" y="1646.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$TypeRef.safeToString (1 samples, 0.10%)</title><rect x="991.6" y="1619.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.6" y="1630.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$TypeRef.finishPrefix (1 samples, 0.10%)</title><rect x="991.6" y="1603.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="994.6" y="1614.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaUniverse.toStringRecursions_$eq (1 samples, 0.10%)</title><rect x="992.8" y="1619.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="995.8" y="1630.0"></text>
</g>
<g>
<title>scala/reflect/runtime/SynchronizedTypes.toStringRecursions_$eq$ (1 samples, 0.10%)</title><rect x="992.8" y="1603.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="995.8" y="1614.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="992.8" y="1587.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="995.8" y="1598.0"></text>
</g>
<g>
<title>InterpreterRuntime::already_resolved(JavaThread*) (1 samples, 0.10%)</title><rect x="992.8" y="1571.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="995.8" y="1582.0"></text>
</g>
<g>
<title>InterpreterRuntime::code(JavaThread*) (1 samples, 0.10%)</title><rect x="992.8" y="1555.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="995.8" y="1566.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.10%)</title><rect x="992.8" y="1539.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="995.8" y="1550.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.10%)</title><rect x="992.8" y="1523.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="995.8" y="1534.0"></text>
</g>
<g>
<title>scala/reflect/internal/Types$TypeRef$.unapply (1 samples, 0.10%)</title><rect x="993.9" y="1683.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.9" y="1694.0"></text>
</g>
<g>
<title>sbt/internal/util/codec/JsonProtocol$.ProgressEventFormat (1 samples, 0.10%)</title><rect x="995.0" y="1763.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="998.0" y="1774.0"></text>
</g>
<g>
<title>scala/collection/AbstractTraversable.map (3 samples, 0.29%)</title><rect x="996.2" y="1763.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="999.2" y="1774.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map$ (3 samples, 0.29%)</title><rect x="996.2" y="1747.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="999.2" y="1758.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.map (3 samples, 0.29%)</title><rect x="996.2" y="1731.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="999.2" y="1742.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (3 samples, 0.29%)</title><rect x="996.2" y="1715.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="999.2" y="1726.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach$ (3 samples, 0.29%)</title><rect x="996.2" y="1699.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="999.2" y="1710.0"></text>
</g>
<g>
<title>scala/collection/IterableLike.foreach (3 samples, 0.29%)</title><rect x="996.2" y="1683.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="999.2" y="1694.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (3 samples, 0.29%)</title><rect x="996.2" y="1667.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="999.2" y="1678.0"></text>
</g>
<g>
<title>scala/collection/Iterator.foreach$ (3 samples, 0.29%)</title><rect x="996.2" y="1651.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.2" y="1662.0"></text>
</g>
<g>
<title>scala/collection/Iterator.foreach (3 samples, 0.29%)</title><rect x="996.2" y="1635.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.2" y="1646.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike$$Lambda$9/1032000752.apply (3 samples, 0.29%)</title><rect x="996.2" y="1619.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="999.2" y="1630.0"></text>
</g>
<g>
<title>scala/collection/TraversableLike.$anonfun$map$1 (3 samples, 0.29%)</title><rect x="996.2" y="1603.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="999.2" y="1614.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress$$Lambda$2161/156403609.apply (3 samples, 0.29%)</title><rect x="996.2" y="1587.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="999.2" y="1598.0"></text>
</g>
<g>
<title>sbt/internal/TaskProgress.$anonfun$report$1 (3 samples, 0.29%)</title><rect x="996.2" y="1571.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="999.2" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.10%)</title><rect x="996.2" y="1555.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="999.2" y="1566.0"></text>
</g>
<g>
<title>sbt/internal/util/ProgressItem$.apply (2 samples, 0.19%)</title><rect x="997.3" y="1555.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1000.3" y="1566.0"></text>
</g>
<g>
<title>sbt/internal/util/ProgressItem.&lt;init&gt; (2 samples, 0.19%)</title><rect x="997.3" y="1539.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1000.3" y="1550.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.10%)</title><rect x="998.4" y="1523.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1001.4" y="1534.0"></text>
</g>
<g>
<title>scala/reflect/api/TypeTags$TypeTag$.apply (2 samples, 0.19%)</title><rect x="999.6" y="1763.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1002.6" y="1774.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (1 samples, 0.10%)</title><rect x="999.6" y="1747.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1002.6" y="1758.0"></text>
</g>
<g>
<title>sun/reflect/Reflection.getCallerClass (1 samples, 0.10%)</title><rect x="999.6" y="1731.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1002.6" y="1742.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (1 samples, 0.10%)</title><rect x="999.6" y="1715.0" width="1.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1002.6" y="1726.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.10%)</title><rect x="999.6" y="1699.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1002.6" y="1710.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors$JavaMirror.typeTag (1 samples, 0.10%)</title><rect x="1000.7" y="1747.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1003.7" y="1758.0"></text>
</g>
<g>
<title>java/lang/Object.getClass (1 samples, 0.10%)</title><rect x="1000.7" y="1731.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1003.7" y="1742.0"></text>
</g>
<g>
<title>jni_GetObjectClass (1 samples, 0.10%)</title><rect x="1000.7" y="1715.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1003.7" y="1726.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaUniverse.runtimeMirror (3 samples, 0.29%)</title><rect x="1001.8" y="1763.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1004.8" y="1774.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaUniverse.runtimeMirror (3 samples, 0.29%)</title><rect x="1001.8" y="1747.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1004.8" y="1758.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors.runtimeMirror (1 samples, 0.10%)</title><rect x="1001.8" y="1731.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1004.8" y="1742.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors.runtimeMirror$ (2 samples, 0.19%)</title><rect x="1003.0" y="1731.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1006.0" y="1742.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors.runtimeMirror (2 samples, 0.19%)</title><rect x="1003.0" y="1715.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1006.0" y="1726.0"></text>
</g>
<g>
<title>scala/reflect/runtime/JavaMirrors.$anonfun$runtimeMirror$1 (2 samples, 0.19%)</title><rect x="1003.0" y="1699.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1006.0" y="1710.0"></text>
</g>
<g>
<title>thread_start (163 samples, 15.66%)</title><rect x="1005.2" y="1811.0" width="184.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1008.2" y="1822.0">thread_start</text>
</g>
<g>
<title>_pthread_start (163 samples, 15.66%)</title><rect x="1005.2" y="1795.0" width="184.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1008.2" y="1806.0">_pthread_start</text>
</g>
<g>
<title>_pthread_body (163 samples, 15.66%)</title><rect x="1005.2" y="1779.0" width="184.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1008.2" y="1790.0">_pthread_body</text>
</g>
<g>
<title>java_start(Thread*) (163 samples, 15.66%)</title><rect x="1005.2" y="1763.0" width="184.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1008.2" y="1774.0">java_start(Thread*)</text>
</g>
<g>
<title>GCTaskThread::run() (144 samples, 13.83%)</title><rect x="1005.2" y="1747.0" width="163.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1008.2" y="1758.0">GCTaskThread::run()</text>
</g>
<g>
<title>OldToYoungRootsTask::do_it(GCTaskManager*, unsigned int) (2 samples, 0.19%)</title><rect x="1005.2" y="1731.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1008.2" y="1742.0"></text>
</g>
<g>
<title>CardTableExtension::scavenge_contents_parallel(ObjectStartArray*, MutableSpace*, HeapWord*, PSPromotionManager*, unsigned int, unsigned int) (2 samples, 0.19%)</title><rect x="1005.2" y="1715.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1008.2" y="1726.0"></text>
</g>
<g>
<title>ObjectStartArray::object_start(HeapWord*) const (1 samples, 0.10%)</title><rect x="1005.2" y="1699.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1008.2" y="1710.0"></text>
</g>
<g>
<title>ObjectStartArray::offset_addr_for_block(signed char*) const (1 samples, 0.10%)</title><rect x="1005.2" y="1683.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1008.2" y="1694.0"></text>
</g>
<g>
<title>ObjectStartArray::offset_addr_for_block(signed char*) const (1 samples, 0.10%)</title><rect x="1006.4" y="1699.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1009.4" y="1710.0"></text>
</g>
<g>
<title>ScavengeRootsTask::do_it(GCTaskManager*, unsigned int) (18 samples, 1.73%)</title><rect x="1007.5" y="1731.0" width="20.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1010.5" y="1742.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::oops_do(OopClosure*, KlassClosure*, bool) (18 samples, 1.73%)</title><rect x="1007.5" y="1715.0" width="20.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1010.5" y="1726.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (8 samples, 0.77%)</title><rect x="1007.5" y="1699.0" width="9.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1010.5" y="1710.0"></text>
</g>
<g>
<title>PSScavengeKlassClosure::do_klass(Klass*) (7 samples, 0.67%)</title><rect x="1008.6" y="1683.0" width="8.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1011.6" y="1694.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (10 samples, 0.96%)</title><rect x="1016.6" y="1699.0" width="11.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1019.6" y="1710.0"></text>
</g>
<g>
<title>JNIHandleBlock::oops_do(OopClosure*) (5 samples, 0.48%)</title><rect x="1016.6" y="1683.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1019.6" y="1694.0"></text>
</g>
<g>
<title>void PSRootsClosure&lt;false&gt;::do_oop_work&lt;oopDesc*&gt;(oopDesc**) (1 samples, 0.10%)</title><rect x="1021.1" y="1667.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1024.1" y="1678.0"></text>
</g>
<g>
<title>void PSRootsClosure&lt;false&gt;::do_oop_work&lt;oopDesc*&gt;(oopDesc**) (5 samples, 0.48%)</title><rect x="1022.2" y="1683.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1025.2" y="1694.0"></text>
</g>
<g>
<title>StealTask::do_it(GCTaskManager*, unsigned int) (123 samples, 11.82%)</title><rect x="1027.9" y="1731.0" width="139.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1030.9" y="1742.0">StealTask::do_it(..</text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (5 samples, 0.48%)</title><rect x="1027.9" y="1715.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1030.9" y="1726.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (4 samples, 0.38%)</title><rect x="1029.0" y="1699.0" width="4.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1032.0" y="1710.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (4 samples, 0.38%)</title><rect x="1029.0" y="1683.0" width="4.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1032.0" y="1694.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (1 samples, 0.10%)</title><rect x="1031.3" y="1667.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1034.3" y="1678.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.10%)</title><rect x="1032.4" y="1667.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1035.4" y="1678.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (21 samples, 2.02%)</title><rect x="1033.6" y="1715.0" width="23.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1036.6" y="1726.0">P..</text>
</g>
<g>
<title>xdrmem_ops_aligned (17 samples, 1.63%)</title><rect x="1038.1" y="1699.0" width="19.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1041.1" y="1710.0"></text>
</g>
<g>
<title>SpinPause (97 samples, 9.32%)</title><rect x="1057.4" y="1715.0" width="109.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1060.4" y="1726.0">SpinPause</text>
</g>
<g>
<title>ThreadRootsTask::do_it(GCTaskManager*, unsigned int) (1 samples, 0.10%)</title><rect x="1167.3" y="1731.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1170.3" y="1742.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.10%)</title><rect x="1167.3" y="1715.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1170.3" y="1726.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, CLDClosure*, RegisterMap const*, bool) (1 samples, 0.10%)</title><rect x="1167.3" y="1699.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1170.3" y="1710.0"></text>
</g>
<g>
<title>Method::mask_for(int, InterpreterOopMap*) (1 samples, 0.10%)</title><rect x="1167.3" y="1683.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1170.3" y="1694.0"></text>
</g>
<g>
<title>InstanceKlass::mask_for(methodHandle, int, InterpreterOopMap*) (1 samples, 0.10%)</title><rect x="1167.3" y="1667.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1170.3" y="1678.0"></text>
</g>
<g>
<title>OopMapCache::lookup(methodHandle, int, InterpreterOopMap*) const (1 samples, 0.10%)</title><rect x="1167.3" y="1651.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1170.3" y="1662.0"></text>
</g>
<g>
<title>JavaThread::run() (18 samples, 1.73%)</title><rect x="1168.5" y="1747.0" width="20.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1171.5" y="1758.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (18 samples, 1.73%)</title><rect x="1168.5" y="1731.0" width="20.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.5" y="1742.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (18 samples, 1.73%)</title><rect x="1168.5" y="1715.0" width="20.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1171.5" y="1726.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (12 samples, 1.15%)</title><rect x="1168.5" y="1699.0" width="13.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1171.5" y="1710.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (12 samples, 1.15%)</title><rect x="1168.5" y="1683.0" width="13.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1171.5" y="1694.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (12 samples, 1.15%)</title><rect x="1168.5" y="1667.0" width="13.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1171.5" y="1678.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (7 samples, 0.67%)</title><rect x="1168.5" y="1651.0" width="7.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.5" y="1662.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.10%)</title><rect x="1168.5" y="1635.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1171.5" y="1646.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.10%)</title><rect x="1168.5" y="1619.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.5" y="1630.0"></text>
</g>
<g>
<title>CodeBuffer::initialize(int, int) (1 samples, 0.10%)</title><rect x="1168.5" y="1603.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1171.5" y="1614.0"></text>
</g>
<g>
<title>BufferBlob::create(char const*, int) (1 samples, 0.10%)</title><rect x="1168.5" y="1587.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.5" y="1598.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (1 samples, 0.10%)</title><rect x="1168.5" y="1571.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.5" y="1582.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long, bool) (1 samples, 0.10%)</title><rect x="1168.5" y="1555.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1171.5" y="1566.0"></text>
</g>
<g>
<title>CodeHeap::search_freelist(unsigned long, bool) (1 samples, 0.10%)</title><rect x="1168.5" y="1539.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.5" y="1550.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.10%)</title><rect x="1169.6" y="1635.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.6" y="1646.0"></text>
</g>
<g>
<title>NonSafepointEmitter::observe_instruction(Node*, int) (1 samples, 0.10%)</title><rect x="1169.6" y="1619.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.6" y="1630.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.10%)</title><rect x="1170.7" y="1635.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.7" y="1646.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.10%)</title><rect x="1170.7" y="1619.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.7" y="1630.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (1 samples, 0.10%)</title><rect x="1170.7" y="1603.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.7" y="1614.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.10%)</title><rect x="1170.7" y="1587.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.7" y="1598.0"></text>
</g>
<g>
<title>Node::add_out(Node*) (1 samples, 0.10%)</title><rect x="1170.7" y="1571.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.7" y="1582.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (1 samples, 0.10%)</title><rect x="1171.9" y="1635.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.9" y="1646.0"></text>
</g>
<g>
<title>PhaseBlockLayout::reorder_traces(int) (1 samples, 0.10%)</title><rect x="1171.9" y="1619.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1174.9" y="1630.0"></text>
</g>
<g>
<title>Trace::fixup_blocks(PhaseCFG&amp;) (1 samples, 0.10%)</title><rect x="1171.9" y="1603.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.9" y="1614.0"></text>
</g>
<g>
<title>Block::num_fall_throughs() (1 samples, 0.10%)</title><rect x="1171.9" y="1587.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.9" y="1598.0"></text>
</g>
<g>
<title>Block::end_idx() const (1 samples, 0.10%)</title><rect x="1171.9" y="1571.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.9" y="1582.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.10%)</title><rect x="1173.0" y="1635.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1176.0" y="1646.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.10%)</title><rect x="1173.0" y="1619.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.0" y="1630.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;) (1 samples, 0.10%)</title><rect x="1173.0" y="1603.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.0" y="1614.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (2 samples, 0.19%)</title><rect x="1174.1" y="1635.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.1" y="1646.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.10%)</title><rect x="1174.1" y="1619.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1177.1" y="1630.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.10%)</title><rect x="1174.1" y="1603.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.1" y="1614.0"></text>
</g>
<g>
<title>PhaseChaitin::insert_proj(Block*, unsigned int, Node*, unsigned int) (1 samples, 0.10%)</title><rect x="1174.1" y="1587.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1177.1" y="1598.0"></text>
</g>
<g>
<title>Node_Array::insert(unsigned int, Node*) (1 samples, 0.10%)</title><rect x="1174.1" y="1571.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.1" y="1582.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.10%)</title><rect x="1174.1" y="1555.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.1" y="1566.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.10%)</title><rect x="1174.1" y="1539.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.1" y="1550.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.10%)</title><rect x="1174.1" y="1523.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1177.1" y="1534.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.10%)</title><rect x="1175.3" y="1619.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.3" y="1630.0"></text>
</g>
<g>
<title>IndexSet::insert(unsigned int) (1 samples, 0.10%)</title><rect x="1175.3" y="1603.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.3" y="1614.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 0.48%)</title><rect x="1176.4" y="1651.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.4" y="1662.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (5 samples, 0.48%)</title><rect x="1176.4" y="1635.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.4" y="1646.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.10%)</title><rect x="1176.4" y="1619.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.4" y="1630.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.29%)</title><rect x="1177.5" y="1619.0" width="3.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.5" y="1630.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.10%)</title><rect x="1180.9" y="1619.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.9" y="1630.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.10%)</title><rect x="1180.9" y="1603.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.9" y="1614.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.10%)</title><rect x="1180.9" y="1587.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.9" y="1598.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_node(Node*) const (1 samples, 0.10%)</title><rect x="1180.9" y="1571.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.9" y="1582.0"></text>
</g>
<g>
<title>CompileQueue::get() (6 samples, 0.58%)</title><rect x="1182.1" y="1699.0" width="6.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.1" y="1710.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (6 samples, 0.58%)</title><rect x="1182.1" y="1683.0" width="6.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.1" y="1694.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (6 samples, 0.58%)</title><rect x="1182.1" y="1667.0" width="6.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.1" y="1678.0"></text>
</g>
<g>
<title>NMethodSweeper::process_nmethod(nmethod*) (6 samples, 0.58%)</title><rect x="1182.1" y="1651.0" width="6.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.1" y="1662.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.10%)</title><rect x="1185.5" y="1635.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.5" y="1646.0"></text>
</g>
<g>
<title>nmethod::cleanup_inline_caches() (2 samples, 0.19%)</title><rect x="1186.6" y="1635.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.6" y="1646.0"></text>
</g>
<g>
<title>CompiledIC::ic_destination() const (1 samples, 0.10%)</title><rect x="1186.6" y="1619.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.6" y="1630.0"></text>
</g>
<g>
<title>NativeCall::destination() const (1 samples, 0.10%)</title><rect x="1186.6" y="1603.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.6" y="1614.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.10%)</title><rect x="1187.7" y="1619.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.7" y="1630.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.10%)</title><rect x="1188.9" y="1747.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.9" y="1758.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.10%)</title><rect x="1188.9" y="1731.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.9" y="1742.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.10%)</title><rect x="1188.9" y="1715.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.9" y="1726.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.10%)</title><rect x="1188.9" y="1699.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.9" y="1710.0"></text>
</g>
<g>
<title>VM_ParallelGCFailedAllocation::doit() (1 samples, 0.10%)</title><rect x="1188.9" y="1683.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.9" y="1694.0"></text>
</g>
<g>
<title>ParallelScavengeHeap::failed_mem_allocate(unsigned long) (1 samples, 0.10%)</title><rect x="1188.9" y="1667.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.9" y="1678.0"></text>
</g>
<g>
<title>PSScavenge::invoke() (1 samples, 0.10%)</title><rect x="1188.9" y="1651.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.9" y="1662.0"></text>
</g>
<g>
<title>PSScavenge::invoke_no_policy() (1 samples, 0.10%)</title><rect x="1188.9" y="1635.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.9" y="1646.0"></text>
</g>
<g>
<title>StringTable::buckets_unlink_or_oops_do(BoolObjectClosure*, OopClosure*, int, int, int*, int*) (1 samples, 0.10%)</title><rect x="1188.9" y="1619.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.9" y="1630.0"></text>
</g>
</g>
</svg>
