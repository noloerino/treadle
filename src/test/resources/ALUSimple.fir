circuit ALUSimple :
  module ALUSimple :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip A : UInt<32>, flip B : UInt<32>, flip alu_op : UInt<4>, out : UInt<32>, sum : UInt<32>}
  
    node shamt = bits(io.B, 4, 0) @[ALU.scala 40:19]
    node _T_28 = add(io.A, io.B) @[ALU.scala 43:25]
    node _T_29 = tail(_T_28, 1) @[ALU.scala 43:25]
    node _T_30 = sub(io.A, io.B) @[ALU.scala 44:25]
    node _T_31 = asUInt(_T_30) @[ALU.scala 44:25]
    node _T_32 = tail(_T_31, 1) @[ALU.scala 44:25]
    node _T_33 = asSInt(io.A) @[ALU.scala 45:25]
    node _T_34 = dshr(_T_33, shamt) @[ALU.scala 45:32]
    node _T_35 = asUInt(_T_34) @[ALU.scala 45:42]
    node _T_36 = dshr(io.A, shamt) @[ALU.scala 46:25]
    node _T_37 = dshl(io.A, shamt) @[ALU.scala 47:25]
    node _T_38 = asSInt(io.A) @[ALU.scala 48:25]
    node _T_39 = asSInt(io.B) @[ALU.scala 48:39]
    node _T_40 = lt(_T_38, _T_39) @[ALU.scala 48:32]
    node _T_41 = lt(io.A, io.B) @[ALU.scala 49:25]
    node _T_42 = and(io.A, io.B) @[ALU.scala 50:25]
    node _T_43 = or(io.A, io.B) @[ALU.scala 51:25]
    node _T_44 = xor(io.A, io.B) @[ALU.scala 52:25]
    node _T_45 = eq(UInt<4>("ha"), io.alu_op) @[Mux.scala 46:19]
    node _T_46 = mux(_T_45, io.A, io.B) @[Mux.scala 46:16]
    node _T_47 = eq(UInt<4>("h4"), io.alu_op) @[Mux.scala 46:19]
    node _T_48 = mux(_T_47, _T_44, _T_46) @[Mux.scala 46:16]
    node _T_49 = eq(UInt<4>("h3"), io.alu_op) @[Mux.scala 46:19]
    node _T_50 = mux(_T_49, _T_43, _T_48) @[Mux.scala 46:16]
    node _T_51 = eq(UInt<4>("h2"), io.alu_op) @[Mux.scala 46:19]
    node _T_52 = mux(_T_51, _T_42, _T_50) @[Mux.scala 46:16]
    node _T_53 = eq(UInt<4>("h7"), io.alu_op) @[Mux.scala 46:19]
    node _T_54 = mux(_T_53, _T_41, _T_52) @[Mux.scala 46:16]
    node _T_55 = eq(UInt<4>("h5"), io.alu_op) @[Mux.scala 46:19]
    node _T_56 = mux(_T_55, _T_40, _T_54) @[Mux.scala 46:16]
    node _T_57 = eq(UInt<4>("h6"), io.alu_op) @[Mux.scala 46:19]
    node _T_58 = mux(_T_57, _T_37, _T_56) @[Mux.scala 46:16]
    node _T_59 = eq(UInt<4>("h8"), io.alu_op) @[Mux.scala 46:19]
    node _T_60 = mux(_T_59, _T_36, _T_58) @[Mux.scala 46:16]
    node _T_61 = eq(UInt<4>("h9"), io.alu_op) @[Mux.scala 46:19]
    node _T_62 = mux(_T_61, _T_35, _T_60) @[Mux.scala 46:16]
    node _T_63 = eq(UInt<4>("h1"), io.alu_op) @[Mux.scala 46:19]
    node _T_64 = mux(_T_63, _T_32, _T_62) @[Mux.scala 46:16]
    node _T_65 = eq(UInt<4>("h0"), io.alu_op) @[Mux.scala 46:19]
    node _T_66 = mux(_T_65, _T_29, _T_64) @[Mux.scala 46:16]
    io.out <= _T_66 @[ALU.scala 42:10]
    node _T_67 = bits(io.alu_op, 0, 0) @[ALU.scala 55:33]
    node _T_69 = sub(UInt<1>("h0"), io.B) @[ALU.scala 55:38]
    node _T_70 = asUInt(_T_69) @[ALU.scala 55:38]
    node _T_71 = tail(_T_70, 1) @[ALU.scala 55:38]
    node _T_72 = mux(_T_67, _T_71, io.B) @[ALU.scala 55:23]
    node _T_73 = add(io.A, _T_72) @[ALU.scala 55:18]
    node _T_74 = tail(_T_73, 1) @[ALU.scala 55:18]
    io.sum <= _T_74 @[ALU.scala 55:10]
